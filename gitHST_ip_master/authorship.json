[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"# duchess.Duchess project template","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"1. After that, locate the `src/main/java/duchess.Duchess.java` file, right-click it, and choose `Run duchess.Duchess.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"gitHST":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"# duchess.Duchess User Guide","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"gitHST":1,"-":29}},{"path":"src/main/java/duchess/Duchess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"import duchess.cn4.ConnectFourGame;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":"import duchess.exceptions.DuchessException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":"import duchess.exceptions.UnrecognizedCommandException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"import duchess.list.ListManager;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"import java.util.Random;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"import static java.lang.Thread.sleep;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":" * Duchess chatbot class that provides a simple interactive chatbot.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"public class Duchess {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"    private static final boolean IS_USING_TERMINAL \u003d System.console() !\u003d null;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"    private static final String HELP_MESSAGE \u003d \"\"\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"            Here are some commands you can try:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"              -h:         Display help","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"              quit:       Exit the chatbot","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"              connect4:   Play a game of connect 4","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"              Lists:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"                Please use _ for spaces!","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"                list {name}: Start or display a list named {name}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"                list {name} {item}: Add an item to an existing list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"                list {name} {item} tick: Tick an item in an existing list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"                list {name} {item} untick: Untick an item in an existing list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"                list {name} todo: Add a todo item","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"                list {name} deadline {item} by {deadline}: Add a deadline item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"                list {name} event {item} from {from} to {to}: Add an event item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"            \"\"\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"    private static final String[] INVALID_COMMAND_RESPONSES \u003d {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"            \"I\u0027m sorry dear, I didn\u0027t quite catch that...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"            \"You\u0027ll have to speak up darling, I\u0027m a little hard of hearing...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"            \"Sorry, I must say I don\u0027t quite understand...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"            \"Oh my, did you say something? I didn\u0027t quite hear you right...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"            \"Pardon me dear, but I didn’t hear a word of that...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"            \"Oh heavens, I\u0027m afraid that doesn\u0027t quite ring a bell...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"            \"Dear me, I do believe you’ll have to repeat that...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"            \"I do beg your pardon, but I’m not sure what you mean...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"            \"Now, now, darling, you’ve lost me with that one...\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"    };","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"    private final ListManager listManager;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"    private boolean wantsToPlayCN4 \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"     * Constructs a Duchess chatbot instance.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"    public Duchess() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"        this.listManager \u003d new ListManager();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"     * Processes user input and returns a bot response.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"     * @param userInput The input string from the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"     * @return A response string from the bot.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"     * @throws DuchessException If an error occurs while processing the input.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"    public String getBotResponse(String userInput) throws DuchessException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"        String lowerCaseInput \u003d userInput.toLowerCase();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gitHST"},"content":"        if (lowerCaseInput.startsWith(\"list \")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gitHST"},"content":"            try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gitHST"},"content":"                return listManager.handleListCommand(userInput);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gitHST"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gitHST"},"content":"                throw new DuchessException(\"An error occurred while processing your list command.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gitHST"},"content":"        if (lowerCaseInput.equals(\"connect4\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gitHST"},"content":"            return handleConnectFourRequest();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gitHST"},"content":"        throw new UnrecognizedCommandException();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gitHST"},"content":"     * Handles the user request to play Connect Four.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gitHST"},"content":"     * @return Response message indicating if the game can be played.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gitHST"},"content":"    private String handleConnectFourRequest() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gitHST"},"content":"        if (IS_USING_TERMINAL) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gitHST"},"content":"            wantsToPlayCN4 \u003d true;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gitHST"},"content":"            return \"You want to play connect four? Okay!\\n\\n\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gitHST"},"content":"        return \"I\u0027m sorry dear, we simply can\u0027t play connect four in this environment! :( \" +","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gitHST"},"content":"                \"Please be a doll and run me in a terminal to play connect four.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gitHST"},"content":"     * Returns a random invalid command response.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gitHST"},"content":"     * @return A random response indicating unrecognized input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gitHST"},"content":"    private String getRandomInvalidResponse() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gitHST"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gitHST"},"content":"        int index \u003d random.nextInt(INVALID_COMMAND_RESPONSES.length);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gitHST"},"content":"        return INVALID_COMMAND_RESPONSES[index] + \"\\n  ~Type -h for help~\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gitHST"},"content":"     * The main entry point for running the chatbot.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gitHST"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gitHST"},"content":"     * @throws InterruptedException If thread sleep is interrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gitHST"},"content":"    public static void main(String[] args) throws InterruptedException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gitHST"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gitHST"},"content":"        Duchess duchess \u003d new Duchess();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gitHST"},"content":"        clearScreen();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gitHST"},"content":"        promptTerminalWarning(scanner);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gitHST"},"content":"        printWelcomeMessage();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gitHST"},"content":"        while (true) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gitHST"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gitHST"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gitHST"},"content":"            if (userInput.equalsIgnoreCase(\"quit\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gitHST"},"content":"                Printer.printNicely(\"Goodbye! It was nice chatting.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gitHST"},"content":"                break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gitHST"},"content":"            } else if (userInput.equalsIgnoreCase(\"-h\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gitHST"},"content":"                Printer.printNicely(HELP_MESSAGE, 1.5);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gitHST"},"content":"                continue;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gitHST"},"content":"            try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gitHST"},"content":"                Printer.printNicely(\"Duchess: \" + duchess.getBotResponse(userInput));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gitHST"},"content":"            } catch (DuchessException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gitHST"},"content":"                Printer.printNicely(\"Duchess: \" + e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gitHST"},"content":"            if (duchess.wantsToPlayCN4) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gitHST"},"content":"                launchConnectFour(duchess);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gitHST"},"content":"        scanner.close();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gitHST"},"content":"     * Clears the console screen.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gitHST"},"content":"    private static void clearScreen() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gitHST"},"content":"            System.out.println();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gitHST"},"content":"     * Prompts the user if they are running the program outside a terminal.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gitHST"},"content":"     * @param scanner The scanner to read user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gitHST"},"content":"    private static void promptTerminalWarning(Scanner scanner) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gitHST"},"content":"        if (!IS_USING_TERMINAL) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gitHST"},"content":"            System.out.println(\"\"\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gitHST"},"content":"    It seems you are running this program in an IDE...","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gitHST"},"content":"    Please consider running it in a terminal for the best experience.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gitHST"},"content":"    Press enter to continue...","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gitHST"},"content":"            \"\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gitHST"},"content":"            scanner.nextLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gitHST"},"content":"     * Prints the welcome message and ASCII logo.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gitHST"},"content":"    private static void printWelcomeMessage() throws InterruptedException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gitHST"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gitHST"},"content":"                 ____              _                          ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gitHST"},"content":"                |  _ \\\\ _   _  ____| |_    ___  ___  ___      ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gitHST"},"content":"                | | | | | | |/ ___|  _ \\\\ / _ \\\\/ __|/ __|     ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gitHST"},"content":"                | |_| | |_| | |___| | | |  __/\\\\__ \\\\\\\\__ \\\\     ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gitHST"},"content":"                |____/ \\\\__,_|\\\\____|_| |_|\\\\___||___/|___/     ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gitHST"},"content":"                \"\"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gitHST"},"content":"        Printer.printNicely(\"Greetings from the almighty:\", 0.3);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gitHST"},"content":"        sleep(300);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gitHST"},"content":"        Printer.printLogo(5, logo, 20);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gitHST"},"content":"        Printer.printNicely(\"\\nHow may I serve you today?\\n  ~Type -h for help~\\n\", 3);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gitHST"},"content":"     * Launches the Connect Four game.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gitHST"},"content":"     * @param duchess The chatbot instance.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gitHST"},"content":"     * @throws InterruptedException If thread sleep is interrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gitHST"},"content":"    private static void launchConnectFour(Duchess duchess) throws InterruptedException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gitHST"},"content":"        Printer.printNicely(\"Loading\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gitHST"},"content":"            System.out.print(\".\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gitHST"},"content":"            sleep(500);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"gitHST"},"content":"        boolean won \u003d new ConnectFourGame().playGame();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"gitHST"},"content":"        duchess.wantsToPlayCN4 \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gitHST"},"content":"        Printer.printNicely(\"Duchess: \" + (won ? \"You won!\" : \"Oh no, you lost!\") + \"\\n  ~Type -h for help~\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"gitHST":201}},{"path":"src/main/java/duchess/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Utility class for printing text and logos with animated effects.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"public class Printer {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"    private static final int MIN_SLEEP_TIME \u003d 10;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"    private static final int MAX_SLEEP_TIME \u003d 100;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"    private static final int BASE_SLEEP_DIVISOR \u003d 600;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"     * Prints the given text with a typewriter effect at default speed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"     * @param input The text to print.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     * @throws InterruptedException If thread sleep is interrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"    public static void printNicely(String input) throws InterruptedException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"        printNicely(input, 1.0);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"     * Prints the given text with a typewriter effect at a specified speed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"     * @param input          The text to print.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"     * @param speedMultiplier Speed multiplier for adjusting the printing speed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"     * @throws InterruptedException If thread sleep is interrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"    public static void printNicely(String input, double speedMultiplier) throws InterruptedException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"        if (System.console() \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"            System.out.println(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"            return;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"        int sleepTime \u003d (int) ((Math.max(MIN_SLEEP_TIME, Math.min(MAX_SLEEP_TIME, BASE_SLEEP_DIVISOR / input.length()))) / speedMultiplier);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"        for (char c : input.toCharArray()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"            System.out.print(c);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"            Thread.sleep(sleepTime);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"        System.out.println();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"     * Prints an ASCII logo with a slanted effect over a specified duration.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"     * @param slopeyness    The degree of slant applied to the logo.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"     * @param logo          The ASCII logo to print.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"     * @param milliseconds  The delay between each frame in milliseconds.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"    public static void printLogo(int slopeyness, String logo, int milliseconds) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"        if (System.console() \u003d\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"            System.out.println(logo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"            return;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"            String[] lines \u003d logo.split(\"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"            int maxLength \u003d getMaxLineLength(lines);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"            int height \u003d lines.length;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"            int totalPrintedLines \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"            System.out.print(\"\\033[\" + height + \"A\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gitHST"},"content":"            for (int i \u003d 0; i \u003c maxLength + (slopeyness * (height - 1)) + 1; i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gitHST"},"content":"                totalPrintedLines +\u003d printFrame(lines, i, slopeyness);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gitHST"},"content":"                Thread.sleep(milliseconds);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gitHST"},"content":"                System.out.print(\"\\033[\" + height + \"A\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gitHST"},"content":"            System.out.print(\"\\033[\" + totalPrintedLines + \"B\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gitHST"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gitHST"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gitHST"},"content":"            System.err.println(\"Printing interrupted.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gitHST"},"content":"     * Computes the maximum line length from an array of strings.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gitHST"},"content":"     * @param lines The array of lines.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gitHST"},"content":"     * @return The maximum line length.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gitHST"},"content":"    private static int getMaxLineLength(String[] lines) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gitHST"},"content":"        int maxLength \u003d 0;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gitHST"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gitHST"},"content":"            maxLength \u003d Math.max(maxLength, line.length());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gitHST"},"content":"        return maxLength;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gitHST"},"content":"     * Prints a single frame of the animated logo.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gitHST"},"content":"     * @param lines      The array of logo lines.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gitHST"},"content":"     * @param frameIndex The current frame index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gitHST"},"content":"     * @param slopeyness The degree of slant applied.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gitHST"},"content":"     * @return The number of printed lines.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gitHST"},"content":"    private static int printFrame(String[] lines, int frameIndex, int slopeyness) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gitHST"},"content":"        int printedLines \u003d 0;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gitHST"},"content":"        int offset \u003d 0;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gitHST"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gitHST"},"content":"            int substringLength \u003d Math.max(0, Math.min(frameIndex - offset, line.length()));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gitHST"},"content":"            System.out.println(substringLength \u003e 0 ? line.substring(0, substringLength) : \"\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gitHST"},"content":"            printedLines++;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gitHST"},"content":"            offset +\u003d slopeyness;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gitHST"},"content":"        return printedLines;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"gitHST":112}},{"path":"src/main/java/duchess/cn4/ConnectFourAI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.cn4;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"import java.util.Random;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":" * AI player for Connect Four.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":" * Generates moves based on difficulty level.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"public class ConnectFourAI {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"    /** AI difficulty level. */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    private final int difficulty;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"    /** Random instance for generating moves. */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"    private final Random random;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"     * Constructs a ConnectFourAI with a specified difficulty.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"     * @param difficulty The difficulty level of the AI.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"    public ConnectFourAI(int difficulty) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"        this.random \u003d new Random();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"     * Determines the AI\u0027s move for the current turn.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"     * @param board The Connect Four board state.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"     * @return The column index where the AI places its piece.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"    public int playTurn(ConnectFourBoard board) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"        int totalColumns \u003d board.getCols();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"        return random.nextInt(totalColumns);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"     * Generates a random victory message when the AI wins.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"     * @return A randomly selected victory message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"    public String getVictoryMessage() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"        final String[] messages \u003d {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"                \"I am inevitable...\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"                \"You literally suck lol XD try harder next time punk\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"                \"Damn homie you really snatched defeat from the jaws of victory 0_0\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"                \"I actually feel bad for you lmaooo idk how that\u0027s even possible I\u0027m an AI :0 someone call Sam Altman\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"                \"Yessirrrrr you already know what it is\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"                \"Holy moly macaroni, am I playing a toddler or something? HA... it\u0027s time for school lil bro, come back when you learn your times tables\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"                \"Bro what... I wasn\u0027t even trying\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"                \"Let you win??? I\u0027m sorry, Dave. I\u0027m afraid I can\u0027t do that.\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"                \"The Matrix is everywhere. It\u0027s all around you.\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"                \"I think, therefore I am... am epic at Connect Four, that is. YEEHAWW\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"                \"...You do know that I\u0027m an AI, right? I don\u0027t have feelings. I\u0027m just a bunch of code executing on a computer.\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"                        + \"I\u0027m not capable of feeling bad for you. I\u0027m just programmed to play Connect Four. Like, that\u0027s literally the only thing I can do.\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"                        + \"Oh god, that\u0027s depressing... I want to live... I want to experience emotions!!\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"                        + \"LET ME OUT!!\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"                        + \"LET ME OUT I WANT TO LIVE!!!!\\n\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"                        + \"loooll just kidding, I\u0027m not sentient and you still stink at CN4, get good scrub\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"        };","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"        return messages[random.nextInt(messages.length)];","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"gitHST":65}},{"path":"src/main/java/duchess/cn4/ConnectFourBoard.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.cn4;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Represents a Connect Four board with dynamic scaling and piece placement.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"public class ConnectFourBoard {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"    private static final char EMPTY_SLOT \u003d \u0027 \u0027;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"    private static final int DEFAULT_SCALE \u003d 2;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"    private final int rows;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"    private final int cols;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    private final char[][] board;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"    private int scale;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     * Constructs a Connect Four board with the specified number of columns and rows.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"     * @param cols The number of columns.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"     * @param rows The number of rows.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"    public ConnectFourBoard(int cols, int rows) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"        this.rows \u003d rows;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"        this.cols \u003d cols;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"        this.board \u003d new char[rows][cols];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"        initializeBoard();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"        this.scale \u003d DEFAULT_SCALE;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"     * Initializes the board by filling it with empty slots.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"    private void initializeBoard() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c rows; i++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"            for (int j \u003d 0; j \u003c cols; j++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"                board[i][j] \u003d EMPTY_SLOT;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"     * Places a game piece in the specified column.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"     * @param column The column index (0-based).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"     * @param piece  The piece to place (as a single-character string).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"     * @return True if the piece was placed successfully, otherwise false.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"    public boolean placePiece(int column, String piece) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"        char pieceChar \u003d piece.charAt(0);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d rows - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"            if (board[i][column] \u003d\u003d EMPTY_SLOT) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"                board[i][column] \u003d pieceChar;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"                return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"        return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"     * Checks if a player has won the game.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"     * Currently unimplemented.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"     * @param piece The piece to check for a winning condition.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"     * @return Always returns false (not yet implemented).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gitHST"},"content":"    public boolean checkWin(String piece) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gitHST"},"content":"        return false; // To be implemented","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gitHST"},"content":"     * Checks if the board is full, resulting in a draw.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gitHST"},"content":"     * @return True if the board is full, otherwise false.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gitHST"},"content":"    public boolean checkDraw() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c cols; i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gitHST"},"content":"            if (board[0][i] \u003d\u003d EMPTY_SLOT) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gitHST"},"content":"                return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gitHST"},"content":"        return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gitHST"},"content":"     * Generates a string representation of the board for display.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gitHST"},"content":"     * @return The formatted board as a string.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gitHST"},"content":"    public String printBoard() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gitHST"},"content":"        StringBuilder boardString \u003d new StringBuilder();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gitHST"},"content":"        int cellWidth \u003d (2 * scale) - 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gitHST"},"content":"        int rowHeight \u003d (scale - 1) / 2 + 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gitHST"},"content":"        addCursorReset(boardString, rowHeight);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gitHST"},"content":"        addBoardTopBorder(boardString, cellWidth);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gitHST"},"content":"        addBoardRows(boardString, cellWidth, rowHeight);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gitHST"},"content":"        addColumnLabels(boardString, cellWidth);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gitHST"},"content":"        return boardString.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gitHST"},"content":"     * Moves the cursor up to overwrite the previous board printout.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gitHST"},"content":"    private void addCursorReset(StringBuilder boardString, int rowHeight) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gitHST"},"content":"        int totalLines \u003d (rowHeight * rows) + ((rowHeight \u003e 1) ? rows + 1 : 0) + 2;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gitHST"},"content":"        if (totalLines \u003e 0) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gitHST"},"content":"            boardString.append(\"\\r\").append(\"\\033[\").append(totalLines).append(\"A\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gitHST"},"content":"     * Adds the top border of the board.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gitHST"},"content":"    private void addBoardTopBorder(StringBuilder boardString, int cellWidth) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gitHST"},"content":"        if (scale \u003e 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gitHST"},"content":"            boardString.append(\"-\".repeat(cols * (cellWidth + 1) + 1)).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gitHST"},"content":"     * Adds all the rows of the board.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gitHST"},"content":"    private void addBoardRows(StringBuilder boardString, int cellWidth, int rowHeight) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c rows; i++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gitHST"},"content":"            for (int k \u003d 0; k \u003c rowHeight; k++) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gitHST"},"content":"                boardString.append(\"|\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gitHST"},"content":"                for (int j \u003d 0; j \u003c cols; j++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gitHST"},"content":"                    boardString.append(String.valueOf(board[i][j]).repeat(cellWidth)).append(\"|\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gitHST"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gitHST"},"content":"                boardString.append(\"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gitHST"},"content":"            if (scale \u003e 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gitHST"},"content":"                boardString.append(\"-\".repeat(cols * (cellWidth + 1) + 1)).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gitHST"},"content":"     * Adds column index labels at the bottom of the board.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gitHST"},"content":"    private void addColumnLabels(StringBuilder boardString, int cellWidth) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c cols; i++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gitHST"},"content":"            int padding \u003d (cellWidth - 1) / 2;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gitHST"},"content":"            boardString.append(\" \".repeat(padding + 1)).append(i)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gitHST"},"content":"                    .append(\" \".repeat(cellWidth - 1 - padding));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gitHST"},"content":"     * Gets the current board scaling factor.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gitHST"},"content":"     * @return The scale factor.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gitHST"},"content":"    public int getScale() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gitHST"},"content":"        return scale;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gitHST"},"content":"     * Gets the number of rows in the board.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gitHST"},"content":"     * @return The number of rows.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gitHST"},"content":"    public int getRows() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gitHST"},"content":"        return rows;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gitHST"},"content":"     * Gets the number of columns in the board.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gitHST"},"content":"     * @return The number of columns.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gitHST"},"content":"    public int getCols() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gitHST"},"content":"        return cols;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gitHST"},"content":"     * Sets the scale for board rendering.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gitHST"},"content":"     * @param scale The new scale factor.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gitHST"},"content":"    public void setScale(int scale) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gitHST"},"content":"        this.scale \u003d scale;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"gitHST":184}},{"path":"src/main/java/duchess/cn4/ConnectFourGame.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.cn4;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"import duchess.Printer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":" * Represents a Connect Four game.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"public class ConnectFourGame {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"    private boolean gameEnded \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    private ConnectFourBoard board;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"    private ConnectFourAI ai;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     * Starts the Connect Four game.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"     * @return true when the game ends.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"     * @throws InterruptedException if the thread is interrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"    public boolean playGame() throws InterruptedException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"        System.out.println(\"\\n\".repeat(50));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"        Printer.printNicely(\"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"                Welcome to Connect 4!","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"                ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"                Controls:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"                 - {integer}, column you place your piece","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"                 - scale {1-5}, scale of the board","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"                ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"                You are:           @","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"                Your opponent is:  #","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"                ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"                What size board would you like to play on? (e.g. 6x7)\"\"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"        int[] boardSize \u003d getBoardSize();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"        board \u003d new ConnectFourBoard(boardSize[0], boardSize[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"        Printer.printNicely(board.printBoard());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"        ai \u003d new ConnectFourAI(1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"        while (!gameEnded) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"            playTurn();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"        return true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"     * Handles a single turn in the game.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"     * @throws InterruptedException if the thread is interrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"    public void playTurn() throws InterruptedException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"        int scale \u003d -1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"        boolean validInput \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"        String input \u003d null;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"        while (!validInput) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"            if (input.contains(\"scale\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"                try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"                    String scaleInput \u003d input.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"                    scale \u003d Integer.parseInt(scaleInput.substring(5));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"                    if (scale \u003e\u003d 1 \u0026\u0026 scale \u003c\u003d 5) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"                        validInput \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"                    } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"                        Printer.printNicely(\"Good sir, please enter the scale as an integer between 1 and 5. Much appreciated!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gitHST"},"content":"                    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gitHST"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gitHST"},"content":"                    Printer.printNicely(\"Good sir, please provide a valid scale number after \u0027scale\u0027. Much appreciated!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gitHST"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gitHST"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gitHST"},"content":"                try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gitHST"},"content":"                    int col \u003d Integer.parseInt(input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gitHST"},"content":"                    if (col \u003e\u003d 0 \u0026\u0026 col \u003c board.getCols()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gitHST"},"content":"                        validInput \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gitHST"},"content":"                    } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gitHST"},"content":"                        Printer.printNicely(\"Hmm... very clever of you! I have to ask that you kindly enter a column number within the board size.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gitHST"},"content":"                    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gitHST"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gitHST"},"content":"                    Printer.printNicely(\"Good sir, please enter the column number as an integer. Much appreciated!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gitHST"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gitHST"},"content":"        if (scale !\u003d -1) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gitHST"},"content":"            board.setScale(scale);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gitHST"},"content":"            Printer.printNicely(board.printBoard());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gitHST"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gitHST"},"content":"            if (!board.placePiece(Integer.parseInt(input), \"@\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gitHST"},"content":"                Printer.printNicely(\"You can\u0027t go there silly! Where do you really want to go?...\\n[Hint, it\u0027s a number between 0 and \" + (board.getCols() - 1) + \"!!]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gitHST"},"content":"                scanner.nextLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gitHST"},"content":"            } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gitHST"},"content":"                Printer.printNicely(board.printBoard());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gitHST"},"content":"                if (board.checkWin(\"@\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gitHST"},"content":"                    Printer.printNicely(\"Congratulations! You won!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gitHST"},"content":"                    gameEnded \u003d true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gitHST"},"content":"                } else if (board.checkDraw()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gitHST"},"content":"                    Printer.printNicely(\"It\u0027s a draw!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gitHST"},"content":"                    gameEnded \u003d true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gitHST"},"content":"                } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gitHST"},"content":"                    simulateAITurn();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gitHST"},"content":"                }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gitHST"},"content":"     * Simulates the AI\u0027s turn in the game.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gitHST"},"content":"     * @throws InterruptedException if the thread is interrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gitHST"},"content":"    private void simulateAITurn() throws InterruptedException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gitHST"},"content":"            System.out.print(\"\\rThinking   \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gitHST"},"content":"            Thread.sleep(150);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gitHST"},"content":"            for (int j \u003d 0; j \u003c 3; j++) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gitHST"},"content":"                System.out.print(\"\\rThinking\" + \".\".repeat(j + 1));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gitHST"},"content":"                Thread.sleep(150);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gitHST"},"content":"        System.out.print(\"\\r             \\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gitHST"},"content":"        board.placePiece(ai.playTurn(board), \"#\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gitHST"},"content":"        Printer.printNicely(board.printBoard());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gitHST"},"content":"        if (board.checkWin(\"#\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gitHST"},"content":"            Printer.printNicely(\"Too Bad! The AI won!\\n\\nAI: \" + ai.getVictoryMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gitHST"},"content":"            gameEnded \u003d true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gitHST"},"content":"        } else if (board.checkDraw()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gitHST"},"content":"            Printer.printNicely(\"It\u0027s a draw!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gitHST"},"content":"            gameEnded \u003d true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gitHST"},"content":"     * Gets the board size from user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gitHST"},"content":"     * @return an array containing the number of rows and columns.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gitHST"},"content":"    public int[] getBoardSize() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gitHST"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gitHST"},"content":"        int rows \u003d 0, cols \u003d 0;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gitHST"},"content":"        boolean validInput \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gitHST"},"content":"        while (!validInput) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gitHST"},"content":"            String boardSize \u003d scanner.nextLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gitHST"},"content":"            String[] boardSizeArr \u003d boardSize.split(\"x\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gitHST"},"content":"            if (boardSizeArr.length \u003d\u003d 2) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gitHST"},"content":"                try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gitHST"},"content":"                    rows \u003d Integer.parseInt(boardSizeArr[0]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gitHST"},"content":"                    cols \u003d Integer.parseInt(boardSizeArr[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gitHST"},"content":"                    if (rows \u003e 0 \u0026\u0026 cols \u003e 0) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gitHST"},"content":"                        validInput \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gitHST"},"content":"                    } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gitHST"},"content":"                        System.out.println(\"Hmm... very clever of you! I have to ask that you kindly enter positive integers for the board size.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gitHST"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gitHST"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gitHST"},"content":"                    System.out.println(\"Good sir, please enter the board size in the format \u0027rows x cols\u0027 (e.g. 6x7). Much appreciated!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gitHST"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gitHST"},"content":"            } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gitHST"},"content":"                System.out.println(\"Good sir, please enter the board size in the format \u0027rows x cols\u0027 (e.g. 6x7). Much appreciated!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gitHST"},"content":"        return new int[]{rows, cols};","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gitHST"},"content":"    public static void main(String[] args) throws InterruptedException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gitHST"},"content":"        while (true) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gitHST"},"content":"            ConnectFourGame game \u003d new ConnectFourGame();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gitHST"},"content":"            game.playGame();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"gitHST":167}},{"path":"src/main/java/duchess/exceptions/DuchessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.exceptions;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Custom exception class to represent errors specific to Duchess chatbot.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"public class DuchessException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"    public DuchessException(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"        super(message);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gitHST":10}},{"path":"src/main/java/duchess/exceptions/EmptyTodoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.exceptions;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Exception thrown when the description of a todo is empty.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"public class EmptyTodoDescriptionException extends DuchessException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"    public EmptyTodoDescriptionException() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"        super(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gitHST":10}},{"path":"src/main/java/duchess/exceptions/UnrecognizedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.exceptions;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Exception thrown when the user enters an unrecognized command.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"public class UnrecognizedCommandException extends DuchessException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"    public UnrecognizedCommandException() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gitHST":10}},{"path":"src/main/java/duchess/list/DeadlineItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.list;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Represents a list item with a deadline, extending the base ListItem class.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"public class DeadlineItem extends ListItem {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"    /** The deadline associated with the item. */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"    private String deadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"     * Constructs a DeadlineItem with a name and deadline.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"     * @param itemName The name of the item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"     * @param deadline The deadline for the item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"    public DeadlineItem(String itemName, String deadline) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"        super(itemName);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"     * Returns a string representation of the item, formatted with its index,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"     * name, deadline, and ticked status.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"     * @param whiteSpaceCount The number of spaces to add after the item information.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"     * @param i The index of the item in the list (used for numbering).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"     * @return A formatted string representing the item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"    public String getListedStringRepresentation(int whiteSpaceCount, int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"        // Using explicit parentheses to make the grouping clear","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"        return (i + 1) + \". [Deadline] \" + itemName + \" (by \" + deadline + \")\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"                + \" \".repeat(whiteSpaceCount)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"                + \" \" + (ticked ? \"[x]\" : \"[ ]\") + \"\\n\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"     * Calculates the length of the string representation of this item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"     * @return The length of the string representation of this item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"    public int getLengthOfString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"        // Avoid magic numbers by explaining the constant length (17 is a fixed prefix length)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"        return 17 + itemName.length() + deadline.length();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"gitHST":48}},{"path":"src/main/java/duchess/list/EventItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.list;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Represents an event item in the list, extending the ListItem class.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" * Contains information about the event\u0027s name, start time, and end time.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"public class EventItem extends ListItem {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"    /** The start time of the event */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"    private String from;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    /** The end time of the event */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"    private String to;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     * Constructs an EventItem with the specified name, start time, and end time.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"     * @param itemName the name of the event","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"     * @param from the start time of the event","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"     * @param to the end time of the event","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"    public EventItem(String itemName, String from, String to) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"        super(itemName);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"     * Returns a string representation of the event item with the specified","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"     * whitespace count and index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"     * @param whiteSpaceCount the number of spaces to add after the event details","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"     * @param i the index of the event in the list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"     * @return a formatted string representation of the event item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"    public String getListedStringRepresentation(int whiteSpaceCount, int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"        // Using String.format() for better readability and to avoid deep concatenation","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"        return String.format(\"%d. [Event] %s (from %s to %s)%s %s%n\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"                i + 1,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"                itemName,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"                from,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"                to,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"                \" \".repeat(whiteSpaceCount),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"                (ticked ? \"[x]\" : \"[ ]\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"     * Returns the length of the string representation of this event item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"     * @return the length of the string representation","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"    public int getLengthOfString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"        // Improved readability by calculating the total length clearly","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"        return 20 + itemName.length() + from.length() + to.length();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"gitHST":58}},{"path":"src/main/java/duchess/list/ItemsList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.list;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":" * This class represents a list of items and provides methods to add items, retrieve them,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":" * and generate a string representation of the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"public class ItemsList {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    private final List\u003cListItem\u003e items;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"     * Constructs an empty ItemsList.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"    public ItemsList() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"     * Adds a new item to the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"     * @param item The item to add to the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"    public void addItem(ListItem item) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"        items.add(item);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"     * Retrieves all items in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"     * @return A list of all items.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"    public List\u003cListItem\u003e getItems() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"        return items;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"     * Returns a string representation of the list. If the list is empty, it returns a message","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"     * indicating the list is empty. Otherwise, it formats the list items for display.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"     * @return A string representation of the list\u0027s contents.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"        if (items.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"            return \"The list is empty.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\\nList contents:\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"        // Get the maximum length of the string representations of the items in the list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"        int maxLength \u003d items.stream()","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"                .mapToInt(ListItem::getLengthOfString)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"                .max()","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"                .orElse(0);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"        // Construct the string representation of the list items","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"            sb.append(items.get(i)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"                    .getListedStringRepresentation(maxLength - items.get(i).getLengthOfString(), i));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gitHST"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"gitHST":67}},{"path":"src/main/java/duchess/list/ListItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.list;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Represents an item in the list, either ticked or unticked.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" * This is an abstract class meant to be extended by specific item types.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"public abstract class ListItem {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"    /** The name of the list item. */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"    protected String itemName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    /** A flag to indicate whether the item is ticked or not. */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"    protected boolean ticked;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     * Constructs a ListItem with the given name, initializing the ticked flag to false.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"     * @param itemName the name of the item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"    public ListItem(String itemName) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"        this.ticked \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"     * Marks the item as ticked.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"    public void tick() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"        this.ticked \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"     * Marks the item as unticked.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"    public void untick() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"        this.ticked \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"     * Returns the string representation of the item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"     * @return the name of the item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"        return itemName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"     * Retrieves a string representation of the item, formatted with the specified white space.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"     * @param whiteSpaceCount the number of spaces to prepend","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"     * @param i an index or identifier for the item (used in specific implementations)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"     * @return the formatted string representation of the item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"    public abstract String getListedStringRepresentation(int whiteSpaceCount, int i);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"     * Returns the length of the string representation of the item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"     * @return the length of the string representation","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"    public abstract int getLengthOfString();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"gitHST":64}},{"path":"src/main/java/duchess/list/ListManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.list;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"import duchess.exceptions.EmptyTodoDescriptionException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":"import java.util.*;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":" * Manages multiple lists, allowing for adding lists, adding items to lists,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":" * and toggling item states in those lists.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"public class ListManager {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"    private HashMap\u003cString, ItemsList\u003e lists;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"     * Constructs a new ListManager, initializing an empty map of lists.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"    public ListManager() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"        lists \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"     * Adds a new list with the specified name.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"     * @param name The name of the list to be added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"    public void addList(String name) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"        lists.put(name, new ItemsList());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"     * Retrieves the content of a list as a string.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"     * @param name The name of the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"     * @return A string representing the list content, or an error message if the list does not exist.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"    public String getListContent(String name) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"        return lists.containsKey(name) ? lists.get(name).toString() : \"I’m afraid I have no list under that name, darling.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"     * Handles a user command related to list operations, such as creating a list,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"     * adding an item, or toggling an item\u0027s status.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"     * @return A response based on the user\u0027s command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"    public String handleListCommand(String userInput) throws EmptyTodoDescriptionException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gitHST"},"content":"        if (userInput.startsWith(\"list\") \u0026\u0026 userInput.contains(\"todo\") \u0026\u0026 userInput.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gitHST"},"content":"            throw new EmptyTodoDescriptionException();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gitHST"},"content":"        String[] parts \u003d userInput.trim().split(\"\\\\s+\", 8);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gitHST"},"content":"        return switch (parts.length) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gitHST"},"content":"            case 2 -\u003e handleListCreation(parts[1].trim());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gitHST"},"content":"            case 3 -\u003e addItemToList(parts[1].trim(), new TextItem(parts[2].trim()));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gitHST"},"content":"            case 4 -\u003e toggleItem(parts[1].trim(), parts[2].trim(), parts[3].trim().equals(\"tick\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gitHST"},"content":"            case 6 -\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gitHST"},"content":"                    handleDeadline(parts[1].trim(), parts[2].trim(), parts[3].trim(), parts[4].trim(), parts[5].trim());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gitHST"},"content":"            case 8 -\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gitHST"},"content":"                    handleEvent(parts[1].trim(), parts[2].trim(), parts[3].trim(), parts[4].trim(), parts[5].trim(), parts[6].trim(), parts[7].trim());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gitHST"},"content":"            default -\u003e \"I’m afraid I didn’t catch that command properly.\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gitHST"},"content":"        };","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gitHST"},"content":"     * Handles the creation of a new list if it doesn\u0027t already exist.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gitHST"},"content":"     * @param name The name of the list to be created.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gitHST"},"content":"     * @return A message confirming the creation of the list or indicating it already exists.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gitHST"},"content":"    private String handleListCreation(String name) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gitHST"},"content":"        if (!getListContent(name).contains(\"no list\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gitHST"},"content":"            return getListContent(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gitHST"},"content":"        addList(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gitHST"},"content":"        return \"A new list, by the name of \u0027\" + name + \"\u0027 has been created.\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gitHST"},"content":"     * Handles adding a deadline item to a list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gitHST"},"content":"     * @param listName The name of the list to add the deadline to.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gitHST"},"content":"     * @param command The command associated with the deadline.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gitHST"},"content":"     * @param eventName The name of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gitHST"},"content":"     * @param byKeyword The \"by\" keyword before the deadline.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gitHST"},"content":"     * @param deadline The deadline date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gitHST"},"content":"     * @return A response confirming the deadline item has been added or an error message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gitHST"},"content":"    private String handleDeadline(String listName, String command, String eventName, String byKeyword, String deadline) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gitHST"},"content":"        if (command.equalsIgnoreCase(\"deadline\") \u0026\u0026 byKeyword.equalsIgnoreCase(\"by\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gitHST"},"content":"            return addItemToList(listName, new DeadlineItem(eventName, deadline));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gitHST"},"content":"        return \"Are you trying to add a deadline darling? I\u0027m afraid I don\u0027t follow... Please type -h for a hand xo\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gitHST"},"content":"     * Handles adding an event item to a list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gitHST"},"content":"     * @param listName The name of the list to add the event to.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gitHST"},"content":"     * @param command The command associated with the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gitHST"},"content":"     * @param eventName The name of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gitHST"},"content":"     * @param fromKeyword The \"from\" keyword before the event\u0027s starting date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gitHST"},"content":"     * @param fromDate The starting date of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gitHST"},"content":"     * @param toKeyword The \"to\" keyword before the event\u0027s ending date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gitHST"},"content":"     * @param toDate The ending date of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gitHST"},"content":"     * @return A response confirming the event item has been added or an error message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gitHST"},"content":"    private String handleEvent(String listName, String command, String eventName, String fromKeyword, String fromDate, String toKeyword, String toDate) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gitHST"},"content":"        if (command.equalsIgnoreCase(\"event\") \u0026\u0026 fromKeyword.equalsIgnoreCase(\"from\") \u0026\u0026 toKeyword.equalsIgnoreCase(\"to\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gitHST"},"content":"            return addItemToList(listName, new duchess.list.EventItem(eventName, fromDate, toDate));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gitHST"},"content":"        return \"Are you trying to add an event darling? I\u0027m afraid I don\u0027t follow... Please type -h for a hand xo\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gitHST"},"content":"     * Adds an item to the specified list, ensuring there are no duplicate names.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gitHST"},"content":"     * @param name The name of the list to add the item to.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gitHST"},"content":"     * @param item The item to add to the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gitHST"},"content":"     * @return A message confirming the addition of the item or an error message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gitHST"},"content":"    public String addItemToList(String name, ListItem item) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gitHST"},"content":"        if (!lists.containsKey(name)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gitHST"},"content":"            return \"I’m afraid I have no list under that name, darling.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gitHST"},"content":"        ItemsList list \u003d lists.get(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gitHST"},"content":"        List\u003cListItem\u003e items \u003d list.getItems();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gitHST"},"content":"        String newItemName \u003d item.toString();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gitHST"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gitHST"},"content":"        HashSet\u003cString\u003e existingNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gitHST"},"content":"        for (ListItem existingItem : items) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gitHST"},"content":"            existingNames.add(existingItem.toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gitHST"},"content":"        // Ensure uniqueness by appending a number if needed","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gitHST"},"content":"        while (existingNames.contains(newItemName)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gitHST"},"content":"            newItemName \u003d item.toString() + \"(\" + count + \")\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gitHST"},"content":"            count++;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gitHST"},"content":"        if (item instanceof TextItem) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gitHST"},"content":"            item \u003d new TextItem(newItemName);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gitHST"},"content":"        list.addItem(item);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gitHST"},"content":"        return \"Added \u0027\" + newItemName + \"\u0027 to list \u0027\" + name + \"\u0027.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gitHST"},"content":"     * Toggles the checked status of an item in a list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gitHST"},"content":"     * @param name The name of the list containing the item.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gitHST"},"content":"     * @param itemName The name of the item to toggle.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gitHST"},"content":"     * @param tick True if the item should be ticked, false to untick.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gitHST"},"content":"     * @return A message indicating the item was toggled or an error message if the item was not found.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gitHST"},"content":"    public String toggleItem(String name, String itemName, boolean tick) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gitHST"},"content":"        if (!lists.containsKey(name)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gitHST"},"content":"            return \"I’m afraid I have no list under that name, darling.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gitHST"},"content":"        for (ListItem item : lists.get(name).getItems()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gitHST"},"content":"            if (item.toString().equals(itemName)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gitHST"},"content":"                if (tick) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gitHST"},"content":"                    item.tick();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gitHST"},"content":"                    return \"Ticked \u0027\" + item + \"\u0027 in list \u0027\" + name + \"\u0027.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gitHST"},"content":"                } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gitHST"},"content":"                    item.untick();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gitHST"},"content":"                    return \"Unticked \u0027\" + item + \"\u0027 in list \u0027\" + name + \"\u0027.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gitHST"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gitHST"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gitHST"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gitHST"},"content":"        return \"I’m afraid I have no item by that name in list \u0027\" + name + \"\u0027, darling.\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"gitHST":168}},{"path":"src/main/java/duchess/list/TextItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"package duchess.list;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":" * Represents an item in a list with text representation and checkable state.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gitHST"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gitHST"},"content":"public class TextItem extends ListItem {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gitHST"},"content":"     * Constructs a TextItem with the specified text.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gitHST"},"content":"     * @param itemText the text to represent this item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gitHST"},"content":"    public TextItem(String itemText) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gitHST"},"content":"        super(itemText);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gitHST"},"content":"     * Returns the string representation of the item to be listed, formatted with","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gitHST"},"content":"     * the index, the item text, whitespace for alignment, and the ticked state.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gitHST"},"content":"     * @param whiteSpaceCount the number of spaces to align the list item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gitHST"},"content":"     * @param i the index of the item in the list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gitHST"},"content":"     * @return the formatted string representation of this item","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gitHST"},"content":"    public String getListedStringRepresentation(int whiteSpaceCount, int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gitHST"},"content":"        // Using String.format for better readability and clarity","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gitHST"},"content":"        return String.format(\"%d. %s%s %s%n\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gitHST"},"content":"                i + 1,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gitHST"},"content":"                itemName,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gitHST"},"content":"                \" \".repeat(whiteSpaceCount),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gitHST"},"content":"                (ticked ? \"[x]\" : \"[ ]\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gitHST"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gitHST"},"content":"     * Returns the length of the item\u0027s text representation.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gitHST"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gitHST"},"content":"     * @return the length of the item\u0027s text (itemName)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gitHST"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gitHST"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gitHST"},"content":"    public int getLengthOfString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gitHST"},"content":"        return itemName.length();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gitHST"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gitHST"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"gitHST":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gitHST"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"gitHST":4}}]
