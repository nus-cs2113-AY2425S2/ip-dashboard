[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"# Prune User Guide","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"![Prune chatbot](https://raw.githubusercontent.com/ashleyang2001/ip/refs/heads/master/prune.png)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"The Prune chatbot is an app for managing tasks via a Command Line Interface (CLI).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":"- Features","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"  - [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"  - [Marking task as completed: `mark`](#marking-task-as-completed-mark)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"  - [Marking task as not completed: `unmark`](#marking-task-as-not-completed-unmark)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"  - [Adding a ToDo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"  - [Adding a Deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"  - [Adding an Event task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"  - [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"  - [Finding tasks: `find`](#finding-tasks-find)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"  - [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"# Features","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"## Listing all tasks: `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"Displays all tasks in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"**Example:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"\tHere are the tasks in your list:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"\t1.[T][ ] Join swimming club","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"\t2.[D][X] Complete Level 8 (by: Monday)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"\t3.[E][ ] CS2113 Tutorial (from: 11am to: 12pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"## Marking task as completed: `mark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"Marks a task as done in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `mark INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"- Marks the task at the specified `INDEX` as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"- The `INDEX` must be an integer between 1 and number of existing tasks (inclusive).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"**Example:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"- `mark 1` Marks the first task as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ashleyang2001"},"content":"\tNice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ashleyang2001"},"content":"\t\t[T][X] Join swimming club","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ashleyang2001"},"content":"## Marking task as not completed: `unmark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ashleyang2001"},"content":"Marks a task as not done in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `unmark INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ashleyang2001"},"content":"- Mark the task at the specified `INDEX` as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ashleyang2001"},"content":"- The `INDEX` must be an integer between 1 and number of existing tasks (inclusive).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ashleyang2001"},"content":"**Example:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ashleyang2001"},"content":"- `unmark 2` Marks the second task as not completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ashleyang2001"},"content":"\tOk, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ashleyang2001"},"content":"\t\t[D][ ] Complete Level 8 (by: Monday)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ashleyang2001"},"content":"## Adding a ToDo task: `todo`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ashleyang2001"},"content":"Adds a ToDo task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `todo DESCRIPTION`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ashleyang2001"},"content":"**Example:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ashleyang2001"},"content":"- `todo Join Climbers Club` ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ashleyang2001"},"content":"\tGot it. I\u0027ve added this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ashleyang2001"},"content":"\t\t[T][ ] Join Climbers Club","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ashleyang2001"},"content":"\tNow you have 4 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ashleyang2001"},"content":"## Adding a Deadline task: `deadline`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ashleyang2001"},"content":"Adds a deadline task with a deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ashleyang2001"},"content":"**Example:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ashleyang2001"},"content":"- `deadline Submit CS2113 /by Week 9`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ashleyang2001"},"content":"\tGot it. I\u0027ve added this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ashleyang2001"},"content":"\t\t[D][ ] submit CS2113 (by: Week 9)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ashleyang2001"},"content":"\tNow you have 5 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ashleyang2001"},"content":"## Adding an Event task: `event`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ashleyang2001"},"content":"Adds an event with a start and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `event DESCRIPTION /from START /to END`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ashleyang2001"},"content":"**Example:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ashleyang2001"},"content":"- `event Team meeting /from 1pm /to 2pm`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ashleyang2001"},"content":"\tGot it. I\u0027ve added this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ashleyang2001"},"content":"\t\t[E][ ] Team meeting (from: 1pm to: 2pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ashleyang2001"},"content":"\tNow you have 6 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ashleyang2001"},"content":"## Deleting a task: `delete`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ashleyang2001"},"content":"Deletes a specified task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `delete INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ashleyang2001"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ashleyang2001"},"content":"- The `INDEX` must be an integer between 1 and number of existing tasks (inclusive).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ashleyang2001"},"content":"**Example:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ashleyang2001"},"content":"- `delete 3`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ashleyang2001"},"content":"\tGot it! I\u0027ve removed this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ashleyang2001"},"content":"\t\t[E][ ] CS2113 Tutorial (from: 11am to: 12pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ashleyang2001"},"content":"\tNow you have 5 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ashleyang2001"},"content":"## Finding tasks: `find`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ashleyang2001"},"content":"Finds all tasks whose description contain the given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `find KEYWORD`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ashleyang2001"},"content":"- The search is case-insensitive. e.g `join` will match `Join`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ashleyang2001"},"content":"- Matches substring within words. e.g `Jo` will match `Join`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ashleyang2001"},"content":"**Examples:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ashleyang2001"},"content":"- `find join`  returns `Join swimming club` and `Join Climbers Club`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ashleyang2001"},"content":"\tHere are matching tasks in your list:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ashleyang2001"},"content":"\t1.[T][X] Join swimming club","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ashleyang2001"},"content":"\t2.[T][ ] Join Climbers Club","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ashleyang2001"},"content":"- `find pruning` does not return anything","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ashleyang2001"},"content":"\tThere are no matching tasks found.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ashleyang2001"},"content":"## Exiting the program: `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ashleyang2001"},"content":"Exits the program.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ashleyang2001"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ashleyang2001"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ashleyang2001"},"content":"## Saving the data","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ashleyang2001"},"content":"Tasks are automatically saved to the hard disk after any command that modifies the data. There is no need to save manually.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ashleyang2001"},"content":"## Editing the data file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ashleyang2001"},"content":"Tasks data are saved automatically as a txt file `[JAR file location]/saved_tasks.txt`.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ashleyang2001"},"content":"Users can update task data directly by editing the data file with the right format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ashleyang2001"},"content":"**Format:** `MARKCOMMAND TASKTYPE DESCRIPTION [TASKARGUMENTS]...`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ashleyang2001"},"content":"**Examples:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ashleyang2001"},"content":"- The following txt file input loads the 3 tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ashleyang2001"},"content":"mark todo Join swimming club","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ashleyang2001"},"content":"unmark deadline Complete Level 8 /by Monday","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ashleyang2001"},"content":"unmark deadline Complete Level 8 /by Monday","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ashleyang2001"},"content":"\tHere are the tasks in your list:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ashleyang2001"},"content":"\t1.[T][ ] Join swimming club","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ashleyang2001"},"content":"\t2.[D][X] Complete Level 8 (by: Monday)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ashleyang2001"},"content":"\t3.[E][ ] CS2113 Tutorial (from: 11am to: 12pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ashleyang2001"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":174,"-":25}},{"path":"src/main/java/Prune/Data/saved_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"unmark todo read book ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"mark event project meeting /from Aug 6th 2 /to 4pm","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"mark todo join sports club","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":"mark todo newtask here","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"unmark deadline return book /by June 6th","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":5}},{"path":"src/main/java/Prune/Exceptions/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune.Exceptions;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":" * Exception thrown when an invalid command is encountered.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":" * This custom Prune exception is used to indicate that the user has inputted an unknown command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"public class InvalidCommand extends Exception {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs an InvalidCommand exception with the specified message.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"     * @param msg The message for the exception.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"    public InvalidCommand(String msg) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"        super(msg);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":17}},{"path":"src/main/java/Prune/Exceptions/InvalidTaskNumber.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune.Exceptions;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":" * Exception thrown when an invalid task number is provided.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":" * This custom Prune exception is used to indicate that the user has inputted an invalid or out-of-range task number.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"public class InvalidTaskNumber extends Exception {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs an InvalidTaskNumber exception with the specified message.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"     * @param msg The detail message for the exception.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"    public InvalidTaskNumber(String msg) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"        super(msg);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":17}},{"path":"src/main/java/Prune/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Exceptions.InvalidCommand;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Exceptions.InvalidTaskNumber;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.ToDo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":" * The Parser class processes user input and translates user\u0027s inputs into actions.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":" * It interacts with the TaskList and Storage classes to manage and store them.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"    public static final String DISPLAY_TASKS_COMMAND \u003d \"list\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"    public static final String MARK_DONE_COMMAND \u003d \"mark\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"    public static final String MARK_NOT_DONE_COMMAND \u003d \"unmark\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"    public TaskList tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"    public Storage storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs a Parser object with a given TaskList and Storage.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"     * @param tasks   TaskList containing the tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"     * @param storage Storage used to save the tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"     * Processes the user input command and executes the corresponding task action.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"     * Handles user input commands.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"     * @param input Input string containing the command and task arguments.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"     * @throws InvalidCommand    If the command is unknown.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ashleyang2001"},"content":"     * @throws InvalidTaskNumber If the task number provided is invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ashleyang2001"},"content":"    public void processInput(String input) throws InvalidCommand, InvalidTaskNumber {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ashleyang2001"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ashleyang2001"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ashleyang2001"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ashleyang2001"},"content":"        switch (command) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ashleyang2001"},"content":"        case DISPLAY_TASKS_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ashleyang2001"},"content":"            this.displayTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ashleyang2001"},"content":"            return;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ashleyang2001"},"content":"        case MARK_DONE_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ashleyang2001"},"content":"        case MARK_NOT_DONE_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ashleyang2001"},"content":"            task \u003d processMarking(inputArray);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ashleyang2001"},"content":"            printMarkTaskMsg(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ashleyang2001"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ashleyang2001"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ashleyang2001"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ashleyang2001"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ashleyang2001"},"content":"            task \u003d processAdding(inputArray);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ashleyang2001"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ashleyang2001"},"content":"                printAddTaskMsg(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ashleyang2001"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ashleyang2001"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ashleyang2001"},"content":"            task \u003d processDeleting(inputArray);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ashleyang2001"},"content":"            printDeleteTaskMsg(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ashleyang2001"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ashleyang2001"},"content":"        case FIND_COMMAND:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ashleyang2001"},"content":"            TaskList matchingTasks \u003d processFinding(inputArray);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ashleyang2001"},"content":"            displayMatchingTasks(matchingTasks);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ashleyang2001"},"content":"            break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ashleyang2001"},"content":"        default:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ashleyang2001"},"content":"            throw new InvalidCommand(String.format(\"\\tUnknown command: %s\\n\\tPlease try again\", command));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ashleyang2001"},"content":"        // Write data to file for mark, todo, deadline, event, delete commands","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ashleyang2001"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ashleyang2001"},"content":"            this.storage.writeData(this.tasks);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ashleyang2001"},"content":"     * Prints all tasks in tasks list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ashleyang2001"},"content":"    public void displayTasks() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ashleyang2001"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(\"\\tHooray! There are no tasks in your list.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ashleyang2001"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ashleyang2001"},"content":"            this.tasks.printTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ashleyang2001"},"content":"     * Prints all matching tasks found.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ashleyang2001"},"content":"    public void displayMatchingTasks(TaskList matchingTasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ashleyang2001"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(\"\\tThere are no matching tasks found.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ashleyang2001"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(\"\\tHere are matching tasks in your list:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ashleyang2001"},"content":"            matchingTasks.printTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ashleyang2001"},"content":"     * Prints a message after a task has been added.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ashleyang2001"},"content":"     * @param task Task that has been added.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ashleyang2001"},"content":"    public void printAddTaskMsg(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ashleyang2001"},"content":"        System.out.printf(\"\\tGot it. I\u0027ve added this task:\\n\\t\\t%s\", task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ashleyang2001"},"content":"        System.out.printf(\"\\n\\tNow you have %d tasks in the list.\\n\", this.tasks.tasksList.size());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ashleyang2001"},"content":"     * Prints a message after a task has been deleted.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ashleyang2001"},"content":"     * @param task Task that has been deleted.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ashleyang2001"},"content":"    public void printDeleteTaskMsg(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ashleyang2001"},"content":"        System.out.printf(\"\\tGot it! I\u0027ve removed this task:\\n\\t\\t%s\", task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ashleyang2001"},"content":"        System.out.printf(\"\\n\\tNow you have %d tasks in the list.\\n\", this.tasks.tasksList.size());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ashleyang2001"},"content":"     * Prints a message after a task has been marked as done or not done.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ashleyang2001"},"content":"     * @param task Task whose is done status has been changed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ashleyang2001"},"content":"    public void printMarkTaskMsg(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ashleyang2001"},"content":"        if (task.getIsDone()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ashleyang2001"},"content":"        } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(\"\\tOk, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ashleyang2001"},"content":"        System.out.printf(\"\\t\\t%s\\n\", task.toString());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ashleyang2001"},"content":"     * Processes the saved data when loading from a file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ashleyang2001"},"content":"     * @param input Input string containing the task data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ashleyang2001"},"content":"    public void processSavedData(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ashleyang2001"},"content":"        String[] inputArray \u003d input.split(\" \", 3);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ashleyang2001"},"content":"        String markStatus \u003d inputArray[0];","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ashleyang2001"},"content":"        boolean isDone \u003d markStatus.equals(MARK_DONE_COMMAND);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ashleyang2001"},"content":"        // Form add task input array by removing mark/unmark command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ashleyang2001"},"content":"        String[] newInputArray \u003d Arrays.copyOfRange(inputArray, 1, inputArray.length);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ashleyang2001"},"content":"        processAdding(newInputArray);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ashleyang2001"},"content":"        Task addedTask \u003d this.tasks.tasksList.get(this.tasks.tasksList.size() - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ashleyang2001"},"content":"        this.tasks.markTask(addedTask, isDone);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ashleyang2001"},"content":"     * Processes the mark/unmark command and updates the task\u0027s is done status.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ashleyang2001"},"content":"     * @param input Array containing the mark command and the task number.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ashleyang2001"},"content":"     * @return Task that was marked or unmarked.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ashleyang2001"},"content":"     * @throws InvalidTaskNumber If the task number is invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ashleyang2001"},"content":"    public Task processMarking(String[] input) throws InvalidTaskNumber {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ashleyang2001"},"content":"        String command \u003d input[0];","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ashleyang2001"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ashleyang2001"},"content":"            int taskIndex \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ashleyang2001"},"content":"            if (taskIndex \u003e\u003d this.tasks.tasksList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ashleyang2001"},"content":"                throw new InvalidTaskNumber(\"Please enter a valid task number\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ashleyang2001"},"content":"            Task task \u003d this.tasks.tasksList.get(taskIndex);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ashleyang2001"},"content":"            boolean isDone;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ashleyang2001"},"content":"            isDone \u003d command.equals(MARK_DONE_COMMAND);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ashleyang2001"},"content":"            this.tasks.markTask(task, isDone);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ashleyang2001"},"content":"            return task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ashleyang2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ashleyang2001"},"content":"            throw new NumberFormatException(\"Task number must be an integer.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ashleyang2001"},"content":"     * Processes the delete command and removes the specified task from task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ashleyang2001"},"content":"     * @param input Array containing the delete command and task number.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ashleyang2001"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ashleyang2001"},"content":"     * @throws InvalidTaskNumber If the task number is invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ashleyang2001"},"content":"    public Task processDeleting(String[] input) throws InvalidTaskNumber {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ashleyang2001"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ashleyang2001"},"content":"            int taskIndex \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ashleyang2001"},"content":"            if (taskIndex \u003e\u003d this.tasks.tasksList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ashleyang2001"},"content":"                throw new InvalidTaskNumber(\"Please enter a valid task number\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ashleyang2001"},"content":"            Task task \u003d this.tasks.tasksList.get(taskIndex);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ashleyang2001"},"content":"            this.tasks.deleteTask(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ashleyang2001"},"content":"            return task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ashleyang2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ashleyang2001"},"content":"            throw new NumberFormatException(\"Task number must be an integer.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ashleyang2001"},"content":"     * Processes the adding command and creates a task based on the command type (todo, deadline, event).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ashleyang2001"},"content":"     * @param input Array containing the command and task arguments.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ashleyang2001"},"content":"     * @return Added task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ashleyang2001"},"content":"    public Task processAdding(String[] input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ashleyang2001"},"content":"        String command \u003d input[0];","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ashleyang2001"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ashleyang2001"},"content":"            String details \u003d input[1];","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ashleyang2001"},"content":"            String[] inputArray;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ashleyang2001"},"content":"            String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ashleyang2001"},"content":"            Task task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ashleyang2001"},"content":"            if (command.equals(TODO_COMMAND)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ashleyang2001"},"content":"                // Process Todo","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ashleyang2001"},"content":"                task \u003d new ToDo(details);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ashleyang2001"},"content":"            } else if (command.equals(DEADLINE_COMMAND)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ashleyang2001"},"content":"                // process Deadline","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ashleyang2001"},"content":"                inputArray \u003d details.split(\" /by \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ashleyang2001"},"content":"                description \u003d inputArray[0];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ashleyang2001"},"content":"                String by \u003d inputArray[1];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ashleyang2001"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ashleyang2001"},"content":"            } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ashleyang2001"},"content":"                // Process Event","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ashleyang2001"},"content":"                inputArray \u003d details.split(\" /from \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ashleyang2001"},"content":"                description \u003d inputArray[0];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ashleyang2001"},"content":"                String[] fromToArray \u003d inputArray[1].split(\" /to \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ashleyang2001"},"content":"                String from \u003d fromToArray[0];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ashleyang2001"},"content":"                String to \u003d fromToArray[1];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ashleyang2001"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ashleyang2001"},"content":"            this.tasks.addTask(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ashleyang2001"},"content":"            return task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ashleyang2001"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(String.format(\"\\tInsufficient descriptions given for command: %s\\n\\t\" + \"Please ensure the following format:\\n\" + \"\\t\\ttodo description\\n\" + \"\\t\\tdeadline description /by when\\n\" + \"\\t\\tevent description /from start /to end\", command));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ashleyang2001"},"content":"        return null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ashleyang2001"},"content":"    public TaskList processFinding(String[] input) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ashleyang2001"},"content":"        String keyword \u003d input[1];","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ashleyang2001"},"content":"        return this.tasks.find(keyword);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":255}},{"path":"src/main/java/Prune/Prune.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" * Represents a chatbot named Prune that manages task list, storage, ui and parser objects","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":" * to store tasks inputted by user.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"public class Prune {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"    public TaskList tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"    public Storage storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"    public Ui ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"    public Parser parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs a Prune chatbot with the specified file path for storage.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"    public Prune(String filePath) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"        this.parser \u003d new Parser(this.tasks, this.storage);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"     * Runs the Prune chatbot, calls Parser to process input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"    public void run() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"        // Load file","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"        this.storage.load(this.parser);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"        this.ui.greet();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"        this.parser.displayTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"        while (true) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"            try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"                String output \u003d this.ui.interactWithUser();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"                if (output \u003d\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"                    break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"                this.parser.processInput(output);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ashleyang2001"},"content":"     * The main entry point of the program. Initializes and runs the chatbot.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ashleyang2001"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ashleyang2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ashleyang2001"},"content":"        Prune chatbot \u003d new Prune(\"./data/saved_tasks.txt\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ashleyang2001"},"content":"        chatbot.run();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":57}},{"path":"src/main/java/Prune/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":"import Prune.Tasks.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":"import java.io.File;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":" * The Storage class is for managing data storage operations, including","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":" * loading and saving task data from-to a file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"public class Storage {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"    public String filePath;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"     * @param filePath The path of the file to load from or write to.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"    Storage(String filePath) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"     * Loads data from the file specified in the filePath. If the file does not exist, it creates the file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"     * It processes each line of the file using the provided parser.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"     * @param parser The parser used to process the data from the file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"    public void load(Parser parser) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"        // Create file if it does not exist","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"            System.out.println(\"Storage file found: \" + file.getAbsolutePath());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"            try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"                    System.out.println(\"Storage file created: \" + file.getAbsolutePath());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"                } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"                    System.out.println(\"Failed to create storage file.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ashleyang2001"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ashleyang2001"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ashleyang2001"},"content":"        // Read file","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ashleyang2001"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ashleyang2001"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ashleyang2001"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ashleyang2001"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ashleyang2001"},"content":"                parser.processSavedData(line);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ashleyang2001"},"content":"            scanner.close();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ashleyang2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ashleyang2001"},"content":"            System.out.printf(\"Storage file is not found: %s\\n\", this.filePath);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ashleyang2001"},"content":"     * Writes tasks data from the provided TaskList to the file specified in the filePath.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ashleyang2001"},"content":"     * Overwrites the existing content in the file with the new task data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ashleyang2001"},"content":"     * @param tasks TaskList containing the tasks to write to the file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ashleyang2001"},"content":"    public void writeData(TaskList tasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ashleyang2001"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ashleyang2001"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ashleyang2001"},"content":"            FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ashleyang2001"},"content":"            for (Task task : tasks.tasksList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ashleyang2001"},"content":"                writer.write(task.getInputString() + System.lineSeparator());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ashleyang2001"},"content":"            writer.close();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ashleyang2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ashleyang2001"},"content":"            System.out.printf(\"Failed to write to storage file: %s\\n\", e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":82}},{"path":"src/main/java/Prune/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune.Tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":" * Represents a Deadline task. Deadline task includes a description and a deadline date.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":" * It extends the Task class and provides specific functionality for tasks that have a deadline.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"    protected String by; // The deadline date for the task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs a Deadline task with a description and deadline.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"     * @param by          Deadline date for the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the task to be used for writing task data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"     * The format is: \"[mark status] deadline description /by deadline date\".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"     * @return String representation of the task for saving.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"    public String getInputString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"        return String.format(\"%s deadline %s /by %s\", super.getMarkCommand(), this.description, this.by);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"     * The format is: \"[D][mark status] description (by: deadline date)\".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":43}},{"path":"src/main/java/Prune/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune.Tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":" * Represents an Event task. An Event task includes a description, a start time, and an end time.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":" * It extends the Task class and provides specific functionality for tasks that represent events.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"    protected String from; // The start time of the event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"    protected String to;   // The end time of the event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"     * @param from        Start time of the event.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"     * @param to          End time of the event.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the event task to be used for writing task data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"     * The format is: \"[mark status] event description /from start time /to end time\".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"     * @return String representation of the event task for saving.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"    public String getInputString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"        return String.format(\"%s event %s /from %s /to %s\", super.getMarkCommand(), this.description, this.from, this.to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the event task for display.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"     * The format is: \"[E][mark status] description (from: start time to: end time)\".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":46}},{"path":"src/main/java/Prune/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune.Tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":" * Represents an abstract task with a description and completion status.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":" * Subclasses of Task should implement the abstract method to provide specific task functionality.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"    protected String description; // The description of the task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"    protected boolean isDone; // The completion status of the task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs a Task with a description and initialise its completion status to false (not done).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"     * Returns \"X\" if the task is marked as done, and \" \" (empty space) if not done.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"     * @return String representing the status icon of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"     * Getter method to returns the description of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"     * @return Description of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"        return this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"     * Getter method to return the completion status of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"     * @return True if the task is done, false if not.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ashleyang2001"},"content":"     * Returns the mark command based on the completion status of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ashleyang2001"},"content":"     * Returns \"mark\" if the task is done, and \"unmark\" if not.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ashleyang2001"},"content":"     * @return Mark command for the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ashleyang2001"},"content":"    public String getMarkCommand() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ashleyang2001"},"content":"        return (isDone ? \"mark\" : \"unmark\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ashleyang2001"},"content":"     * Marks the task as done or not done based on the provided isDone value.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ashleyang2001"},"content":"     * @param isDone Completion status to set for the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ashleyang2001"},"content":"    public void markAsDone(boolean isDone) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ashleyang2001"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the task for writing task data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ashleyang2001"},"content":"     * @return A string representation of the task for saving.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ashleyang2001"},"content":"    public abstract String getInputString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ashleyang2001"},"content":"     * The format is: \"[status icon] description\".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ashleyang2001"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ashleyang2001"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ashleyang2001"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ashleyang2001"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":85}},{"path":"src/main/java/Prune/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune.Tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" * The TaskList class manages a collection of tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":" * It maintains a list of tasks and provides functionalities for task manipulation.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"public class TaskList {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"    public final ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"        this.tasksList \u003d tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"        for (Task task : this.tasksList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"     * Adds a task to the tasks list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"     * @param task Task to be added into the tasks list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"        this.tasksList.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"     * Deletes a specified task from the tasks list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"     * @param task Task to be removed from the tasks list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"        this.tasksList.remove(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ashleyang2001"},"content":"     * Marks a task completion status based on the provided boolean value.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ashleyang2001"},"content":"     * @param task   Task to be marked.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ashleyang2001"},"content":"     * @param isDone Boolean value specifying whether to mark or unmark the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ashleyang2001"},"content":"    public void markTask(Task task, boolean isDone) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ashleyang2001"},"content":"        task.markAsDone(isDone);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ashleyang2001"},"content":"     * Prints all tasks in the tasks list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ashleyang2001"},"content":"     * If the list is empty, a message will be displayed indicating that there are no tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ashleyang2001"},"content":"    public void printTasks() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ashleyang2001"},"content":"        for (int i \u003d 0; i \u003c this.tasksList.size(); i++) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ashleyang2001"},"content":"            System.out.printf(\"\\t%s.%s\\n\", i + 1, tasksList.get(i));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ashleyang2001"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ashleyang2001"},"content":"        return this.tasksList.isEmpty();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ashleyang2001"},"content":"    public int size() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ashleyang2001"},"content":"        return this.tasksList.size();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":75}},{"path":"src/main/java/Prune/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune.Tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":" * Represents a ToDo task. A ToDo task includes a description and is used for tasks that have no specific time or deadline.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":" * It extends the Task class and provides specific functionality for tasks that represent a general ToDo item.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"     * @param description Description of the ToDo task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the ToDo task to be used for writing task data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"     * The format is: \"[mark status] todo description\".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"     * @return String representation of the ToDo task for saving.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"    public String getInputString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"        return String.format(\"%s todo %s\", super.getMarkCommand(), this.description);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"     * Returns a string representation of the ToDo task for display.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"     * The format is: \"[T][mark status] description\".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":39}},{"path":"src/main/java/Prune/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"package Prune;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":" * The Ui class handles interactions with the user, including user\u0027s input and output.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"public class Ui {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"    public static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"    public static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ashleyang2001"},"content":"     * Greets the user and displays the chatbot mascot.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ashleyang2001"},"content":"    public void greet() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"        System.out.println(\"\\tHello! I am Prune.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ashleyang2001"},"content":"        String mascot \u003d \"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ashleyang2001"},"content":"                                    .-\"-.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ashleyang2001"},"content":"                                   /|6 6|\\\\","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ashleyang2001"},"content":"                                  {/(_0_)\\\\}","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ashleyang2001"},"content":"                                   _/ ^ \\\\_","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ashleyang2001"},"content":"                                  (/ /^\\\\ \\\\)-\u0027","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ashleyang2001"},"content":"                                   \"\"\u0027 \u0027\"\"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ashleyang2001"},"content":"                          \"\"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ashleyang2001"},"content":"        System.out.println(mascot);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ashleyang2001"},"content":"        System.out.println(\"\\tWhat can I do for you?\\n\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ashleyang2001"},"content":"     * Interacts with the user and returns their input as a String.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ashleyang2001"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ashleyang2001"},"content":"     * @return User\u0027s input as a String, or null if the exit command is given.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ashleyang2001"},"content":"    public String interactWithUser() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ashleyang2001"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ashleyang2001"},"content":"        String output;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ashleyang2001"},"content":"        if (input.equals(EXIT_COMMAND)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ashleyang2001"},"content":"            // End the program when \"bye\" is inputted","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ashleyang2001"},"content":"            this.bye();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ashleyang2001"},"content":"            output \u003d null;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ashleyang2001"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ashleyang2001"},"content":"            output \u003d input;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ashleyang2001"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ashleyang2001"},"content":"        return output;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ashleyang2001"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ashleyang2001"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ashleyang2001"},"content":"     * Displays goodbye message to the user.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ashleyang2001"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ashleyang2001"},"content":"    public void bye() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ashleyang2001"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\\n\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ashleyang2001"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ashleyang2001"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ashleyang2001"},"content":"todo read book","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ashleyang2001"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ashleyang2001"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ashleyang2001"},"content":"todo join sports club","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ashleyang2001"},"content":"todo borrow book","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ashleyang2001"},"content":"list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ashleyang2001"},"content":"mark 1","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ashleyang2001"},"content":"mark 4","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ashleyang2001"},"content":"list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ashleyang2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ashleyang2001"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ashleyang2001"},"content":"list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ashleyang2001"},"content":"bye","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ashleyang2001"},"content":"java -classpath ..\\bin Prune \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ashleyang2001":1,"-":20}}]
