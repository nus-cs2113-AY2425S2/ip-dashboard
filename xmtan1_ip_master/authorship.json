[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"# Lisa project template","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"1. After that, locate the `src/main/java/Lisa.java` file, right-click it, and choose `Run Lisa.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"-":24,"xmtan1":2}},{"path":"data/Lisa.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"T |   | this","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":"E |   | lecture | thursday 4pm | 6pm","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":"D | X | homework | friday","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xmtan1":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"# Lisa User Guide","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":"Lisa is a chatbot that helps you to keep track of our tasks! ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":"Here is a short guide on how to use Lisa.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"\u003e - Words within the curly brackets are the parameters to be supplied by the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":"\u003e - Words in `UPPER_CASE` are outputs that depend on the current list. ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"\u003e - Words in brackets are stand-ins for expected outputs and are not the actual output.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"\u003e - All commands are to be entered in lower case.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"\u003e - When inputting dates, use day/time format instead of dd/mm/yyyy format.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"\u003e   - e.g. `friday 4pm` instead of `10/01/2025`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"## Add todo: `todo`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"Adds a todo task to the list. ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"Format: `todo {description}`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"Examples: ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"- `todo homework`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"- `todo iron the clothes`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"Expected output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"  [T][ ] {description}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"You now have NUMBER_OF_TASKS things in your list. Better get to them!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"- `[T]` denotes that this task is a todo task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"## Add deadline: `deadline`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"Adds a deadline task to the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"Format: `deadline {description} /by {date}`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"Examples:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"- `deadline EE2026 code /by Monday`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"- `deadline finish project /by Friday 2359`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"Expected output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"  [D][ ] {description} (by: {date})","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"You now have NUMBER_OF_TASKS things in your list. Better get to them!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"- `[D]` denotes that this task is a deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"## Add event: `event`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"Adds an event task to the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"Format: `event {description} /from {date/time} /to {date/time}`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"Examples:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"- `event lecture /from Thursday 4pm /to 6pm`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"- `event overseas vacation /from Monday /to Friday`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"Expected output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"  [E][ ] {description} (from: {date} to: {date})","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"You now have NUMBER_OF_TASKS things in your list. Better get to them!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"- `[E]` denotes that this task is en event task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xmtan1"},"content":"## Mark task: `mark` / `unmark`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xmtan1"},"content":"Marks a task as complete or incomplete.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xmtan1"},"content":"Format: `mark {task index}` / `unmark {task index}`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xmtan1"},"content":"- `[task index]` must be between 1 and the number of tasks currently in the list, inclusive.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xmtan1"},"content":"Examples:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xmtan1"},"content":"- `mark 1`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xmtan1"},"content":"- `unmark 4`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xmtan1"},"content":"Sample expected output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xmtan1"},"content":"Okay, task {task index} has been marked. :)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xmtan1"},"content":"--------------------------------------------------------------","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xmtan1"},"content":"Here\u0027s your list of tasks:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xmtan1"},"content":"1. [T][X] (...)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xmtan1"},"content":"Okay, task 2 has been unmarked!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xmtan1"},"content":"--------------------------------------------------------------","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xmtan1"},"content":"Here\u0027s your list of tasks:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xmtan1"},"content":"1. [T][ ] (...)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xmtan1"},"content":"- Note: `[X]` denotes that the task is marked completed. `[ ]` denotes that the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xmtan1"},"content":" is incomplete.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xmtan1"},"content":"## Delete task: `delete`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xmtan1"},"content":"Removes a task from the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xmtan1"},"content":"Format: `delete {task index}`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xmtan1"},"content":"- `{task index}` must be between 1 and the number of tasks currently in the list, inclusive.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xmtan1"},"content":"Examples:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xmtan1"},"content":"- `delete 4`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xmtan1"},"content":"Sample expected output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xmtan1"},"content":"Okay! I\u0027ve removed this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xmtan1"},"content":" [T][ ] (...)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xmtan1"},"content":"You now have NUMBER_OF_TASKS things in your list!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xmtan1"},"content":"## Find task: `find`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xmtan1"},"content":"Finds tasks whose task description contain the given keyword. ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xmtan1"},"content":"Format: `find {keyword}`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xmtan1"},"content":"Examples: ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xmtan1"},"content":"- `find homework`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xmtan1"},"content":"Sample expected output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xmtan1"},"content":"Here\u0027s the list of matching tasks:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xmtan1"},"content":"1.[D][ ] homework (...)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xmtan1"},"content":"2.[T][ ] do homework ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xmtan1"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xmtan1"},"content":"## Exit the program: `bye`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xmtan1"},"content":"Exits the program","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xmtan1"},"content":"Format: `exit`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xmtan1"},"content":"## Saving the data","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xmtan1"},"content":"Lisa lists are saved in the hard disk automatically after any command that changes the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xmtan1"},"content":"There is no need to save manually.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":16,"xmtan1":125}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":" * Represents a Deadline task, which has a description and date of event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":" * This class inherits from the Task class and adds functionality to store and retrieve","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":" * the deadline date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":" * This class also overrides the toString() method to provide a different string representation.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":"    public String deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"     * Constructs a Deadline object with given description, date and completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"     * @param description the description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"     * @param deadline the deadline of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"     * @param isDone the completion status of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"     * Retrieves the deadline of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"     * @return the deadline of the task as a string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"        return deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"     * Returns a string representation of the deadline task, including its status, description","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"     * and deadline.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"     * The format is: \"[D][status] description (by: date)\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"     * where status is the task\u0027s status icon.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"     * @return a string representation of the deadline task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"    @Override public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + deadline + \")\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"xmtan1":42}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":" * Represents an Event task, which has a description and date of event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":" * This class inherits from the Task class and adds functionality to store and retrieve","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":" * the event date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":" * This class also overrides the toString() method to provide a different string representation.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":"public class Event extends Task{","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"    public String from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"    public String to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"     * Constructs an Event object with given description, date and completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"     * @param description the description of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"     * @param from the time of start of event","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"     * @param to the time of end of event","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"     * @param isDone the completion status of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"     * Retrieves the date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"     * @return the date of the event as a string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"    public String getFrom() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"        return from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"    public String getTo() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"        return to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"     * Returns a string representation of the event, including its status, description","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"     * and date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"     * The format is: \"[E][status] description (from: from to: to)\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"     * where status is the task\u0027s status icon.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"     * @return a string representation of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"    @Override public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"xmtan1":50}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"import java.io.File;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":" * The FileHandler class provides methods to read and write tasks from/to a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":" * It handles converting tasks into its appropriate type (such as \u0027String\u0027, \u0027Task\u0027,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":" * \u0027Event\u0027, and \u0027Deadline\u0027) for storage in file or lists.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"public class FileHandler {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"    private File file;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"     * Constructs a FileHandler object with the specified file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"     * @param file the file to be used for storing list data.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"    public FileHandler(File file) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"        this.file \u003d file;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"    // laitcanard05","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     * Reads tasks from the file, converts them into the required type and adds them into a list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"     * @param tasks list to which the tasks read from the file will be added to.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"     * @throws IOException if there is an error reading from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"    public void addTaskFromFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"            String[] words \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"            String taskType \u003d words[0].trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"            boolean isDone \u003d words[1].trim().equals(\"X\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"            String description \u003d words[2].trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"            Task newTask \u003d switch (taskType) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"                case \"T\" -\u003e new Task(description, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"                case \"D\" -\u003e {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"                    String deadline \u003d words[3].trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"                    yield new Deadline(description, deadline, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"                case \"E\" -\u003e {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"                    String from \u003d words[3].trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"                    String to \u003d words[4].trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"                    yield new Event(description, from, to, isDone);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xmtan1"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"                default -\u003e new Task(description, isDone); // add exception","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xmtan1"},"content":"            };","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"            tasks.add(newTask);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"     * Writes a list of tasks to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"     * @param tasks the list of tasks that needs to be written to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"     * @throws IOException if there is an error writing to file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"        String content \u003d getTaskListAsText(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xmtan1"},"content":"        fw.write(content);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xmtan1"},"content":"        fw.close();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xmtan1"},"content":"     * Converts the list of tasks into a string representation for storage in a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xmtan1"},"content":"     * @param tasks the list of tasks to be converted into text format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xmtan1"},"content":"     * @return a string representation of tasks for storage in file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xmtan1"},"content":"    public String getTaskListAsText(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xmtan1"},"content":"        String taskListText \u003d \"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xmtan1"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xmtan1"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xmtan1"},"content":"                taskListText +\u003d \"D | \" + task.getStatusIcon() + \" | \" +  task.getDescription() + \" | \" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xmtan1"},"content":"                              ((Deadline) task).getDeadline() + \"\\n\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xmtan1"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xmtan1"},"content":"                taskListText +\u003d \"E | \" + task.getStatusIcon() + \" | \" + task.getDescription() + \" | \" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xmtan1"},"content":"                        ((Event) task).getFrom() + \" | \" + ((Event) task).getTo() + \"\\n\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xmtan1"},"content":"            } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xmtan1"},"content":"                taskListText +\u003d \"T | \" + task.getStatusIcon() + \" | \" + task.getDescription() + \"\\n\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xmtan1"},"content":"        return taskListText;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"xmtan1":93}},{"path":"src/main/java/Lisa.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":" * A personal assistant chatbot named Lisa. Helps to keep a list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":" * of tasks, deadlines and events for the user to refer to.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":"public class Lisa {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"     * Constructs a Lisa class with an ui handler, task list and a","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"     * specified file path for storage.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"     * @param filePath File path of the file used for storage","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"    public Lisa(String filePath) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"        tasks \u003d new TaskList(storage);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"     * Starts the main loop of the chatbot. It displays the welcome message, reads","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"     * user inputs and executes command until user inputs \"bye\" and displays a farewell","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     * message before closing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"     * The loop handles parsing errors and returns an error message. After each","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"     * command is executed, the list of tasks is updated and saved.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"    public void run() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"        String input \u003d ui.readInput();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"                String[] command \u003d null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"                try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"                    command \u003d Parser.parseCommand(input);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"                    tasks.execute(command);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"                    Ui.printDescriptionError(command[0]);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"                    Ui.printEmptyCommandError();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"                } finally {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"                    storage.saveTasks(tasks.tasks);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"                    input \u003d ui.readInput();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"        ui.farewellMessage();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"     * The entry point of the chatbot. It initialises a new instance of","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"     * Lisa with a specified file path for data storage and starts the chatbot","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"     * by calling run().","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"     * @param args Command-line arguments passed to the program (not used in this","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"     *             implementation).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"        new Lisa(\"Lisa_data/Lisa.txt\").run();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"xmtan1":66}},{"path":"src/main/java/LisaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"public class LisaException extends Exception{","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"xmtan1":2}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":" * The Parser class provides methods to parse and extract information from a string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":" * It contains methods to split input strings into individual components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":"public class Parser {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":"     * Parses and splits the input string into two parts: the command and the description.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"     * The string is split by a space.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"     * @param input the input string to be parsed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"     * @return an array of strings where the first element is the command, and the second","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"     * element is the description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"    public static String[] parseCommand(String input) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"        String[] words \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"        return removeWhitespace(words);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"     * Parses and splits the input string after the command into two parts: the description","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"     * and the date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"     * The string is split by the \u0027/\u0027 character.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"     * @param input the input string to be parsed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"     * @return an array of strings where the first element is the description, and the second","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"     * element is the date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"    public static String[] parseContent(String input) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"        String[] words \u003d input.trim().split(\"/\", 2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"        return removeWhitespace(words);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"     * Parses and removes whitespace before and after each string in the array of strings.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"     * @param input array of strings to remove whitespace from","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"     * @return an array of strings with their whitespace removed","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"    public static String[] removeWhitespace(String[] input) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"            input[i] \u003d input[i].trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"        return input;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"     * Parses the input string to extract an integer index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"     * The parsed value is returned with a 1-based index adjusted to a 0-based index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xmtan1"},"content":"     * @param input the input string expected to contain an integer","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"     * @return the 0-based index parsed from the input string","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"    public static int parseIndex(String input) throws NumberFormatException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"        input \u003d input.trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"        return Integer.parseInt(input) - 1;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"     * Checks if the given task contains the specified input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"     * This method compares the characters of the input string to the task string and","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"     * determines whether the input appears as a sequence within the task. Returns true if","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"     * input is fully matched in order, and false otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"     * @param input The string to search for within the task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xmtan1"},"content":"     * @param task The string representing the task to be searched.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xmtan1"},"content":"     * @return true if the input appears as a subsequence within the task, false otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xmtan1"},"content":"    public static boolean parseTask(String input, String task) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xmtan1"},"content":"        boolean containsInput \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xmtan1"},"content":"        char[] charInput \u003d input.toCharArray();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xmtan1"},"content":"        char[] charTask \u003d task.toCharArray();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xmtan1"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xmtan1"},"content":"        int j \u003d 0;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xmtan1"},"content":"        while (i \u003c charTask.length) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xmtan1"},"content":"            if (charTask[i] \u003d\u003d charInput[j]) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xmtan1"},"content":"                if (j \u003d\u003d charInput.length - 1) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xmtan1"},"content":"                    containsInput \u003d true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xmtan1"},"content":"                    break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xmtan1"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xmtan1"},"content":"                j++;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xmtan1"},"content":"            } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xmtan1"},"content":"                j \u003d 0;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xmtan1"},"content":"            i++;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xmtan1"},"content":"        return containsInput;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xmtan1":91}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"import java.io.File;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":" * The Storage class manages the storage of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":" * This class provides methods to save tasks to and load tasks from a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":" * The tasks are stored in a file whose path is provided during instantiation.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"public class Storage {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"    private String filePath;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"     * Constructs a Storage object with a specified file path.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"     * @param filePath the path of the file were tasks will be saved or loaded from.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"     * Loads tasks from the file specified by filePath and adds them to a list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     * @param tasks the list to which the tasks read from the file will be added to.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"    public void transferSavedData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"        File savedTasks \u003d new File(filePath);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"            if (savedTasks.exists()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"                FileHandler newFile \u003d new FileHandler(savedTasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"                newFile.addTaskFromFile(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"     * Saves the list of tasks to the file specified by filePath.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"     * If the file does not exist, it will create the necessary directory","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"     * and file before saving.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"     * If the file exists, it will overwrite the existing content.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"     * @param tasks the list of tasks to be saved to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xmtan1"},"content":"        File savedTasks \u003d new File(filePath);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xmtan1"},"content":"            if(savedTasks.exists()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"                FileHandler newFile \u003d new FileHandler(savedTasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"                newFile.writeToFile(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"            } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"                Files.createDirectory(Paths.get(\"Lisa_data\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"                Files.createFile(Paths.get(filePath));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"                FileHandler newFile \u003d new FileHandler(savedTasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"                newFile.writeToFile(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xmtan1":67}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":" * Represents a task with a description and its completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object contains information about a task\u0027s description and","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":" * whether it is marked as done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":" * It provides methods to check and update a task\u0027s status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"public class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"    protected String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"     * Constructor to create the Task object with a description and completion status","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"     * @param description description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"     * @param isDone completion status of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"     * @return description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"    public String getDescription(){","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"        return description;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"     * @return true if task is done, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"        return isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"     * Marks the task as done or undone depending on the current","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"     * status of completion.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"     * This method sets the task\u0027s status to completed if previously not,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"     * and vice versa.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"    public void markTask() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"     * Returns the status icon of the task as a string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"     * @return \"X\" if task is done, \" \" otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"     * Returns string representation of the task for user to view.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"     * The format is: \"[T][status] description\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"     * where status is the task\u0027s status icon.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xmtan1"},"content":"     * @return a string containing its description and information on","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xmtan1"},"content":"     * the type of task and its completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xmtan1"},"content":"    public String toString(){","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xmtan1"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"xmtan1":73}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":" * Represents the list of task Lisa manages.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":" * This class contains methods to add, delete, mark and find tasks in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":"public class TaskList {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"    protected int size;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"     * Constructor for a TaskList object and initialises the list by transferring","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"     * saved data from storage.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"     * @param storage The storage object to transfer data from.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"        storage.transferSavedData(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"        size \u003d tasks.size();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"     * Executes a command based on the user input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"     * @param command An array of strings representing the user input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"     * @throws ArrayIndexOutOfBoundsException If there are insufficient arguments for","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"     * the command.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"    public void execute(String[] command) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"        switch (command[0]) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"            markTask(command[1], true);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"            markTask(command[1], false);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"            addTask(command[1]);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"            addDeadline(command[1]);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"        case \"event\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"            addEvent(command[1]);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xmtan1"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"            deleteTask(command[1]);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"        case \"list\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"            Ui.printList(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"        case \"find\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"            findTask(command[1]);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"        case \"\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"            Ui.printEmptyCommandError();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xmtan1"},"content":"        default:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xmtan1"},"content":"            Ui.printError();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xmtan1"},"content":"            break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xmtan1"},"content":"     * Adds a new todo task to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xmtan1"},"content":"     * @param line The description of the new task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xmtan1"},"content":"    public void addTask(String line) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xmtan1"},"content":"        Task newTask \u003d new Task(line, false);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xmtan1"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xmtan1"},"content":"        Ui.printTask(newTask, tasks.size());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xmtan1"},"content":"     * Adds a new deadline task to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xmtan1"},"content":"     * @param word The String containing the description and date of the deadline task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xmtan1"},"content":"     * @throws ArrayIndexOutOfBoundsException If the command format is incorrect or there are","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xmtan1"},"content":"     * insufficient arguments.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xmtan1"},"content":"    public void addDeadline(String word) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xmtan1"},"content":"        String[] description \u003d Parser.parseContent(word);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xmtan1"},"content":"        String[] date \u003d Parser.parseCommand(description[1]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xmtan1"},"content":"        if (description[0].isEmpty() || date[1].isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xmtan1"},"content":"            Ui.printDescriptionError(\"deadline\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xmtan1"},"content":"        } else {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xmtan1"},"content":"            Deadline newDeadline \u003d new Deadline(description[0], date[1], false);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xmtan1"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xmtan1"},"content":"            Ui.printTask(newDeadline, tasks.size());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xmtan1"},"content":"     * Adds a new event task to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xmtan1"},"content":"     * @param word The string containing the description and the date of the event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xmtan1"},"content":"     * @throws ArrayIndexOutOfBoundsException If the command format is incorrect or there are","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xmtan1"},"content":"     * insufficient arguments.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xmtan1"},"content":"    public void addEvent(String word) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xmtan1"},"content":"        String[] description \u003d Parser.parseContent(word);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xmtan1"},"content":"        String[] date \u003d Parser.parseContent(description[1]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xmtan1"},"content":"        String[] from \u003d Parser.parseCommand(date[0]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xmtan1"},"content":"        String[] to \u003d Parser.parseCommand(date[1]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xmtan1"},"content":"        if (description[0].isEmpty() || from[1].isEmpty() || to[1].isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xmtan1"},"content":"            Ui.printDescriptionError(\"event\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xmtan1"},"content":"        } else {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xmtan1"},"content":"            Event newEvent \u003d new Event(description[0], from[1], to[1], false);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xmtan1"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xmtan1"},"content":"            Ui.printTask(newEvent, tasks.size());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xmtan1"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xmtan1"},"content":"     * @param word The command description that contains the task index.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xmtan1"},"content":"    public void deleteTask(String word) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xmtan1"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xmtan1"},"content":"            int taskIndex \u003d Parser.parseIndex(word);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xmtan1"},"content":"            String task \u003d tasks.get(taskIndex).toString(); // hold name of task to be deleted","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xmtan1"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xmtan1"},"content":"            Ui.printDeleteTask(task, tasks.size());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xmtan1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xmtan1"},"content":"            Ui.printOutOfBoundsError();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xmtan1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xmtan1"},"content":"            Ui.printNumberError();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xmtan1"},"content":"     * Marks or unmarks a task as completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xmtan1"},"content":"     * @param word The command description that contains the task index.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xmtan1"},"content":"     * @param mark The status of the mark as done (true) or undone (false).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xmtan1"},"content":"    public void markTask(String word, boolean mark) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xmtan1"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xmtan1"},"content":"            int taskIndex \u003d Parser.parseIndex(word);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xmtan1"},"content":"            if (mark \u003d\u003d tasks.get(taskIndex).isTaskDone()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xmtan1"},"content":"                Ui.printTaskDone(mark);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xmtan1"},"content":"            } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xmtan1"},"content":"                tasks.get(taskIndex).markTask();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xmtan1"},"content":"                Ui.printMarkTask(mark, taskIndex, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xmtan1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xmtan1"},"content":"            Ui.printOutOfBoundsError();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xmtan1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"xmtan1"},"content":"            Ui.printNumberError();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"xmtan1"},"content":"     * Finds tasks in the list that contain the specified word.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"xmtan1"},"content":"     * @param word The keyword to search for in the task description.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"xmtan1"},"content":"    public void findTask(String word) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"xmtan1"},"content":"        ArrayList\u003cTask\u003e tasksContainingWord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"xmtan1"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"xmtan1"},"content":"            if (Parser.parseTask(word, task.getDescription())) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"xmtan1"},"content":"                tasksContainingWord.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"xmtan1"},"content":"        Ui.printFoundTasks(tasksContainingWord);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xmtan1":182}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xmtan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xmtan1"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xmtan1"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xmtan1"},"content":" * The Ui class handles all user interactions by reading user input and displaying","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xmtan1"},"content":" * messages. It provides methods to print messages for task management, errors, and","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xmtan1"},"content":" * general user instructions.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xmtan1"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xmtan1"},"content":"public class Ui {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xmtan1"},"content":"     * Prints a horizontal line to for visual separation.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xmtan1"},"content":"    public static void printLine() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"--------------------------------------------------------------\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xmtan1"},"content":"     * Prints a welcome message to the user when the program starts.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xmtan1"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Hiya! I\u0027m Lisa\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"What\u0027s going on?\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xmtan1"},"content":"     * Prints a farewell message to the user when the program ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xmtan1"},"content":"    public void farewellMessage() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Bye! See you next time :)\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xmtan1"},"content":"     * Reads a line of input from the user via the command line.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xmtan1"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xmtan1"},"content":"    public String readInput() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xmtan1"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xmtan1"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xmtan1"},"content":"     * Prints a message confirming a todo task has been added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xmtan1"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xmtan1"},"content":"     * @param size The size of the current list of tasks.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xmtan1"},"content":"    public static void printTask(Task task, int size) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"You now have \" + size + \" things in your list. Better get to them!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xmtan1"},"content":"     * Prints a message confirming a task has been deleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xmtan1"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xmtan1"},"content":"     * @param size The number of tasks remaining in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xmtan1"},"content":"    public static void printDeleteTask(String task, int size) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Okay! I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"You now have \" + size + \" things in your list!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xmtan1"},"content":"     * Prints a message indicating a whether a task is marked or unmarked.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xmtan1"},"content":"     * @param mark true if the task is to be marked as done, false if otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xmtan1"},"content":"     * @param taskIndex The index of the task that was marked.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xmtan1"},"content":"     * @param tasks The current list of tasks to display after marking.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xmtan1"},"content":"    public static void printMarkTask(boolean mark, int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xmtan1"},"content":"        if (mark) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"Okay, task \" + (taskIndex + 1) + \" has been marked. :)\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xmtan1"},"content":"        } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"Okay, task \" + (taskIndex + 1) + \" has been unmarked!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xmtan1"},"content":"        printList(tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xmtan1"},"content":"     * Prints a message indicating whether the task was already marked or unmarked.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xmtan1"},"content":"     * @param isDone true if the task is to be marked as done, false if otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xmtan1"},"content":"    public static void printTaskDone(boolean isDone) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xmtan1"},"content":"        if (isDone) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"Task already marked as done!\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xmtan1"},"content":"        } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"Task already marked as undone!\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xmtan1"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xmtan1"},"content":"     * @param tasks The current list of tasks to display.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xmtan1"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xmtan1"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xmtan1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"There are no tasks to complete, yay!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xmtan1"},"content":"        } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"Here\u0027s your list of tasks:\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xmtan1"},"content":"            while (i \u003c tasks.size()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xmtan1"},"content":"                System.out.println(i + 1 + \".\" + tasks.get(i));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xmtan1"},"content":"                i++;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xmtan1"},"content":"     * Prints the list of tasks that match the search.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xmtan1"},"content":"     * @param tasks The list of tasks that match the search","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xmtan1"},"content":"    public static void printFoundTasks (ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xmtan1"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xmtan1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"Sorry, there are no tasks containing that :(\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xmtan1"},"content":"        } else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xmtan1"},"content":"            System.out.println(\"Here\u0027s the list of matching tasks:\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xmtan1"},"content":"            while (i \u003c tasks.size()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xmtan1"},"content":"                System.out.println(i + 1 + \".\" + tasks.get(i));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xmtan1"},"content":"                i++;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xmtan1"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xmtan1"},"content":"     * Prints a generic error message when the user\u0027s command is unrecognised.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xmtan1"},"content":"    public static void printError() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Sorry, I don\u0027t know what that means...\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xmtan1"},"content":"                I know what these mean though!:\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xmtan1"},"content":"                 todo\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xmtan1"},"content":"                 deadline\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xmtan1"},"content":"                 event\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xmtan1"},"content":"                 mark\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xmtan1"},"content":"                 unmark\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xmtan1"},"content":"                 delete\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"xmtan1"},"content":"                 find\\s","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"xmtan1"},"content":"                 list\"\"\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"xmtan1"},"content":"     * Prints an error message when there is a number format exception.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"xmtan1"},"content":"    public static void printNumberError() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Please input a number instead of a word!\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"xmtan1"},"content":"     * Prints an error message when there is an out-of-bounds error.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"xmtan1"},"content":"    public static void printOutOfBoundsError() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Invalid number, task does not exist!\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"xmtan1"},"content":"     * Prints an instruction message on expected format on inputs depending","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"xmtan1"},"content":"     * on the command.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"xmtan1"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"xmtan1"},"content":"     * @param command An array of words representing the command entered by the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"xmtan1"},"content":"    public static void printDescriptionError(String command) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"xmtan1"},"content":"            //String command \u003d words[0];","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"xmtan1"},"content":"            switch (command) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"xmtan1"},"content":"            case \"deadline\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"add in a deadline in this format: \\n\" + \" deadline [description] /by [deadline]\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"example: \\n deadline tutorial homework /by thursday 4pm\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"xmtan1"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"xmtan1"},"content":"            case \"event\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"add in a event in this format: \\n\" + \" event [description] /from [date/time] /\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"xmtan1"},"content":"                        \"to [date/time]\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"example: \\n event lecture /from thursday 4pm /to 6pm\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"xmtan1"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"xmtan1"},"content":"            case \"mark\", \"unmark\", \"delete\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"Please input the index of the task\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"xmtan1"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"xmtan1"},"content":"            case \"find\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"find a word in this format: \\n\" + \"find [word]\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"xmtan1"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"xmtan1"},"content":"            default:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"add in a todo in this format: \\n\" + \" todo [description]\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"xmtan1"},"content":"                System.out.println(\"example: \\n todo math homework\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"xmtan1"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"xmtan1"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"xmtan1"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"xmtan1"},"content":"     * Prints an error message when the user inputs an empty command.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"xmtan1"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"xmtan1"},"content":"    public static void printEmptyCommandError() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"xmtan1"},"content":"        System.out.println(\"Please input a valid command\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"xmtan1"},"content":"        printLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"xmtan1"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"xmtan1"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"xmtan1"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xmtan1":229}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xmtan1"},"content":"java -classpath ..\\bin Lisa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"xmtan1":1}}]
