[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"# Luka77 project template","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"instructions on how to use it.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"   first)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"1. After that, locate the `src/main/java/Luka77.java` file, right-click it, and choose `Run Luka77.main()` (if the code","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"   editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"   below as the output:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"   Hello! I\u0027m Luka77","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"   What can I do for you?","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"   Bye. Hope to see you again soon!","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":16,"-":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"# Luka77 User Guide","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":1,"-":29}},{"path":"src/main/java/UserInterface/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package UserInterface;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import static constants.Constants.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":" * The {@code Ui} class handles all user interactions, including printing messages","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":" * and reading user commands.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"public class Ui {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * Scanner for reading user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code Ui} instance and initializes the input scanner.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"    public Ui() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * Reads the user input from the command line.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @return the user\u0027s input as a string.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"        System.out.println(\"\\nEnter your command:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"     * Prints the welcome message when the application starts.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"        String chatbot_name \u003d \"Luka\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"        System.out.println(\" Hello! I\u0027m \" + chatbot_name + \"\\n\" + \" What can I do for you?\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a given message to the console.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"     * @param message the message to be displayed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a horizontal line separator.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"    public static void showLine() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lukapeng77"},"content":"     * Displays an error message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lukapeng77"},"content":"     * @param message the error message to be displayed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lukapeng77"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lukapeng77"},"content":"        System.err.println(\"Error: \" + message); // Display the error","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a message indicating that a task has been marked as done.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lukapeng77"},"content":"     * @param task the task that has been marked as done.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lukapeng77"},"content":"    public static void printMarkAsDone(Task task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"Nice! I\u0027ve marked this task as done:%n\", \"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"%s\\n\", \"\", task.toString());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a message indicating that a task has been marked as not done.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lukapeng77"},"content":"     * @param task the task that has been marked as not done.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lukapeng77"},"content":"    public static void printMarkAsUndone(Task task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"OK, I\u0027ve marked this task as not done yet:%n\", \"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"%s\\n\", \"\", task.toString());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lukapeng77"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Lukapeng77"},"content":"     * @param task      the list of tasks to display.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskCount the total number of tasks in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Lukapeng77"},"content":"    public static void printTask(ArrayList\u003cTask\u003e task, int taskCount) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Lukapeng77"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(\"You don\u0027t have any tasks yet. Need to add a new one first!\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Lukapeng77"},"content":"        } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Lukapeng77"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Lukapeng77"},"content":"                System.out.println((i + 1) + \". \" + task.get(i).toFileFormat());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a message indicating that a task has been added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Lukapeng77"},"content":"     * @param task      the task that was added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskCount the new total number of tasks in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Lukapeng77"},"content":"    public static void printAddedTask(Task task, int taskCount) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"Got it. I\u0027ve added this task:\\n\", \"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"%s\\n\", \"\", task.toString());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"Now you have %d tasks in the list.%n\", \"\", taskCount);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a message indicating that a task has been deleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Lukapeng77"},"content":"     * @param task      the task that was deleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskCount the new total number of tasks in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Lukapeng77"},"content":"    public static void printDeleteTask(Task task, int taskCount) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"Noted. I\u0027ve removed this task:\\n\", \"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"%s\\n\", \"\", task.toString());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Lukapeng77"},"content":"        System.out.printf(INDENT + \"Now you have %d tasks in the list.%n\", \"\", taskCount);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a list of tasks that match a search query.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Lukapeng77"},"content":"     * @param matchingTasks the list of tasks that match the query.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskCount     the number of matching tasks.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Lukapeng77"},"content":"    public static void printFindTask(ArrayList\u003cTask\u003e matchingTasks, int taskCount) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Lukapeng77"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(\"No matching tasks found :(\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Lukapeng77"},"content":"        } else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Lukapeng77"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Lukapeng77"},"content":"                System.out.println((i + 1) + \".\" + matchingTasks.get(i).toString());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Lukapeng77"},"content":"     * Prints a list of tasks that are due on a specific date.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Lukapeng77"},"content":"     * @param matchingTasks the list of tasks due on the specified date.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Lukapeng77"},"content":"     * @param checkDate     the date for which tasks are being checked.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Lukapeng77"},"content":"    public void showTasksByDate(ArrayList\u003cTask\u003e matchingTasks, LocalDateTime checkDate) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Lukapeng77"},"content":"        System.out.println(\"Here are the list of tasks that are due on \" + checkDate.format(OUTPUT_DATE_FORMAT) + \":\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Lukapeng77"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println((i + 1) + \". \" + matchingTasks.get(i).toFileFormat());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Lukapeng77"},"content":"        System.out.println(\"You have \" + matchingTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Lukapeng77"},"content":"     * Prints the goodbye message when the application exits.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Lukapeng77"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Lukapeng77"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Lukapeng77"},"content":"        showLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":187}},{"path":"src/main/java/command/CheckDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import exceptions.HandleException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.*;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.*;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import parser.DateParser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"import static exceptions.ExceptionTypes.INVALID_DATE;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":" * The {@code CheckDateCommand} class represents a command to check for tasks scheduled on a specific date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"public class CheckDateCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"     * The date for which tasks should be searched.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code CheckDateCommand} with the specified date string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * The date string is parsed into a {@code LocalDate} format.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @param dateTimeString The string representing the date to check.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     * @throws HandleException If the date format is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    public CheckDateCommand(String dateTimeString) throws HandleException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"            this.dateTime \u003d DateParser.parseDateTime(dateTimeString);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"            throw new HandleException(INVALID_DATE);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by searching for tasks scheduled on the specified date","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"     * and displaying the results to the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying results.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage system (not used in this command).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"     * @throws HandleException If an error occurs while processing the command.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws HandleException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"        // Search for tasks matching the specified date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasksByDate(dateTime);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"        // Display the matching tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"        ui.showTasksByDate(matchingTasks, dateTime);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":59}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import exceptions.HandleException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" * Represents an abstract command that can be executed on the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":" * Subclasses of this class implement specific commands such as adding, deleting, marking and finding tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by performing operations on the given task list, UI, and storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage for saving the updated task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     * @throws HandleException If an error occurs during execution.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws HandleException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     * Determines if this command exits the Luke application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * @return true if the command exits the program, false otherwise.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":31}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":" * The {@code DeadlineCommand} class represents a command to add a {@code Deadline} task to the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * The description of the deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"    private final String description;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     * The due date and time of the deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code DeadlineCommand} with the given task description and deadline.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * @param by          The due date and time of the deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"    public DeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command to add a new {@code Deadline} task to the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"     * The task is saved to storage and a confirmation message is displayed to the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list to which the new task is added.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage system for saving tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"        Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"            storage.writeFile(newTask.toString());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"            ui.printMessage(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printAddedTask(newTask, taskList.getTaskCount());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":55}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    int taskIndex;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     * Creates a DeleteCommand with the specified task index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskIndex The index of the task to be deleted (zero-based).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by deleting the task at the specified index,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     * displaying a message after the specified task is deleted, and saving the updated list to storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     * If the index is out of bounds, an error message is displayed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList   The task list where the task will be deleted.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printDeleteTask(taskList.getTasks().get(taskIndex), taskList.getTaskCount() - 1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"        taskList.deleteTask(taskIndex);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":41}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":" * The {@code EventCommand} class represents a command to add an {@code Event} task to the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * The description of the event task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"    private final String description;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     * The start date and time of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * The end date and time of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs an {@code EventCommand} with the given task description, start, and end times.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"    public EventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command to add a new {@code Event} task to the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"     * The task is saved to storage and a confirmation message is displayed to the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list to which the new task is added.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage system for saving tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"        Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"            storage.writeFile(newTask.toString());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"            ui.printMessage(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printAddedTask(newTask, taskList.getTaskCount());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":62}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":" * Represents a command to exit the Luka application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by displaying a goodbye message.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage that saves tasks inputted by users (not used in this command).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     * Indicates that this command exits the Luke application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * @return true, as this command is for exiting.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"        return true;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":32}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":" * Represents a command to find tasks that match a given keyword.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    String keyword;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * Creates a FindCommand with the specified keyword.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by searching for tasks containing the keyword","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * and displaying the results.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list to search in.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage that saves tasks inputted by users.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTask(keyword);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printFindTask(matchingTasks, matchingTasks.size());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":45}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":" * Represents a command to print out all tasks in the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by retrieving the tasks from TaskList,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"     * and displaying all of them.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage that saves tasks inputted by users (not used in this command).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printTask(taskList.getTasks(), taskList.getTaskCount());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":23}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"    int taskIndex;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * Creates a MarkCommand with the specified task index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskIndex The index of the task to be marked as done (zero-based).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by marking the task as done,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     * displaying a message after the task is successfully marked as done, and saving the updated list to storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * If the index is out of bounds, an error message is displayed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list containing the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage for saving the updated task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"        taskList.markTask(taskIndex);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"        Task updatedTask \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printMarkAsDone(updatedTask);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":45}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.Todo;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":" * The {@code TodoCommand} class represents a command to add a {@code Todo} task to the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * The description of the to-do task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"    private final String description;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code TodoCommand} with the given description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command to add a new {@code Todo} task to the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * The task is saved to storage and a confirmation message is displayed to the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list to which the new task is added.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage system for saving tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"            storage.writeFile(newTask.toString());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"            ui.printMessage(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printAddedTask(newTask, taskList.getTaskCount());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":48}},{"path":"src/main/java/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":" * The {@code UnknownCommand} class represents a command that is not recognized by the system.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" * It is used to handle invalid or unrecognized user inputs.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"     * The message to be displayed when an unknown command is encountered.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    private final String message;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs an {@code UnknownCommand} with the specified error message.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * @param message The error message to be displayed when an unknown command is entered.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    public UnknownCommand(String message) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by displaying an error message to inform the user that the command is unknown.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage system (not used in this command).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"        ui.printMessage(message);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":37}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":" * Represents a command to unmark a task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"    int taskIndex;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * Creates an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskIndex The index of the task to be unmarked (zero-based).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * Executes the command by marking the task as not done,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     * displaying a message after the task is successfully marked as not done, and saving the updated list to storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * If the index is out of bounds, an error message is displayed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     * @param taskList The task list containing the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     * @param storage  The storage for saving the updated task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"        taskList.unmarkTask(taskIndex);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"        Task updatedTask \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"        Ui.printMarkAsUndone(updatedTask);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":45}},{"path":"src/main/java/constants/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package constants;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import java.util.List;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":" * The {@code Constants} class defines various constants used throughout the application,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":" * including date-time formats, command keywords, and error messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"public class Constants {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"     * Line separator used for UI formatting.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    public static final String LINE_SEPARATOR \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * Indentation format used in printed messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"    public static final String INDENT \u003d \"%s\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"     * Default input date-time format for parsing user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    public static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * List of multiple supported date-time formats for user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"    public static final List\u003cDateTimeFormatter\u003e INPUT_DATE_FORMATS \u003d List.of(","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),  // Default format","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),  // Format with slashes","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")   // Format with dashes","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    );","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"     * Output date-time format for displaying task dates to users.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"    public static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\" MMM dd yyyy, hh:mm a \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"    // Command keywords","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for listing tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for searching tasks by keyword.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for marking a task as completed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for unmarking a task (marking it as incomplete).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for deleting a task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for adding a new to-do task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for adding a new deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for adding a new event task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for checking tasks on a specific date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_CHECK_DATE \u003d \"checkDate\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lukapeng77"},"content":"     * Command keyword for exiting the application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lukapeng77"},"content":"    public static final String COMMAND_GOODBYE \u003d \"bye\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lukapeng77"},"content":"    // Identifiers used for parsing task details","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lukapeng77"},"content":"     * Identifier for specifying a deadline date in user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lukapeng77"},"content":"    public static final String IDENTIFIER_BY \u003d \" /by \";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lukapeng77"},"content":"     * Identifier for specifying an event start date in user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Lukapeng77"},"content":"    public static final String IDENTIFIER_FROM \u003d \" /from \";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Lukapeng77"},"content":"     * Identifier for specifying an event end date in user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Lukapeng77"},"content":"    public static final String IDENTIFIER_TO \u003d \" /to \";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Lukapeng77"},"content":"    // Error messages and UI responses","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Lukapeng77"},"content":"     * Message displayed when an unknown command is entered.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lukapeng77"},"content":"    public static final String UNKNOWN_COMMAND \u003d","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Lukapeng77"},"content":"            \"No idea what that means, please give the command with a keyword! \" +","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lukapeng77"},"content":"                    \"List of keywords: \\\"mark\\\", \\\"unmark\\\", \\\"list\\\", \\\"todo\\\", \\\"event\\\", \" +","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Lukapeng77"},"content":"                    \"\\\"deadline\\\", \\\"delete\\\", \\\"checkDate\\\"\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Lukapeng77"},"content":"     * Error message displayed when an index is out of bounds.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Lukapeng77"},"content":"    public static final String MESSAGE_BOUNDARY_ERROR \u003d \"Out of bounds!\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Lukapeng77"},"content":"     * Error message displayed when marking a task fails.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Lukapeng77"},"content":"    public static final String MESSAGE_MARKING_ERROR \u003d \"Error marking task!\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Lukapeng77"},"content":"     * Error message displayed when deleting a task fails.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Lukapeng77"},"content":"    public static final String MESSAGE_DELETING_ERROR \u003d \"Error deleting task!\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":134}},{"path":"src/main/java/exceptions/ExceptionTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package exceptions;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"public enum ExceptionTypes {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"     * Represents a invalid input exception.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"    INVALID_INPUT(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"     * Represents a missing input exception.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    MISSING_INPUT(\"OOPS!!! The description of a task cannot be empty.\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     * Represents a missing deadline due date exception.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"    MISSING_CHECK_DATE_BODY(\"You have not provided a date and time by which to check the date. Try this: checkDate [Date Time]\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * Represents an invalid find task exception.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    INVALID_FINDTASK(\"You have not entered a task. Try this: find [task]\"),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     * Represents an incorrect date and time format exception.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"    INCORRECT_DATE_AND_TIME_FORMAT(\"Date Or Time Format Provided Is Incorrect. Try in the following formats: \\\"yyyy-mm-dd HHmm\\\", \\\"dd-mm-yyyy HHmm\\\", \\\"dd/mm/yyyy HHmm\\\"\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     * Represents an invalid date exception.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"    INVALID_DATE(\"You have entered an invalid date. Try in this format: yyyy-mm-dd\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"     * The error message associated with the exception type.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"    private final String message;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs an ExceptionType with a specific message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"     * @param message The error message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    ExceptionTypes(String message) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"     * Retrieves the error message associated with the exception type.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"     * @return The error message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"    public String getMessage() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"        return this.message;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":57}},{"path":"src/main/java/exceptions/HandleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package exceptions;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"public class HandleException extends Exception {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"     * The type of exception that occurred.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"    protected ExceptionTypes exception;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs an HandleException with a specified exception type.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"     * @param exception The specific exception type.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"    public HandleException(ExceptionTypes exception) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"        super(exception.getMessage()); // Set message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"        this.exception \u003d exception;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":18}},{"path":"src/main/java/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package parser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import exceptions.HandleException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import static exceptions.ExceptionTypes.*;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"import static constants.Constants.INPUT_DATE_FORMATS;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"public class DateParser {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object, supporting multiple formats.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * @param dateTimeString The user input string representing date and time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * @return A {@code LocalDateTime} object if parsing succeeds.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     * @throws HandleException If none of the supported formats match the input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws HandleException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"        for (DateTimeFormatter formatter : INPUT_DATE_FORMATS) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"            try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"                return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"                // Try the next format","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"        // If no format worked, throw a HandleException","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"        throw new HandleException(INCORRECT_DATE_AND_TIME_FORMAT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":32}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import taskmanager.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import exceptions.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import command.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import static constants.Constants.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"import static exceptions.ExceptionTypes.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":" * The {@code Parser} class is responsible for processing user input and","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":" * converting it into executable commands.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"public class Parser {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * The task list that holds the current tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     * The user interface component for interaction with the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"    private final Ui ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code Parser} object that takes in a task list and user interface.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @param tasklist The list of tasks to be managed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    public Parser(TaskList tasklist, Ui ui) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"     * @param userInput The raw user input string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"     * @return A {@code Command} object corresponding to the input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"     * @throws HandleException If the input is invalid or missing required details.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"    public Command parse(String userInput) throws HandleException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"        String[] details;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"        // Check for exit and list commands before processing further.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"        if (type.equals(COMMAND_GOODBYE)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_LIST)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"        // Handle error message for empty description.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"        else if (parts.length \u003c 2 || parts[1].isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"            throw new HandleException(MISSING_INPUT);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_TODO)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"            return new TodoCommand(parts[1]);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_DEADLINE)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lukapeng77"},"content":"            details \u003d parts[1].split(IDENTIFIER_BY, 2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lukapeng77"},"content":"            LocalDateTime by \u003d DateParser.parseDateTime(details[1]);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lukapeng77"},"content":"            return new DeadlineCommand(details[0], by);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_EVENT)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lukapeng77"},"content":"            details \u003d parts[1].split(IDENTIFIER_FROM, 2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lukapeng77"},"content":"            String[] durations \u003d details[1].split(IDENTIFIER_TO, 2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lukapeng77"},"content":"            LocalDateTime from \u003d DateParser.parseDateTime(durations[0]);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lukapeng77"},"content":"            LocalDateTime to \u003d DateParser.parseDateTime(durations[1]);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lukapeng77"},"content":"            return new EventCommand(details[0], from, to);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_MARK)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lukapeng77"},"content":"            return processMarkCommand(userInput);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_UNMARK)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lukapeng77"},"content":"            return processUnmarkCommand(userInput);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_DELETE)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lukapeng77"},"content":"            return processDeleteCommand(userInput);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_FIND)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lukapeng77"},"content":"            return processFindCommand(userInput);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lukapeng77"},"content":"        } else if (type.equals(COMMAND_CHECK_DATE)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lukapeng77"},"content":"            return processCheckDateCommand(userInput);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lukapeng77"},"content":"        } else {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lukapeng77"},"content":"            throw new HandleException(INVALID_INPUT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lukapeng77"},"content":"     * Processes a mark command to mark a task as completed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lukapeng77"},"content":"     * @param userInput The raw user input string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lukapeng77"},"content":"     * @return A {@code MarkCommand} if the input is valid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lukapeng77"},"content":"    private Command processMarkCommand(String userInput) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lukapeng77"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lukapeng77"},"content":"            if (taskIndex \u003e 0 \u0026\u0026 taskIndex \u003c\u003d tasklist.getTasks().size()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Lukapeng77"},"content":"                return new MarkCommand(taskIndex - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lukapeng77"},"content":"            } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Lukapeng77"},"content":"                System.out.println(MESSAGE_BOUNDARY_ERROR);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Lukapeng77"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(MESSAGE_MARKING_ERROR);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Lukapeng77"},"content":"        return new UnknownCommand(UNKNOWN_COMMAND);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Lukapeng77"},"content":"     * Processes an unmark command to mark a task as incomplete.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Lukapeng77"},"content":"     * @param userInput The raw user input string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Lukapeng77"},"content":"     * @return An {@code UnmarkCommand} if the input is valid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Lukapeng77"},"content":"    private Command processUnmarkCommand(String userInput) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Lukapeng77"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Lukapeng77"},"content":"            if (taskIndex \u003e 0 \u0026\u0026 taskIndex \u003c\u003d tasklist.getTasks().size()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Lukapeng77"},"content":"                return new UnmarkCommand(taskIndex - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Lukapeng77"},"content":"            } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Lukapeng77"},"content":"                System.out.println(MESSAGE_BOUNDARY_ERROR);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Lukapeng77"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(MESSAGE_MARKING_ERROR);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Lukapeng77"},"content":"        return new UnknownCommand(UNKNOWN_COMMAND);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Lukapeng77"},"content":"     * Processes a delete command to remove a task from the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Lukapeng77"},"content":"     * @param userInput The raw user input string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Lukapeng77"},"content":"     * @return A {@code DeleteCommand} if the input is valid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Lukapeng77"},"content":"    private Command processDeleteCommand(String userInput) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Lukapeng77"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Lukapeng77"},"content":"            if (taskIndex \u003e 0 \u0026\u0026 taskIndex \u003c\u003d tasklist.getTasks().size()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Lukapeng77"},"content":"                return new DeleteCommand(taskIndex - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Lukapeng77"},"content":"            } else {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Lukapeng77"},"content":"                System.out.println(MESSAGE_BOUNDARY_ERROR);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Lukapeng77"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(MESSAGE_DELETING_ERROR);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Lukapeng77"},"content":"        return new UnknownCommand(UNKNOWN_COMMAND);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Lukapeng77"},"content":"     * Processes a find command to search for tasks containing a keyword.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Lukapeng77"},"content":"     * @param userInput The raw user input string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Lukapeng77"},"content":"     * @return A {@code FindCommand} if the input is valid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Lukapeng77"},"content":"    private Command processFindCommand(String userInput) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Lukapeng77"},"content":"            if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Lukapeng77"},"content":"                throw new HandleException(INVALID_FINDTASK);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Lukapeng77"},"content":"            String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Lukapeng77"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Lukapeng77"},"content":"                throw new HandleException(INVALID_FINDTASK);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Lukapeng77"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Lukapeng77"},"content":"        } catch (HandleException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Lukapeng77"},"content":"        return new UnknownCommand(UNKNOWN_COMMAND);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Lukapeng77"},"content":"     * Processes a check date command to search for tasks scheduled on a specific date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Lukapeng77"},"content":"     * @param userInput The raw user input string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Lukapeng77"},"content":"     * @return A {@code CheckDateCommand} if the input is valid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Lukapeng77"},"content":"    private Command processCheckDateCommand(String userInput) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Lukapeng77"},"content":"            if (userInput.length() \u003c\u003d 10) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Lukapeng77"},"content":"                throw new HandleException(MISSING_CHECK_DATE_BODY);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Lukapeng77"},"content":"            String dateTimeString \u003d userInput.substring(10).trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Lukapeng77"},"content":"            if (dateTimeString.isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Lukapeng77"},"content":"                throw new HandleException(MISSING_CHECK_DATE_BODY);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Lukapeng77"},"content":"            return new CheckDateCommand(dateTimeString);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Lukapeng77"},"content":"        } catch (HandleException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Lukapeng77"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Lukapeng77"},"content":"        return new UnknownCommand(UNKNOWN_COMMAND);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":194}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import parser.DateParser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"import java.io.File;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":" * The {@code Storage} class handles reading, writing, and managing task data in a file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":" * It ensures persistent storage of tasks by saving and loading them from the specified file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"public class Storage {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * The file path where tasks are stored.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code Storage} instance with the specified file path.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     * @param filePath the file path where tasks will be stored.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"     * Creates the task file if it does not exist, along with its parent directories.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"     * @throws IOException if an I/O error occurs while creating the file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"        // Ensure the parent directories exist (if there are any)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"        if (file.getParentFile() !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"        // Create the file if it doesn\u0027t already exist","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"            file.createNewFile();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"     * Writes a new task entry to the file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"     * @param input the task information to be written to the file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"     * @throws IOException if an I/O error occurs during file writing.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"    public void writeFile(String input) throws IOException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, true)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"            fw.append(input).append(System.lineSeparator());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lukapeng77"},"content":"     * Loads tasks from the file and returns them as an {@code ArrayList}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lukapeng77"},"content":"     * @return an {@code ArrayList} of tasks retrieved from the file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lukapeng77"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lukapeng77"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lukapeng77"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lukapeng77"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lukapeng77"},"content":"            try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lukapeng77"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lukapeng77"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lukapeng77"},"content":"                    Task task \u003d parseLineToTask(line);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lukapeng77"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lukapeng77"},"content":"                        loadedTasks.add(task);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lukapeng77"},"content":"                    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lukapeng77"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lukapeng77"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lukapeng77"},"content":"                System.out.println(\"Unable to read tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lukapeng77"},"content":"        return loadedTasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lukapeng77"},"content":"     * Saves the current task list to the file, overwriting existing content.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lukapeng77"},"content":"     * @param tasks the list of tasks to be saved.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lukapeng77"},"content":"     * @throws IOException if an I/O error occurs during file writing.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lukapeng77"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lukapeng77"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath, false)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lukapeng77"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lukapeng77"},"content":"                writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Lukapeng77"},"content":"     * Parses a line from the file and converts it into a {@code Task} object.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Lukapeng77"},"content":"     * @param userInput a string representing a stored task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Lukapeng77"},"content":"     * @return a {@code Task} object parsed from the input line, or {@code null} if parsing fails.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Lukapeng77"},"content":"    private Task parseLineToTask(String userInput) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Lukapeng77"},"content":"        String[] parts \u003d userInput.split(\" \\\\| \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Lukapeng77"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Lukapeng77"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Lukapeng77"},"content":"            switch (type) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Lukapeng77"},"content":"            case \"T\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lukapeng77"},"content":"                task \u003d new Todo(parts[2].trim());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Lukapeng77"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lukapeng77"},"content":"            case \"D\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Lukapeng77"},"content":"                LocalDateTime by \u003d DateParser.parseDateTime(parts[3].trim());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Lukapeng77"},"content":"                task \u003d new Deadline(parts[2].trim(), by);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Lukapeng77"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Lukapeng77"},"content":"            case \"E\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Lukapeng77"},"content":"                LocalDateTime from \u003d DateParser.parseDateTime(parts[3]);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Lukapeng77"},"content":"                LocalDateTime to \u003d DateParser.parseDateTime(parts[4]);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Lukapeng77"},"content":"                task \u003d new Event(parts[2].trim(), from, to);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Lukapeng77"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Lukapeng77"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Lukapeng77"},"content":"                boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Lukapeng77"},"content":"                task.setDone(isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Lukapeng77"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Lukapeng77"},"content":"            System.err.println(\"Failed to parse line into task: \" + userInput);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Lukapeng77"},"content":"        return task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":136}},{"path":"src/main/java/taskmanager/Luka.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package taskmanager;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import UserInterface.Ui;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import command.Command;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import exceptions.HandleException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"import parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.Task;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":" * The {@code Luka} class serves as the main entry point for the task manager application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":" * It initializes the required components, handles user interactions, and manages task storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"public class Luka {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * The main method that starts the task manager application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     * It initializes the storage, task list, user interface, and command parser.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"     * The program runs in a loop, continuously accepting and executing user commands until an exit command is issued.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     * @throws HandleException If an error occurs while processing user commands.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * @throws IOException     If an error occurs while reading or writing to the storage file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    public static void main(String[] args) throws HandleException, IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"        // Initialize storage and load existing tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"        Storage storage \u003d new Storage(\"data/luka.txt\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"        TaskList taskList \u003d new TaskList(loadedTasks); // Initialize the task list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"        Ui ui \u003d new Ui(); // Component for user interactions.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"        Parser parser \u003d new Parser(taskList, ui);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"        // Display a welcome message","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"            // Create file if it does not exist and load tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"            storage.createFile();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"            for (Task task : loadedTasks) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"                taskList.addTask(task);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"            ui.showError(\"Could not load tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"        // Main application loop","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"            String userInput \u003d ui.readCommand(); // Read user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"            Command command \u003d parser.parse(userInput); // Parse the input into a command","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"            command.execute(taskList, ui, storage); // Execute the command","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"            storage.save(taskList.getTasks()); // Save the updated task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"            isExit \u003d command.isExit(); // Check if the exit command was issued","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":60}},{"path":"src/main/java/taskmanager/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package taskmanager;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import tasktypes.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":" * The {@code TaskList} class manages a list of tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" * It provides methods to add, remove, mark, unmark, and find tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"public class TaskList {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"     * A list of tasks managed by this task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code TaskList} instance with a given list of tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * @param tasks an {@code ArrayList} of {@code Task} objects to be managed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * @return an {@code ArrayList} of {@code Task} objects.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"        return tasks;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"     * @return the total number of tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"     * @param task the {@code Task} object to be added.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"     * @param index the index of the task to be marked as done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lukapeng77"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lukapeng77"},"content":"     * @param index the index of the task to be marked as not done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lukapeng77"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lukapeng77"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lukapeng77"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lukapeng77"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lukapeng77"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lukapeng77"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lukapeng77"},"content":"     * Finds tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lukapeng77"},"content":"     * @param keyword the search keyword.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lukapeng77"},"content":"     * @return an {@code ArrayList} of matching {@code Task} objects.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lukapeng77"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lukapeng77"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lukapeng77"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lukapeng77"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lukapeng77"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lukapeng77"},"content":"        return matchingTasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lukapeng77"},"content":"     * Finds tasks that are scheduled on the given date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lukapeng77"},"content":"     * @param date the date to search for tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Lukapeng77"},"content":"     * @return an {@code ArrayList} of matching {@code Task} objects.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Lukapeng77"},"content":"    public ArrayList\u003cTask\u003e findTasksByDate(LocalDateTime date) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Lukapeng77"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Lukapeng77"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Lukapeng77"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Lukapeng77"},"content":"                if (((Deadline) task).getBy().equals(date)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Lukapeng77"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Lukapeng77"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Lukapeng77"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Lukapeng77"},"content":"                if (((Event) task).getFrom().equals(date) || ((Event) task).getTo().equals(date)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Lukapeng77"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Lukapeng77"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Lukapeng77"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Lukapeng77"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lukapeng77"},"content":"        return matchingTasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":117}},{"path":"src/main/java/tasktypes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package tasktypes;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import static constants.Constants.*;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":" * Represents a deadline task with a specific due date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" * A {@code DeadLine} object encapsulates the details of a task that needs to be done before a specific date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a {@code DeadLine} with the specified task description and due date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * @param by          The deadline date and time for the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the deadline date and time for the task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * @return The deadline as a LocalDateTime.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"        return by;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representing the deadline task with its status, description and deadline.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), description, by.format(OUTPUT_DATE_FORMAT));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representing the deadline task with its status, description and deadline.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"        return \"  [D]\" + super.toString() + \" (by: \" + by.format(INPUT_DATE_FORMAT) + \")\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":53}},{"path":"src/main/java/tasktypes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package tasktypes;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":"import static constants.Constants.*;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":" * An {@code Event} object encapsulates the details of a task that occurs over a period defined by a start and end time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs an {@code Event} with the specified task description, start time, and end time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the start date and time for the event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     * @return The start date and time as a LocalDateTime.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"        return from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the end date and time for the event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"     * @return The end date and time as a LocalDateTime.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"        return to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the string representation of the event task in a format suitable for file storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"     * The String format \"E\" indicates an event task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representation of the event task for file storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", getStatusIcon(), description, from.format(OUTPUT_DATE_FORMAT), to.format(OUTPUT_DATE_FORMAT));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the string representation of the event task, including its status (done or not done),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"     * description, and the period over which it occurs (from start time to end time).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representation of the event task, including status, description, and period.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lukapeng77"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lukapeng77"},"content":"        return \"  [E]\" + super.toString() + \" (from: \" + from.format(INPUT_DATE_FORMAT) + \" to: \" + to.format(INPUT_DATE_FORMAT) + \")\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":68}},{"path":"src/main/java/tasktypes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package tasktypes;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":" * Represents a generic task in the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":" * This class serves as a base class for different types of tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":" * such as todos, deadlines, and events.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"public class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"    protected String description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a new Task with the given description. By default, the task is not done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"     * @param description The text description of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"        return description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"     * Returns a status icon indicating whether the task is done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representing a check mark if done, or a space if not done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lukapeng77"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lukapeng77"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lukapeng77"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lukapeng77"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lukapeng77"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lukapeng77"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lukapeng77"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lukapeng77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lukapeng77"},"content":"     * Sets the done status of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lukapeng77"},"content":"     * @param isDone True if the task is done, false otherwise.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lukapeng77"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lukapeng77"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lukapeng77"},"content":"     * Formats the task for file storage, including its done status and description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representation of the task suitable for file storage.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lukapeng77"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lukapeng77"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lukapeng77"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lukapeng77"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lukapeng77"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + this.getDescription();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":82}},{"path":"src/main/java/tasktypes/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lukapeng77"},"content":"package tasktypes;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lukapeng77"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lukapeng77"},"content":" * Represents a Todo task that does not have a specific deadline or time range.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lukapeng77"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lukapeng77"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lukapeng77"},"content":"     * Constructs a Todo task with a description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lukapeng77"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lukapeng77"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the string representation of the Todo task in a file-friendly format.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representing the Todo task in a file-friendly format.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lukapeng77"},"content":"     * Adds the to-do type identifier \"[T]\" before the standard task representation.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lukapeng77"},"content":"        return String.format(\"[T][%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lukapeng77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lukapeng77"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lukapeng77"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lukapeng77"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lukapeng77"},"content":"     * @return A string representing the Todo task with its status and description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lukapeng77"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lukapeng77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lukapeng77"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lukapeng77"},"content":"        return \"  [T]\" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lukapeng77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lukapeng77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":36}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lukapeng77"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Luka77.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lukapeng77"},"content":"java -classpath ..\\bin Luka77 \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lukapeng77"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Luka77.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lukapeng77"},"content":"java -classpath ../bin Luka77 \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Lukapeng77":2,"-":36}}]
