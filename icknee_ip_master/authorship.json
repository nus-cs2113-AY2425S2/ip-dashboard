[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"# Bird project","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"This is a project for a greenfield Java project. It\u0027s made with the _Duke_ template provided. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"## Quick Start","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"1. Ensure you have `Java 17` or above installed in your Computer.  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"2. Download the latest `.jar` file from [here](https://github.com/icknee/ip/releases/tag/A-Release).  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"3. Copy the file to the folder you want to use as the home folder for your Bird.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar bird.jar` command to run the application.  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" If the setup is correct, you should see something like this as the output:  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"  \u003cpre\u003e  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"  Hello! I\u0027m bird","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"         .-.  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"        /\u0027v\u0027\\  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"       (/   \\)  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"      \u003d\u0027\u003d\"\u003d\"\u003d\u003d\u003d\u003c  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"         |_|","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":" \u003c/pre\u003e ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"You may refer to the [user guide](https://icknee.github.io/ip/) for details of each command.","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"-":4,"icknee":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"# Bird User Guide","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":" \u003cpre\u003e   .-.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"  /\u0027v\u0027\\  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":" (/   \\)  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"\u003d\u0027\u003d\"\u003d\"\u003d\u003d\u003d\u003c  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"   |_|","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":" \u003c/pre\u003e ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"Bird is a desktop app for managing tasks,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"optimized for use via a Command Line Interface (CLI). If you can type fast, Bird can ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"get your task management done faster than traditional GUI apps. The app also auto saves and loads ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"via a txt file.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"- [Features](#Features)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"  - [To Dos](#To-Dos)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"  - [Deadlines](#Deadlines)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"  - [Events](#Events)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"  - [List](#List)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"  - [Mark](#mark)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"  - [Unmark](#unmark)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"  - [Delete](#delete)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"  - [Find](#find)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"  - [Exit](#exit)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"- [Command Summary](#Command-Summary)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"## Features","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"\u003e **Notes about the command format:**  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"\u003e Words bounded in square brackets `[]` are parameters to be supplied by the user. You may write an integer","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"or word(s) for the parameter, depending on the command.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"\u003e ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"\u003e e.g. in `todo [TASK_DESCRIPTION],` `TASK_DESCRIPTION` is a parameter which can be","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"used as `todo read a book`.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"e.g. in `mark [TASK_NUMBER]`, `TASK_NUMBER` is a parameter which can be used as  `mark 1`.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"## Adding tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"You can add 3 kinds of tasks:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"- To dos","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"- Deadlines","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"- Events  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"### To Dos","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"Add a task with only the task description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"Format: `todo [TASK_DESCRIPTION]`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"Example: `todo read a book`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"The output should reflect the task added as well as","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"the updated task count as shown below.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"task added!","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"  [T][ ] read a book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"you now have 1 task in the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"```  ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"### Deadlines","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"Add a task with the task description and its deadline.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"icknee"},"content":"Format: `deadline [TASK_DESCRIPTION] /by [DEADLINE]`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"icknee"},"content":"Example: `deadline CS2113 lecture quiz /by this friday 12pm`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"icknee"},"content":"The output should reflect the task added as well as","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"icknee"},"content":"the updated task count as shown below.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"icknee"},"content":"task added!","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"icknee"},"content":"  [D][ ] CS2113 lecture quiz (by: this friday 12pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"icknee"},"content":"you now have 2 tasks in the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"```  ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"icknee"},"content":"### Events","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"icknee"},"content":"Add an event with the event description, when its from, and when it is till.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"icknee"},"content":"Format: `event [EVENT_DESCRIPTION] /from [TIME_ITS_FROM] /to [TIME_ITS_TILL]`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"icknee"},"content":"Example: `event CS2113 lecture /from Friday 4pm /to 6pm`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"icknee"},"content":"The output should reflect the event added as well as","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"icknee"},"content":"the updated task count as shown below.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"icknee"},"content":"task added!","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"icknee"},"content":"  [E][ ] CS2113 lecture (from: Friday 4pm to: 6pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"icknee"},"content":"you now have 3 tasks in the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"icknee"},"content":"## List","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"icknee"},"content":"View the lists of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"icknee"},"content":"Format: `list`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"icknee"},"content":"\u003eNote: any string that is written after `list` will be ignored.  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"icknee"},"content":"\u003e e.g. `list random string` will be treated as `list`","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"icknee"},"content":"The output should reflect the tasks stored in the file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"icknee"},"content":"1. [T][ ] read a book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"icknee"},"content":"2. [D][ ] CS2113 lecture quiz (by: this friday 12pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"icknee"},"content":"3. [E][ ] CS2113 lecture (from: Friday 4pm to: 6pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"icknee"},"content":"## Mark","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"icknee"},"content":"Mark a task as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"icknee"},"content":"Format: `mark [TASK_NUMBER]`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"icknee"},"content":"\u003e Note: `[TASK_NUMBER]` should be a positive integer that is lesser or equal to the total","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"icknee"},"content":"\u003e number of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"icknee"},"content":"Example: `mark 2`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"icknee"},"content":"The output should show that the task has been marked as done","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"icknee"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"icknee"},"content":"  [D][X] CS2113 lecture quiz (by: this friday 12pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"icknee"},"content":"```  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"icknee"},"content":"## Unmark","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"icknee"},"content":"Mark a task as incomplete.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"icknee"},"content":"Format: `unmark [TASK_NUMBER]`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"icknee"},"content":"\u003e Note: `[TASK_NUMBER]` should be a positive integer that is lesser or equal to the total","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"icknee"},"content":"\u003e number of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"icknee"},"content":"Example: `unmark 2`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"icknee"},"content":"The output should show that the task has been marked as incomplete","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"icknee"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"icknee"},"content":"  [D][ ] CS2113 lecture quiz (by: this friday 12pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"icknee"},"content":"```  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"icknee"},"content":"## Delete","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"icknee"},"content":"Delete a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"icknee"},"content":"Format: `delete [TASK_NUMBER]`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"icknee"},"content":"\u003e Note: `[TASK_NUMBER]` should be a positive integer that is lesser or equal to the total","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"icknee"},"content":"\u003e number of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"icknee"},"content":"Example: `delete 1`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"icknee"},"content":"The output should show which task has been deleted as well as the updated task count.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"icknee"},"content":"task deleted!","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"icknee"},"content":"\t[T][ ] read a book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"icknee"},"content":"you now have 2 tasks in the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"icknee"},"content":"## Find","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"icknee"},"content":"Find a task using a keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"icknee"},"content":"Format: `find [keyword]`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"icknee"},"content":"\u003eNote: The keyword is case-sensitive","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"icknee"},"content":"Example: `find CS2113`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"icknee"},"content":"The output should show which task has been deleted as well as the updated task count.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"icknee"},"content":"Here are the tasks containing CS2113:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"icknee"},"content":"\t[D][ ] CS2113 lecture quiz (by: this friday 12pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"icknee"},"content":"\t[E][ ] CS2113 lecture (from: Friday 4pm to: 6pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"icknee"},"content":"Additional example : `find quiz`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"icknee"},"content":"Here are the tasks containing quiz:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"icknee"},"content":"\t[D][ ] CS2113 lecture quiz (by: this friday 12pm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"icknee"},"content":"```  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"icknee"},"content":"  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"icknee"},"content":"## Exit","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"icknee"},"content":"Exit the program.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"icknee"},"content":"Format: `bye`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"icknee"},"content":"\u003eNote: any string that is written after `bye` will be ignored.  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"icknee"},"content":"\u003e e.g. `bye random string` will be treated as `bye`  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"icknee"},"content":"The program should exit after printing out a farewell message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"icknee"},"content":"Bye bye!","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"icknee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"icknee"},"content":"## Saving the data","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"icknee"},"content":"Bird data are saved in the hard disk automatically after","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"icknee"},"content":"any command that changes the data. There is no need to save manually.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"icknee"},"content":"## Editing the data file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"icknee"},"content":"Bird data are saved automatically as a txt file `[JAR file location]/data/tasklist.txt.` ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"icknee"},"content":"Advanced users are welcome to update data directly by editing that data file. However, the formating","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"icknee"},"content":"has to be followed in order to load the data properly. Changes made by editing the data file will only","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"icknee"},"content":"be reflected when you restart the program.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"icknee"},"content":"\u003eNote: If corrupted file warning shows up, you have to edit the data file directly by changing the content to the correct format or clearing the file.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"icknee"},"content":"## Command Summary","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"icknee"},"content":"| **Action**    | **Format, Examples**                                                                                                             |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"icknee"},"content":"|---------------|----------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"icknee"},"content":"| **To Dos**    | `todo [TASK_DESCRIPTION]` \u003cbr/\u003e e.g., `todo read a book`                                                                         |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"icknee"},"content":"| **Deadlines** | `deadline [TASK_DESCRIPTION] /by [DEADLINE]` \u003cbr/\u003e e.g., `deadline CS2113 lecture quiz /by this friday 12pm`                     |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"icknee"},"content":"| **Events**    | `event [EVENT_DESCRIPTION] /from [TIME_ITS_FROM] /to [TIME_ITS_TILL]`\u003cbr/\u003e e.g., `event CS2113 lecture /from Friday 4pm /to 6pm` |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"icknee"},"content":"| **List**      | `list`                                                                                                                           |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"icknee"},"content":"| **Mark**      | `mark [TASK_NUMBER]`\u003cbr/\u003e e.g., `mark 2`                                                                                         |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"icknee"},"content":"| **Unmark**    | `mark [TASK_NUMBER]`\u003cbr/\u003e e.g., `unmark 2`                                                                                       |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"icknee"},"content":"| **Delete**    | `delete [TASK_NUMBER]`\u003cbr/\u003e e.g., `delete 1`                                                                                     |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"icknee"},"content":"| **Find**      | `find [KEYWORD]`\u003cbr/\u003e e.g., `find CS2113`                                                                                        |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"icknee"},"content":"| **Exit**      | `bye`                                                                                                                            |","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"-":21,"icknee":197}},{"path":"src/main/java/bird/Bird.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.commands.Command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidFileException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":" * The Bird class represents the main entry point of the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":" * It initializes the storage, task list, and user interface. It also","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":" * continuously reads user commands, parses them, executes the corresponding actions,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":" * and handles potential exceptions.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"public class Bird {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"     * Constructs a new Bird application with the specified file path for storing tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"     * This constructor initializes the user interface, loads the saved tasks from the file,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"     * and sets up the task list. Any errors during initialization such as missing file or","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"     * invalid commands are caught and printed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"     * @param filePath the path to the file that contains the saved tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"    public Bird(String filePath) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"            taskList \u003d new TaskList(storage.loadFileToArray());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"            taskList.setTaskCount(storage.getTaskCount());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"        } catch (FileNotFoundException | InvalidCommandException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"            Ui.printWithLines(e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"     * Runs the main loop of the Bird application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"     * This method prints a greeting to the user, then enters a loop where it reads user commands,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"     * parses them to determine the intended action, executes the command, and handles any exceptions.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"     * The loop continues until a command signals the application to exit.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"    public void run() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"        Ui.printGreeting();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"            Command c \u003d null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"            try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"                c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"                c.execute(taskList, storage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"            } catch (InvalidCommandException | IOException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"                Ui.printWithLines(e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"icknee"},"content":"            try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"                continue;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"icknee"},"content":"     * The main entry point for the Bird application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"icknee"},"content":"     * Although this application primarily uses a Scanner for interactive user input,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"icknee"},"content":"     * the command-line arguments (provided via the {@code args} parameter) are still included","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"icknee"},"content":"     * to meet the Java entry point signature requirements.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"icknee"},"content":"     * @param args an array of command-line arguments. These are not directly involved in the","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"icknee"},"content":"     *             application\u0027s interactive input process.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"icknee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"icknee"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"icknee"},"content":"            new Bird(\"data/tasklist.txt\").run();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"icknee"},"content":"        } catch (InvalidFileException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"icknee"},"content":"            Ui.printWithLines(e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"icknee":92}},{"path":"src/main/java/bird/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.commands.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.task.Deadlines;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":" * The Parser class is responsible for converting raw user input into executable Command objects.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":" *  If the input does not follow the expected format, an {@code InvalidCommandException} is thrown.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"public class Parser {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"    private static final int TODO_DESCRIPTION_INDEX \u003d 5;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"    private static final int DEADLINE_DESCRIPTION_INDEX \u003d 9;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"    private static final int EVENT_DESCRIPTION_INDEX \u003d 6;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"    public static final int MIN_MARK_COMMAND_LENGTH \u003d 6;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"    public static final int MIN_TODO_COMMAND_LENGTH \u003d 6;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"    private static final int MIN_DELETE_COMMAND_LENGTH \u003d 8;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"    private static final int MIN_FIND_COMMAND_LENGTH \u003d 6;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     * Parses the full command string input by the user and returns the corresponding Command object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     * The method extracts the action keyword from the input and, depending on the command type,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"     * parses additional arguments as necessary. It supports commands such as:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"list\" - returns a ListCommand.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"mark\" / \"unmark\" - returns a MarkCommand with the specified task number.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"todo\" - returns an AddCommand for a todo task using the task description.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"deadline\" - returns an AddCommand for a deadline task using the task description and deadline time.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"event\" - returns an AddCommand for an event task using the task description, start time, and end time.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"delete\" - returns a DeleteCommand with the task number to be removed.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"bye\" - returns an ExitCommand to terminate the application.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"     *   \u003cli\u003e\"find\" - returns a FindCommand with the specified keyword.\u003c/li\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"     * @param fullCommand the complete command string entered by the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"     * @return the corresponding Command object based on the parsed input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"     * @throws InvalidCommandException if the command is unknown, incomplete, or improperly formatted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"    public static Command parse(String fullCommand) throws InvalidCommandException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"        String action \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"        Command c;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"        switch (action) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"        case \"list\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"            c \u003d new ListCommand();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"        case \"mark\", \"unmark\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"            if (fullCommand.length() \u003c MIN_MARK_COMMAND_LENGTH) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"                throw new InvalidCommandException(\"mark \u003ctask number\u003e\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"            c \u003d new MarkCommand((action.equals(\"mark\")), fullCommand.substring(fullCommand.indexOf(\" \") + 1));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"            if (fullCommand.length() \u003c MIN_TODO_COMMAND_LENGTH) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"                throw new InvalidCommandException(\"todo \u003ctask\u003e\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"            String toDoDescription \u003d fullCommand.substring(TODO_DESCRIPTION_INDEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"            c \u003d new AddCommand(toDoDescription);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"                int byIndex \u003d fullCommand.indexOf(\"/\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"icknee"},"content":"                String deadlineDescription \u003d fullCommand.substring(DEADLINE_DESCRIPTION_INDEX, byIndex - 1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"                String by \u003d fullCommand.substring(byIndex + 4);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"                Deadlines newDeadlines \u003d new Deadlines(deadlineDescription, by);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"                c \u003d new AddCommand(deadlineDescription, by);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"icknee"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"icknee"},"content":"                throw new InvalidCommandException(\"deadline \u003ctask\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"icknee"},"content":"        case \"event\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"icknee"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"icknee"},"content":"                int fromIndex \u003d fullCommand.indexOf(\"/\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"icknee"},"content":"                int toIndex \u003d fullCommand.indexOf(\"/\", fromIndex + 1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"icknee"},"content":"                String eventDescription \u003d fullCommand.substring(EVENT_DESCRIPTION_INDEX, fromIndex - 1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"icknee"},"content":"                String eventFrom \u003d fullCommand.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"icknee"},"content":"                String eventTo \u003d fullCommand.substring(toIndex + 4);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"icknee"},"content":"                c \u003d new AddCommand(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"icknee"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"icknee"},"content":"                throw new InvalidCommandException(\"event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"icknee"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"icknee"},"content":"            if (fullCommand.length() \u003c MIN_DELETE_COMMAND_LENGTH) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"icknee"},"content":"                throw new InvalidCommandException(\"delete \u003ctask number\u003e\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"icknee"},"content":"            c \u003d new DeleteCommand(fullCommand.substring(fullCommand.indexOf(\" \") + 1));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"icknee"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"icknee"},"content":"            c \u003d new ExitCommand();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"icknee"},"content":"        case \"find\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"icknee"},"content":"            if (fullCommand.length() \u003c MIN_FIND_COMMAND_LENGTH) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"icknee"},"content":"                throw new InvalidCommandException(\"find \u003ckeyword\u003e\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"icknee"},"content":"            String keyword;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"icknee"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"icknee"},"content":"                keyword \u003d fullCommand.substring(fullCommand.indexOf(\" \") + 1);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"icknee"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"icknee"},"content":"                throw new InvalidCommandException(\"find \u003ckeyword\u003e\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"icknee"},"content":"            c \u003d new FindCommand(keyword);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"icknee"},"content":"        default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"icknee"},"content":"            throw new InvalidCommandException(\"Unknown command: \" + fullCommand + \"\\n\" + \"\\t\" + \"refer to the user guide for the list of commands!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"icknee"},"content":"        return c;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":110}},{"path":"src/main/java/bird/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":" * The Ui class handles all user interface operations in the Bird application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":" * It provides methods to read user input from the console and print various types of messages.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"public class Ui {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"    public static final String INDENT \u003d \"  \";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"     * Reads a line of user input from the console.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"     * @return the command inputted by the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"        return line;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"     * Prints a message with a tab indentation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"     * @param message the message to be printed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"    public static void printWithIndent(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"        System.out.println(\"\\t\" + message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"     * Prints a message enclosed by horizontal separator lines.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"     * @param message the message to be printed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"    public static void printWithLines(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"        printWithIndent(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"     * Prints an ASCII art representation of a bird with indent.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"    public static void printBird() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"        System.out.println(\"\\t      .-.\\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"                \"\\t     /\u0027v\u0027\\\\\\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"                \"\\t    (/   \\\\)\\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"                \"\\t   \u003d\u0027\u003d\\\"\u003d\\\"\u003d\u003d\u003d\u003c\\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"                \"\\t      |_|\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"     * Prints a greeting message along with the ASCII bird art.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"     * This method initiates the user interface by welcoming the user","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"     * and asking what service they require.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"icknee"},"content":"    public static void printGreeting() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"icknee"},"content":"        printWithIndent(\"Hello! I\u0027m bird\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"icknee"},"content":"        printBird();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"icknee"},"content":"        printWithIndent(\"What can I do for you?\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"icknee"},"content":"     * Prints a horizontal separator line.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"icknee"},"content":"    public static void printLine() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"icknee"},"content":"        System.out.println(\"\\t\" + \"____________________________________________________________\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"icknee"},"content":"     * Prints a farewell message enclosed by horizontal separator lines.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"icknee"},"content":"    public static void printGoodBye() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"icknee"},"content":"        printWithLines(\"Bye bye!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"icknee"},"content":"     * Prints the complete list of tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"icknee"},"content":"     * Each task is printed on a separate line, numbered consecutively.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"icknee"},"content":"     * The output is enclosed by horizontal separator lines.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"icknee"},"content":"     * @param taskList  the TaskList containing the tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"icknee"},"content":"     * @param taskCount the number of tasks to print.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"icknee"},"content":"    public static void printTaskList(TaskList taskList, Integer taskCount) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"icknee"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"icknee"},"content":"            printWithIndent(i + 1 + \". \" + taskList.get(i).toString());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"icknee"},"content":"     * Prints the details of the new task and the updated task count.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"icknee"},"content":"     * @param taskCount the current count of tasks (before the new task is added).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"icknee"},"content":"     * @param newTask   the task that has been added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"icknee"},"content":"    public static void printNewTaskAdded(int taskCount, Task newTask) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"icknee"},"content":"        printWithIndent(\"task added!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"icknee"},"content":"        printWithIndent(INDENT + newTask.toString());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"icknee"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"icknee"},"content":"            printWithIndent(\"you now have 1 task in the list\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"icknee"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"icknee"},"content":"            printWithIndent(\"you now have \" + (taskCount + 1) + \" tasks in the list\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"icknee"},"content":"     * Prints a confirmation that a task has been marked as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"icknee"},"content":"     * It displays the task details after marking it as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"icknee"},"content":"     * @param newTask the task that has been marked as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"icknee"},"content":"    public static void printTaskAsDone(Task newTask) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"icknee"},"content":"        printWithIndent(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"icknee"},"content":"        printWithIndent(INDENT + newTask.toString());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"icknee"},"content":"     * Prints a confirmation that a task has been marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"icknee"},"content":"     * It displays the task details after marking it as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"icknee"},"content":"     * @param newTask the task that has been marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"icknee"},"content":"    public static void printTaskAsNotDone(Task newTask) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"icknee"},"content":"        printWithIndent(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"icknee"},"content":"        printWithIndent(INDENT + newTask.toString());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"icknee"},"content":"     * Prints a notification that a task has been deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"icknee"},"content":"     * It displays the details of the deleted task and the updated task count.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"icknee"},"content":"     * @param deletedTask the task that has been deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"icknee"},"content":"     * @param taskCount   the count of tasks before deletion.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"icknee"},"content":"    public static void printTaskAsDeleted(Task deletedTask, int taskCount) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"icknee"},"content":"        printWithIndent(\"task deleted!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"icknee"},"content":"        printWithIndent(INDENT + deletedTask.toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"icknee"},"content":"        if (taskCount \u003d\u003d 2) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"icknee"},"content":"            printWithIndent(\"you now have 1 task in the list\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"icknee"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"icknee"},"content":"            printWithIndent(\"you now have \" + (taskCount - 1) + \" tasks in the list\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"icknee"},"content":"        printLine();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"icknee":175}},{"path":"src/main/java/bird/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import bird.task.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" *  The AddCommand class represents a command that adds a new task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":" *  It supports creating three types of tasks:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":" *  \u003cul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":" *  \u003cli\u003eToDo tasks, initialized with a description.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":" *  \u003cli\u003eDeadline tasks, initialized with a description and a deadline time.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":" *  \u003cli\u003eEvent tasks, initialized with a description, a starting time, and an ending time.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":" *  \u003c/ul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":" *  When executed, this command creates the appropriate task object,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":" *  adds it to the task list, displays a confirmation to the user,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":" *  updates the task count, and persists the updated list via the storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"    String type;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"    String description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"    String by;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"    String from;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"    String to;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"     * Constructs an AddCommand for a ToDo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     * @param toDoDescription the description of the ToDo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"    public AddCommand(String toDoDescription) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"        this.type \u003d \"ToDos\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"        this.description \u003d toDoDescription;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"     * Constructs an AddCommand for a Deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"     * @param deadlineDescription the description of the deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"     * @param by                  the deadline time for the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"    public AddCommand(String deadlineDescription, String by) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"        this.type \u003d \"Deadlines\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"        this.description \u003d deadlineDescription;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"     * Constructs an AddCommand for an Event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"     * @param eventDescription the description of the event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"     * @param eventFrom        the starting time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"     * @param eventTo          the ending time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"    public AddCommand(String eventDescription, String eventFrom, String eventTo) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"        this.type \u003d \"Events\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"        this.description \u003d eventDescription;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"icknee"},"content":"        this.from \u003d eventFrom;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"        this.to \u003d eventTo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"icknee"},"content":"     * Executes the add command by creating a new task based on the command type and adding it to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"icknee"},"content":"     * The method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"icknee"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eDetermines the task type and creates the corresponding task instance.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eAdds the newly created task to the task list.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eDisplays a confirmation message to the user via the user interface.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eUpdates the task count in the task list.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eSaves the updated task list to persistent storage.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"icknee"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"icknee"},"content":"     * @param taskList the task list to which the new task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"icknee"},"content":"     * @param storage  the storage component used for saving the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"icknee"},"content":"     * @throws IOException             if an error occurs during file operations.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"icknee"},"content":"     * @throws InvalidCommandException if an unrecognized task type is encountered.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"icknee"},"content":"    public void execute(TaskList taskList, Storage storage) throws IOException, InvalidCommandException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"icknee"},"content":"        Task newTask;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"icknee"},"content":"        switch (type) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"icknee"},"content":"        case \"ToDos\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"icknee"},"content":"            newTask \u003d new ToDos(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"icknee"},"content":"        case \"Deadlines\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"icknee"},"content":"            newTask \u003d new Deadlines(description, by);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"icknee"},"content":"        case \"Events\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"icknee"},"content":"            newTask \u003d new Events(description, from, to);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"icknee"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"icknee"},"content":"        default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"icknee"},"content":"            throw new InvalidCommandException(\"Error adding new task\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"icknee"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"icknee"},"content":"        Ui.printNewTaskAdded(taskList.getTaskCount(), newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"icknee"},"content":"        taskList.addTaskCount();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"icknee"},"content":"        storage.saveFile(taskList, storage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":106}},{"path":"src/main/java/bird/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":" * The abstract Command class serves as the blueprint for all command types in the Bird application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" *  Each subclass of Command must provide an implementation for the {@code execute} method. This method","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":" *  defines the specific behavior of the command by manipulating the task list and interacting with the storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"*/","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"    Boolean isExit \u003d false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"     * Executes the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"     * This method must be overridden by all child classes. It defines how the command will affect the","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     * {@code TaskList} and the {@code Storage}. Exceptions related to command validity or I/O issues may be thrown.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     * @param taskList the task list that the command will manipulate","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"     * @param storage  the storage system used for persisting task data","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"     * @throws InvalidCommandException if the command is invalid or cannot be processed","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"     * @throws IOException             if an I/O error occurs during execution","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"    public abstract void execute(TaskList taskList, Storage storage) throws InvalidCommandException, IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     * Checks if the execution of this command signals the application to exit.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"     * @return {@code true} if the command indicates an exit request; {@code false} otherwise","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"        return isExit;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":41}},{"path":"src/main/java/bird/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" *  The DeleteCommand class is responsible for deleting a task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":" *  This command takes a task number as input and deletes the corresponding task from","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":" *  the TaskList.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"    int taskNumber;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"     * Constructs a DeleteCommand with the specified task number.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     * @param taskNumberString the 1-indexed position of the task to be deleted.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"    public DeleteCommand(String taskNumberString) throws InvalidCommandException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"        int taskNumber;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"            taskNumber \u003d Integer.parseInt(taskNumberString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"            throw new InvalidCommandException(\"Please enter a valid task number\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"     * Executes the delete command by removing the specified task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"     * The method performs the following operations:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eValidates that the provided task number is within the valid range of existing tasks.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eIf the task number is invalid, an {@link InvalidCommandException} is thrown.\u003c/li\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eIf valid, prints a confirmation message that the task is deleted.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eRemoves the task from the TaskList.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eUpdates the task count.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eSaves the updated TaskList to persistent storage.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"     * @param taskList the TaskList from which the task should be removed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"     * @param storage  the Storage used to persist the updated TaskList.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"     * @throws InvalidCommandException if the specified task number is not valid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"     * @throws IOException             if an error occurs during the saving of the TaskList.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"    public void execute(TaskList taskList, Storage storage) throws InvalidCommandException, IOException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e taskList.getTaskCount()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"            throw new InvalidCommandException(\"Task does not exist\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"        Ui.printTaskAsDeleted(taskList.get(taskNumber - 1), taskList.getTaskCount());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"        taskList.SubtractTaskCount();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"        storage.saveFile(taskList, storage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":63}},{"path":"src/main/java/bird/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":" *  The ExitCommand class represents a command that terminates the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"    public ExitCommand() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"     * This method prints a goodbye message to the user and signals","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"     * the application to exit by setting the exit flag.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     * @param taskList the task list (unused in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     * @param storage  the storage component (unused in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"        Ui.printGoodBye();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":31}},{"path":"src/main/java/bird/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"import static bird.Ui.INDENT;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" * The FindCommand class filters tasks in a TaskList based on a provided keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":" *  When executed, this command searches through all tasks and prints only those tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":" *  whose description contains the specified keyword. Note that the keyword is case-sensitive.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"    String keyword;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"     * Constructs a new FindCommand with the specified keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     * @param keyword the keyword to search within task descriptions.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"     * Executes the find command which searches the task list for tasks containing the keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"     * The method displays a header for the results, iterates through the task list, and for each task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     * whose description contains the keyword, prints the task with proper indentation. The results are","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"     * enclosed between horizontal lines for clarity.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"     * @param taskList the list of tasks to be searched.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"     * @param storage  the storage system (unused in this command).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"        Ui.printLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"        Ui.printWithIndent(\"Here are the tasks containing \" + keyword + \":\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"                Ui.printWithIndent(INDENT + task.toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"        Ui.printLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":50}},{"path":"src/main/java/bird/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":" * The ListCommand class is responsible for printing all tasks from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":" *  When executed, this command retrieves the current number of tasks from the","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":" *  TaskList and utilizes the Ui class to print a formatted list of all tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"     * Executes the list command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"     * This method prints the entire task list using the {@link Ui#printTaskList(TaskList, Integer)}","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"     * method and displays the current tasks with their corresponding indices.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"     * @param taskList the TaskList from which tasks are retrieved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     * @param storage  the Storage component (unused in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"        Ui.printTaskList(taskList, taskList.getTaskCount());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":28}},{"path":"src/main/java/bird/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import bird.task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" * The MarkCommand class is responsible for marking a specific task as done or not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":" *  This command toggles the status of a task in the TaskList based on the provided flag.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":" *  It prints the corresponding message via the Ui and saves the updated state using Storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"    boolean isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"    int taskNumber;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     * Constructs a MarkCommand with the specified status and task number.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     * @param isDone     the status to set for the task; {@code true} marks it as done, {@code false} marks it as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"     * @param taskNumberString the 1-indexed position of the task in the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"    public MarkCommand(boolean isDone, String taskNumberString) throws InvalidCommandException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"        int TaskNumber;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"            TaskNumber \u003d Integer.parseInt(taskNumberString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"            throw new InvalidCommandException(\"Please enter a valid task number\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"        this.taskNumber \u003d TaskNumber;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"     * Executes the mark command by setting the specified task\u0027s status to done or not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"     * The method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eValidates if the task number is within the range of existing tasks in the TaskList.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eMarks the task as done or not done by updating the task\u0027s status.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eDisplays a corresponding message to the user using the Ui.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"     *     \u003cli\u003eSaves the updated TaskList to persistent storage.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"     * @param taskList the TaskList containing the task to be marked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"     * @param storage  the Storage component used to persist the updated TaskList.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"     * @throws InvalidCommandException if the task number is out of bounds.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"     * @throws IOException             if an error occurs during the saving process.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"    public void execute(TaskList taskList, Storage storage) throws InvalidCommandException, IOException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e taskList.getTaskCount()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"            throw new InvalidCommandException(\"Task does not exist\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"        taskList.get(taskNumber - 1).setDone(isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"        if (isDone) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"            Ui.printTaskAsDone(taskList.get(taskNumber - 1));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"            Ui.printTaskAsNotDone(taskList.get(taskNumber - 1));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"        storage.saveFile(taskList, storage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":67}},{"path":"src/main/java/bird/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.exceptions;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"    public InvalidCommandException(String message){","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"        super(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"icknee":7}},{"path":"src/main/java/bird/exceptions/InvalidFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.exceptions;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"public class InvalidFileException extends RuntimeException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"    public InvalidFileException(String message) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"        super(message);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"icknee":7}},{"path":"src/main/java/bird/storage/FileLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidFileException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.task.Deadlines;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import bird.task.Events;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"import bird.task.Task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"import bird.task.ToDos;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":" * The FileLoader class provides methods for parsing task data from persistent storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":" *  It reads lines from a file and converts each line into a corresponding Task object","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":" *  (ToDo, Deadline, or Event) based on a predefined format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"public class FileLoader {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"    private static final int DESCRIPTION_INDEX \u003d 8;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"    private static final int ISDONE_INDEX \u003d 4;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     * Parses a single line from the storage file and adds the corresponding Task object to the provided list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"     * The type of task is determined by the first character of the line:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"     * \u003cli\u003e\u0027T\u0027 - ToDo task\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"     * \u003cli\u003e\u0027D\u0027 - Deadline task\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"     * \u003cli\u003e\u0027E\u0027 - Event task\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"     * @param taskList the ArrayList to which the parsed Task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     * @param line a single line from the storage file representing a task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"     * @throws InvalidCommandException if the command format is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"     * @throws InvalidFileException if an error occurs while parsing the line or if the file format is corrupted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"    public static void lineToArray(ArrayList\u003cTask\u003e taskList, String line) throws InvalidFileException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"        char taskType \u003d line.charAt(0);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"                loadToDoToArray(taskList, line);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"                break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"                loadDeadlineToArray(taskList, line);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"                break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"                loadEventToArray(taskList, line);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"                break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"            default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"                throw new InvalidFileException(\"Data file is likely to be corrupted.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"            throw new InvalidFileException(\"Data file is likely to be corrupted.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"     * Parses a line representing an Event task and adds the resulting Event object to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"     * The line is expected to have a specific format that includes the event description,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"     * starting time (after \"/from\"), and ending time (after \"/to\"). The task\u0027s completion","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"     * status is determined by the character at the ISDONE index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"icknee"},"content":"     * @param taskList the ArrayList to which the Event task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"     * @param line a line from the storage file representing an Event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"icknee"},"content":"    private static void loadEventToArray(ArrayList\u003cTask\u003e taskList, String line) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"icknee"},"content":"        int fromIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"icknee"},"content":"        int toIndex \u003d line.indexOf(\"/\", fromIndex + 1);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"icknee"},"content":"        String description \u003d line.substring(DESCRIPTION_INDEX, fromIndex - 1);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"icknee"},"content":"        String from \u003d line.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"icknee"},"content":"        String to \u003d line.substring(toIndex + 4);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"icknee"},"content":"        Events newEvents \u003d new Events(description, from, to);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"icknee"},"content":"        newEvents.setDone(line.charAt(ISDONE_INDEX) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"icknee"},"content":"        taskList.add(newEvents);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"icknee"},"content":"     * Parses a line representing a Deadline task and adds the resulting Deadline object to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"icknee"},"content":"     * The line is expected to have a specific format that includes the deadline description and","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"icknee"},"content":"     * deaedline time (after \"/by\"). The task\u0027s completion status is determined by the character at the ISDONE index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"icknee"},"content":"     * @param taskList the ArrayList to which the Event task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"icknee"},"content":"     * @param line a line from the storage file representing an Event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"icknee"},"content":"    private static void loadDeadlineToArray(ArrayList\u003cTask\u003e taskList, String line) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"icknee"},"content":"        int byIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"icknee"},"content":"        String description \u003d line.substring(DESCRIPTION_INDEX, byIndex - 1);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"icknee"},"content":"        String by \u003d line.substring(byIndex + 4);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"icknee"},"content":"        Deadlines newDeadline \u003d new Deadlines(description, by);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"icknee"},"content":"        newDeadline.setDone(line.charAt(ISDONE_INDEX) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"icknee"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"icknee"},"content":"     * Parses a line representing a ToDo task and adds the resulting ToDo object to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"icknee"},"content":"     * The line is expected to contain only the ToDo task description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"icknee"},"content":"     * The task\u0027s completion status is determined by the character at the ISDONE index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"icknee"},"content":"     * @param taskList the ArrayList to which the Event task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"icknee"},"content":"     * @param line a line from the storage file representing an Event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"icknee"},"content":"    private static void loadToDoToArray(ArrayList\u003cTask\u003e taskList, String line) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"icknee"},"content":"        String description \u003d line.substring(DESCRIPTION_INDEX);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"icknee"},"content":"        ToDos newToDos \u003d new ToDos(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"icknee"},"content":"        newToDos.setDone(line.charAt(ISDONE_INDEX) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"icknee"},"content":"        taskList.add(newToDos);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"icknee":112}},{"path":"src/main/java/bird/storage/FileSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import bird.task.Deadlines;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import bird.task.Events;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import bird.task.ToDos;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":" * The FileSaver class provides utility methods for appending task information to the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":" *  It contains static methods for saving different types of tasks (Event, Deadline, and ToDo) in a","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":" *  predefined format to the file \"data/tasklist.txt\". Each method opens the file in append mode,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":" *  writes the task data in a specific format, and then closes the file writer to ensure that the data","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":" *  is properly saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"public class FileSaver {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"     * Saves an event task to the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"     * The method appends the event task information to \"data/tasklist.txt\" in the following format:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"     * \"E | [status icon] | [description] /from [starting time] /to [ending time]\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"     * @param task the Events object representing the event task to be saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"     * @throws IOException if an error occurs while writing to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"    static void saveEventToFile(Events task) throws IOException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"        FileWriter fw \u003d new FileWriter(\"data/tasklist.txt\", true);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"        fw.write(\"E | \" + task.getStatusIcon() + \" | \" + task.getDescription() + \" /from \" + task.getFrom() + \" /to \" + task.getTo() + \"\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"        fw.close();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"     * Saves a deadline task to the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"     * The method appends the deadline task information to \"data/tasklist.txt\" in the following format:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"     * \"D | [status icon] | [description] /by [deadline]\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"     * @param task the Deadlines object representing the deadline task to be saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"     * @throws IOException if an error occurs while writing to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"    static void saveDeadlineToFile(Deadlines task) throws IOException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"        FileWriter fw \u003d new FileWriter(\"data/tasklist.txt\", true);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"        fw.write(\"D | \" + task.getStatusIcon() + \" | \" + task.getDescription() + \" /by \" + task.getBy() + \"\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"        fw.close();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"     * Saves a ToDo task to the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"     * The method appends the ToDo task information to \"data/tasklist.txt\" in the following format:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"     * \"T | [status icon] | [description]\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"     * @param task the ToDos object representing the ToDo task to be saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"     * @throws IOException if an error occurs while writing to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"    static void saveToDoToFile(ToDos task) throws IOException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"        FileWriter fw \u003d new FileWriter(\"data/tasklist.txt\", true);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"        fw.write(\"T | \" + task.getStatusIcon() + \" | \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"        fw.close();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"icknee":63}},{"path":"src/main/java/bird/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"import bird.exceptions.InvalidFileException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"import bird.task.*;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"import static bird.storage.FileLoader.lineToArray;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":" * The Storage class is responsible for managing the persistent storage of tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":" *  This class handles the creation of the storage file and its parent directories,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":" *  saving the current state of a task list to the file, loading tasks from the file,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":" *  and determining the number of tasks stored in the file. It delegates the task-specific","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":" *  file writing operations to the FileSaver class methods based on the type of task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"public class Storage {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"    private String filepath;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"     * It initializes the storage by setting the file path and ensuring that the file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"     * (along with any required parent directories) exists.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"     * @param filepath the path to the file used for storing tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"        createFile();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"icknee"},"content":"     * Creates the storage file and any necessary parent directories.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"icknee"},"content":"     * If the file or its parent directories do not exist, this method attempts to create them.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"icknee"},"content":"     * If an I/O error occurs during the creation process, an {@link InvalidFileException} is thrown.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"icknee"},"content":"    private void createFile() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"icknee"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"icknee"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"icknee"},"content":"            f.getParentFile().mkdirs(); // Create parent directories","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"icknee"},"content":"            f.createNewFile();          // Create actual file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"icknee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"icknee"},"content":"            throw new InvalidFileException(\"Could not create file\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"icknee"},"content":"     * Clears the contents of the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"icknee"},"content":"     * This private method opens the file for writing, effectively erasing the current content.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"icknee"},"content":"     * @throws IOException if an I/O error occurs while opening the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"icknee"},"content":"    private void clearFile() throws IOException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"icknee"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"icknee"},"content":"        fw.close();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"icknee"},"content":"     * Saves the current state of the task list to the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"icknee"},"content":"     * The method first clears the existing file contents, then iterates over the tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"icknee"},"content":"     * in the provided {@code TaskList}. Depending on the task type (ToDos, Deadlines, or Events),","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"icknee"},"content":"     * it delegates the task-specific file saving to the corresponding methods in the FileSaver class.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"icknee"},"content":"     * Finally, the updated task list is persisted to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"icknee"},"content":"     * @param taskList the TaskList containing the tasks to be saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"icknee"},"content":"     * @param storage  the Storage instance used to perform the clear operation on the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"icknee"},"content":"     * @throws IOException if an error occurs during file operations.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"icknee"},"content":"    public void saveFile(TaskList taskList, Storage storage) throws IOException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"icknee"},"content":"        storage.clearFile();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"icknee"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"icknee"},"content":"            if (taskList.get(i) instanceof ToDos) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"icknee"},"content":"                FileSaver.saveToDoToFile((ToDos) taskList.get(i));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"icknee"},"content":"            } else if (taskList.get(i) instanceof Deadlines) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"icknee"},"content":"                FileSaver.saveDeadlineToFile((Deadlines) taskList.get(i));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"icknee"},"content":"            } else if (taskList.get(i) instanceof Events) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"icknee"},"content":"                FileSaver.saveEventToFile((Events) taskList.get(i));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"icknee"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"icknee"},"content":"     * Loads tasks from the storage file into an ArrayList.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"icknee"},"content":"     * This method reads the file line by line using a Scanner, and for each line,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"icknee"},"content":"     * it calls the {@code lineToArray} method from the FileLoader utility to parse","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"icknee"},"content":"     * the line into a Task object which is then added to an ArrayList.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"icknee"},"content":"     * @return an ArrayList of Task objects loaded from the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"icknee"},"content":"     * @throws FileNotFoundException     if the storage file is not found.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"icknee"},"content":"     * @throws InvalidCommandException   if a task in the file is improperly formatted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"icknee"},"content":"    public ArrayList\u003cTask\u003e loadFileToArray() throws FileNotFoundException, InvalidCommandException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"icknee"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"icknee"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"icknee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"icknee"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"icknee"},"content":"            lineToArray(taskList, s.nextLine());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"icknee"},"content":"        return taskList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"icknee"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"icknee"},"content":"     * Retrieves the count of tasks stored in the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"icknee"},"content":"     * This method scans the storage file line by line and increments a counter for each non-empty line.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"icknee"},"content":"     * The resulting count represents the number of tasks saved in the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"icknee"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"icknee"},"content":"     * @return the number of tasks stored in the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"icknee"},"content":"     * @throws FileNotFoundException if the storage file is not found.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"icknee"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"icknee"},"content":"    public int getTaskCount() throws FileNotFoundException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"icknee"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"icknee"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"icknee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"icknee"},"content":"        while (s.hasNext() \u0026\u0026 s.nextLine() !\u003d \"\") {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"icknee"},"content":"            taskCount++;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"icknee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"icknee"},"content":"        return taskCount;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"icknee":133}},{"path":"src/main/java/bird/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"    protected String by;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"        super(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"        return by;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"icknee":19}},{"path":"src/main/java/bird/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"public class Events extends Task{","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"    protected String from;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"    protected String to;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"        super(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"        return from;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"        return to;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"icknee":25}},{"path":"src/main/java/bird/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"        return description;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"icknee":28}},{"path":"src/main/java/bird/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"public class TaskList {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"    private Integer taskCount \u003d 0;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"    public void addTaskCount() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"icknee"},"content":"        this.taskCount +\u003d 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"icknee"},"content":"    public void SubtractTaskCount() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"        this.taskCount -\u003d 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"icknee"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"icknee"},"content":"        return tasks.get(i);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"icknee"},"content":"    public void remove(int i) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"icknee"},"content":"        tasks.remove(i);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"icknee"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"icknee"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"icknee"},"content":"    public void setTaskCount(int taskCount) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"icknee"},"content":"        this.taskCount \u003d taskCount;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"icknee"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"icknee"},"content":"        return taskCount;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"icknee":40}},{"path":"src/main/java/bird/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"package bird.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"public class ToDos extends Task{","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"    public ToDos(String description) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"        super(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"    @Override","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"icknee"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"icknee":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"icknee"},"content":"todo write books","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"icknee"},"content":"deadline hw1 /by monday 7pm","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"icknee"},"content":"event party /from 8pm /to the sun rises","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"icknee"},"content":"list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"icknee"},"content":"mark 3","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"icknee"},"content":"list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"icknee"},"content":"delete 2","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"icknee"},"content":"list","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"icknee"},"content":"deadline read chp 1 /by fri","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"delete 1","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"icknee"},"content":"list","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"icknee"},"content":"bye","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"icknee":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"icknee"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bird\\*.java ..\\src\\main\\java\\bird\\task\\*.java","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"icknee"},"content":"java -classpath ..\\bin bird.Bird \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":19,"icknee":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"icknee"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ..\\src\\main\\java\\bird\\*.java ..\\src\\main\\java\\bird\\task\\*.java","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"icknee"},"content":"java -classpath ../bin bird.Bird \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":36,"icknee":2}}]
