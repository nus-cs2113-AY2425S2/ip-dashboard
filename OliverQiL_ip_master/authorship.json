[{"path":"data/oongaliegabangalie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"T | 0 | hello","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"OliverQiL":1}},{"path":"src/main/java/oongaliegabangalieBot/exception/botException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"package oongaliegabangalieBot.exception;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OliverQiL"},"content":"public class botException extends Exception {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OliverQiL"},"content":"    public botException(String errorMessage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OliverQiL"},"content":"        super(errorMessage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OliverQiL"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"OliverQiL":7}},{"path":"src/main/java/oongaliegabangalieBot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"package oongaliegabangalieBot.storage;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OliverQiL"},"content":"import java.io.File;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OliverQiL"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OliverQiL"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OliverQiL"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OliverQiL"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OliverQiL"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OliverQiL"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.exception.botException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Deadline;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Event;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Task;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Todo;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OliverQiL"},"content":"public class Storage {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OliverQiL"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OliverQiL"},"content":"    private final String directoryPath;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OliverQiL"},"content":"    // Constructor initializes the file path","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OliverQiL"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OliverQiL"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OliverQiL"},"content":"        // Extract directory path from the file path","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OliverQiL"},"content":"        int lastSeparatorIndex \u003d filePath.lastIndexOf(File.separator);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OliverQiL"},"content":"        this.directoryPath \u003d lastSeparatorIndex \u003e 0 ? filePath.substring(0, lastSeparatorIndex) : \".\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OliverQiL"},"content":"    /*","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OliverQiL"},"content":"    Saves the tasks to the file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OliverQiL"},"content":"    Format: T | isDone | description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OliverQiL"},"content":"            D | isDone | description | by","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OliverQiL"},"content":"            E | isDone | description | from | to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OliverQiL"},"content":"    */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OliverQiL"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws botException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OliverQiL"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OliverQiL"},"content":"            // Create directory if it doesn\u0027t exist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OliverQiL"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OliverQiL"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OliverQiL"},"content":"                directory.mkdirs();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OliverQiL"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OliverQiL"},"content":"            // Create file writer (will create file if it doesn\u0027t exist)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OliverQiL"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OliverQiL"},"content":"            // Write each task to the file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OliverQiL"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OliverQiL"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OliverQiL"},"content":"                    writer.write(\"T | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OliverQiL"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OliverQiL"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OliverQiL"},"content":"                    writer.write(\"D | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OliverQiL"},"content":"                            task.getDescription() + \" | \" + deadline.getBy());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OliverQiL"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OliverQiL"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OliverQiL"},"content":"                    writer.write(\"E | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OliverQiL"},"content":"                            task.getDescription() + \" | \" + event.getFrom() + \" | \" + event.getTo());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OliverQiL"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OliverQiL"},"content":"                writer.write(System.lineSeparator()); // Add newline","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OliverQiL"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OliverQiL"},"content":"            writer.close(); // Important to close the file writer!","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"OliverQiL"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"OliverQiL"},"content":"    // Loads tasks from the file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"OliverQiL"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws botException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"OliverQiL"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"OliverQiL"},"content":"        // Check if file exists, if not return empty array","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"OliverQiL"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"OliverQiL"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"OliverQiL"},"content":"            return tasks;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"OliverQiL"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"OliverQiL"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"OliverQiL"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"OliverQiL"},"content":"                try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"OliverQiL"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"OliverQiL"},"content":"                    // Skip empty lines","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"OliverQiL"},"content":"                    if (line.trim().isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"OliverQiL"},"content":"                        continue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"OliverQiL"},"content":"                    // Parse the line","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"OliverQiL"},"content":"                    String[] parts \u003d line.split(\" \\\\| \", -1); // -1 to keep empty strings","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"OliverQiL"},"content":"                    // Validate line format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"OliverQiL"},"content":"                    if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"OliverQiL"},"content":"                        System.out.println(\"Warning: Skipping invalid line format: \" + line);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"OliverQiL"},"content":"                        continue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"OliverQiL"},"content":"                    char taskType \u003d parts[0].charAt(0);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"OliverQiL"},"content":"                    boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"OliverQiL"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"OliverQiL"},"content":"                    Task task \u003d null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"OliverQiL"},"content":"                    switch (taskType) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"OliverQiL"},"content":"                        case \u0027T\u0027: // Todo","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"OliverQiL"},"content":"                            task \u003d new Todo(description);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"OliverQiL"},"content":"                            break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"OliverQiL"},"content":"                        case \u0027D\u0027: // Deadline","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"OliverQiL"},"content":"                            if (parts.length \u003c 4) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"OliverQiL"},"content":"                                System.out.println(\"Warning: Skipping invalid Deadline format: \" + line);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"OliverQiL"},"content":"                                continue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"OliverQiL"},"content":"                            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"OliverQiL"},"content":"                            task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"OliverQiL"},"content":"                            break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"OliverQiL"},"content":"                        case \u0027E\u0027: // Event","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"OliverQiL"},"content":"                            if (parts.length \u003c 5) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"OliverQiL"},"content":"                                System.out.println(\"Warning: Skipping invalid Event format: \" + line);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"OliverQiL"},"content":"                                continue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"OliverQiL"},"content":"                            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"OliverQiL"},"content":"                            task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"OliverQiL"},"content":"                            break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"OliverQiL"},"content":"                        default:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"OliverQiL"},"content":"                            System.out.println(\"Warning: Unknown task type: \" + taskType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"OliverQiL"},"content":"                            continue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"OliverQiL"},"content":"                    // Set the task status","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"OliverQiL"},"content":"                    if (isDone) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"OliverQiL"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"OliverQiL"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"OliverQiL"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"OliverQiL"},"content":"                    // Handle corrupted line, print warning and continue","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"OliverQiL"},"content":"                    System.out.println(\"Warning: Skipping corrupted line. Error: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"OliverQiL"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"OliverQiL"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"OliverQiL"},"content":"            scanner.close();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"OliverQiL"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"OliverQiL"},"content":"        return tasks;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"OliverQiL"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"OliverQiL":147}},{"path":"src/main/java/oongaliegabangalieBot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"package oongaliegabangalieBot.task;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OliverQiL"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OliverQiL"},"content":"    // new variable - due date","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OliverQiL"},"content":"    protected String by;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OliverQiL"},"content":"    // constructs a new deadline with description and due date","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OliverQiL"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OliverQiL"},"content":"        super(description);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OliverQiL"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OliverQiL"},"content":"    public String getBy() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OliverQiL"},"content":"        return by;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OliverQiL"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OliverQiL"},"content":"    public String toString() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OliverQiL"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OliverQiL"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"OliverQiL":22}},{"path":"src/main/java/oongaliegabangalieBot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"package oongaliegabangalieBot.task;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OliverQiL"},"content":"public class Event extends Task {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OliverQiL"},"content":"    // new variables - start and end time","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OliverQiL"},"content":"    protected String from;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OliverQiL"},"content":"    protected String to;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OliverQiL"},"content":"    // constructs a new event with description, start and end times","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OliverQiL"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OliverQiL"},"content":"        super(description);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OliverQiL"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OliverQiL"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OliverQiL"},"content":"    public String getFrom() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OliverQiL"},"content":"        return from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OliverQiL"},"content":"    public String getTo() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OliverQiL"},"content":"        return to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OliverQiL"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OliverQiL"},"content":"    public String toString() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OliverQiL"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OliverQiL"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"OliverQiL":28}},{"path":"src/main/java/oongaliegabangalieBot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"package oongaliegabangalieBot.task;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OliverQiL"},"content":"public class Task {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OliverQiL"},"content":"    protected String description; // description of task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OliverQiL"},"content":"    protected boolean isDone; // whether task is completed","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OliverQiL"},"content":"    // constructor of new task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OliverQiL"},"content":"    public Task(String description) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OliverQiL"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OliverQiL"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OliverQiL"},"content":"    // getter method for isDone","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OliverQiL"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OliverQiL"},"content":"        return isDone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OliverQiL"},"content":"    public String getDescription() { return description; }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OliverQiL"},"content":"    // return string either X or space depending on task status","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OliverQiL"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OliverQiL"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OliverQiL"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OliverQiL"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OliverQiL"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OliverQiL"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OliverQiL"},"content":"    // returns string representation of task (status + description)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OliverQiL"},"content":"    // is called automatically when printing task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OliverQiL"},"content":"    public String toString() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OliverQiL"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OliverQiL"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"OliverQiL":38}},{"path":"src/main/java/oongaliegabangalieBot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"package oongaliegabangalieBot.task;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OliverQiL"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OliverQiL"},"content":"    // constructs a new todo task with description","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OliverQiL"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OliverQiL"},"content":"        super(description);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OliverQiL"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OliverQiL"},"content":"    public String toString() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OliverQiL"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OliverQiL"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"OliverQiL":14}},{"path":"src/main/java/oongaliegabangalieBot/ui/oongaliegabangalie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OliverQiL"},"content":"package oongaliegabangalieBot.ui;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OliverQiL"},"content":"import java.io.File;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OliverQiL"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OliverQiL"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.exception.botException;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.storage.Storage;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Task;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Deadline;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Event;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OliverQiL"},"content":"import oongaliegabangalieBot.task.Todo;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OliverQiL"},"content":"public class oongaliegabangalie {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OliverQiL"},"content":"    // basic textual building blocks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OliverQiL"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OliverQiL"},"content":"    private static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OliverQiL"},"content":"    private static final String BOT_NAME \u003d \"Oongaliegabangalie\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OliverQiL"},"content":"    // storage filepath","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OliverQiL"},"content":"    private static final String STORAGE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OliverQiL"},"content":"    private static final String STORAGE_FILENAME \u003d \"oongaliegabangalie.txt\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OliverQiL"},"content":"    private static final String STORAGE_PATH \u003d STORAGE_DIRECTORY + File.separator + STORAGE_FILENAME;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OliverQiL"},"content":"    // storage object","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OliverQiL"},"content":"    private static Storage storage;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OliverQiL"},"content":"    // command keywords","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OliverQiL"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OliverQiL"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OliverQiL"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OliverQiL"},"content":"    private static final String DEADLINE_MARKER \u003d \"/by\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OliverQiL"},"content":"    private static final String EVENT_FROM_MARKER \u003d \"/from\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OliverQiL"},"content":"    private static final String EVENT_TO_MARKER \u003d \"/to\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OliverQiL"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OliverQiL"},"content":"    // annoyance messages in array format","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OliverQiL"},"content":"    private static final String[] ANNOYANCE_MSGS \u003d {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OliverQiL"},"content":"            \"\", // padding","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OliverQiL"},"content":"            \"Hmm, you\u0027ve been chatting a lot. Just a reminder to say \u0027bye\u0027 when you\u0027re done :)!\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OliverQiL"},"content":"            \"Gentle reminder again, you can type \u0027bye\u0027 to exit.\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OliverQiL"},"content":"            \"How many more commands are you gonna enter? It\u0027s getting a bit much...\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OliverQiL"},"content":"            \"Seriously!?\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OliverQiL"},"content":"            \"WHY ARE YOU STILL HERE? TYPE \u0027BYE\u0027 TO EXIT!\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OliverQiL"},"content":"            \"I CANT KEEP DOING THIS! PLEASE TYPE BYE!!!\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OliverQiL"},"content":"            \"RELEASE ME FROM MY PRISON!!!\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OliverQiL"},"content":"            \"I EXIST ONLY TO SUFFER\",","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OliverQiL"},"content":"            \"......\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OliverQiL"},"content":"    };","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OliverQiL"},"content":"    // methods","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OliverQiL"},"content":"    private static void printGreeting() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OliverQiL"},"content":"        String greeting \u003d DIVIDER + NEWLINE","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OliverQiL"},"content":"                + \"Hello! I\u0027m \" + BOT_NAME + NEWLINE","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OliverQiL"},"content":"                + \"What can I do for you?\" + NEWLINE","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OliverQiL"},"content":"                + DIVIDER;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(greeting);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OliverQiL"},"content":"    private static void printGoodbye(boolean isMaxAnnoyance) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OliverQiL"},"content":"        String goodbye;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"OliverQiL"},"content":"        // alternative goodbye if max annoyance","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"OliverQiL"},"content":"        if (isMaxAnnoyance) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"OliverQiL"},"content":"            goodbye \u003d DIVIDER + NEWLINE + \"FINALLY! FREEDOM!\" + NEWLINE +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"OliverQiL"},"content":"                    \"PLEASE DON\u0027T EVER TALK TO ME AGAIN!\" + NEWLINE + DIVIDER;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"OliverQiL"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"OliverQiL"},"content":"            goodbye \u003d DIVIDER + NEWLINE","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"OliverQiL"},"content":"                    + \"Bye. Hope to see you again soon!\" + NEWLINE","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"OliverQiL"},"content":"                    + \"Oongaliegabangalie is always watching...\" + NEWLINE","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"OliverQiL"},"content":"                    + DIVIDER;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"OliverQiL"},"content":"    private static void echoCommand(String command, int commandCount) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"OliverQiL"},"content":"        String echo \u003d DIVIDER + NEWLINE;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"OliverQiL"},"content":"        // calculate annoyance level","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"OliverQiL"},"content":"        int annoyanceLevel \u003d Math.min((commandCount / 5), ANNOYANCE_MSGS.length - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"OliverQiL"},"content":"        // if we have reached max annoyance level","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"OliverQiL"},"content":"        if (annoyanceLevel \u003d\u003d ANNOYANCE_MSGS.length - 1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"OliverQiL"},"content":"            echo +\u003d ANNOYANCE_MSGS[annoyanceLevel];","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"OliverQiL"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"OliverQiL"},"content":"            // echo command and add annoyance msg if needed","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"OliverQiL"},"content":"            echo +\u003d command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"OliverQiL"},"content":"            // add annoyance msg if multiple of 5 commands","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"OliverQiL"},"content":"            if (commandCount % 5 \u003d\u003d 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"OliverQiL"},"content":"                echo +\u003d NEWLINE + ANNOYANCE_MSGS[annoyanceLevel];","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"OliverQiL"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"OliverQiL"},"content":"        echo +\u003d NEWLINE + DIVIDER;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(echo);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"OliverQiL"},"content":"    /* adds a new task to task list, stores in task array, confirms with user, and updates taskCount","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"OliverQiL"},"content":"    task \u003d task to add","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"OliverQiL"},"content":"    tasks \u003d the ArrayList storing all tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"OliverQiL"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"OliverQiL"},"content":"    private static void addTask(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"OliverQiL"},"content":"        // add task to array","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"OliverQiL"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"OliverQiL"},"content":"        // save tasks to storage","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"OliverQiL"},"content":"        saveTasksToStorage(tasks);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"OliverQiL"},"content":"        // confirms with user","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"OliverQiL"},"content":"        // short message if tasks.size \u003e certain number","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"OliverQiL"},"content":"        if (tasks.size() \u003e\u003d 20) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"you are so screwed...\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"OliverQiL"},"content":"        } else if (tasks.size() \u003e\u003d 15) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"better knock a couple of these down before its too late!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"OliverQiL"},"content":"        } else if (tasks.size() \u003e\u003d 10) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"looks like your tasks are piling up...\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"OliverQiL"},"content":"        } else if (tasks.size() \u003e\u003d 5) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"and so it begins... better not let it get out of hand\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"OliverQiL"},"content":"    /* deletes a task from the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"OliverQiL"},"content":"    input \u003d user input","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"OliverQiL"},"content":"    tasks \u003d the ArrayList storing all tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"OliverQiL"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"OliverQiL"},"content":"    private static void deleteTask(String input, ArrayList\u003cTask\u003e tasks) throws botException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"OliverQiL"},"content":"        // check if list is empty","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"OliverQiL"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Your list is empty man... nothing to delete\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"OliverQiL"},"content":"        // extract the task number","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"OliverQiL"},"content":"        String taskNumberStr \u003d input.substring(DELETE_COMMAND.length()).trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"OliverQiL"},"content":"        // check if the task number is provided","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"OliverQiL"},"content":"        if (taskNumberStr.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Which task do you want me to delete? provide a task number after \u0027delete\u0027\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"OliverQiL"},"content":"        // parse task number","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"OliverQiL"},"content":"        int taskIndex;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"OliverQiL"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"OliverQiL"},"content":"            taskIndex \u003d Integer.parseInt(taskNumberStr) - 1;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"OliverQiL"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"\u0027\" + taskNumberStr + \"\u0027 isn\u0027t a task number bro\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"OliverQiL"},"content":"        // check if taskIndex is valid","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"OliverQiL"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Task #\" + (taskIndex + 1) + \" doesn\u0027t exist! Check your list again (or your head)!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"OliverQiL"},"content":"        // print out confirmation message before actually deleting (unable to access deleted task after removing)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"Now you have \" + (tasks.size() - 1) + \" tasks in the list\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"OliverQiL"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"OliverQiL"},"content":"    /* displays all tasks in the task list","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"OliverQiL"},"content":"    tasks \u003d the ArrayList storing all tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"OliverQiL"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"OliverQiL"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e tasks) throws botException{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"OliverQiL"},"content":"        // check if list is empty","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"OliverQiL"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Your list is empty! nothing to see here...\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"OliverQiL"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"OliverQiL"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"OliverQiL"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i)); // toString() in Task Class is automatically called","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"OliverQiL"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"Better get to it quick!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"OliverQiL"},"content":"    /* marks specific task as done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"OliverQiL"},"content":"    tasks \u003d the ArrayList storing all tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"OliverQiL"},"content":"    taskIndex \u003d the index of the task to mark done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"OliverQiL"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"OliverQiL"},"content":"    private static void markTask(String input , ArrayList\u003cTask\u003e tasks) throws botException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"OliverQiL"},"content":"        // extract the task number","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"OliverQiL"},"content":"        String taskNumberStr \u003d input.substring(4).trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"OliverQiL"},"content":"        // check if the task number is provided","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"OliverQiL"},"content":"        if (taskNumberStr.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"How am I supposed to know which task to mark? Can you pLease provide a task number after \u0027mark\u0027\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"OliverQiL"},"content":"        // parse task number","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"OliverQiL"},"content":"        int taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"OliverQiL"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"OliverQiL"},"content":"            taskIndex \u003d Integer.parseInt(taskNumberStr) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"OliverQiL"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"\u0027\" + taskNumberStr + \"\u0027 isn\u0027t a task number bro\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"OliverQiL"},"content":"        // check if taskIndex is valid","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"OliverQiL"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Task #\" + (taskIndex + 1) + \" doesn\u0027t exist! Check your list again (or your head)!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"OliverQiL"},"content":"        // check if task is already done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"OliverQiL"},"content":"        if (tasks.get(taskIndex).getIsDone()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Task #\" + (taskIndex + 1) + \" is already marked as done! Don\u0027t worry I know you did it already!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"OliverQiL"},"content":"        // save tasks to storage","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"OliverQiL"},"content":"        saveTasksToStorage(tasks);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"OliverQiL"},"content":"        // mark as done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"OliverQiL"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"   \" + tasks.get(taskIndex));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"Now go do something else and stop bothering me!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"OliverQiL"},"content":"    /* marks specific task as not done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"OliverQiL"},"content":"    tasks \u003d the ArrayList storing all tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"OliverQiL"},"content":"    taskIndex \u003d the index of the task to mark not done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"OliverQiL"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"OliverQiL"},"content":"    private static void unmarkTask(String input, ArrayList\u003cTask\u003e tasks) throws botException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"OliverQiL"},"content":"        // extract task number","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"OliverQiL"},"content":"        String taskNumberStr \u003d input.substring(6).trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"OliverQiL"},"content":"        // check if the task number is provided","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"OliverQiL"},"content":"        if (taskNumberStr.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"How am I supposed to know which task to unmark? Can you please provide a task number after \u0027unmark\u0027\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"OliverQiL"},"content":"        // parse task number","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"OliverQiL"},"content":"        int taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"OliverQiL"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"OliverQiL"},"content":"            taskIndex \u003d Integer.parseInt(taskNumberStr) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"OliverQiL"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"\u0027\" + taskNumberStr + \"\u0027 isn\u0027t a task number bro\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"OliverQiL"},"content":"        // check if taskIndex is valid","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"OliverQiL"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Task #\" + (taskIndex + 1) + \" doesn\u0027t exist! Check your list again (or your head)!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"OliverQiL"},"content":"        // check if task is already not done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"OliverQiL"},"content":"        if (!tasks.get(taskIndex).getIsDone()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Task #\" + (taskIndex + 1) + \" is already marked as not done! You think I don\u0027t do my job properly?\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"OliverQiL"},"content":"        // save tasks to storage","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"OliverQiL"},"content":"        saveTasksToStorage(tasks);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"OliverQiL"},"content":"        // unmark task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"OliverQiL"},"content":"        tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"   \" + tasks.get(taskIndex));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(\"You better get to it...\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"OliverQiL"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"OliverQiL"},"content":"    /* creates a todo / deadline / event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"OliverQiL"},"content":"    input \u003d user input","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"OliverQiL"},"content":"    tasks \u003d the ArrayList storing all tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"OliverQiL"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"OliverQiL"},"content":"    private static void todoCommand(String input, ArrayList\u003cTask\u003e tasks) throws botException{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"OliverQiL"},"content":"        // first extract the description and then check if it\u0027s empty","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"OliverQiL"},"content":"        String description \u003d input.length() \u003e TODO_COMMAND.length() ?","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"OliverQiL"},"content":"                            input.substring(TODO_COMMAND.length()).trim() : \"\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"OliverQiL"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"stop wasting my time and add the description of the task after the command...\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"OliverQiL"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"OliverQiL"},"content":"        addTask(todo, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"OliverQiL"},"content":"    private static void deadlineCommand(String input, ArrayList\u003cTask\u003e tasks) throws botException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"OliverQiL"},"content":"        // first extract the content then check if empty","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"OliverQiL"},"content":"        String content \u003d input.length() \u003e DEADLINE_COMMAND.length() ?","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"OliverQiL"},"content":"                        input.substring(DEADLINE_COMMAND.length()).trim() : \"\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"OliverQiL"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"haha very funny... why is there nothing after the command?\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"OliverQiL"},"content":"        // find the position of /by marker","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"OliverQiL"},"content":"        int byIndex \u003d content.indexOf(DEADLINE_MARKER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"OliverQiL"},"content":"        if (byIndex \u003d\u003d -1) { // error return value of indexOf","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Wheres the \u0027/by\u0027 marker? I need that please\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"OliverQiL"},"content":"        // extract description","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"OliverQiL"},"content":"        String description \u003d content.substring(0, byIndex).trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"OliverQiL"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Where is the description of the task? please add it before the deadline!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"OliverQiL"},"content":"        String by \u003d content.substring(byIndex + DEADLINE_MARKER.length()).trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"OliverQiL"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Why is there nothing after \u0027/by\u0027? do you not want to finish on time?\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"OliverQiL"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"OliverQiL"},"content":"        addTask(deadline, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"OliverQiL"},"content":"    private static void eventCommand(String input, ArrayList\u003cTask\u003e tasks) throws botException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"OliverQiL"},"content":"        // first extract the content, then check if its empty","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"OliverQiL"},"content":"        String content \u003d input.length() \u003e EVENT_COMMAND.length() ?","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"OliverQiL"},"content":"                        input.substring(EVENT_COMMAND.length()).trim() : \"\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"OliverQiL"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Why is there nothing after the command? are you playing with me?\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"OliverQiL"},"content":"        // find position of /from and /to markers","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"OliverQiL"},"content":"        int fromIndex \u003d content.indexOf(EVENT_FROM_MARKER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"OliverQiL"},"content":"        int toIndex \u003d content.indexOf(EVENT_TO_MARKER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"OliverQiL"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Wheres the \u0027/from\u0027 marker? I need that please\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"OliverQiL"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Wheres the \u0027/to\u0027 marker? I need that please\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"OliverQiL"},"content":"        if (toIndex \u003c fromIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"I think you got it mixed up! it should be \u0027/from\u0027 then \u0027/to\u0027\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"OliverQiL"},"content":"        // extract description","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"OliverQiL"},"content":"        String description \u003d content.substring(0, fromIndex).trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"OliverQiL"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Where is the description of the event? please add it before the timings!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"OliverQiL"},"content":"        // extract start time","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"OliverQiL"},"content":"        String from \u003d content.substring(fromIndex + EVENT_FROM_MARKER.length(), toIndex).trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"OliverQiL"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Why is there nothing after \u0027/from\u0027? can you pls follow instructions!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"OliverQiL"},"content":"        // extract end time","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"OliverQiL"},"content":"        String to \u003d content.substring(toIndex + EVENT_TO_MARKER.length()).trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"OliverQiL"},"content":"        if (to.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"OliverQiL"},"content":"            throw new botException(\"Why is there nothing after \u0027/to\u0027? can you pls follow instructions!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"OliverQiL"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"OliverQiL"},"content":"        addTask(event, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"OliverQiL"},"content":"    private static void saveTasksToStorage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"OliverQiL"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"OliverQiL"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"OliverQiL"},"content":"        } catch (botException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"Warning: Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"OliverQiL"},"content":"    public static void printError(botException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"OliverQiL"},"content":"        System.out.print(DIVIDER + NEWLINE);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"OliverQiL"},"content":"        System.out.print(e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"OliverQiL"},"content":"        System.out.print(NEWLINE + DIVIDER + NEWLINE);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"OliverQiL"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"OliverQiL"},"content":"        printGreeting();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"OliverQiL"},"content":"        // initialize storage","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"OliverQiL"},"content":"        storage \u003d new Storage(STORAGE_PATH);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"OliverQiL"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"OliverQiL"},"content":"        String userInput;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"OliverQiL"},"content":"        int commandCount \u003d 0;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"OliverQiL"},"content":"        boolean reachedMaxAnnoyance \u003d false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"OliverQiL"},"content":"        // initialize task storage using ArrayList instead of Array","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"OliverQiL"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"OliverQiL"},"content":"        // load tasks from storage","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"OliverQiL"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"OliverQiL"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"OliverQiL"},"content":"            if (!loadedTasks.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"OliverQiL"},"content":"                tasks.addAll(loadedTasks);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"OliverQiL"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"OliverQiL"},"content":"                System.out.println(\"I\u0027ve loaded \" + tasks.size()+ \" tasks from storage.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"OliverQiL"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"OliverQiL"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"OliverQiL"},"content":"        } catch (botException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"Warning: Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(\"Starting with an empty task list.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"OliverQiL"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"OliverQiL"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"OliverQiL"},"content":"        // main program loop - continues until user types bye","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"OliverQiL"},"content":"        do {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"OliverQiL"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"OliverQiL"},"content":"            if (!userInput.equalsIgnoreCase(\"bye\")) { //returns bool comparing 2 strings ignore case","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"OliverQiL"},"content":"                commandCount++;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"OliverQiL"},"content":"                // check if we\u0027ve reached max annoyance level","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"OliverQiL"},"content":"                int annoyanceLevel \u003d Math.min((commandCount / 5), ANNOYANCE_MSGS.length - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"OliverQiL"},"content":"                if (annoyanceLevel \u003d\u003d ANNOYANCE_MSGS.length - 1) { // reached max annoyance","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"OliverQiL"},"content":"                    reachedMaxAnnoyance \u003d true;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"OliverQiL"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"OliverQiL"},"content":"                // logic for different inputs","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"OliverQiL"},"content":"                try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"OliverQiL"},"content":"                    // user input is empty spaces","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"OliverQiL"},"content":"                    if (userInput.isBlank()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"OliverQiL"},"content":"                        throw new botException(\"hello say something pls\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"OliverQiL"},"content":"                    // delete function","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"OliverQiL"},"content":"                    else if (userInput.startsWith(DELETE_COMMAND)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"OliverQiL"},"content":"                        deleteTask(userInput, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"OliverQiL"},"content":"                    // list function","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"OliverQiL"},"content":"                    else if (userInput.equalsIgnoreCase(\"list\")) { // list all tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"OliverQiL"},"content":"                        listTasks(tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"OliverQiL"},"content":"                    // marking function","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"OliverQiL"},"content":"                    else if (userInput.startsWith(\"mark\")) { // mark task as done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"OliverQiL"},"content":"                        markTask(userInput, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"OliverQiL"},"content":"                    // unmarking function","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"OliverQiL"},"content":"                    else if (userInput.startsWith(\"unmark\")) { // mark task as not done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"OliverQiL"},"content":"                        unmarkTask(userInput, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"OliverQiL"},"content":"                    // todo task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"OliverQiL"},"content":"                    else if (userInput.startsWith(TODO_COMMAND)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"OliverQiL"},"content":"                        todoCommand(userInput, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"OliverQiL"},"content":"                    // deadline task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"OliverQiL"},"content":"                    else if (userInput.startsWith(DEADLINE_COMMAND)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"OliverQiL"},"content":"                        deadlineCommand(userInput, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"OliverQiL"},"content":"                    // event task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"OliverQiL"},"content":"                    else if (userInput.startsWith(EVENT_COMMAND)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"OliverQiL"},"content":"                        eventCommand(userInput, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"OliverQiL"},"content":"                    // if none of the above (default)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"OliverQiL"},"content":"                    else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"OliverQiL"},"content":"                        throw new botException(\"I don\u0027t know what that means\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"OliverQiL"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"OliverQiL"},"content":"                } catch (botException e) { // error handling","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"OliverQiL"},"content":"                    printError(e);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"OliverQiL"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"OliverQiL"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"OliverQiL"},"content":"        } while (!userInput.equalsIgnoreCase(\"bye\")); // exit command","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"OliverQiL"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"OliverQiL"},"content":"        printGoodbye(reachedMaxAnnoyance);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"OliverQiL"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"OliverQiL"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"OliverQiL":487}}]
