[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"# Bobby User Guide","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"Bobby is a greenfield Java project. Its name is inspired by *Bob* the minion","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"## Quick Start","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"1. Ensure you have Java ```17``` or above installed in your Computer.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":"2. Download the latest.jar file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":"3. Copy the file to the folder you want to use as the *home folder* for you todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":"4. Open a command terminal, ```cd``` into the folder you put the jar file in, and use the ```java -jar bobby,jar```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":"   command to run the application.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":"5. Type the command in the command box and press Enter to execute it.  ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"   Some examples commands you can try:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":"   - ```list```: Lists all tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":"   - ```todo read book```: Adds the ```read book``` task to the todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":"   - ```delete 3```: Deletes the third task shown in the current list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"   - ```bye```: Exits the todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"## Adding tasks: ```task```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"Adds a task to the todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"Format: `task TASK_NAME`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"task read book","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"## Adding deadlines: ```deadline```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"Adds a deadline to the todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"Format: `deadline DEADLINE_NAME /by DEADLINE_TIME`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"## Adding events: ```event```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CRL006"},"content":"Adds an event to the todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CRL006"},"content":"Format: `event EVENT_NAME /from EVENT_START_TIME /to EVENT_END_TIME`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CRL006"},"content":"event group meeting /from 2pm /to 4pm","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CRL006"},"content":"## Listing all events: ```list```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CRL006"},"content":"Shows a list of all the tasks in the todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CRL006"},"content":"Format: `list`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CRL006"},"content":"## Marking tasks as done: ```mark```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CRL006"},"content":"Marks a chosen task as done in todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CRL006"},"content":"Format: `mark TASK_INDEX`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CRL006"},"content":"mark 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CRL006"},"content":"## Marking tasks as undone: ```unmark```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CRL006"},"content":"Marks a chosen task as undone in todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CRL006"},"content":"Format: `unmark TASK_INDEX`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CRL006"},"content":"unmark 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CRL006"},"content":"## Deleting a task: ```delete```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CRL006"},"content":"Deletes a chosen task from the todo-list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CRL006"},"content":"Format: `delete TASK_INDEX`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CRL006"},"content":"delete 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CRL006"},"content":"## Finding a task: ```find```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CRL006"},"content":"Finds related tasks in the todo-list, given a keyword.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CRL006"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CRL006"},"content":"find book","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CRL006"},"content":"## Quitting the programme: ```bye```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CRL006"},"content":"Exits the programme","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CRL006"},"content":"Format: `bye`","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"CRL006":107,"-":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"# Bobby User Guide","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"Bobby is a greenfield Java project. Its name is inspired by *Bob* the minion","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"## Quick Start","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"1. Ensure you have Java ```17``` or above installed in your Computer.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":"2. Download the latest.jar file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":"3. Copy the file to the folder you want to use as the *home folder* for you todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":"4. Open a command terminal, ```cd``` into the folder you put the jar file in, and use the ```java -jar bobby,jar``` ","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":"command to run the application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":"5. Type the command in the command box and press Enter to execute it.  ","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"Some examples commands you can try:  ","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":"   - ```list```: Lists all tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":"   - ```todo read book```: Adds the ```read book``` task to the todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":"   - ```delete 3```: Deletes the third task shown in the current list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"   - ```bye```: Exits the todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"## Adding tasks: ```task```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"Adds a task to the todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"Format: `task TASK_NAME`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"task read book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"## Adding deadlines: ```deadline```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"Adds a deadline to the todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"Format: `deadline DEADLINE_NAME /by DEADLINE_TIME`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"## Adding events: ```event```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CRL006"},"content":"Adds an event to the todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CRL006"},"content":"Format: `event EVENT_NAME /from EVENT_START_TIME /to EVENT_END_TIME`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CRL006"},"content":"event group meeting /from 2pm /to 4pm","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CRL006"},"content":"## Listing all events: ```list```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CRL006"},"content":"Shows a list of all the tasks in the todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CRL006"},"content":"Format: `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CRL006"},"content":"## Marking tasks as done: ```mark```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CRL006"},"content":"Marks a chosen task as done in todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CRL006"},"content":"Format: `mark TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CRL006"},"content":"mark 1","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CRL006"},"content":"## Marking tasks as undone: ```unmark```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CRL006"},"content":"Marks a chosen task as undone in todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CRL006"},"content":"Format: `unmark TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CRL006"},"content":"unmark 1","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CRL006"},"content":"## Deleting a task: ```delete```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CRL006"},"content":"Deletes a chosen task from the todo-list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CRL006"},"content":"Format: `delete TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CRL006"},"content":"delete 1","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CRL006"},"content":"## Finding a task: ```find```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CRL006"},"content":"Finds related tasks in the todo-list, given a keyword.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CRL006"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CRL006"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CRL006"},"content":"find book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CRL006"},"content":"```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CRL006"},"content":"## Quitting the programme: ```bye```","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CRL006"},"content":"Exits the programme","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CRL006"},"content":"Format: `bye`","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"CRL006":86,"-":28}},{"path":"src/main/java/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"import functions.Parser;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"import functions.Storage;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"import functions.TaskList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":"import functions.Ui;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"import tasks.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":"public class Bobby {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":"    private static Ui ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"    private static Storage storage;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":"    private static Parser parser;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":"    private static TaskList taskList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"        tasks \u003d storage.loadFromFile();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"        storage.setupFile();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"        String userInput \u003d ui.readUserInput();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"        while (true) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"            try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"                String action \u003d parser.processInput(userInput);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"                if (action.equals(\"Terminate chat\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"                    ui.printEndMessage();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"                    break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"                parser.carryOut(action, userInput, tasks, storage, ui, taskList);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"                ui.printUnknownCommandError();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"            userInput \u003d ui.readUserInput();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"CRL006":41}},{"path":"src/main/java/exceptions/AlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package exceptions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"public class AlreadyDoneException extends Exception{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":4}},{"path":"src/main/java/exceptions/AlreadyUndoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package exceptions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"public class AlreadyUndoneException extends Exception{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":4}},{"path":"src/main/java/exceptions/MissingDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package exceptions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"public class MissingDateTimeException extends Exception{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":4}},{"path":"src/main/java/exceptions/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package exceptions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"public class MissingDescriptionException extends Exception{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":4}},{"path":"src/main/java/exceptions/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package exceptions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"public class MissingTaskException extends Exception{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":4}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package exceptions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":4}},{"path":"src/main/java/functions/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package functions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"import exceptions.MissingDescriptionException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"import exceptions.MissingDateTimeException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"import exceptions.AlreadyUndoneException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":"import exceptions.AlreadyDoneException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":"import tasks.Task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":" * The {@code Parser} class is responsible for processing and interpreting","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":" * user input commands in a task management application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":" * This class contains methods for parsing various commands,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":" * such as adding tasks, marking tasks as done or undone,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":" * deleting tasks, and finding tasks that match a keyword.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":" * It handles different task types, including to-do tasks, event tasks,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":" * and deadline tasks, by extracting relevant information from the user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":" * The methods in this class also ensure that the provided input is valid and raise appropriate exceptions","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":" * if the input format is incorrect or if actions are not possible.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":" * The class provides functionality to carry out user commands, which are then executed","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":" * by updating the task list and interacting","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":" * with storage and UI components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"public class Parser {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"     * Processes the user\u0027s input and determines the appropriate action to be carried out in {@code carryOut}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"     * This method evaluates the input string and returns a corresponding message based on recognized commands.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"     * Supported commands include:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"bye\" - Terminates the chat.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"list\" - Prints the list of tasks.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"mark\" - Changes the completion status of a task.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"todo\" - Adds a to-do task.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"event\" - Adds an event task.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"deadline\" - Adds a task with a deadline.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"delete\" - Deletes a task.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"     *     \u003cli\u003e\"find\" - Finds tasks containing a keyword.\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CRL006"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CRL006"},"content":"     * If the input does not match any known command, an {@link UnknownCommandException} is thrown.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CRL006"},"content":"     * @param input The user\u0027s input string to be processed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CRL006"},"content":"     * @return A string indicating the action corresponding to the input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CRL006"},"content":"     * @throws UnknownCommandException if the input does not match any known command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CRL006"},"content":"    public static String processInput(String input) throws UnknownCommandException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CRL006"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CRL006"},"content":"            return \"Terminate chat\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CRL006"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CRL006"},"content":"            return \"Print list\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CRL006"},"content":"        } else if (input.contains(\"mark\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CRL006"},"content":"            return \"Change isDone\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CRL006"},"content":"        } else if (input.contains(\"todo\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CRL006"},"content":"            return \"Add todo\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CRL006"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CRL006"},"content":"            return \"Add event\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CRL006"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CRL006"},"content":"            return \"Add deadline\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CRL006"},"content":"        } else if (input.contains(\"delete\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CRL006"},"content":"            return \"Delete task\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CRL006"},"content":"        } else if (input.contains(\"find\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CRL006"},"content":"            return \"Find keyword\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CRL006"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CRL006"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CRL006"},"content":"     * Marks a task as done or undone based on user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CRL006"},"content":"     * This method processes the user\u0027s input string to determine which task to mark as done or undone","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CRL006"},"content":"     * in the provided list of tasks. It checks if the task exists and whether the task is already in the desired state","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CRL006"},"content":"     * (done or undone). If the task index is invalid, or the task\u0027s current status conflicts with the requested change,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CRL006"},"content":"     * relevant exceptions are thrown.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CRL006"},"content":"     * @param input The user input containing the command to mark or unmark a task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CRL006"},"content":"     *              The format is expected to be \"mark {taskNumber}\" or \"unmark {taskNumber}\".","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CRL006"},"content":"     * @param isMarked A boolean value indicating whether the task should be marked as done (true) or undone (false).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CRL006"},"content":"     * @param tasks The list of {@link Task} objects to update based on the user\u0027s input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CRL006"},"content":"     * @throws MissingTaskException if the task number provided does not correspond to any task in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CRL006"},"content":"     * @throws AlreadyDoneException if the task is already marked as done and the user attempts to mark it again.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CRL006"},"content":"     * @throws AlreadyUndoneException if the task is already marked as undone and the user attempts to unmark it again.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CRL006"},"content":"    public static void splitMark(String input, boolean isMarked, ArrayList\u003cTask\u003e tasks) throws MissingTaskException, AlreadyDoneException, AlreadyUndoneException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CRL006"},"content":"        String[] splitMark \u003d input.split(\" \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CRL006"},"content":"        int markIndex \u003d Integer.parseInt(splitMark[1]) - 1;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CRL006"},"content":"        if (markIndex \u003c 0 || markIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CRL006"},"content":"            throw new MissingTaskException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CRL006"},"content":"        if (isMarked) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CRL006"},"content":"            if (tasks.get(markIndex).isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CRL006"},"content":"                throw new AlreadyDoneException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CRL006"},"content":"            tasks.get(markIndex).setDone(true);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CRL006"},"content":"            tasks.get(markIndex).printTask();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CRL006"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CRL006"},"content":"            if (!tasks.get(markIndex).isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CRL006"},"content":"                throw new AlreadyUndoneException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CRL006"},"content":"            tasks.get(markIndex).setDone(false);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CRL006"},"content":"            tasks.get(markIndex).printTask();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CRL006"},"content":"     * Splits the given deadline input into a description and a date/time string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003eThe input string should contain a description part followed by a slash (\"/\") and a date/time part.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CRL006"},"content":"     * If the input does not conform to this format, appropriate exceptions are thrown.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CRL006"},"content":"     * @param input The input string representing a deadline, where the description and date/time are separated by a slash (\"/\").","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CRL006"},"content":"     * @return A String array with two elements:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CRL006"},"content":"     *         - details[0] contains the description before the slash.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CRL006"},"content":"     *         - details[1] contains the date/time after the slash.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CRL006"},"content":"     * @throws MissingDescriptionException If the description part is missing or the input is too short.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CRL006"},"content":"     * @throws MissingDateTimeException If the date/time part is missing or the slash is absent.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CRL006"},"content":"    public static String[] splitDeadline(String input) throws MissingDescriptionException, MissingDateTimeException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CRL006"},"content":"        String[] details \u003d new String[2];","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CRL006"},"content":"        int stringLength \u003d input.length();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CRL006"},"content":"        if (stringLength \u003c 10) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CRL006"},"content":"            throw new MissingDescriptionException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CRL006"},"content":"        int indexOfSlash \u003d input.indexOf(\"/\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CRL006"},"content":"        if (indexOfSlash \u003d\u003d -1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CRL006"},"content":"            throw new MissingDateTimeException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CRL006"},"content":"        details[0] \u003d input.substring(9, indexOfSlash - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"CRL006"},"content":"        details[1] \u003d input.substring(indexOfSlash + 4, stringLength);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CRL006"},"content":"        return details;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CRL006"},"content":"     * Splits the input string into three parts: description, date, and time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003eThe input string is expected to follow a specific format, where the description starts","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CRL006"},"content":"     * after the 6th character and ends before the first slash (\u0027/\u0027). The date is placed between","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CRL006"},"content":"     * the first and last slashes, and the time is placed after the last slash.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CRL006"},"content":"     * @param input The input string to be split, expected to contain a description, date, and time","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CRL006"},"content":"     * @return An array of strings containing three elements: description, date, and time","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CRL006"},"content":"     * @throws MissingDescriptionException if the input string is too short to contain a description","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CRL006"},"content":"     * @throws MissingDateTimeException if the input string is missing slashes or doesn\u0027t have a valid date-time format","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CRL006"},"content":"    public static String[] splitEvent(String input) throws MissingDescriptionException, MissingDateTimeException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CRL006"},"content":"        String[] details \u003d new String[3];","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"CRL006"},"content":"        int stringLength \u003d input.length();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"CRL006"},"content":"        if (stringLength \u003c 7) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"CRL006"},"content":"            throw new MissingDescriptionException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"CRL006"},"content":"        int indexOfFirstSlash \u003d input.indexOf(\"/\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"CRL006"},"content":"        int indexOfLastSlash \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"CRL006"},"content":"        if (indexOfFirstSlash \u003d\u003d -1 || indexOfLastSlash \u003d\u003d -1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"CRL006"},"content":"            throw new MissingDateTimeException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"CRL006"},"content":"        details[0] \u003d input.substring(6, indexOfFirstSlash - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"CRL006"},"content":"        details[1] \u003d input.substring(indexOfFirstSlash + 6, indexOfLastSlash - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"CRL006"},"content":"        details[2] \u003d input.substring(indexOfLastSlash + 4, stringLength);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"CRL006"},"content":"        return details;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"CRL006"},"content":"     * Extracts the description of a to-do task from the user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CRL006"},"content":"     * This method processes the user\u0027s input, which is expected to follow the format","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"CRL006"},"content":"     * \"todo {taskDescription}\". It checks if the description is provided and extracts","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CRL006"},"content":"     * the task description starting from the 6th character. If no description is provided,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CRL006"},"content":"     * it throws a {@link MissingDescriptionException}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CRL006"},"content":"     * @param input The user input string that contains the \"todo\" command and the task description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CRL006"},"content":"     * @return A string representing the task description extracted from the input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CRL006"},"content":"     * @throws MissingDescriptionException if the input does not include a description for the to-do task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"CRL006"},"content":"    public static String splitToDo(String input) throws MissingDescriptionException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"CRL006"},"content":"        int stringLength \u003d input.length();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"CRL006"},"content":"        if (stringLength \u003c 6) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"CRL006"},"content":"            throw new MissingDescriptionException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"CRL006"},"content":"        return input.substring(5, stringLength);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"CRL006"},"content":"     * Prints messages related to the deletion of a task from the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003eThis method retrieves and prints the acknowledgement message, details of the task to be deleted,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CRL006"},"content":"     * and updates the task count after the deletion.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"CRL006"},"content":"     * @param tasks The list of tasks from which one will be deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CRL006"},"content":"     * @param deleteIndex The index of the task to be deleted in the `tasks` list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"CRL006"},"content":"    public static void printTaskDeletionMessages(ArrayList\u003cTask\u003e tasks, int deleteIndex) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"CRL006"},"content":"        tasks.get(deleteIndex).printDeleteAcknowledgement();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"CRL006"},"content":"        tasks.get(deleteIndex).printTask();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"CRL006"},"content":"        tasks.get(deleteIndex).printTaskCount(tasks.size()-1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"CRL006"},"content":"     * Retrieves the index of a task to be deleted from the user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"CRL006"},"content":"     * This method processes the user\u0027s input to extract the task number,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"CRL006"},"content":"     * converts it to an index (zero-based), and checks if the task exists in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"CRL006"},"content":"     * If the task index is invalid (out of bounds), a {@link MissingTaskException} is thrown.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CRL006"},"content":"     * @param input The user input string containing the \"delete {taskNumber}\" command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CRL006"},"content":"     * @param tasks The list of {@link Task} objects from which the task will be deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CRL006"},"content":"     * @return The zero-based index of the task to be deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CRL006"},"content":"     * @throws MissingTaskException if the task number provided does not correspond to any task in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CRL006"},"content":"    public static int getDeleteIndex(String input, ArrayList\u003cTask\u003e tasks) throws MissingTaskException, AlreadyDoneException, AlreadyUndoneException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"CRL006"},"content":"        String[] splitDelete \u003d input.split(\" \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"CRL006"},"content":"        int deleteIndex \u003d Integer.parseInt(splitDelete[1]) - 1;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"CRL006"},"content":"        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CRL006"},"content":"            throw new MissingTaskException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"CRL006"},"content":"        return deleteIndex;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"CRL006"},"content":"     * Prints the acknowledgment, task details, and the current task count for the last task in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003eThis method accesses the last task in the provided list of tasks, and then calls three methods","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"CRL006"},"content":"     * on that task: one to print an acknowledgment message, one to print the task details,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"CRL006"},"content":"     * and one to print the updated task count.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"CRL006"},"content":"     * @param tasks The list of tasks, which should contain at least one task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"CRL006"},"content":"     *              The last task in the list will be used to print the task details and messages.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"CRL006"},"content":"     * @throws IndexOutOfBoundsException If the list of tasks is empty.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"CRL006"},"content":"    public static void printTaskAdditionMessages(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"CRL006"},"content":"        tasks.get(tasks.size()-1).printAcknowledgement();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"CRL006"},"content":"        tasks.get(tasks.size()-1).printTask();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"CRL006"},"content":"        tasks.get(tasks.size()-1).printTaskCount(tasks.size());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"CRL006"},"content":"     * Executes the specified action on the given input, interacting with the task list, storage, UI, and task manager.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003eThis method takes an action and performs a corresponding operation such as printing the task list,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"CRL006"},"content":"     * changing the status of a task, adding new tasks (ToDo, Event, Deadline), deleting tasks, or finding tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"CRL006"},"content":"     * based on a keyword. It also updates the storage after each action that modifies the task list.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"CRL006"},"content":"     * @param action The action to be performed, such as \"Print list\", \"Change isDone\", \"Add todo\", \"Add event\",","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"CRL006"},"content":"     *               \"Add deadline\", \"Delete task\", or \"Find keyword\".","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"CRL006"},"content":"     * @param input The input provided by the user to execute the action. The format depends on the action type.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"CRL006"},"content":"     * @param tasks The list of tasks that will be modified or referenced by the action.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"CRL006"},"content":"     * @param storage The storage object used to save the updated task list to a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"CRL006"},"content":"     * @param ui The UI object responsible for displaying task-related messages to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"CRL006"},"content":"     * @param tasklist The TaskList object that handles the management of tasks, including adding and deleting tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"CRL006"},"content":"    public static void carryOut(String action, String input, ArrayList\u003cTask\u003e tasks, Storage storage, Ui ui, TaskList tasklist) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"CRL006"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"CRL006"},"content":"            switch (action) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"CRL006"},"content":"            case \"Print list\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"CRL006"},"content":"                ui.printTaskList(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"CRL006"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"CRL006"},"content":"            case \"Change isDone\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"CRL006"},"content":"                splitMark(input, !input.contains(\"unmark\"), tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"CRL006"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"CRL006"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"CRL006"},"content":"            case \"Add todo\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"CRL006"},"content":"                String item \u003d splitToDo(input);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"CRL006"},"content":"                tasklist.addTodo(item, tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"CRL006"},"content":"                printTaskAdditionMessages(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"CRL006"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"CRL006"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"CRL006"},"content":"            case \"Add event\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"CRL006"},"content":"                String[] eventDetails \u003d splitEvent(input);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"CRL006"},"content":"                tasklist.addEvent(eventDetails[0], eventDetails[1], eventDetails[2], tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"CRL006"},"content":"                printTaskAdditionMessages(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"CRL006"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"CRL006"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"CRL006"},"content":"            case \"Add deadline\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"CRL006"},"content":"                String[] deadlineDetails \u003d splitDeadline(input);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"CRL006"},"content":"                tasklist.addDeadline(deadlineDetails[0], deadlineDetails[1], tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"CRL006"},"content":"                printTaskAdditionMessages(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"CRL006"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"CRL006"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"CRL006"},"content":"            case \"Delete task\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"CRL006"},"content":"                int deleteIndex \u003d getDeleteIndex(input, tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"CRL006"},"content":"                printTaskDeletionMessages(tasks, deleteIndex);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"CRL006"},"content":"                tasklist.deleteItem(deleteIndex, tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"CRL006"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"CRL006"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"CRL006"},"content":"            case \"Find keyword\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"CRL006"},"content":"                int matchingTasks \u003d 0;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"CRL006"},"content":"                String keyword \u003d input.substring(5, input.length());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"CRL006"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"CRL006"},"content":"                    if (tasks.get(i).getTask().contains(keyword)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"CRL006"},"content":"                        if (matchingTasks \u003d\u003d 0) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"CRL006"},"content":"                            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"CRL006"},"content":"                        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"CRL006"},"content":"                        System.out.print((matchingTasks + 1) + \". \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"CRL006"},"content":"                        tasks.get(i).printTask();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"CRL006"},"content":"                        matchingTasks++;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"CRL006"},"content":"                    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"CRL006"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"CRL006"},"content":"                if (matchingTasks \u003d\u003d 0) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"CRL006"},"content":"                    System.out.println(\"There were no matching tasks in your list!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"CRL006"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"CRL006"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"CRL006"},"content":"        } catch (MissingTaskException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Sorry, you only have \" + (tasks.size()) + \" tasks in the system!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"CRL006"},"content":"        } catch (AlreadyDoneException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"That task has already been done!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"CRL006"},"content":"        } catch (AlreadyUndoneException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"That task has not been done yet!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"CRL006"},"content":"        } catch (MissingDescriptionException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Please enter a task to add!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Examples: \\n - todo read book \\n - event meeting /from 3pm /to 5pm \\n - deadline return book /by Friday\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"CRL006"},"content":"        } catch (MissingDateTimeException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Please enter a date/time!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Examples: \\n - event meeting /from 3pm /to 5pm \\n - deadline return book /by Friday\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"CRL006":330}},{"path":"src/main/java/functions/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package functions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"import tasks.Task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"import java.io.File;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":" * The {@code Storage} class is responsible for handling file operations related to saving, loading,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":" * and setting up tasks in a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":" * This class provides methods to:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":" *   \u003cli\u003eLoad tasks from a file\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":" *   \u003cli\u003eSave tasks to a file\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":" *   \u003cli\u003eSet up the required file and directories if they don\u0027t exist\u003c/li\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":" * All tasks are stored in a file named \"bobby.txt\" located in the \"data\" directory.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003eIf file-related errors occur, such as issues reading from or writing to the file,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":" * error messages will be printed to the console.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"public class Storage {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"     * Loads a list of tasks from a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"     * This method reads each line from the \"bobby.txt\" file located in the \"data\" directory,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"     * converts it into a {@link Task} object using the {@code Task.fromString()} method, and adds it to an {@link ArrayList}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"     * If the file cannot be read due to an {@link IOException}, an error message is printed to the console.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"     * @return An {@link ArrayList} containing the tasks loaded from the file. If the file is empty or unreadable,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"     *         an empty list is returned.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"     * @throws IOException if an error occurs during file reading.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"    public static ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CRL006"},"content":"        try (Scanner fileScanner \u003d new Scanner(new File(\"./src/main/java/data/bobby.txt\"))) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CRL006"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CRL006"},"content":"                String taskLine \u003d fileScanner.nextLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CRL006"},"content":"                Task task \u003d Task.fromString(taskLine);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CRL006"},"content":"                tasks.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CRL006"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Error loading tasks from file (This is normal upon first launch). New bobby.txt file has been created.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CRL006"},"content":"        return tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CRL006"},"content":"     * Creates and sets up a file for storing tasks if it does not already exist.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CRL006"},"content":"     * This method checks if the file \"bobby.txt\" located in the \"data\" directory exists.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CRL006"},"content":"     * If the file or the directory does not exist, the directory and the file will be created.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CRL006"},"content":"     * If an {@link IOException} occurs during this process, an error message is printed to the console.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CRL006"},"content":"     * @throws IOException if an error occurs while creating directories or the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CRL006"},"content":"    public static void setupFile() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CRL006"},"content":"        File tasksList \u003d new File(\"./src/main/java/data/bobby.txt\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CRL006"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CRL006"},"content":"            if (!tasksList.exists()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CRL006"},"content":"                Files.createDirectories(Paths.get(\"./src/main/java/data\"));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CRL006"},"content":"                Files.createFile(Paths.get(\"./src/main/java/data/bobby.txt\"));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CRL006"},"content":"        } catch (IOException e){","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Error retrieving file\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CRL006"},"content":"     * Saves a list of tasks to a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CRL006"},"content":"     * This method writes each task from the list into the \"bobby.txt\" file,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CRL006"},"content":"     * located in the \"data\" directory. Each task is written on a new line.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CRL006"},"content":"     * If an {@link IOException} occurs during the writing process, an error message is printed to the console.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CRL006"},"content":"     * @param tasks The list of {@link Task} objects to be saved to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CRL006"},"content":"     * @throws IOException if an error occurs during writing to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CRL006"},"content":"    public static void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CRL006"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CRL006"},"content":"            FileWriter writer \u003d new FileWriter(\"./src/main/java/data/bobby.txt\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CRL006"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CRL006"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CRL006"},"content":"            writer.close();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CRL006"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CRL006"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"CRL006":102}},{"path":"src/main/java/functions/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package functions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"import tasks.Event;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"import tasks.Task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":"import tasks.Todo;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":"public class TaskList {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":"    public static void addTodo(String item, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"        tasks.add(new Todo(item, false));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":"    public static void addEvent(String item, String start, String end, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"        tasks.add(new Event(item, start, end, false));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"    public static void addDeadline(String item, String time, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"        tasks.add(new Deadline(item, time, false));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"    public static void deleteItem(int deleteIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"        tasks.remove(deleteIndex);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"CRL006":28}},{"path":"src/main/java/functions/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package functions;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"import tasks.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":" * The {@code Ui} class is responsible for processing and interpreting user input commands in a task management application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":" * The `Parser` class contains methods for parsing various commands, such as adding tasks, marking tasks as done or undone,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":" * deleting tasks, and finding tasks that match a keyword. It handles different task types, including to-do tasks, event tasks,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":" * and deadline tasks, by extracting relevant information from the user input. The methods in this class also ensure that the","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":" * provided input is valid and raise appropriate exceptions if the input format is incorrect or if actions are not possible.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":" * The class provides functionality to carry out user commands, which are then executed by updating the task list and interacting","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":" * with storage and UI components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"public class Ui {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"    public String readUserInput() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"Hello! I\u0027m Bobby! \\nWhat can I do for you?\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"    public void printEndMessage() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"     * Prints an error message when an unknown command is entered by the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003eThis method notifies the user that the entered command is not recognized,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"     * and provides examples of valid commands that the user can try.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003eValid commands include adding tasks like \"todo\", \"event\", and \"deadline\".\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"     *  */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"    public void printUnknownCommandError() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"I\u0027m sorry I don\u0027t have that functionality yet!! Please try something else!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"Examples of things I can do: \\n - add todo\\n - add event \\n - add deadline\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CRL006"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CRL006"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CRL006"},"content":"            System.out.print((i + 1) + \". \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CRL006"},"content":"            tasks.get(i).printTask();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"CRL006":57}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":" * The {@code Deadline} class represents a deadline which has an item description,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":" * a due date, and a completion status (done or not done).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003eIt is a subclass of {@link Task} and inherits its attributes and methods,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":" * including the task description and completion status. The deadline task includes","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":" * an additional field {@code dueDate}, which represents when the task is due.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":" * @see Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":"    public String item;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":"    public String dueDate;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"    public Deadline(String item, String dueDate, boolean isDone) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"        super(item, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"        this.item \u003d item;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"        if (dueDate.contains(\"-\")) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"            try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"                LocalDate d1 \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"                this.dueDate \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"                this.dueDate \u003d dueDate;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"                System.out.println(\"The due date has been saved as \" + dueDate + \".\\nIf you want it to be in the format similar to: Oct 4 2025, please enter the date in the format: 2025-04-10\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"        else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"            this.dueDate \u003d dueDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"     * Returns a string representation of the task, specifically for a deadline task for it to be saved in the file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"     * @return A string representation of the deadline task in the format:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"     *         \"D | [done/not done] | [task description] | by: [due date]\".","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CRL006"},"content":"    public String toString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CRL006"},"content":"        return \"D | \" + (isDone ? \"done\" : \"not done\") + \" | \" + item + \" | by: \" + dueDate;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CRL006"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CRL006"},"content":"    public void printTask()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CRL006"},"content":"    {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CRL006"},"content":"        System.out.print(\"  [D][\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CRL006"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CRL006"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CRL006"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CRL006"},"content":"            System.out.print(\" \");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"] \" + this.item + \" (by: \" + this.dueDate + \")\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":60}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":" * The {@code Event} class represents an event which has an item description,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":" * a start and end time, and a completion status (done or not done).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003eIt is a subclass of {@link Task} and inherits its attributes and methods,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":" * including the task description and completion status. The event task includes","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":" * two additional fields {@code start} and {@code end}, which represents when the task starts and ends.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":" * @see Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"public class Event extends Task{","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":"    public String start;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":"    public String end;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"    public Event(String item, String start, String end, boolean isDone) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":"        super(item, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"     * Returns a string representation of the task, specifically for an event task for it to be saved in the file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"     * @return A string representation of the deadline task in the format:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"     *         \"D | [done/not done] | [task description] | by: [due date]\".","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"    public String toString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"        return \"E | \" + (isDone ? \"done\" : \"not done\") + \" | \" + item + \" | from: \" + start + \" | to: \" + end;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"    public void printTask()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"    {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"        System.out.print(\"  [E][\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"            System.out.print(\" \");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"] \" + this.item + \" (from: \" + this.start + \" to: \" + this.end + \")\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":45}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003eThe {@code Task} class provides basic functionality for managing tasks, including","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":" * setting their completion status, printing task-related information, and converting","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":" * task information from a string representation.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003eIt is a parent class of {@link Todo}, {@link Deadline} and {@link Event} and provides a template for them to inherit","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"public class Task {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":"    public String item;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":"    public boolean isDone;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":"    public Task(String item, boolean isDone) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"        this.item \u003d item;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"    public void printAcknowledgement() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"    public void printTaskCount(int n) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"Now you have \" + n + \" task(s) in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"     * Prints the task details.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"     * This method is intended to be overridden by subclasses {@link Deadline}, {@link Event}, {@link Todo})","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"     * to provide specific behavior for printing task details. The base implementation does nothing.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"    public void printTask(){","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CRL006"},"content":"        return;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CRL006"},"content":"     * Returns the task details.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CRL006"},"content":"     * This method is intended to be overridden by subclasses {@link Deadline}, {@link Event}, {@link Todo})","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CRL006"},"content":"     * to provide specific behavior for returning the task details. The base implementation does nothing.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CRL006"},"content":"    public String getTask(){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CRL006"},"content":"        return this.item;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CRL006"},"content":"    public void printDeleteAcknowledgement() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CRL006"},"content":"    public String toString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CRL006"},"content":"        return \" | \" + (isDone ? \"done\" : \"not done\") + \" | \" + item;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CRL006"},"content":"     * Converts a string representation of a task back into a {@link Task} object from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CRL006"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CRL006"},"content":"     * This method processes a string formatted with task details","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CRL006"},"content":"     * and converts it into the corresponding {@link Todo}, {@link Deadline},","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CRL006"},"content":"     * or {@link Event} object. It is loads tasks from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CRL006"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CRL006"},"content":"     * @param taskString The string representation of the task, formatted as \"Type | Status | Description | Additional Info\".","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CRL006"},"content":"     * @return A {@link Task} object corresponding to the string input, which could be a {@link Todo}, {@link Deadline}, or {@link Event}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CRL006"},"content":"     *         If the string does not match any known task types, a default {@link Task} with \"Not found\" description is returned.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CRL006"},"content":"    public static Task fromString(String taskString) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CRL006"},"content":"        String[] parts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CRL006"},"content":"        if (parts[0].equals(\"T\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CRL006"},"content":"            boolean isDone \u003d parts[1].equals(\"done\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CRL006"},"content":"            String item \u003d parts[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CRL006"},"content":"            return new Todo(item, isDone);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CRL006"},"content":"        } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CRL006"},"content":"            boolean isDone \u003d parts[1].equals(\"done\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CRL006"},"content":"            String item \u003d parts[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CRL006"},"content":"            String dueDate \u003d parts[3].substring(4);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CRL006"},"content":"            return new Deadline(item, dueDate, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CRL006"},"content":"        } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CRL006"},"content":"            boolean isDone \u003d parts[1].equals(\"done\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CRL006"},"content":"            String item \u003d parts[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CRL006"},"content":"            String start \u003d parts[3].substring(6);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CRL006"},"content":"            String end \u003d parts[4].substring(4);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CRL006"},"content":"            return new Event(item, start, end, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CRL006"},"content":"        else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CRL006"},"content":"            return new Task(\"Not found\", false);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"CRL006":97}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CRL006"},"content":"package tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CRL006"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CRL006"},"content":" * The {@code Todo} class represents a todo which has an item description, and a completion status (done or not done).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CRL006"},"content":" * \u003cp\u003eIt is a subclass of {@link Task} and inherits its attributes and methods,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CRL006"},"content":" * including the task description and completion status. The deadline task includes","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CRL006"},"content":" * an additional field {@code dueDate}, which represents when the task is due.\u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CRL006"},"content":" *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CRL006"},"content":" * @see Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CRL006"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CRL006"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CRL006"},"content":"    public Todo(String item, boolean isDone) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CRL006"},"content":"        super(item, isDone);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CRL006"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CRL006"},"content":"     * Returns a string representation of the task, specifically for a todo task for it to be saved in the file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CRL006"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CRL006"},"content":"     * @return A string representation of the deadline task in the format:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CRL006"},"content":"     *         \"D | [done/not done] | [task description] | by: [due date]\".","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CRL006"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CRL006"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CRL006"},"content":"    public String toString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CRL006"},"content":"        return \"T | \" + (isDone ? \"done\" : \"not done\") + \" | \" + item;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CRL006"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CRL006"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CRL006"},"content":"    public void printTask()","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CRL006"},"content":"    {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CRL006"},"content":"        System.out.print(\"  [T][\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CRL006"},"content":"        if (isDone) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CRL006"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CRL006"},"content":"        } else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CRL006"},"content":"            System.out.print(\" \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CRL006"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CRL006"},"content":"        System.out.println(\"] \" + item);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CRL006"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CRL006"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"CRL006":40}}]
