[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"# Nyani User Guide \u003d) ","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":"Below are the features and respective instructions on how to use Nyani!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"## Downloading Nyani","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"hannahtay":3,"-":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"# Nyani User Guide","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":"     ^,,,,^","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"     ( O-O)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":"     /^   \u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"Hi there! I\u0027m NYANI ^_^","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":"What shall we do today?","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":"Type \u0027help\u0027 to see all commands :)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"Nyani is here to make organising tasks much easier!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"## Notes about command format","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"- Words in `UPPERCASE` are parameters to be given by the user.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"  eg. `todo TASK`, `TASK` is a parameter which can be used as `todo do homework`.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"  ","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"- Commands are not case-sensitive.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"  eg. `Todo`, `todo` and `TODO` all work the same.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"## Viewing a list of commands `help`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"Shows a list of commands the user can input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hannahtay"},"content":"Example: `help`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hannahtay"},"content":"List of commands:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hannahtay"},"content":"list: shows todo list","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hannahtay"},"content":"mark: marks item as done","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hannahtay"},"content":"unmark: unmarks item as done","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hannahtay"},"content":"deadline: adds an item with specified deadline","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hannahtay"},"content":"          try deadline [task] /by [date/time]!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hannahtay"},"content":"event: creates an event with specified timeline","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hannahtay"},"content":"       try event /from [date/time] /to [date/time]!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hannahtay"},"content":"find: finds the task with your specified keyword","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hannahtay"},"content":"Type \u003cbye\u003e to exit \u0026 save your list!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hannahtay"},"content":"## Viewing task list `list`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hannahtay"},"content":"Allows user to view the list of tasks added.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hannahtay"},"content":"Example: `list`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hannahtay"},"content":"To-do!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hannahtay"},"content":"1. [T][ ] do homework","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hannahtay"},"content":"2. [D][ ] do homework (by: 5pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hannahtay"},"content":"3. [E][ ] CS2113 class (from: 5pm to: 6pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hannahtay"},"content":"## Marking tasks as done `mark`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hannahtay"},"content":"Marks task as done with a \u0027X\u0027.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hannahtay"},"content":"Format: `mark TASK_NUMBER`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hannahtay"},"content":"Example: `mark 1`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hannahtay"},"content":"Marked \u003e do homework \u003c as done!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hannahtay"},"content":"`list`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hannahtay"},"content":"To-do!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hannahtay"},"content":"1. [T][X] do homework","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hannahtay"},"content":"2. [D][ ] do homework (by: 5pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hannahtay"},"content":"3. [E][ ] CS2113 class (from: 5pm to: 6pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hannahtay"},"content":"## Unmarking tasks as done `unmark`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hannahtay"},"content":"Unmarks task as done, removing the \u0027X\u0027 symbol.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hannahtay"},"content":"Format: `unmark TASK_NUMBER`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hannahtay"},"content":"Example: `unmark 1`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hannahtay"},"content":"Unmarked \u003e do homework \u003c as done!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hannahtay"},"content":"`list`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hannahtay"},"content":"To-do!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hannahtay"},"content":"1. [T][ ] do homework","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hannahtay"},"content":"2. [D][ ] do homework (by: 5pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hannahtay"},"content":"3. [E][ ] CS2113 class (from: 5pm to: 6pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hannahtay"},"content":"## Adding normal tasks `todo`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hannahtay"},"content":"Adds general tasks without a time-sensitive window.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hannahtay"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hannahtay"},"content":"Example: `todo do homework`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hannahtay"},"content":"Added \u003e [T][ ] do homework \u003c !","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hannahtay"},"content":"## Adding deadlines `deadline`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hannahtay"},"content":"Adds deadlines to your task!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hannahtay"},"content":"Format: `deadline TASK_DESCRIPTION /by TIME`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hannahtay"},"content":"Example: `deadline do homework /by 5pm`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hannahtay"},"content":"Added \u003e [D][ ] do homework (by: 5pm) \u003c !","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hannahtay"},"content":"## Adding events `event`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hannahtay"},"content":"Adds a user specified time window task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hannahtay"},"content":"Format: `event TASK_DESCRIPTION /from TIME /to TIME`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hannahtay"},"content":"Example: `event CS2113 class /from 5pm /to 6pm`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hannahtay"},"content":"Added \u003e [E][ ] CS2113 class (from: 5pm to: 6pm) \u003c !","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hannahtay"},"content":"## Finding tasks `find`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hannahtay"},"content":"Finds the task(s) containing the user-specified keyword.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hannahtay"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hannahtay"},"content":"Example: `find homework`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hannahtay"},"content":"[T][ ] do homework","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hannahtay"},"content":"[D][ ] do homework (by: 5pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hannahtay"},"content":"## Saving tasks `bye`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"hannahtay"},"content":"Exits the app, and saves the list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"hannahtay"},"content":"Remember to save the list by inputting `bye`, else it will not save!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"hannahtay"},"content":"Example: `bye`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"hannahtay"},"content":"Nyani will remember ur tasks for u!","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hannahtay"},"content":"Loading tasks...","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"hannahtay"},"content":"[ ]TODO: do homework","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"hannahtay"},"content":"[ ]DEADLINE (by: 5pm) | do homework","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"hannahtay"},"content":"[ ]EVENT (from: 5pm to: 6pm) | CS2113 class","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"hannahtay"},"content":"c U soon! :D ","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"hannahtay"},"content":"────────────────────","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"hannahtay"},"content":"```","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"hannahtay":149,"-":18}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hannahtay"},"content":" * Consists of generic command that can be executed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":" * Each command must implement the execute method and specify whether it is an exit command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":"abstract class Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":"     * Executes the command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"     * @param toDo the to-do list on which the command operates.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hannahtay"},"content":"     * @param ui the user interface used for interaction.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"    public abstract void execute(todoList toDo, Ui ui);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"     * Checks whether the command will cause the application to exit.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"     * @return true if the command will exit the application, false otherwise.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hannahtay"},"content":" * Represents the command to list all tasks in the to-do list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hannahtay"},"content":"class ListCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hannahtay"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hannahtay"},"content":"     * @param toDo the to-do list to show.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hannahtay"},"content":"     * @param ui the user interface to display the tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hannahtay"},"content":"        toDo.showTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hannahtay"},"content":"     * Returns false since this command doesn\u0027t exit the application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hannahtay"},"content":"     * @return false, this command doesn\u0027t cause the application to exit.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hannahtay"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hannahtay"},"content":" * Represents the command to mark a task as done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hannahtay"},"content":"class MarkCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hannahtay"},"content":"    private int taskNumber;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hannahtay"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hannahtay"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hannahtay"},"content":"        toDo.markTaskAsDone(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hannahtay"},"content":"        Task task \u003d toDo.getTask(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"Marked \u003e \" + task.getDescription() + \" \u003c as done!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hannahtay"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hannahtay"},"content":" * Represents the command to unmark a task as not done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hannahtay"},"content":"class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hannahtay"},"content":"    private int taskNumber;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hannahtay"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hannahtay"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hannahtay"},"content":"        toDo.markTaskAsNotDone(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hannahtay"},"content":"        Task task \u003d toDo.getTask(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"Unmarked \u003e \" + task.getDescription() + \" \u003c as done!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hannahtay"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hannahtay"},"content":" * Represents the command to delete a task from the to-do list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hannahtay"},"content":"class DeleteCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hannahtay"},"content":"    private int taskNumber;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hannahtay"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hannahtay"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hannahtay"},"content":"        toDo.deleteTask(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hannahtay"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hannahtay"},"content":" * Represents the command to add a new task to the to-do list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hannahtay"},"content":"class AddCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hannahtay"},"content":"    private Task task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hannahtay"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hannahtay"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hannahtay"},"content":"        toDo.addTask(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"Added \u003e \" + task + \" \u003c !\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hannahtay"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hannahtay"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hannahtay"},"content":"class ExitCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"hannahtay"},"content":"        return true;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"hannahtay"},"content":" * Represents the command to show help information to the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"hannahtay"},"content":"class HelpCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hannahtay"},"content":"        ui.showHelpMsg();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"hannahtay"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"hannahtay"},"content":"class FindCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"hannahtay"},"content":"    private String keyword;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"hannahtay"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"hannahtay"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"hannahtay"},"content":"    public void execute(todoList toDo, Ui ui) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"hannahtay"},"content":"        toDo.findTask(keyword);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"hannahtay"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"hannahtay"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"hannahtay"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"hannahtay":185}},{"path":"src/main/java/Nyani.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"//","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hannahtay"},"content":"// Source code recreated from a .class file by IntelliJ IDEA","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":"// (powered by FernFlower decompiler)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":"//","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":"public class Nyani {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"    public static void main(String[] args) throws NyaniException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hannahtay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"        todoList toDo \u003d new todoList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"        ui.showIntro();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"        SaveDataHandler.readSaveData(toDo);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"        while (true) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"            try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"                command.execute(toDo, ui);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"                if (command.isExit()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hannahtay"},"content":"                    SaveDataHandler.saveData(toDo);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hannahtay"},"content":"                    ui.showExitMsg();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hannahtay"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hannahtay"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hannahtay"},"content":"            } catch (NyaniException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hannahtay"},"content":"                e.printWithDivider();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hannahtay"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hannahtay"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hannahtay"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hannahtay"},"content":"        sc.close();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"hannahtay":38}},{"path":"src/main/java/NyaniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hannahtay"},"content":" * Custom exception class for Nyani.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":"public class NyaniException extends Exception {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"     * Constructor to initialize the exception with a message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":"     * @param message The message to be displayed with the exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"    public NyaniException(String message) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hannahtay"},"content":"        super(message);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"     * Prints the exception message along with a divider for better readability.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"    public void printWithDivider() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"        ui.showDivider();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"        System.out.println(super.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"        ui.showDivider();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"hannahtay":24}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hannahtay"},"content":" * Parses user input and returns the corresponding Command object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":"public class Parser {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"     * Parses the input command string and returns the appropriate command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":"     * @param fullCommand the full command string entered by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"     * @throws NyaniException if the command is invalid or improperly formatted.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"    public static Command parse(String fullCommand) throws NyaniException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"        // Split the command into the command word and the arguments","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"        String commandWord \u003d words[0].toLowerCase();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"        String argument \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"        // Match the command with the appropriate case","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"        case \"list\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hannahtay"},"content":"            return new MarkCommand(Integer.parseInt(argument));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hannahtay"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hannahtay"},"content":"            return new UnmarkCommand(Integer.parseInt(argument));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hannahtay"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hannahtay"},"content":"            return new DeleteCommand(Integer.parseInt(argument));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hannahtay"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hannahtay"},"content":"            return new AddCommand(new ToDo(argument));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hannahtay"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hannahtay"},"content":"            return parseDeadline(argument);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hannahtay"},"content":"        case \"event\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hannahtay"},"content":"            return parseEvent(argument);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hannahtay"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hannahtay"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hannahtay"},"content":"        case \"help\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hannahtay"},"content":"            return new HelpCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hannahtay"},"content":"        case \"find\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hannahtay"},"content":"            return new FindCommand(argument);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hannahtay"},"content":"        default:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hannahtay"},"content":"            throw new NyaniException(\"Nyani doesn\u0027t understand \" + commandWord);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hannahtay"},"content":"     * Parses a deadline command and returns the corresponding command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hannahtay"},"content":"     * @param argument the deadline command argument.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hannahtay"},"content":"     * @return the AddCommand with a Deadline task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hannahtay"},"content":"     * @throws NyaniException if the deadline format is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hannahtay"},"content":"    private static Command parseDeadline(String argument) throws NyaniException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hannahtay"},"content":"        String[] deadlineParts \u003d argument.split(\" /by \", 2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hannahtay"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hannahtay"},"content":"            throw new NyaniException(\"Wrong format! Try: deadline [task] /by [date/time]!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hannahtay"},"content":"        return new AddCommand(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hannahtay"},"content":"     * Parses an event command and returns the corresponding command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hannahtay"},"content":"     * @param argument the event command argument.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hannahtay"},"content":"     * @return the AddCommand with an Event task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hannahtay"},"content":"     * @throws NyaniException if the event format is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hannahtay"},"content":"    private static Command parseEvent(String argument) throws NyaniException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hannahtay"},"content":"        String[] eventParts \u003d argument.split(\" /from | /to \", 3);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hannahtay"},"content":"        if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hannahtay"},"content":"            throw new NyaniException(\"Wrong format! Try: event /from [date/time] /to [date/time]!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hannahtay"},"content":"        return new AddCommand(new Event(eventParts[0], eventParts[1], eventParts[2]));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"hannahtay":85}},{"path":"src/main/java/SaveDataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hannahtay"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"import java.util.List;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":" * Handles the saving and reading of tasks to/from a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"public class SaveDataHandler {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"     * Saves the current task list to a file and then loads it.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"     * @param toDo the to-do list containing the tasks to save.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"    public static void saveData(todoList toDo) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"        Path saveFilePath \u003d Paths.get(home, \"Documents\", \"Nyani.txt\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"        // Write tasks to specified file","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"        writeSaveData(saveFilePath, toDo.getTaskStrings());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hannahtay"},"content":"        // Read saved tasks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hannahtay"},"content":"        readSaveData(toDo);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hannahtay"},"content":"     * Writes the list of task strings to a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hannahtay"},"content":"     * @param path the path of the file to save the tasks to.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hannahtay"},"content":"     * @param tasks the list of task strings to save.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hannahtay"},"content":"    private static void writeSaveData(Path path, List\u003cString\u003e tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hannahtay"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hannahtay"},"content":"            Files.write(path, tasks);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"Nyani will remember ur tasks for u!\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hannahtay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hannahtay"},"content":"            System.err.println(\"Save failed :(\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hannahtay"},"content":"     * Reads saved tasks from a file and adds them to the to-do list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hannahtay"},"content":"     * @param toDo the to-do list to which the tasks will be added.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hannahtay"},"content":"    public static void readSaveData(todoList toDo) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hannahtay"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hannahtay"},"content":"        Path saveFilePath \u003d Paths.get(home, \"Documents\", \"Nyani.txt\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hannahtay"},"content":"        if (Files.exists(saveFilePath)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hannahtay"},"content":"            try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hannahtay"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(saveFilePath);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hannahtay"},"content":"                System.out.println(\"Loading tasks...\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hannahtay"},"content":"                for (String line : lines) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hannahtay"},"content":"                    // Print each line being processed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hannahtay"},"content":"                    System.out.println(line);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hannahtay"},"content":"                    // Split the line into status and the rest of the info","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hannahtay"},"content":"                    String[] parts \u003d line.split(\"\\\\]\", 2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hannahtay"},"content":"                    if (parts.length \u003c 2) continue;  // If the line is not valid, skip","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hannahtay"},"content":"                    String status \u003d parts[0].trim();  // Status part: [X] or [ ]","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hannahtay"},"content":"                    String taskInfo \u003d parts[1].trim();  // Task info part: TODO","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hannahtay"},"content":"                    // Create tasks based on the type and description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hannahtay"},"content":"                    if (taskInfo.startsWith(\"TODO:\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hannahtay"},"content":"                        String description \u003d taskInfo.substring(5).trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hannahtay"},"content":"                        ToDo task \u003d new ToDo(description);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hannahtay"},"content":"                        if (status.equals(\"[X\")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hannahtay"},"content":"                            task.markDone();  // Mark as done if [X]","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hannahtay"},"content":"                        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hannahtay"},"content":"                        toDo.addTask(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hannahtay"},"content":"                    } else if (taskInfo.startsWith(\"DEADLINE\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hannahtay"},"content":"                        String[] deadlineParts \u003d taskInfo.split(\"\\\\| \", 2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hannahtay"},"content":"                        String description \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hannahtay"},"content":"                        String timeInfo \u003d deadlineParts[0].trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hannahtay"},"content":"                        String[] timeParts \u003d timeInfo.split(\" \\\\(by: \",2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hannahtay"},"content":"                        String deadline \u003d timeParts[1].substring(0,timeParts[1].length()- 1).trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hannahtay"},"content":"                        Deadline task \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hannahtay"},"content":"                        if (status.equals(\"[X\")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hannahtay"},"content":"                            task.markDone();  // Mark as done if [X]","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hannahtay"},"content":"                        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hannahtay"},"content":"                        toDo.addTask(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hannahtay"},"content":"                    } else if (taskInfo.startsWith(\"EVENT\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hannahtay"},"content":"                        String[] eventParts \u003d taskInfo.split(\"\\\\| \", 2); //splits at desc","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hannahtay"},"content":"                        String description \u003d eventParts[1].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hannahtay"},"content":"                        String timeInfo \u003d eventParts[0].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hannahtay"},"content":"                        String[] timeParts \u003d timeInfo.split(\" \\\\(from: \", 2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hannahtay"},"content":"                        String[] times \u003d timeParts[1].split(\" to: \", 2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hannahtay"},"content":"                        String start \u003d times[0].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hannahtay"},"content":"                        String end \u003d times[1].substring(0, times[1].length() - 1).trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hannahtay"},"content":"                        Event task \u003d new Event(description, start, end);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hannahtay"},"content":"                        if (status.equals(\"[X\")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hannahtay"},"content":"                            task.markDone();  // Mark as done if [X]","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hannahtay"},"content":"                        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hannahtay"},"content":"                        toDo.addTask(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hannahtay"},"content":"                    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hannahtay"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hannahtay"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hannahtay"},"content":"                System.err.println(\"Read failed :(\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hannahtay"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hannahtay"},"content":"        } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"Nyani doesn\u0027t have any files to read at the moment...\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"hannahtay":113}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hannahtay"},"content":" * Ui class handles displaying system messages to the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":"public class Ui {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"     * Displays a divider line to the console.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":"    public static void showDivider() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"────────────────────\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"     * Displays an introductory message when the program starts.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"    public void showIntro() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"        String logo \u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"                \"     ^,,,,^\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"                        + \"     ( O-O)\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"                        + \"     /^   \u003e\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"        System.out.println(logo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"Hi there! I\u0027m NYANI ^_^\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"What shall we do today?\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"Type \u0027help\u0027 to see all commands :)\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hannahtay"},"content":"     * Displays an exit message when the program exits.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hannahtay"},"content":"    public void showExitMsg() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hannahtay"},"content":"        showDivider();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"c U soon! :D \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hannahtay"},"content":"        showDivider();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hannahtay"},"content":"     * Displays the help message with a list of available commands.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hannahtay"},"content":"    public void showHelpMsg() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"List of commands:\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hannahtay"},"content":"        showDivider();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"list: shows todo list\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"mark: marks item as done\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"unmark: unmarks item as done\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"deadline: adds an item with specified deadline\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"          try deadline [task] /by [date/time]!\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"event: creates an event with specified timeline\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"       try event /from [date/time] /to [date/time]!\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"find: finds the task with your specified keyword\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hannahtay"},"content":"        System.out.println(\"Type \u003cbye\u003e to exit \u0026 save your list!\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hannahtay"},"content":"        showDivider();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"hannahtay":53}},{"path":"src/main/java/todoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hannahtay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hannahtay"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hannahtay"},"content":" * Abstract Task class representing a generic task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hannahtay"},"content":"abstract class Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hannahtay"},"content":"    protected String description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hannahtay"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hannahtay"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hannahtay"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hannahtay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hannahtay"},"content":"    public void markDone() { isDone \u003d true; }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hannahtay"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hannahtay"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hannahtay"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hannahtay"},"content":"        return isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hannahtay"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hannahtay"},"content":"        return description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hannahtay"},"content":"    public abstract String getType();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hannahtay"},"content":"     * Provides a string representation of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hannahtay"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hannahtay"},"content":"    public String toString() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hannahtay"},"content":"        return \"[\" + getType() + \"]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hannahtay"},"content":" * ToDo class representing a task classified under \u0027to-do\u0027.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hannahtay"},"content":"class ToDo extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hannahtay"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hannahtay"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hannahtay"},"content":"    public String getType(){","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hannahtay"},"content":"        return \"T\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hannahtay"},"content":" * Deadline class representing a task with a deadline.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hannahtay"},"content":"class Deadline extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hannahtay"},"content":"    String deadline;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hannahtay"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hannahtay"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hannahtay"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hannahtay"},"content":"    public String getType() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hannahtay"},"content":"        return \"D\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hannahtay"},"content":"    public String toString() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hannahtay"},"content":"        return super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hannahtay"},"content":" * Event class representing a task with a time window.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hannahtay"},"content":"class Event extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hannahtay"},"content":"    String start;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hannahtay"},"content":"    String end;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hannahtay"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hannahtay"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hannahtay"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hannahtay"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hannahtay"},"content":"    public String getType() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hannahtay"},"content":"        return \"E\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hannahtay"},"content":"    public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hannahtay"},"content":"        return super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hannahtay"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hannahtay"},"content":" * Class managing the list of tasks in the to-do list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hannahtay"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hannahtay"},"content":"public class todoList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hannahtay"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hannahtay"},"content":"    public todoList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hannahtay"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hannahtay"},"content":"     * Adds a task to the to-do list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hannahtay"},"content":"     * @param task the task to be added.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hannahtay"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hannahtay"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hannahtay"},"content":"     * Deletes a task from the to-do list by its task number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hannahtay"},"content":"     * @param taskNumber the task number to delete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hannahtay"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hannahtay"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hannahtay"},"content":"                System.out.println(\"Invalid task number!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hannahtay"},"content":"            } else {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hannahtay"},"content":"                Task removedTask \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hannahtay"},"content":"                System.out.println(\"Removed! \u003e \" + removedTask + \" \u003c\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hannahtay"},"content":"                System.out.println(\"You have \" + tasks.size() + \" task(s) left!\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hannahtay"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hannahtay"},"content":"     * Marks a task as done based on its task number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hannahtay"},"content":"     * @param taskNumber the task number to mark as done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hannahtay"},"content":"    public void markTaskAsDone(int taskNumber) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hannahtay"},"content":"        if (taskNumber \u003e tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"There\u0027s no such task!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hannahtay"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hannahtay"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hannahtay"},"content":"            task.markDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hannahtay"},"content":"     * Marks a task as not done based on its task number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hannahtay"},"content":"     * @param taskNumber the task number to mark as not done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hannahtay"},"content":"    public void markTaskAsNotDone(int taskNumber) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"hannahtay"},"content":"        if (taskNumber \u003e tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"There\u0027s no such task!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hannahtay"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"hannahtay"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"hannahtay"},"content":"            task.markNotDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"hannahtay"},"content":"     * Displays all tasks in the to-do list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hannahtay"},"content":"    public void showTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"hannahtay"},"content":"        if (tasks.isEmpty()){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"────────────────────\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"Time to chill !\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"────────────────────\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"hannahtay"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"────────────────────\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"To-do!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"hannahtay"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"hannahtay"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"hannahtay"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"────────────────────\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"hannahtay"},"content":"     * Converts the tasks into strings suitable for saving.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"hannahtay"},"content":"     * @return List of task strings.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"hannahtay"},"content":"    public List\u003cString\u003e getTaskStrings() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"hannahtay"},"content":"        List\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"hannahtay"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"hannahtay"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"hannahtay"},"content":"                taskStrings.add((task.isDone() ? \"[X]\" : \"[ ]\") + \"TODO: \" + task.getDescription());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"hannahtay"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"hannahtay"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"hannahtay"},"content":"                taskStrings.add((task.isDone() ? \"[X]\" : \"[ ]\") + \"DEADLINE (by: \" + deadline.deadline + \") | \" + task.getDescription());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"hannahtay"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"hannahtay"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"hannahtay"},"content":"                taskStrings.add((task.isDone() ? \"[X]\" : \"[ ]\") + \"EVENT (from: \" + event.start + \" to: \" + event.end + \") | \" + task.getDescription());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"hannahtay"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"hannahtay"},"content":"        return taskStrings;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"hannahtay"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"hannahtay"},"content":"     * Gets a task based on its task number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"hannahtay"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"hannahtay"},"content":"     * @param taskNumber the task number to retrieve.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"hannahtay"},"content":"     * @return the task object at the given index, or null if invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"hannahtay"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"hannahtay"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"hannahtay"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"hannahtay"},"content":"            return null;  // Return null if the task number is out of range","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"hannahtay"},"content":"        return tasks.get(taskNumber - 1);  // Return the task at the given index (taskNumber - 1)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"hannahtay"},"content":"    public void findTask(String keyword){","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"hannahtay"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"hannahtay"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"hannahtay"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"hannahtay"},"content":"                System.out.println(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"hannahtay"},"content":"                found \u003d true;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"hannahtay"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"hannahtay"},"content":"        if (!found) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"hannahtay"},"content":"            System.out.println(\"Task not found!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"hannahtay"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"hannahtay"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"hannahtay"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"hannahtay"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"hannahtay":223}}]
