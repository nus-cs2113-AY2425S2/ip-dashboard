[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"# RCApp Chatbot User Guide","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"rchlai":1,"-":29}},{"path":"rc.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"D | 1 | project proposal | Friday 4pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"T | 0 | meet with mom","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"T | 1 | meet with dad","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"D | 0 | report | evening","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"T | 0 | play with dog","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"rchlai":5}},{"path":"src/main/java/rc/RCApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.command.Command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"import rc.parser.Parser;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * This is the main class for running the RCApp chatbot.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" * It utilizes the UI, Parser, TaskList, and Storage class containing","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":" * each of the components and functionalities of the chatbot.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"public class RCApp {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"    private final Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"    // relative path of \u0027F:\\repos\\ip\\rc.txt\u0027 directory","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"    private static final String FILE_PATH \u003d \"rc.txt\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"     * Constructs a Storage instance which accepts","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"     * a file path of the text file to be read from and write to when","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"     * initialized.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"    public RCApp() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     * A while loop is used to keep the program running as it parses","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * commands typed into it until the user typed in \u0027exit\u0027 in the CLI","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * to halt the program.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * All recorded tasks will be input into a text file (.txt). When the","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     * program runs again, it will read the previously recorded tasks from","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     * the same file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException To catch exceptions to each parsed command","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    public void chatWithBot() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        UI.printChatbotLogo();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"        UI.printWelcomeMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"        // load tasks from file when program starts","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"        storage.loadTasksFromFile();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"        while (isRunning) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"            UI.printPrompt();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"            String line \u003d input.nextLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"            try {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"                Command command \u003d Parser.parse(line);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"                command.execute(storage);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"                if (command.shouldExit()) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"                }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"                UI.printErrorMessage(error);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"     * Serves as the entry point of the chatbot application.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"     * Creates a new RCApp instance and uses its chatWithBot()","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rchlai"},"content":"     * method to run the program.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rchlai"},"content":"     * @param args Command-line arguments (not used)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rchlai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rchlai"},"content":"        new RCApp().chatWithBot();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"rchlai":78}},{"path":"src/main/java/rc/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.tasklist.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"import rc.task.Task;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * This command adds a specified task to the task list, updates","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" * the storage file, and displays the updated number of tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"    private final Task task;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     * Constructs an `AddTaskCommand` with the specified task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * Executes the command to add the task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     * This method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds the task to the task list using `TaskList.addTask`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eWrites the updated task list to the storage file using `storage.writeTaskToFile`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eDisplays the updated number of tasks using `TaskList.displayNumOfTasks`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds a divider using `UI.addDivider`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component used to write the updated task list to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    public void execute(Storage storage) throws DukeException {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        TaskList.addTask(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"        storage.writeTaskToFile();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"        TaskList.displayNumOfTasks();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"        UI.addDivider();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"rchlai":49}},{"path":"src/main/java/rc/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" * This class serves as the base class for all commands in the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * Subclasses must implement the `execute` method to define the specific","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * behavior","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" * of the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":" * The `shouldExit` method can be overridden to indicate whether","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":" * the command should terminate the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     * Executes the command with the given storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"     * This method must be implemented by subclasses to define the specific","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"     * behavior of the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component used by the command to interact with data.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"    public abstract void execute(Storage storage) throws DukeException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     * Indicates whether the command should cause the application to exit.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     * By default, this method returns `false`. Subclasses (e.g., `ExitCommand`)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * can override this method to return `true` if the command should terminate","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * @return `true` if the command should cause the application to exit,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     *         otherwise `false`.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"        return false;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"rchlai":43}},{"path":"src/main/java/rc/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.tasklist.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * This command deletes a task specified by the user input, updates","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * the storage file, and adds a visual divider for better UI presentation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"    private final String line;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     * Constructs a `DeleteCommand` with the specified user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     * @param input The user input specifying the task to be deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"        line \u003d input;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     * Executes the command to delete the task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     * This method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eDeletes the task from the task list using `TaskList.deleteTask`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eWrites the updated task list to the storage file using `storage.writeTaskToFile`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds a divider using `UI.addDivider`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component used to write the updated task list to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"    public void execute(Storage storage) throws DukeException {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"        TaskList.deleteTask(line);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"        storage.writeTaskToFile();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        UI.addDivider();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"rchlai":46}},{"path":"src/main/java/rc/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" * This command prints a farewell message to the user and signals the application","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * to terminate by overriding the `shouldExit` method to return `true`.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"     * This method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003ePrints a farewell message to user using `UI.printFarewellMessage`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds a divider using `UI.addDivider`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component (unused in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"        UI.printFarewellMessage();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"        UI.addDivider();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     * Indicates that the application should exit.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * This method overrides the default behavior of the `shouldExit` method","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * in the `Command` class to return `true`, signaling that the application","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     * should terminate.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     * @return `true` to indicate that the application should exit.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"        return true;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"rchlai":44}},{"path":"src/main/java/rc/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.tasklist.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" * Represents a command to search for tasks in the task list that match","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * a given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * This command searches through the task list for tasks whose descriptions contain","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" * the specified keyword as a whole word and displays the matching tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":" * A divider is added for better UI presentation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"    private final String line;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     * Constructs a `FindCommand` with the specified user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"     * @param input The user input containing the keyword to search for.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"        line \u003d input;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     * Executes the command to search for tasks matching the keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     * This method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eSearches for tasks in the task list that match the keyword using `TaskList.findTask`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds a divider using `UI.addDivider`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component (unused in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    public void execute(Storage storage) throws DukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        TaskList.findTask(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"        UI.addDivider();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"rchlai":47}},{"path":"src/main/java/rc/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.tasklist.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * This command prints all tasks currently stored in the task list and","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * adds a divider for better UI presentation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"     * Executes the command to list all tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"     * This method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003ePrints all tasks in the list using `TaskList.printAllTasks`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds a divider using `UI.addDivider`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component (unused in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"        TaskList.printAllTasks();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"        UI.addDivider();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"rchlai":31}},{"path":"src/main/java/rc/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.tasklist.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" * Represents a command to mark a task as completed in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * This command marks a task specified by the user input as completed,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * updates the storage file, and adds a divider for better UI presentation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"    private final String line;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     * Constructs a `MarkCommand` with the specified user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     * @param input The user input specifying the task to be marked as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"        line \u003d input;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     * Executes the command to mark the task as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     * This method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eMarks the specified task as completed using `TaskList.markTask`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eWrites the updated task list to the storage file using `storage.writeTaskToFile`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds a divider using `UI.addDivider`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component used to write the updated task list to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"    public void execute(Storage storage) throws DukeException {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"        TaskList.markTask(line);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"        storage.writeTaskToFile();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        UI.addDivider();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"rchlai":46}},{"path":"src/main/java/rc/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.storage.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.tasklist.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" * Represents a command to unmark a task as incomplete in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * This command unmarks a task specified by the user input as incomplete,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * updates the storage file, and adds a divider for better UI presentation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"    private final String line;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     * Constructs an `UnmarkCommand` with the specified user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     * @param input The user input specifying the task to be unmarked as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"        line \u003d input;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     * Executes the command to unmark the task as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     * This method performs the following steps:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eUnmarks the specified task as incomplete using `TaskList.unmarkTask`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eWrites the updated task list to the storage file using `storage.writeTaskToFile`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     *   \u003cli\u003eAdds a divider using `UI.addDivider`.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * @param storage The storage component used to write the updated task list to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"    public void execute(Storage storage) throws DukeException {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"        TaskList.unmarkTask(line);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"        storage.writeTaskToFile();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        UI.addDivider();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"rchlai":46}},{"path":"src/main/java/rc/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.exception;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":" * The `DukeException` class is a custom exception used to handle errors","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":" * specific to the RC chatbot application.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * It extends the `Exception` class and provides a way to pass error","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" * messages to the caller.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"     * Constructs a new `DukeException` with the specified error message.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"rchlai":19}},{"path":"src/main/java/rc/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.parser;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.command.FindCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.command.AddTaskCommand;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.command.Command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"import rc.command.DeleteCommand;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"import rc.command.ExitCommand;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"import rc.command.ListCommand;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"import rc.command.MarkCommand;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"import rc.command.UnmarkCommand;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"import rc.task.Deadline;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"import rc.task.Event;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"import rc.task.ToDo;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":" * Parses user command inputs to be converted into executable commands.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":" * Handles various command types such as adding tasks,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":" * marking/unmarking tasks, deleting tasks, and listing tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"public class Parser {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"    private static final String TO_DO_PREFIX \u003d \"todo\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    private static final String DEADLINE_PREFIX \u003d \"deadline\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"    private static final String EVENT_PREFIX \u003d \"event\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     * @param line The user input to be parsed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     * @return The command corresponding to the user input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the input is empty or invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"    public static Command parse(String line) throws DukeException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Empty input. Please write down a task\" +","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"                    \" to record.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"        if (line.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        if (line.startsWith(\"mark\")) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"            return new MarkCommand(line);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"        if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"            return new UnmarkCommand(line);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"        if (line.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"            return new DeleteCommand(line);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"        if (line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"        if (line.startsWith(\"find\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"            return new FindCommand(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"        return parseTaskCommand(line);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"     * Parses task-related command input (todo, deadline, event).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"     * @param line The user input to be parsed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rchlai"},"content":"     * @return The command corresponding to the task input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the task format is invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rchlai"},"content":"    private static Command parseTaskCommand(String line) throws DukeException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rchlai"},"content":"        // Directly check for the prefix and return the corresponding Command","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rchlai"},"content":"        if (line.startsWith(TO_DO_PREFIX)) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rchlai"},"content":"            return new AddTaskCommand(handleToDo(line));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rchlai"},"content":"        if (line.startsWith(DEADLINE_PREFIX)) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rchlai"},"content":"            return new AddTaskCommand(handleDeadline(line));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rchlai"},"content":"        if (line.startsWith(EVENT_PREFIX)) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rchlai"},"content":"            return new AddTaskCommand(handleEvent(line));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rchlai"},"content":"        throw new DukeException(\"Invalid task format. Please use todo/event/\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rchlai"},"content":"                \"deadline/mark/unmark/delete/find prefix.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rchlai"},"content":"     * Handles the parsing of a todo task input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the todo prefix.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rchlai"},"content":"     * @return A `ToDo` object representing the todo task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the task description is empty.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rchlai"},"content":"    private static ToDo handleToDo(String line) throws DukeException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rchlai"},"content":"        String description \u003d line.replace(TO_DO_PREFIX, \"\").trim();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rchlai"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Please provide a description for the \" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rchlai"},"content":"                    \"to-do task.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rchlai"},"content":"        return new ToDo(description);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rchlai"},"content":"     * Handles the parsing of a deadline task input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the deadline prefix.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rchlai"},"content":"     * @return A `Deadline` object representing the deadline task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the input format is invalid or missing required fields.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rchlai"},"content":"    private static Deadline handleDeadline(String line) throws DukeException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rchlai"},"content":"        final String BY_PREFIX \u003d \"/by\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rchlai"},"content":"        int indexOfByPrefix \u003d line.indexOf(BY_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rchlai"},"content":"        // checks if \"/by\" is not found","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rchlai"},"content":"        boolean isByNotFound \u003d (indexOfByPrefix \u003d\u003d -1);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rchlai"},"content":"        if (isByNotFound) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Deadline tasks need \u0027/by\u0027 keyword.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rchlai"},"content":"        String description \u003d extractString(line, 0, indexOfByPrefix,","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rchlai"},"content":"                DEADLINE_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rchlai"},"content":"        String dueDate \u003d extractLastString(line, indexOfByPrefix, BY_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rchlai"},"content":"        if (description.isEmpty() || dueDate.isEmpty()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Use format: deadline \u003cdescription\u003e /by\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rchlai"},"content":"                    \" \u003cdue_date\u003e\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rchlai"},"content":"        return new Deadline(description, dueDate);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rchlai"},"content":"     * Handles the parsing of an event task input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the event prefix.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rchlai"},"content":"     * @return An `Event` object representing the event task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the input format is invalid or missing required fields.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rchlai"},"content":"    private static Event handleEvent(String line) throws DukeException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rchlai"},"content":"        final String FROM_PREFIX \u003d \"/from\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rchlai"},"content":"        final String TO_PREFIX \u003d \"/to\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rchlai"},"content":"        int indexOfFromPrefix \u003d line.indexOf(FROM_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rchlai"},"content":"        int indexOfToPrefix \u003d line.indexOf(TO_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rchlai"},"content":"        // checks if \"/from\" or \"/to\" is not found","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rchlai"},"content":"        boolean isFromNotFound \u003d (indexOfFromPrefix \u003d\u003d -1);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rchlai"},"content":"        boolean isToNotFound \u003d (indexOfToPrefix \u003d\u003d -1);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rchlai"},"content":"        // checks whether \"/from\" comes after \"/to\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rchlai"},"content":"        boolean isFromAfterTo \u003d (indexOfFromPrefix \u003e indexOfToPrefix);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rchlai"},"content":"        if (isFromNotFound || isToNotFound || isFromAfterTo) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Event tasks need \u0027/from\u0027 and \u0027/to\u0027 keywords.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rchlai"},"content":"        String description \u003d extractString(line, 0, indexOfFromPrefix,","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rchlai"},"content":"                EVENT_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rchlai"},"content":"        String start \u003d extractString(line, indexOfFromPrefix, indexOfToPrefix,","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rchlai"},"content":"                FROM_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rchlai"},"content":"        String end \u003d extractLastString(line, indexOfToPrefix, TO_PREFIX);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rchlai"},"content":"        if (description.isEmpty() || start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Use format: event \u003cdescription\u003e /from\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rchlai"},"content":"                    \" \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rchlai"},"content":"        return new Event(description, start, end);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rchlai"},"content":"     * Extracts a substring from the input line based on the specified","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rchlai"},"content":"     * indices and removes the prefix.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rchlai"},"content":"     * @param line The input line to extract from.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rchlai"},"content":"     * @param firstIndex The starting index of the substring.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rchlai"},"content":"     * @param lastIndex The ending index of the substring.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rchlai"},"content":"     * @param prefix The prefix to remove from the substring.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rchlai"},"content":"     * @return The extracted and trimmed substring.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rchlai"},"content":"    private static String extractString(String line, int firstIndex,","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rchlai"},"content":"                                        int lastIndex, String prefix) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rchlai"},"content":"        return line.substring(firstIndex, lastIndex)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rchlai"},"content":"                .replace(prefix, \"\").trim();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rchlai"},"content":"     * Extracts a substring from the input line starting at the","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rchlai"},"content":"     * specified index and removes the prefix.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rchlai"},"content":"     * @param line The input line to extract from.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"rchlai"},"content":"     * @param index The starting index of the substring.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"rchlai"},"content":"     * @param prefix The prefix to remove from the substring.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"rchlai"},"content":"     * @return The extracted and trimmed substring.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"rchlai"},"content":"    private static String extractLastString(String line, int index, String prefix) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"rchlai"},"content":"        return line.substring(index).replace(prefix, \"\").trim();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"rchlai":205}},{"path":"src/main/java/rc/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import java.io.File;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"import rc.tasklist.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"import rc.task.Deadline;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"import rc.task.Event;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"import rc.task.Task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"import rc.task.ToDo;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":" * Handles reading from and writing to a file to persist task data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":" * Manages the creation of the file and directory if they do not exist,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":" * and provides methods to load tasks from the file and save tasks to the file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"public class Storage {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * Constructs a new `Storage` object with the specified file path.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     * Constructs a new `TaskList` instance","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     * @param path The file path where tasks are stored.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"    public Storage(String path) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"        filePath \u003d path;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     * Writes all tasks from the task list to the file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"     * If an I/O error occurs, an error message will be displayed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    public void writeTaskToFile() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"            writeToFile();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"        } catch (IOException error) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"            UI.printErrorMessage(error);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"     * Writes all tasks from the task list to the file in the","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"     * file format specified in the Task class.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"     * @throws IOException If an I/O error occurs while writing to file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"    public void writeToFile() throws IOException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"        // write each task from arrayList to rc.txt in file format","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"            writer.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"        // complete the writing operation","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"        writer.close();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"     * Loads tasks from the file into the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rchlai"},"content":"     * If the file or directory does not exist, they are created.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rchlai"},"content":"     * Displays an error message if the file is not found.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rchlai"},"content":"    public void loadTasksFromFile() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rchlai"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rchlai"},"content":"            printFileContents();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rchlai"},"content":"        } catch (FileNotFoundException error) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rchlai"},"content":"            UI.print(\"File is not found.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rchlai"},"content":"     * Reads the contents of the file and parses each line into a task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rchlai"},"content":"     * If the file or directory does not exist, they are created.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rchlai"},"content":"     * @throws FileNotFoundException If the file does not exist and cannot be created.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException To display its error message","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rchlai"},"content":"     * @throws IOException To catch I/O errors","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rchlai"},"content":"    private void printFileContents() throws FileNotFoundException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rchlai"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rchlai"},"content":"        File parentFolder \u003d file.getParentFile();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rchlai"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rchlai"},"content":"            // ensure the folder exists before trying to create file","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rchlai"},"content":"            if (parentFolder !\u003d null \u0026\u0026 !parentFolder.exists()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rchlai"},"content":"                // create a new folder","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rchlai"},"content":"                if (parentFolder.mkdirs()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rchlai"},"content":"                    UI.print(\"Creating parent folder at: \" + parentFolder.getPath());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rchlai"},"content":"                }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rchlai"},"content":"                // no file to create if the folder was just created","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rchlai"},"content":"                return;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rchlai"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rchlai"},"content":"            // checking existing data file","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rchlai"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rchlai"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rchlai"},"content":"                    UI.print(\"No existing data file found. \" +","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rchlai"},"content":"                            \"Creating a new one at: \" + filePath);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rchlai"},"content":"                }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rchlai"},"content":"                // No tasks to load if file was just created","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rchlai"},"content":"                return;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rchlai"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rchlai"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rchlai"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rchlai"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rchlai"},"content":"                parseAndAddTask(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rchlai"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rchlai"},"content":"        } catch (DukeException | IOException error) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rchlai"},"content":"            UI.printErrorMessage(error);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rchlai"},"content":"        } finally {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rchlai"},"content":"            UI.addDivider();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rchlai"},"content":"     * Parses a line from the text file into a task and adds it to","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rchlai"},"content":"     * the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rchlai"},"content":"     * @param taskData The line from the file representing a task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the task format is invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rchlai"},"content":"    private void parseAndAddTask(String taskData) throws DukeException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rchlai"},"content":"        // split task string in file into an array of substrings","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rchlai"},"content":"        // e.g., T | 0 | wake up \u003d\u003e [\"T\", \"0\", \"wake up\"]","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rchlai"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rchlai"},"content":"        // parse each task from existing file","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rchlai"},"content":"        Task task \u003d parseTaskFromFile(parts);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rchlai"},"content":"        // add task to tasks list","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rchlai"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rchlai"},"content":"     * Parses the parts of a task line into a `Task` object.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rchlai"},"content":"     * @param parts The array of strings representing the task components.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rchlai"},"content":"     * @return `Task` object that is parsed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the task type is invalid or the format is incorrect.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rchlai"},"content":"    private Task parseTaskFromFile(String[] parts) throws DukeException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rchlai"},"content":"        String taskType \u003d getPart(parts, 0);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rchlai"},"content":"        boolean isDone \u003d getPart(parts, 1).equals(\"1\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rchlai"},"content":"        String description \u003d getPart(parts, 2);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rchlai"},"content":"        Task task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rchlai"},"content":"        switch (taskType) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rchlai"},"content":"        case \"T\":","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rchlai"},"content":"            // to-do task format after splitting:","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rchlai"},"content":"            // [\"T\", \"0/1\", \"\u003cdescription\u003e\"]","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rchlai"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rchlai"},"content":"            break;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rchlai"},"content":"        case \"D\":","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rchlai"},"content":"            // deadline task format after splitting:","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rchlai"},"content":"            // [\"D\", \"0/1\", \"\u003cdescription\u003e\", \"\u003cdueDate\u003e\"]","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rchlai"},"content":"            String dueDate \u003d getPart(parts, 3);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rchlai"},"content":"            task \u003d new Deadline(description, dueDate);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rchlai"},"content":"            break;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rchlai"},"content":"        case \"E\":","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rchlai"},"content":"            // event task format after splitting:","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rchlai"},"content":"            // [\"E\", \"0/1\", \"\u003cdescription\u003e\", \"\u003cstart\u003e\", \"\u003cend\u003e\"]","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rchlai"},"content":"            String start \u003d getPart(parts, 3);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rchlai"},"content":"            String end \u003d getPart(parts, 4);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rchlai"},"content":"            task \u003d new Event(description, start, end);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rchlai"},"content":"            break;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rchlai"},"content":"        default:","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Invalid task format.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rchlai"},"content":"        // mark task as done in program if isDone \u003d\u003d 1 (true)","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rchlai"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rchlai"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rchlai"},"content":"        return task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rchlai"},"content":"     * Retrieves a specific part from the array of task components.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rchlai"},"content":"     * @param parts The array of strings representing the task components.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rchlai"},"content":"     * @param index The index of the part to retrieve.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rchlai"},"content":"     * @return The part at the specified index.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"rchlai"},"content":"    private static String getPart(String[] parts, int index) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"rchlai"},"content":"        return parts[index];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"rchlai":202}},{"path":"src/main/java/rc/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":" * Represents a `Deadline` subclass inheriting the properties of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":" * superclass.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * Identified by the capital letter D.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"    protected String by;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"     * Constructs a `Deadline` task with the specified description and","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"     * due time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"     * @param description The description of the `Deadline` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"     * @param due The due time of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"    public Deadline(String description, String due) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"        super(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"        setBy(due);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"     * Returns the deadline due time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     * @return the due time","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"        return by;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * Sets the deadline due time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     * @param due The due time of the deadline task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"    public void setBy(String due) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"        by \u003d due;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"     * Returns a string representation of the `Deadline` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"     * The format includes the task type `[D]` followed by the task\u0027s status,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"     * description, and due time (e.g., [D][X] Submit work (by: Monday 2pm)).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"     * @return A string representation of the `Deadline` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"     * Returns a formatted string representation of the `Deadline` task when","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"     * saving it to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"     * The format includes the task type `D` followed by the task\u0027s status,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"     * description, and due time (e.g., `D | 1 | Buy groceries | Monday 2pm`).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"     * @return A string representation of the `Deadline` task in file format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"        return \"D\" + super.toFileFormat() + \" | \" + getBy();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"rchlai":70}},{"path":"src/main/java/rc/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":" * Represents an `Event` subclass inheriting the properties of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":" * superclass.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * Identified by the capital letter E.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"    protected String from;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"    protected String to;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"     * Constructs an `Event` task with the specified description, start time","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"     * and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"     * @param description The description of the `Event` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     * @param start The time when the event starts","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     * @param end The time when the event ends","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"        super(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"        setFrom(start);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"        setTo(end);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     * @return start time","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"        return from;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * Sets the start time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     * @param start The start time","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"    public void setFrom(String start) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"        from \u003d start;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"     * @return end time","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"        return to;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"     * Sets the end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"     * @param end The end time","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"    public void setTo(String end) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"        to \u003d end;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"     * Returns a string representation of the `Event` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"     * The format includes the task type `[E]`, the event\u0027s description,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"     * its status, and the start and end times","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"     * (e.g., [E][X] Team meeting (from: 2pm to: 4pm)).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rchlai"},"content":"     * @return A string representation of the `Event` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rchlai"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rchlai"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFrom() + \" to: \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rchlai"},"content":"                + getTo() + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rchlai"},"content":"     * Returns a formatted string representation of the `Event` task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rchlai"},"content":"     * for saving to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rchlai"},"content":"     * The format includes the task type `E`, the task\u0027s status, its description,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rchlai"},"content":"     * and the start and end times","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rchlai"},"content":"     * (e.g., E | 1 | Team meeting | 2pm | 4pm).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rchlai"},"content":"     * @return A string representation of the `Event` task in file format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rchlai"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rchlai"},"content":"        return \"E\" + super.toFileFormat() + \" | \" + getFrom() + \" | \"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rchlai"},"content":"                + getTo();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"rchlai":95}},{"path":"src/main/java/rc/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":" * It serves as the base class for specific task types like","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * `ToDo`, `Deadline`, and `Event`.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"public class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"    protected String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"     * Constructs a new `Task` with the specified description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"        setDescription(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"        markAsNotDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"     * Returns the status icon of the task, indicating whether it is","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"     * done or not.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     * @return \"X\" if the task is done, otherwise a blank space \" \".","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * Returns the task description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * @return description","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"        return this.description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"     * Sets the description of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"     * @param description The new description of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"     * Returns a string representation of the task, including its","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"     * status icon and description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rchlai"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rchlai"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rchlai"},"content":"     * Returns a string representation of the task in a file storage format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rchlai"},"content":"     * @return The task in file format, including its completion status and description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rchlai"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rchlai"},"content":"        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"rchlai":85}},{"path":"src/main/java/rc/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":" * Represents a `ToDo` subclass inheriting the properties of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":" * superclass.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * Identified by the capital letter T.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"     * Constructs a `ToDo` task with the specified description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"     * @param description The description of the `ToDo` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"        super(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     * Returns a string representation of the `ToDo` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"     * The format includes the task type `[T]` followed by the task\u0027s description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"     * and status (e.g., [T][X] Buy groceries).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"     * @return A string representation of the `ToDo` task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     * Returns a formatted string representation of the `ToDo` task when","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"     * saving it to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     * The format includes the task type `T` followed by the task\u0027s status and","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     * description (e.g., T | 1 | Buy groceries).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"     * @return A string representation of the `ToDo` task in file format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"        return \"T\" + super.toFileFormat();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"rchlai":47}},{"path":"src/main/java/rc/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.tasklist;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"import rc.exception.DukeException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":"import rc.ui.UI;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":"import rc.task.Task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":" * Manages a list of tasks and provides functionality such as adding,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":" * marking, unmarking, deleting, and displaying tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":" * Also validate task indices and extract task numbers from user input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"public class TaskList {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"     * Constructs a new `TaskList` object.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"     * Initializes an empty list of tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"     * @return tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"        return tasks;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"     * Adds a task to the task list and displays a confirmation prompt.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"     * @param task of Task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"        // add task into arrayList","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"        // print added task","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        UI.showAddedTask(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"     * Displays the total number of tasks in the list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"    public static void displayNumOfTasks() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"        UI.print(\"You have \" + tasks.size() + \" task(s) in the list\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"     * Displays all tasks in the list with their corresponding indices.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"    public static void printAllTasks() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"        UI.print(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"            UI.showIndexedTask(index, task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"            index++;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"     * Marks a task as done based on the provided task number.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the task number to mark.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the task number is invalid or out of range.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rchlai"},"content":"    public static void markTask(String line) throws DukeException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rchlai"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rchlai"},"content":"            // extract digits from string to be converted into integer type","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rchlai"},"content":"            int markIndex \u003d extractIndex(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rchlai"},"content":"            // checks if index is negative, greater than, or equal to taskCount","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rchlai"},"content":"            validateIndex(markIndex);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rchlai"},"content":"            Task markedTask \u003d tasks.get(markIndex);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rchlai"},"content":"            // use markIndex to mark task from Task[] as done","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rchlai"},"content":"            markedTask.markAsDone();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rchlai"},"content":"            UI.print(\"Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rchlai"},"content":"            // display marked task","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rchlai"},"content":"            UI.showIndexedTask(markIndex, markedTask);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rchlai"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Invalid mark format. Use: mark \u003ctask_number\u003e\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rchlai"},"content":"     * Marks a task as not done based on the provided task number.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the task number to unmark.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the task number is invalid or out of range.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rchlai"},"content":"    public static void unmarkTask(String line) throws DukeException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rchlai"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rchlai"},"content":"            int unmarkIndex \u003d extractIndex(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rchlai"},"content":"            validateIndex(unmarkIndex);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rchlai"},"content":"            Task unmarkTask \u003d tasks.get(unmarkIndex);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rchlai"},"content":"            // use unmarkIndex to mark task from Task[] as not done","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rchlai"},"content":"            unmarkTask.markAsNotDone();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rchlai"},"content":"            UI.print(\"Noted, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rchlai"},"content":"            // display marked task","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rchlai"},"content":"            UI.showIndexedTask(unmarkIndex, unmarkTask);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rchlai"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Use: unmark \u003ctask_number\u003e\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rchlai"},"content":"     * Deletes a task from the list based on the provided task number.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the task number to delete.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the task number is invalid or out of range.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rchlai"},"content":"    public static void deleteTask(String line) throws DukeException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rchlai"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rchlai"},"content":"            int deleteIndex \u003d extractIndex(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rchlai"},"content":"            validateIndex(deleteIndex);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rchlai"},"content":"            Task deletedTask \u003d tasks.get(deleteIndex);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rchlai"},"content":"            // display task before deletion","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rchlai"},"content":"            UI.showDeletedTask(deletedTask);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rchlai"},"content":"            // remove task from arrayList","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rchlai"},"content":"            tasks.remove(deletedTask);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rchlai"},"content":"            // display number of tasks left","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rchlai"},"content":"            displayNumOfTasks();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rchlai"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Use: delete \u003ctask_number\u003e\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rchlai"},"content":"     * Finds tasks in the task list that match a given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rchlai"},"content":"     * This method searches through the task list and prints all tasks whose","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rchlai"},"content":"     * descriptions contain the specified keyword as a whole word.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rchlai"},"content":"     * If no matching tasks are found, a message indicating no matches is","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rchlai"},"content":"     * displayed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the keyword to search for.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rchlai"},"content":"    public static void findTask(String line) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rchlai"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rchlai"},"content":"            String regex \u003d getFindRegex(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rchlai"},"content":"            UI.print(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rchlai"},"content":"            boolean found \u003d false;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rchlai"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rchlai"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rchlai"},"content":"                //  The matches method checks if the description contains","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rchlai"},"content":"                //  the whole word using the boundary markers (\\\\b).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rchlai"},"content":"                if (task.getDescription().matches(\".*\" + regex + \".*\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rchlai"},"content":"                    UI.showIndexedTask(i, task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rchlai"},"content":"                    found \u003d true;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rchlai"},"content":"                }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rchlai"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rchlai"},"content":"            if (!found) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rchlai"},"content":"                UI.print(\"No matching tasks found.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rchlai"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rchlai"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rchlai"},"content":"            UI.printErrorMessage(error);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rchlai"},"content":"     * Extracts and processes the keyword from the user input for the `find` command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rchlai"},"content":"     * This method removes the `find` prefix from the input, trims any extra spaces,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rchlai"},"content":"     * and constructs a regex pattern to match the keyword as a whole word.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rchlai"},"content":"     * If the keyword is missing, it throws a `DukeException`.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the `find` command and the keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rchlai"},"content":"     * @return A regex pattern that matches the keyword as a whole word.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the keyword is missing or the input is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rchlai"},"content":"    private static String getFindRegex(String line) throws DukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rchlai"},"content":"        final String FIND_PREFIX \u003d \"find\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rchlai"},"content":"        String keyword \u003d line.replace(FIND_PREFIX, \"\").trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rchlai"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Keyword is missing.\" +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rchlai"},"content":"                    \" Type in a keyword in this format: find \u003ckeyword\u003e\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rchlai"},"content":"        // The regex \\\\b ensures that the keyword matches as a whole word","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rchlai"},"content":"        // and is not part of another word.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rchlai"},"content":"        // For example, \"me\" would only match the word \"me\" and not \"meet.\"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rchlai"},"content":"        return \"\\\\b\" + keyword + \"\\\\b\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"rchlai"},"content":"     * Extracts the task index from the user input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"rchlai"},"content":"     * @param line The user input containing the task number.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"rchlai"},"content":"     * @return The extracted task index (adjusted for zero-based indexing).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"rchlai"},"content":"    private static int extractIndex(String line) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"rchlai"},"content":"        return Integer.parseInt(line.replaceAll(\"[^0-9]\",","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"rchlai"},"content":"                \"\")) - UI.getOffset();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"rchlai"},"content":"     * Validates the task index to ensure it is within the bounds of","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"rchlai"},"content":"     * the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"rchlai"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"rchlai"},"content":"     * @param index The task index to validate.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"rchlai"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"rchlai"},"content":"    private static void validateIndex(int index) throws DukeException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"rchlai"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"rchlai"},"content":"            throw new DukeException(\"Invalid or unavailable task number.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"rchlai"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"rchlai":223}},{"path":"src/main/java/rc/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rchlai"},"content":"package rc.ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rchlai"},"content":"import rc.task.Task;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rchlai"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rchlai"},"content":" * This class contains all components and methods that make up and","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rchlai"},"content":" * design the user interface of the chatbot.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rchlai"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rchlai"},"content":"public class UI {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"    private static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rchlai"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rchlai"},"content":"            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rchlai"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rchlai"},"content":"            \"______________\\n\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"                    +\"\\\\____  \\\\_  __ \\\\\\n\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rchlai"},"content":"                    +\"|    _/    \\\\ \\\\/\\n\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rchlai"},"content":"                    +\"|  |  \\\\     \\\\__\\n\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rchlai"},"content":"                    +\"|__|__/\\\\______/\\n\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rchlai"},"content":"     * Getter method of the constant variable index offset.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rchlai"},"content":"     * @return INDEX_OFFSET","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rchlai"},"content":"    public static int getOffset() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rchlai"},"content":"        return INDEX_OFFSET;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rchlai"},"content":"     * Prints out a line of string passed into the method.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rchlai"},"content":"     * @param str of String","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rchlai"},"content":"    public static void print(String str) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rchlai"},"content":"        System.out.println(str);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rchlai"},"content":"     * Prints out a line divider to separate texts in the CLI","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rchlai"},"content":"     * and avoid text clutter","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rchlai"},"content":"    public static void addDivider() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rchlai"},"content":"        print(DIVIDER);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rchlai"},"content":"     * Prints out the RCApp chatbot brand logo","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rchlai"},"content":"    public static void printChatbotLogo() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rchlai"},"content":"        print(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rchlai"},"content":"     * Prints out the error message of a specific exception","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rchlai"},"content":"     * @param error of Exception","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rchlai"},"content":"    public static void printErrorMessage(Exception error) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rchlai"},"content":"        print(error.getMessage());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rchlai"},"content":"     * Prints out the welcome prompt message of the chatbot.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rchlai"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rchlai"},"content":"     * Gives instruction on how to exit the program.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rchlai"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rchlai"},"content":"        print(\"Good day! I\u0027m RC, your personal chatbot.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rchlai"},"content":"        print(\"Do you need my assistance?\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rchlai"},"content":"        print(\"To exit, type \u0027bye\u0027.\\n\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rchlai"},"content":"     * Prints out the prompt for users to enter their commands.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rchlai"},"content":"    public static void printPrompt() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rchlai"},"content":"        print(\"User says: \");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rchlai"},"content":"     * Prints out the chatbot farewell message after you exit the program.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rchlai"},"content":"    public static void printFarewellMessage() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rchlai"},"content":"        print(\"Goodbye. Hope I satisfy your needs for today!\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rchlai"},"content":"     * Prints out the task formatted to be displayed with its index","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rchlai"},"content":"     * calculated by adding to the index offset","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rchlai"},"content":"     * @param index of int","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rchlai"},"content":"     * @param task of Task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rchlai"},"content":"    public static void showIndexedTask(int index, Task task) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rchlai"},"content":"        print((index + UI.getOffset()) + \".\" + task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rchlai"},"content":"     * Prints out a task prompt when a task has been added.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rchlai"},"content":"     * @param task of Task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rchlai"},"content":"    public static void showAddedTask(Task task) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rchlai"},"content":"        print(\"This task has been added:\\n\" + task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rchlai"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rchlai"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rchlai"},"content":"     * Prints out a task prompt when a task has been deleted.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rchlai"},"content":"     * @param task of Task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rchlai"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rchlai"},"content":"    public static void showDeletedTask(Task task) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rchlai"},"content":"        print(\"This task has been deleted:\\n\" + task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rchlai"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rchlai"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"rchlai":112}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rchlai"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\rc\\*.java ..\\src\\main\\java\\rc\\task\\*.java ..\\src\\main\\java\\rc\\command\\*.java ..\\src\\main\\java\\rc\\parser\\*.java ..\\src\\main\\java\\rc\\storage\\*.java ..\\src\\main\\java\\rc\\tasklist\\*.java ..\\src\\main\\java\\rc\\ui\\*.java ..\\src\\main\\java\\rc\\exception\\*.java","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rchlai"},"content":"java -classpath ..\\bin rc.RCApp \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rchlai":2,"-":19}}]
