[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"# Neura Task Manager User Guide","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"Welcome to **Neura Task Manager**, your personal task management assistant! With Neura, you can easily manage your tasks, set deadlines, and track events. This guide will walk you through all the features and how to use them.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"## Quick Start","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"Ensure you have **Java 17** or above installed on your system.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"### Steps to Get Started:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"1. Download the latest `.jar` file from the [Neura GitHub repository](https://github.com/LeThiHongMinh/ip).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"2. Copy the `.jar` file to the folder where you want to store your task manager.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"3. Open a command terminal, navigate to the folder, and run the following command:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"4. The program will start, and you can begin adding tasks, deadlines, and events.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"### Example Commands:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"- `todo Buy groceries` – Adds a simple to-do task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"- `deadline Submit report /by 2025-03-07 18:00` – Adds a task with a deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"- `event Team meeting /at 2025-03-09 14:00` – Adds an event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"## Features","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"### Add To-Do: `todo`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"Adds a to-do task to your task list. A to-do task is a simple task that doesn\u0027t have a deadline or specific event time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `todo DESCRIPTION`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"- `todo Buy groceries`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"- `todo Finish homework`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"### Add Deadline: `deadline`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"Adds a deadline task to your task list. A deadline task is associated with a due date and time by which the task must be completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `deadline DESCRIPTION /by DATE_TIME`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"- `deadline Submit report /by 2025-03-07 18:00`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"- `deadline Pay bills /by 2025-03-10 12:00`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"### Add Event: `event`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"Adds an event task to your task list. An event task is associated with a specific date and time when the event will occur.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `event DESCRIPTION /at DATE_TIME`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"- `event Doctor appointment /at 2025-03-08 09:00`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"- `event Team meeting /at 2025-03-09 14:00`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"### Mark Task as Done: `mark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"Marks a task as completed in your task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `mark INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"- `mark 1` – Marks the 1st task as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"### Unmark Task as Not Done: `unmark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"Unmarks a task, changing its status back to \"not done.\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `unmark INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LeThiHongMinh"},"content":"- `unmark 1` – Unmarks the 1st task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LeThiHongMinh"},"content":"### Delete Task: `delete`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LeThiHongMinh"},"content":"Removes a task from your task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `delete INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LeThiHongMinh"},"content":"- `delete 1` – Deletes the 1st task in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LeThiHongMinh"},"content":"### View All Tasks: `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LeThiHongMinh"},"content":"Displays a list of all the tasks in your task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LeThiHongMinh"},"content":"- `list` – Shows all tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LeThiHongMinh"},"content":"### Find Task by Description: `find`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LeThiHongMinh"},"content":"Searches for tasks whose descriptions contain the given keyword(s).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `find KEYWORD`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LeThiHongMinh"},"content":"- `find groceries` – Displays all tasks that contain \"groceries.\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LeThiHongMinh"},"content":"### Exit Program: `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LeThiHongMinh"},"content":"Exits the program.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LeThiHongMinh"},"content":"- **Format**: `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LeThiHongMinh"},"content":"- **Example**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LeThiHongMinh"},"content":"- `bye` – Closes the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LeThiHongMinh"},"content":"## Saving the Data","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LeThiHongMinh"},"content":"Neura automatically saves all tasks to a file after any changes are made. You don’t need to manually save your tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LeThiHongMinh"},"content":"## Editing the Data File","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LeThiHongMinh"},"content":"The tasks are saved automatically in a JSON file located in the `data` folder. Advanced users can edit this file directly, but be cautious. Editing it improperly may cause the application to fail.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LeThiHongMinh"},"content":"**Caution**: If the data file format becomes corrupted, Neura will discard all data on the next run. Make sure to back up the file before making any edits.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LeThiHongMinh"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LeThiHongMinh"},"content":"## Command Summary","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LeThiHongMinh"},"content":"| Action | Format, Examples                                                                                |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LeThiHongMinh"},"content":"|--------|-------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LeThiHongMinh"},"content":"| Add todo | `todo DESCRIPTION`\u003cbr\u003ee.g., `add todo Buy groceries`                                            |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LeThiHongMinh"},"content":"| Add deadline | `deadline DESCRIPTION /by DATE_TIME`\u003cbr\u003ee.g., `add deadline Submit report /by 2025-03-07 18:00` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LeThiHongMinh"},"content":"| Add event | `event DESCRIPTION /at DATE_TIME`\u003cbr\u003ee.g., `add event Doctor appointment /at 2025-03-08 09:00`  |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LeThiHongMinh"},"content":"| Mark task | `mark INDEX`\u003cbr\u003ee.g., `mark 1`                                                                  |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LeThiHongMinh"},"content":"| Unmark task | `unmark INDEX`\u003cbr\u003ee.g., `unmark 1`                                                              |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LeThiHongMinh"},"content":"| Delete task | `delete INDEX`\u003cbr\u003ee.g., `delete 1`                                                              |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LeThiHongMinh"},"content":"| List tasks | `list`\u003cbr\u003ee.g., `list`                                                                          |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LeThiHongMinh"},"content":"| Find task | `find KEYWORD`\u003cbr\u003ee.g., `find groceries`                                                        |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LeThiHongMinh"},"content":"| Exit program | `bye`\u003cbr\u003ee.g., `bye`                                                                            |","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":114,"-":14}},{"path":"src/main/java/neura/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * Abstract class representing a command in the Neura application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" * All specific command types (e.g., Add, Delete, Mark) should extend this class and implement its methods.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the command, affecting the list of tasks, user interface, and storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks that the command will operate on.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface that interacts with the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object that manages task data persistence.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"    public abstract void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"     * Determines whether the command will exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return true if the command should terminate the program; false otherwise.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":30}},{"path":"src/main/java/neura/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" * The deadline task includes a description and a deadline time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    private final String description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"    private final String deadlineTime;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a DeadlineCommand object with a task description and a deadline time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param deadlineTime The deadline time for the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"    public DeadlineCommand(String description, String deadlineTime) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the command by adding a new deadline task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     * The task is displayed to the user, and the updated task list is saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks where the new deadline task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to print the task added message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object used to save the updated list of tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"        Deadline newTask \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.printTaskAddedMessage(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, since this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":53}},{"path":"src/main/java/neura/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * The task to be deleted is specified by its index in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a DeleteCommand object with the task index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param taskIndex The index of the task to be deleted from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the delete command by removing the task at the specified index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     * If the task list is empty or the index is invalid, an error message is displayed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     * The task list is saved after deletion.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks where the task will be removed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to display messages to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object used to save the updated task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"            ui.showError(\"OOPS!!! Your task list is empty.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"            return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"            ui.showError(\"OOPS!!! Invalid task index! Please enter a number between 1 and \" + tasks.size());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"            return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"        Task removedTask \u003d tasks.remove(taskIndex); // Correctly remove task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.printRemovedTask(removedTask, tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"        storage.saveTasks(tasks); // Save updated tasks list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, since this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":60}},{"path":"src/main/java/neura/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to create an event and add it to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" * The event\u0027s description, start time, and end time are provided when constructing the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"    private final String description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"    private final String from;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    private final String to;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs an EventCommand object with the task description, start time, and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the event command by creating a new event and adding it to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"     * The new event is saved to the storage after it\u0027s added to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks where the new event will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to display messages to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object used to save the updated task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.printTaskAddedMessage(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, since this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":57}},{"path":"src/main/java/neura/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * When executed, this command displays a goodbye message to the user and signals the application to terminate.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the exit command by displaying a goodbye message to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"     * This indicates that the application is about to exit.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks (not used in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to display the goodbye message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object (not used in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command will exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return true, signaling that the application should terminate after executing this command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"        return true;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":36}},{"path":"src/main/java/neura/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to search for tasks by a given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * This command filters tasks that contain the specified keyword in their description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" * and displays them to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    private String keyword;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     * Creates a FindCommand with the specified keyword for searching tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param keyword The keyword used to search for matching tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the find command by searching for tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     * Displays the found tasks to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks to search through.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to display the matching tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object (not used in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"        // Loop through the tasks to find matching tasks by keyword","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"        // Call the UI method to display the found tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.printFoundTasks(matchingTasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, signaling that the application should continue running after executing this command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;  // Find command doesn\u0027t exit the program","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":57}},{"path":"src/main/java/neura/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * This command will display all tasks currently in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the list command by displaying all tasks to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to show the list of tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object (not used in this command).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.displayTasks(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, signaling that the application should continue running after executing this command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":35}},{"path":"src/main/java/neura/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.exception.NeuraException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" * This command marks a specific task by its index as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the mark command by marking the task at the specified index as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     * It also updates the task list and saves it to storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     * If the task index is invalid, an error message will be shown.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks that the task to be marked belongs to.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to show the task status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object used to save the updated task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"            // Check if taskIndex is valid","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"                throw new NeuraException(\"Task index out of range. Please provide a valid task index.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"            // If valid, mark the task as done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"            tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"            ui.printTaskStatus(\"Nice! I\u0027ve marked this task as done:\", taskIndex, tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (NeuraException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"            // Handle the exception and show the error message","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, signaling that the application should continue running after executing this command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":62}},{"path":"src/main/java/neura/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Todo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to add a new Todo task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" * This command creates a Todo task with the provided description and adds it to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"    private final String description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a TodoCommand with the specified task description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param description The description of the Todo task to be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the todo command by creating a new Todo task, adding it to the task list,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     * and saving the updated task list to storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks to which the new Todo task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to display a confirmation message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object used to save the updated task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.printTaskAddedMessage(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, signaling that the application should continue running after executing this command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":51}},{"path":"src/main/java/neura/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.exception.NeuraException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":" * This command takes a task index, verifies the index, and unmarks the corresponding task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param taskIndex The index of the task to be unmarked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     * Executes the unmark command by unmarking the task at the specified index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     * If the task index is valid, it will mark the task as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     * The updated task list is saved to storage after the operation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks where the task to be unmarked is located.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param ui The user interface used to display a status message to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param storage The storage object used to save the updated task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"            // Check if taskIndex is valid","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"                throw new NeuraException(\"Task index out of range. Please provide a valid task index.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"            // If valid, mark the task as not done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"            tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"            ui.printTaskStatus(\"OK, I\u0027ve marked this task as not done yet:\", taskIndex, tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (NeuraException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"            // Handle the exception and show the error message","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return false, signaling that the application should continue running after executing this command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":62}},{"path":"src/main/java/neura/exception/NeuraException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":" * Custom exception class for handling specific errors in the Neura application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":" * This exception is thrown when an error occurs related to the application logic, such as invalid commands.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"public class NeuraException extends Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructor to create a NeuraException with a specific error message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    public NeuraException(String message) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"        super(message);  // Pass the error message to the parent class (Exception)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":17}},{"path":"src/main/java/neura/main/Neura.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.main;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.exception.NeuraException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.parser.Parser;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.command.Command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":" * Main class that runs the Neura task manager application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":" * This class initializes the necessary components (UI, storage, and tasks) and executes user commands in a loop.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"public class Neura {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"     * Initializes the Neura application with the necessary components.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"     * This constructor sets up the UI, storage, and task list, and attempts to load saved tasks from the storage file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"    public Neura() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"        tasks \u003d new ArrayList\u003c\u003e();  // Initialize tasks as an ArrayList","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"            storage.loadTasks(tasks);  // Load tasks into the ArrayList","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"            ui.showLoadingError();  // Show an error message if loading fails","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"     * Runs the main loop of the Neura application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"     * This method repeatedly prompts the user for commands and executes them until the user chooses to exit.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"    public void run() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"        ui.showWelcome();  // Display the welcome message","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"                String fullCommand \u003d ui.readCommand();  // Read the full user command","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"                Command command \u003d Parser.parse(fullCommand);  // Parse the command","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"                isExit \u003d command.isExit();  // Check if the command signals the application to exit","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"                command.execute(tasks, ui, storage);  // Execute the command, passing the tasks, UI, and storage","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"            } catch (NeuraException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"                ui.showError(e.getMessage());  // Show error message if the command is invalid","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"     * The main entry point of the Neura application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param args Command-line arguments (not used in this version).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"        new Neura().run();  // Create and run a new instance of the Neura application","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":63}},{"path":"src/main/java/neura/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.parser;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.command.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.ui.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.exception.NeuraException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":" * Parses user input and returns the appropriate Command object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":" * This class is responsible for interpreting the user\u0027s input and transforming it into a command that the application can execute.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"public class Parser {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the full command entered by the user and returns the corresponding Command object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param fullCommand The full user command input as a string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the command is invalid or malformatted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    public static Command parse(String fullCommand) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"        String command \u003d fullCommand.split(\" \")[0].toLowerCase();  // Extract the command type (e.g., \"todo\", \"deadline\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"        String commandData \u003d fullCommand.substring(command.length()).trim();  // Get the rest of the command","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Command cannot be empty.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"        switch (command) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"            return parseTodoCommand(commandData);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"            return parseDeadlineCommand(commandData);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"event\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"            return parseEventCommand(commandData);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"            return parseMarkCommand(commandData);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"            return parseUnmarkCommand(commandData);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"list\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"            return parseDeleteCommand(commandData);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"        case \"find\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"            return parseFindCommand(commandData);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"        default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Invalid command! Please try again.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the \"todo\" command and creates a TodoCommand.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param data The description of the todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A TodoCommand object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the description is empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"    private static Command parseTodoCommand(String data) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LeThiHongMinh"},"content":"        if (data.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LeThiHongMinh"},"content":"        return new TodoCommand(data);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the \"deadline\" command and creates a DeadlineCommand.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param data The description of the deadline task and the due time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A DeadlineCommand object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the format of the deadline command is incorrect.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LeThiHongMinh"},"content":"    private static Command parseDeadlineCommand(String data) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LeThiHongMinh"},"content":"        String[] parts \u003d data.split(\" /by \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LeThiHongMinh"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Invalid deadline format! Use: deadline [task] /by [time].\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LeThiHongMinh"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LeThiHongMinh"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LeThiHongMinh"},"content":"        return new DeadlineCommand(description, by);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the \"event\" command and creates an EventCommand.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param data The description of the event task, start time, and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return An EventCommand object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the format of the event command is incorrect.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LeThiHongMinh"},"content":"    private static Command parseEventCommand(String data) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LeThiHongMinh"},"content":"        String[] parts \u003d data.split(\" /from \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LeThiHongMinh"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Invalid event format! Use: event [task] /from [start] /to [end].\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LeThiHongMinh"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LeThiHongMinh"},"content":"        String[] dateParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LeThiHongMinh"},"content":"        if (dateParts.length \u003c 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Invalid event format! Use: event [task] /from [start] /to [end].\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LeThiHongMinh"},"content":"        String from \u003d dateParts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LeThiHongMinh"},"content":"        String to \u003d dateParts[1].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LeThiHongMinh"},"content":"        return new EventCommand(description, from, to);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the \"mark\" command and creates a MarkCommand.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param data The task number to be marked as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A MarkCommand object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the task number is invalid or cannot be parsed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LeThiHongMinh"},"content":"    private static Command parseMarkCommand(String data) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LeThiHongMinh"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LeThiHongMinh"},"content":"            int taskIndex \u003d Integer.parseInt(data.trim()) - 1;  // Convert to zero-based index","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LeThiHongMinh"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Invalid task number! Please specify the task number to mark.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the \"unmark\" command and creates an UnmarkCommand.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param data The task number to be unmarked as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return An UnmarkCommand object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the task number is invalid or cannot be parsed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LeThiHongMinh"},"content":"    private static Command parseUnmarkCommand(String data) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LeThiHongMinh"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LeThiHongMinh"},"content":"            int taskIndex \u003d Integer.parseInt(data.trim()) - 1;  // Convert to zero-based index","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LeThiHongMinh"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Invalid task number! Please specify the task number to unmark.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the \"delete\" command and creates a DeleteCommand.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param data The task number to be deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A DeleteCommand object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the task number is invalid or cannot be parsed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LeThiHongMinh"},"content":"    private static Command parseDeleteCommand(String data) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LeThiHongMinh"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LeThiHongMinh"},"content":"            int taskIndex \u003d Integer.parseInt(data.trim()) - 1;  // Convert to zero-based index","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LeThiHongMinh"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Invalid task number! Please specify the task number to delete.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses the \"find\" command and creates a FindCommand.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param data The search keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A FindCommand object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LeThiHongMinh"},"content":"     * @throws NeuraException If the search keyword is empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LeThiHongMinh"},"content":"    private static Command parseFindCommand(String data) throws NeuraException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LeThiHongMinh"},"content":"        if (data.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LeThiHongMinh"},"content":"            throw new NeuraException(\"Search keyword cannot be empty.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LeThiHongMinh"},"content":"        return new FindCommand(data);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":169}},{"path":"src/main/java/neura/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Todo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"import java.io.File;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":" * Handles the saving and loading of tasks to/from a file. This class allows tasks to be","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":" * stored in a text file and later loaded back into the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"public class Storage {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    private static final String FILE_PATH \u003d \"./data/neura.txt\";  // Path to save/load tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"     * Creates a new Storage object that will save/load tasks from the specified file path.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     * By default, it uses the static path \"./data/neura.txt\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"    public Storage() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"        this.filePath \u003d FILE_PATH;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     * Parses a line from the file into a Task object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param line A line from the file representing a task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A Task object corresponding to the parsed line, or null if the line is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"    public Task parseTask(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"            switch (parts[0]) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"            case \"T\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"                return new Todo(parts[2]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"            case \"D\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"                return new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"            case \"E\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"                return new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"            default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"                return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"            System.out.println(\"Error parsing line: \" + line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"            return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"     * Saves the list of tasks to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LeThiHongMinh"},"content":"        File dataFile \u003d new File(FILE_PATH);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LeThiHongMinh"},"content":"        dataFile.getParentFile().mkdirs(); // Create directory if it doesn\u0027t exist","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LeThiHongMinh"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFile))) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LeThiHongMinh"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LeThiHongMinh"},"content":"                writer.write(taskToFileFormat(task));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LeThiHongMinh"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LeThiHongMinh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LeThiHongMinh"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LeThiHongMinh"},"content":"     * Converts a Task object to a string in the format required for saving to the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param task The Task object to be converted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A string representation of the Task object in file format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LeThiHongMinh"},"content":"    public String taskToFileFormat(Task task) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LeThiHongMinh"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LeThiHongMinh"},"content":"            return \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LeThiHongMinh"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LeThiHongMinh"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LeThiHongMinh"},"content":"            return \"D | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + deadline.getBy();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LeThiHongMinh"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LeThiHongMinh"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LeThiHongMinh"},"content":"            return \"E | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + event.getFrom() + \" | \" + event.getTo();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LeThiHongMinh"},"content":"        return \"\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LeThiHongMinh"},"content":"     * Loads tasks from the file and adds them to the provided task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list where loaded tasks will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LeThiHongMinh"},"content":"    public void loadTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LeThiHongMinh"},"content":"        File dataFile \u003d new File(FILE_PATH);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LeThiHongMinh"},"content":"        if (dataFile.exists()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LeThiHongMinh"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile))) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LeThiHongMinh"},"content":"                String line;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LeThiHongMinh"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LeThiHongMinh"},"content":"                    Task task \u003d parseTask(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LeThiHongMinh"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LeThiHongMinh"},"content":"                        tasks.add(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LeThiHongMinh"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LeThiHongMinh"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LeThiHongMinh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LeThiHongMinh"},"content":"                System.out.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":115}},{"path":"src/main/java/neura/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a deadline task in the to-do list, which has a specific due date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":" * Inherits from the {@link Task} class and adds an additional attribute for the deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"    protected String by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a new Deadline task with the specified description and due date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param by The due date for the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns the due date of the deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return The due date of the deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"        return by;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns a string representation of the Deadline task, including its type, description, and due date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     * The format is \"[D][status] description (by: [due date])\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A string representing the Deadline task in the format \"[D][status] description (by: [due date])\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":41}},{"path":"src/main/java/neura/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents an event task in the to-do list, which has a start time (\"from\") and an end time (\"to\").","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":" * Inherits from the {@link Task} class and adds additional attributes specific to events.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"    protected String from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"    protected String to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return The start time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"        return from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return The end time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"        return to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns a string representation of the Event task, including its type, description, and time range.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"     * The format is \"[E][status] description (from: [start time] to: [end time])\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A string representing the Event task in the format \"[E][status] description (from: [start time] to: [end time])\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":53}},{"path":"src/main/java/neura/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a task in the to-do list with a description and completion status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":" * Allows marking the task as done or not done and provides methods to retrieve task information.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"public class Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"    protected final String description;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a new Task with the specified description. The task is initially marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return True if the task is done, otherwise false.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"        return isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns the icon representing the completion status of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"        return description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A string representing the task in the format \"[status] description\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LeThiHongMinh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LeThiHongMinh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":71}},{"path":"src/main/java/neura/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":" * Represents a task of type \"ToDo\" in the to-do list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":" * Inherits from the {@link Task} class and adds a specific identifier for ToDo tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"     * Returns a string representation of the ToDo task, including its type and description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"     * The format is \"[T][status] description\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return A string representing the ToDo task in the format \"[T][status] description\".","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":29}},{"path":"src/main/java/neura/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeThiHongMinh"},"content":"package neura.ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LeThiHongMinh"},"content":"import neura.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LeThiHongMinh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LeThiHongMinh"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LeThiHongMinh"},"content":" * Handles the user interface interactions with the user in the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LeThiHongMinh"},"content":" * Responsible for displaying messages, tasks, and prompts.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LeThiHongMinh"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LeThiHongMinh"},"content":"public class Ui {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LeThiHongMinh"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LeThiHongMinh"},"content":"     * Constructor that initializes the scanner for reading user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LeThiHongMinh"},"content":"    public Ui() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LeThiHongMinh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LeThiHongMinh"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LeThiHongMinh"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Hello! I\u0027m Neura\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LeThiHongMinh"},"content":"     * Displays all the tasks currently in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LeThiHongMinh"},"content":"    public void displayTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LeThiHongMinh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LeThiHongMinh"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LeThiHongMinh"},"content":"     * Prints a message confirming that a task has been added to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks that contains the newly added task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LeThiHongMinh"},"content":"    public void printTaskAddedMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LeThiHongMinh"},"content":"     * Displays a goodbye message when the user exits the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LeThiHongMinh"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LeThiHongMinh"},"content":"     * Prints a line separator to separate sections of the output.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LeThiHongMinh"},"content":"    public void showLine() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LeThiHongMinh"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LeThiHongMinh"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"OOPS!!! \" + message);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LeThiHongMinh"},"content":"     * Displays a loading error message when tasks fail to load from a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LeThiHongMinh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Error loading tasks from file.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LeThiHongMinh"},"content":"     * Reads the next line of user input from the console.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LeThiHongMinh"},"content":"     * @return The command inputted by the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LeThiHongMinh"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LeThiHongMinh"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LeThiHongMinh"},"content":"     * Prints the status of a task (marked as done or not done) with its details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param message The message indicating the status change of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param taskIndex The index of the task in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks to access the task at the given index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LeThiHongMinh"},"content":"    public void printTaskStatus(String message, int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LeThiHongMinh"},"content":"     * Prints a message confirming that a task has been removed from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param removedTask The task that was removed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param tasks The list of tasks after removal to update the task count.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LeThiHongMinh"},"content":"    public void printRemovedTask(Task removedTask, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(removedTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LeThiHongMinh"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LeThiHongMinh"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LeThiHongMinh"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LeThiHongMinh"},"content":"     * Displays all the tasks that match a given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LeThiHongMinh"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LeThiHongMinh"},"content":"     * @param matchingTasks The list of tasks that match the keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LeThiHongMinh"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LeThiHongMinh"},"content":"    public void printFoundTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LeThiHongMinh"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LeThiHongMinh"},"content":"            System.out.println(\"No tasks found with the given keyword.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LeThiHongMinh"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LeThiHongMinh"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LeThiHongMinh"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LeThiHongMinh"},"content":"                System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LeThiHongMinh"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LeThiHongMinh"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LeThiHongMinh"},"content":"        showLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LeThiHongMinh"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LeThiHongMinh"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"LeThiHongMinh":148}}]
