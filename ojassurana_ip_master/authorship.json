[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":" Display                                                      |        Name         |            Github Profile             |                      Homepage                      ","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":8,"ojassurana":2}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"# Mahaveer project template","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"instructions on how to use it.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"   first)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"1. After that, locate the `src/main/java/mahaveer.Mahaveer.java` file, right-click it, and choose `Run mahaveer.Mahaveer.main()` (if the","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"   like the below as the output:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"   Hello! I\u0027m Mahaveer!","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"   What can I do for you?","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"expect to find Java files.","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"-":14,"ojassurana":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"# Mahaveer Chatbot User Guide","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"![Mahaveer Chatbot](https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Mahavir.jpg/640px-Mahavir.jpg)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"Mahaveer is a console-based task management chatbot inspired by Lord Mahaveer. It helps you manage tasks efficiently using simple commands. This guide covers its features and usage.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"## Features \u0026 Commands","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"### Adding Deadlines","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"**Command:** `deadline \u003ctask\u003e /by \u003ctime\u003e`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"deadline Submit assignment /by tonight","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"[D][ ] Submit assignment (by: tonight)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"### Adding Todos","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"**Command:** `todo \u003ctask\u003e`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"todo Walk the dog","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"[T][ ] Walk the dog","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"### Adding Events","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"**Command:** `event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"event Conference /from Monday /to Wednesday","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"[E][ ] Conference (from: Monday to: Wednesday)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"### Listing Tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"**Command:** `list`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"list","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ojassurana"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ojassurana"},"content":"[T][ ] Walk the dog","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ojassurana"},"content":"[D][ ] Submit assignment (by: tonight)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ojassurana"},"content":"### Marking Tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ojassurana"},"content":"**Command:** `mark \u003ctask number\u003e`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ojassurana"},"content":"mark 1","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ojassurana"},"content":"Nice! I\u0027ve marked this task as done: [T][X] Walk the dog","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ojassurana"},"content":"### Unmarking Tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ojassurana"},"content":"**Command:** `unmark \u003ctask number\u003e`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ojassurana"},"content":"unmark 1","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ojassurana"},"content":"OK, I\u0027ve marked this task as not done yet: [T][ ] Walk the dog","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ojassurana"},"content":"### Deleting Tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ojassurana"},"content":"**Command:** `delete \u003ctask number\u003e`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ojassurana"},"content":"delete 1","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ojassurana"},"content":"The specified task is removed from the list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ojassurana"},"content":"### Finding Tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ojassurana"},"content":"**Command:** `find \u003ckeyword\u003e`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ojassurana"},"content":"find dog","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ojassurana"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ojassurana"},"content":"[T][ ] Walk the dog","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ojassurana"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ojassurana"},"content":"### Exiting the Application","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ojassurana"},"content":"**Command:** `bye`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ojassurana"},"content":"**Example:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ojassurana"},"content":"bye","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ojassurana"},"content":"**Output:**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ojassurana"},"content":"```plaintext","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ojassurana"},"content":"Jai Jinendra! Till we meet next time :)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ojassurana"},"content":"## Author","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ojassurana"},"content":"![Author\u0027s Photo](https://media.licdn.com/dms/image/v2/D5603AQHQCLMb5J__bg/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1701928433892?e\u003d1746662400\u0026v\u003dbeta\u0026t\u003dQmLgZUST73G6fMx4nuXmhAwXcZqReaqtBaUGjOQwPCs)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ojassurana"},"content":"**Ojas Surana**  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ojassurana"},"content":"Email: [code@ojassurana.com](mailto:code@ojassurana.com)  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ojassurana"},"content":"Telegram: [@ojasx](https://t.me/ojasx)  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ojassurana"},"content":"For [CS2113 - Software Engineering (OOP)](https://nusmods.com/courses/CS2113/software-engineering-object-oriented-programming)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ojassurana"},"content":"## Acknowledgments","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ojassurana"},"content":"- [Mahaveer Image](https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Mahavir.jpg/640px-Mahavir.jpg) from Wikipedia.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ojassurana"},"content":"- Inspired by the Duke chatbot concept from [CS2113](https://github.com/nus-cs2113-AY2425S2/ip).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ojassurana"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ojassurana"},"content":"Enjoy using Mahaveer Chatbot! For questions or feedback, feel free to reach out.","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"-":21,"ojassurana":136}},{"path":"src/main/java/mahaveer/Mahaveer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.command.Command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.command.CommandFactory;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"import java.util.List;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * The main class for the Mahaveer chatbot application.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * This class initializes the UI, storage, and task list,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * then continuously processes user commands until an exit command is issued.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"public class Mahaveer {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"        TaskList taskList \u003d new TaskList(loadedTasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"        while (!processCommand(taskList, ui, storage)) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"            ui.showLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * Processes a single user command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * This method parses the user input, executes the corresponding command,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     * and returns a boolean indicating whether the exit command was issued.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"     * @param taskList the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"     * @param ui       the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"     * @param storage  the storage for persisting task changes","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"     * @return {@code true} if the executed command is an exit command, {@code false} otherwise","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"    private static boolean processCommand(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"        Parser.ParsedCommand parsedCommand;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"            parsedCommand \u003d Parser.getCommandDetails();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"        } catch (MaheveerException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"            return false;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"        ui.showLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ojassurana"},"content":"        Command command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ojassurana"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ojassurana"},"content":"            command \u003d CommandFactory.getCommand(parsedCommand);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ojassurana"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ojassurana"},"content":"        } catch (MaheveerException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ojassurana"},"content":"            return false;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ojassurana"},"content":"        return command.isExit();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ojassurana":69}},{"path":"src/main/java/mahaveer/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":" * The Parser class is responsible for reading user input from the UI,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":" * parsing the input into a command and its arguments, and returning a","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":" * ParsedCommand record containing the details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"public class Parser {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"     * Reads and parses the user command from the UI.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"     * This method trims the input, splits it into a command keyword and its","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"     * arguments, and returns a ParsedCommand record with the command details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"     * Depending on the command, it may throw a MaheveerException if the input","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"     * is empty or does not match the expected format.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * @return a ParsedCommand record containing the parsed command, number (if applicable),","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     * task description, extra detail (e.g., deadline time or event start), and›","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     * additional detail (e.g., event end)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the input is invalid or does not meet the command format","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"    public static ParsedCommand getCommandDetails() throws MaheveerException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"        String input \u003d ui.readCommand().trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"        if (input.isEmpty())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"No command provided. Please enter a command.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"        String[] tokens \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"        String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"        String rest \u003d tokens.length \u003e 1 ? tokens[1].trim() : \"\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"        switch (command) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"            return new ParsedCommand(\"bye\", null, \"\", null, null);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"        case \"list\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"            return new ParsedCommand(\"list\", null, \"\", null, null);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"                int number \u003d Integer.parseInt(rest);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"                return new ParsedCommand(\"mark\", number, \"\", null, null);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"                int number \u003d Integer.parseInt(rest);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"                return new ParsedCommand(\"unmark\", number, \"\", null, null);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"                int number \u003d Integer.parseInt(rest);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"                return new ParsedCommand(\"delete\", number, \"\", null, null);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ojassurana"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ojassurana"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ojassurana"},"content":"            if (rest.isEmpty())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"A \u0027todo\u0027 requires a short description.\\nFor example:\\n  todo Bake a cake\\n  todo Walk the dog\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ojassurana"},"content":"            return new ParsedCommand(\"todo\", null, rest, null, null);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ojassurana"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ojassurana"},"content":"            if (rest.isEmpty())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"A \u0027deadline\u0027 requires a description and \u0027/by\u0027 time.\\nFor example:\\n  deadline Submit assignment /by tonight\\n  deadline Finish reading /by next Monday\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ojassurana"},"content":"            String[] deadlineParts \u003d rest.split(\" /by \", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ojassurana"},"content":"            if (deadlineParts.length \u003c 2 ||","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ojassurana"},"content":"                    deadlineParts[0].trim().isEmpty() ||","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ojassurana"},"content":"                    deadlineParts[1].trim().isEmpty())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Invalid deadline format. Use: deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ojassurana"},"content":"            return new ParsedCommand(\"deadline\", null, deadlineParts[0].trim(), deadlineParts[1].trim(), null);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ojassurana"},"content":"        case \"event\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ojassurana"},"content":"            if (rest.isEmpty())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"An \u0027event\u0027 requires a description plus \u0027/from\u0027 and \u0027/to\u0027.\\nFor example:\\n  event Conference /from Monday /to Wednesday\\n  event Birthday party /from 2pm /to 6pm\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ojassurana"},"content":"            String[] eventParts \u003d rest.split(\" /from \", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ojassurana"},"content":"            if (eventParts.length \u003c 2 || eventParts[0].trim().isEmpty())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ojassurana"},"content":"            String description \u003d eventParts[0].trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ojassurana"},"content":"            String remainder \u003d eventParts[1];","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ojassurana"},"content":"            String[] fromToParts \u003d remainder.split(\" /to \", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ojassurana"},"content":"            if (fromToParts.length \u003c 2 ||","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ojassurana"},"content":"                    fromToParts[0].trim().isEmpty() ||","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ojassurana"},"content":"                    fromToParts[1].trim().isEmpty())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ojassurana"},"content":"            return new ParsedCommand(\"event\", null, description, fromToParts[0].trim(), fromToParts[1].trim());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ojassurana"},"content":"        case \"find\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ojassurana"},"content":"            if (rest.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"A \u0027find\u0027 requires a description.\\nFor example:\\n  find read book\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ojassurana"},"content":"            return new ParsedCommand(\"find\", null, rest, null, null);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ojassurana"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"I\u0027m sorry, I don\u0027t understand what you want me to do :c\\nPlease refer to: ojassurana.github.io/ip for manual!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ojassurana"},"content":"     * Immutable record representing the parsed command details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ojassurana"},"content":"     * It contains:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ojassurana"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ojassurana"},"content":"     *   \u003cli\u003ecommand - the command keyword\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ojassurana"},"content":"     *   \u003cli\u003enumber - a numeric argument (if applicable)\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ojassurana"},"content":"     *   \u003cli\u003etask - the task description\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ojassurana"},"content":"     *   \u003cli\u003eextra - additional detail such as deadline time or event start\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ojassurana"},"content":"     *   \u003cli\u003eextra2 - additional detail such as event end\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ojassurana"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ojassurana"},"content":"    public record ParsedCommand(String command, Integer number, String task, String extra, String extra2) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"ojassurana":114}},{"path":"src/main/java/mahaveer/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Deadline;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Event;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import java.io.*;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * The Storage class is responsible for loading and saving tasks to a file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * It provides methods to add, delete, mark, and unmark tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"public class Storage {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"    private static final String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"     * Constructs a new Storage instance.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     * This constructor ensures the storage file and its directory exist.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * If the file is created for the first time, it prints a confirmation message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"    public Storage() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"            file.getParentFile().mkdirs(); // Ensure the directory exists","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"                System.out.println(\"Storage file created: \" + FILE_PATH);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"            System.out.println(\"Error creating storage file: \" + e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     * @return a list of tasks loaded from the file; returns an empty list if the file does not exist or an error occurs.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"            return taskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"            String line;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ojassurana"},"content":"        return taskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ojassurana"},"content":"     * Parses a line from the storage file into a Task object.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ojassurana"},"content":"     * @param line a line from the file representing a task in a specific format.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ojassurana"},"content":"     * @return a Task object if parsing is successful; otherwise, returns null.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ojassurana"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ojassurana"},"content":"        String[] parts \u003d line.split(\", \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ojassurana"},"content":"        if (parts.length \u003c 3) return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ojassurana"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ojassurana"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ojassurana"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ojassurana"},"content":"        Task task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ojassurana"},"content":"        switch (type) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ojassurana"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ojassurana"},"content":"            task \u003d new Task(description);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ojassurana"},"content":"            break;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ojassurana"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ojassurana"},"content":"            if (parts.length \u003c 4) return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ojassurana"},"content":"            task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ojassurana"},"content":"            break;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ojassurana"},"content":"        case \"event\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ojassurana"},"content":"            if (parts.length \u003c 5) return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ojassurana"},"content":"            task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ojassurana"},"content":"            break;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ojassurana"},"content":"        default:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ojassurana"},"content":"            return null;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ojassurana"},"content":"        task.setDone(isDone);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ojassurana"},"content":"        return task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ojassurana"},"content":"     * Saves the provided list of tasks to the storage file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ojassurana"},"content":"     * @param taskList the list of tasks to be saved.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ojassurana"},"content":"    private void saveTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ojassurana"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ojassurana"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ojassurana"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ojassurana"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ojassurana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ojassurana"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ojassurana"},"content":"     * Adds a new todo task to the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ojassurana"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ojassurana"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ojassurana"},"content":"        List\u003cTask\u003e taskList \u003d loadTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ojassurana"},"content":"        taskList.add(new Task(description));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ojassurana"},"content":"        saveTasks(taskList);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ojassurana"},"content":"     * Adds a new deadline task to the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ojassurana"},"content":"     * @param description the task description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ojassurana"},"content":"     * @param by          the deadline time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ojassurana"},"content":"    public void addDeadline(String description, String by) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ojassurana"},"content":"        List\u003cTask\u003e taskList \u003d loadTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ojassurana"},"content":"        taskList.add(new Deadline(description, by));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ojassurana"},"content":"        saveTasks(taskList);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ojassurana"},"content":"     * Adds a new event task to the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ojassurana"},"content":"     * @param description the task description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ojassurana"},"content":"     * @param from        the event start time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ojassurana"},"content":"     * @param to          the event end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ojassurana"},"content":"    public void addEvent(String description, String from, String to) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ojassurana"},"content":"        List\u003cTask\u003e taskList \u003d loadTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ojassurana"},"content":"        taskList.add(new Event(description, from, to));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ojassurana"},"content":"        saveTasks(taskList);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ojassurana"},"content":"     * Deletes a task at the specified index from the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ojassurana"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ojassurana"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ojassurana"},"content":"        List\u003cTask\u003e taskList \u003d loadTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ojassurana"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ojassurana"},"content":"            taskList.remove(index);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ojassurana"},"content":"            saveTasks(taskList);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ojassurana"},"content":"        } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ojassurana"},"content":"            System.out.println(\"Task index out of bounds.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ojassurana"},"content":"     * Marks the task at the specified index as done in the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ojassurana"},"content":"     * @param index the index of the task to mark as done.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ojassurana"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ojassurana"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ojassurana"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ojassurana"},"content":"            int currentIndex \u003d 0;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ojassurana"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ojassurana"},"content":"                String line;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ojassurana"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ojassurana"},"content":"                    String[] parts \u003d line.split(\", \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ojassurana"},"content":"                    if (currentIndex \u003d\u003d index \u0026\u0026 parts.length \u003e\u003d 2) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ojassurana"},"content":"                        parts[1] \u003d \"1\"; // Update second column to \"1\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ojassurana"},"content":"                        line \u003d String.join(\", \", parts);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ojassurana"},"content":"                    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ojassurana"},"content":"                    lines.add(line);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ojassurana"},"content":"                    currentIndex++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ojassurana"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ojassurana"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ojassurana"},"content":"                for (String updatedLine : lines) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ojassurana"},"content":"                    writer.write(updatedLine);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ojassurana"},"content":"                    writer.newLine();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ojassurana"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ojassurana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ojassurana"},"content":"            System.out.println(\"Error updating task file: \" + e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ojassurana"},"content":"     * Unmarks the task at the specified index in the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ojassurana"},"content":"     * @param index the index of the task to unmark.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ojassurana"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ojassurana"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ojassurana"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ojassurana"},"content":"            int currentIndex \u003d 0;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ojassurana"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ojassurana"},"content":"                String line;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ojassurana"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ojassurana"},"content":"                    String[] parts \u003d line.split(\", \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ojassurana"},"content":"                    if (currentIndex \u003d\u003d index \u0026\u0026 parts.length \u003e\u003d 2) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ojassurana"},"content":"                        parts[1] \u003d \"0\"; // Update second column to \"0\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ojassurana"},"content":"                        line \u003d String.join(\", \", parts);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ojassurana"},"content":"                    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ojassurana"},"content":"                    lines.add(line);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ojassurana"},"content":"                    currentIndex++;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ojassurana"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ojassurana"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ojassurana"},"content":"                for (String updatedLine : lines) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ojassurana"},"content":"                    writer.write(updatedLine);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ojassurana"},"content":"                    writer.newLine();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ojassurana"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ojassurana"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ojassurana"},"content":"            System.out.println(\"Error updating task file: \" + e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"ojassurana":226}},{"path":"src/main/java/mahaveer/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import java.util.List;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * The TaskList class encapsulates a list of Task objects and provides methods","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * to add, remove, and retrieve tasks, as well as to get the total number of tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"public class TaskList {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"     * Constructs a new TaskList with the provided list of tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"     * @param task the Task to be added","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * @return the removed Task","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the index is out of bounds","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"    public Task deleteTask(int index) throws MaheveerException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"Task number does not exist.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"     * @param index the index of the task to retrieve","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"     * @return the Task at the given index","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the index is out of bounds","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"    public Task getTask(int index) throws MaheveerException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"Task number does not exist.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ojassurana"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ojassurana"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ojassurana"},"content":"    public int size() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ojassurana"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ojassurana"},"content":"     * Returns the underlying list of tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ojassurana"},"content":"     * @return a List of Task objects","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ojassurana"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ojassurana"},"content":"        return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"ojassurana":77}},{"path":"src/main/java/mahaveer/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":" * The Ui class handles all user interactions, including reading user input","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":" * and displaying messages to the console.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"public class Ui {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"    private static final String SEPARATOR_LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"     * Constructs a new Ui instance and initializes the input scanner.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"    public Ui() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     * Displays a simple line separator to the console.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"    public void showLine() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"        System.out.println(\"----\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"     * @return the user input as a String","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"        System.out.println(SEPARATOR_LINE + \" Hello! I\u0027m Mahaveer!\\n What can I do for you?\\n\" + SEPARATOR_LINE);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"     * Displays the specified message to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"     * @param message the message to be displayed","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"    public void showToUser(String message) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"     * Closes the input scanner.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"    public void close() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"        scanner.close();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"ojassurana":58}},{"path":"src/main/java/mahaveer/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":" * Abstract class representing a command in the Mahaveer application.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * Concrete command classes must extend this class and implement the {@code execute} method.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"     * Executes the command using the provided task list, user interface, and storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system for persisting tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if an error occurs during command execution","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"     * Indicates whether this command signals the application to exit.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"     * @return {@code true} if this is an exit command; {@code false} otherwise","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"        return false;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":34}},{"path":"src/main/java/mahaveer/command/CommandFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Parser.ParsedCommand;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":" * The CommandFactory class is responsible for creating concrete Command objects","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":" * based on the parsed user input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"public class CommandFactory {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"     * Creates and returns a specific Command instance based on the provided","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"     * ParsedCommand details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"     * @param parsedCommand the parsed command containing the command type and arguments","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"     * @return a concrete Command instance corresponding to the parsed command","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the parsed command is invalid or unrecognized","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"    public static Command getCommand(ParsedCommand parsedCommand) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"        switch (parsedCommand.command()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"        case \"list\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"            if (parsedCommand.number() \u003d\u003d null)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"            return new MarkCommand(parsedCommand.number());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"            if (parsedCommand.number() \u003d\u003d null)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"            return new UnmarkCommand(parsedCommand.number());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"            return new TodoCommand(parsedCommand.task());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"            return new DeadlineCommand(parsedCommand.task(), parsedCommand.extra());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"        case \"event\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"            return new EventCommand(parsedCommand.task(), parsedCommand.extra(), parsedCommand.extra2());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"            if (parsedCommand.number() \u003d\u003d null)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"                throw new MaheveerException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"            return new DeleteCommand(parsedCommand.number());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"        case \"find\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"            return new FindCommand(parsedCommand.task());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"        default:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"I\u0027m sorry, I don\u0027t understand what you want me to do :c\\nPlease refer to Mahaveer Manual! (COMING SOON ON README.md)\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":50}},{"path":"src/main/java/mahaveer/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Deadline;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * The DeadlineCommand class handles the addition of a deadline task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * It creates a new deadline task with a description and a \"/by\" time,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * adds it to the task list, displays a confirmation to the user, and saves it in storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"    private final String description;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    private final String by;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * Constructs a new DeadlineCommand with the specified description and deadline time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     * @param description the task description","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"     * @param by          the deadline time (e.g., \"/by tonight\")","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"     * Executes the command to add a deadline task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"     * This method checks if the description and deadline time are valid, creates a new deadline task,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     * adds it to the task list, shows a confirmation to the user, and saves the task to storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system for persisting tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the description or deadline time is invalid","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"        if (description.isEmpty() || by \u003d\u003d null || by.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"A \u0027deadline\u0027 requires a description and \u0027/by\u0027 time.\\n\"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"                    + \"For example:\\n  deadline Submit assignment /by tonight\\n  deadline Finish reading /by next Monday\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"  \" + task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"        storage.addDeadline(description, by);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":56}},{"path":"src/main/java/mahaveer/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * The DeleteCommand class handles the deletion of a task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * It removes a task from the task list based on its number,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * shows a confirmation message to the user, and updates the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     * Constructs a DeleteCommand with the specified task number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * @param taskNumber the number of the task to delete (1-indexed)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"     * Executes the command to delete a task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"     * This method calculates the zero-based index from the task number,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"     * deletes the task from the task list, displays a confirmation message,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"     * and updates the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system for persisting tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the task number is invalid","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"        int index \u003d taskNumber - 1;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size())","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"Task number does not exist.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"        Task removedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"  \" + removedTask);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"        storage.deleteTask(index);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":52}},{"path":"src/main/java/mahaveer/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Event;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * The EventCommand class is responsible for adding a new event task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * It encapsulates the event\u0027s description along with its start and end times.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * When executed, it creates an Event task, adds it to the task list, and saves the task in storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"    private final String description;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    private final String from;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"    private final String to;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     * Constructs an EventCommand with the specified description, start time, and end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"     * @param from        the start time of the event","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"     * @param to          the end time of the event","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     * Executes the command to add a new event task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * This method validates the event details, creates an Event task, adds it to the task list,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * displays a confirmation message to the user, and updates the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system for persisting tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the event details are invalid","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"        if (description.isEmpty() || from \u003d\u003d null || from.isEmpty() || to \u003d\u003d null || to.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"An \u0027event\u0027 requires a description plus \u0027/from\u0027 and \u0027/to\u0027.\\n\" +","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"                    \"For example:\\n  event Conference /from Monday /to Wednesday\\n  event Birthday party /from 2pm /to 6pm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"  \" + task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"        storage.addEvent(description, from, to);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":59}},{"path":"src/main/java/mahaveer/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":" * The ExitCommand class handles the exit operation for the Mahaveer application.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * When executed, it displays a farewell message to the user and signals the application to exit.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"     * This method displays a farewell message on the user interface.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list (not used)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system (not used)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"Jai Jinendra! Till we meet next time :)\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"     * Indicates that this command signals an exit.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"     * @return {@code true} indicating that the application should exit","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"        return true;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":39}},{"path":"src/main/java/mahaveer/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import java.util.List;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * The FindCommand class handles searching for tasks that match a specified query.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" * When executed, it filters tasks in the task list by checking if each task\u0027s description","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":" * contains the given query (case-insensitive) and displays the matching tasks to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"    private final String query;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     * Constructs a new FindCommand with the specified search query.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"     * @param query the query string used to search for matching tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"        this.query \u003d query;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"     * Executes the find command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"     * This method iterates over all tasks in the task list, collects tasks whose descriptions","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"     * contain the query (ignoring case), and displays either the matching tasks or a message","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     * if no matches are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system (not used by this command)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if an error occurs during execution","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"        for (Task task : tasks.getAllTasks()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"            if (task.getDescription().toLowerCase().contains(query.toLowerCase())) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"No matching tasks found.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"        } else {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"                ui.showToUser(\" \" + (i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":61}},{"path":"src/main/java/mahaveer/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":" * The ListCommand class is responsible for listing all the tasks in the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * When executed, it displays a message indicating either that there are no tasks available","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * or it prints each task with its index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"     * Executes the list command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     * This method displays all tasks in the provided task list to the user via the UI.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     * If there are no tasks, it shows a message stating that no tasks are available.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system (not used in this command)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"No tasks available.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"        } else {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"                Task task \u003d tasks.getAllTasks().get(i);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"                ui.showToUser(\" \" + (i + 1) + \". \" + task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":40}},{"path":"src/main/java/mahaveer/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * The MarkCommand class handles marking a task as done.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * When executed, this command retrieves the task corresponding to the provided task number,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * verifies that it is not already marked as done, and then marks it as completed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * The change is updated in the storage and a confirmation message is displayed to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     * Constructs a MarkCommand with the specified task number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     * @param taskNumber the 1-indexed number of the task to be marked as done","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"     * Executes the mark command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"     * This method calculates the zero-based index of the task, checks if the index is valid,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"     * and then marks the task as done if it is not already completed. It updates the storage","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"     * and displays an appropriate message to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system for persisting changes","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the task number is invalid or the task is not found","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"        int index \u003d taskNumber - 1;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size())","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"Task number does not exist.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"        if (task.isDone()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"This task is already marked as done!\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"        } else {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"            storage.markTask(index);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"            task.setDone(true);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"  [\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":57}},{"path":"src/main/java/mahaveer/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * The TodoCommand class handles adding a new todo task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * It creates a new Task with the provided description, adds it to the task list,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * displays a confirmation message to the user, and updates the storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"    private final String description;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"     * Constructs a new TodoCommand with the given task description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"     * Executes the todo command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"     * This method validates the task description, creates a new Task, adds it to the task list,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"     * displays a confirmation to the user, and saves the task in storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system for persisting tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the description is empty","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"        if (description.isEmpty())","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"A \u0027todo\u0027 requires a short description.\\nFor example:\\n  todo Bake a cake\\n  todo Walk the dog\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"        ui.showToUser(\"  [T][ ] \" + description);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"        storage.addTodo(description);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":50}},{"path":"src/main/java/mahaveer/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"import mahaveer.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"import mahaveer.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"import mahaveer.task.Task;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"import mahaveer.exception.MaheveerException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":" * The UnmarkCommand class handles marking a task as not done.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":" * When executed, this command retrieves the task corresponding to the provided task number,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":" * verifies that it is currently marked as done, and then unmarks it.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":" * It updates the storage and displays a confirmation message to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"     * Constructs an UnmarkCommand with the specified task number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"     * @param taskNumber the 1-indexed number of the task to be unmarked","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"     * Executes the unmark command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"     * This method calculates the zero-based index for the task, validates it,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"     * retrieves the task, and if it is marked as done, it unmarks it.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"     * The change is then reflected in the storage and a confirmation is displayed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ojassurana"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ojassurana"},"content":"     * @param ui      the user interface for displaying messages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ojassurana"},"content":"     * @param storage the storage system for persisting changes","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ojassurana"},"content":"     * @throws MaheveerException if the task number is invalid or the task is not found","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ojassurana"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MaheveerException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ojassurana"},"content":"        int index \u003d taskNumber - 1;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ojassurana"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size())","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ojassurana"},"content":"            throw new MaheveerException(\"Task number does not exist.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ojassurana"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ojassurana"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"This task is already marked as not done!\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ojassurana"},"content":"        } else {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ojassurana"},"content":"            task.setDone(false);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ojassurana"},"content":"            ui.showToUser(\"  [\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ojassurana"},"content":"            storage.unmarkTask(index);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ojassurana"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"ojassurana":57}},{"path":"src/main/java/mahaveer/exception/MaheveerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.exception;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":" * The MaheveerException class represents custom exceptions that occur","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":" * within the Mahaveer application. It extends the standard Exception class,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":" * allowing for error messages specific to the application\u0027s domain.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"public class MaheveerException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"     * Constructs a new MaheveerException with the specified detail message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"     * @param message the detail message explaining the exception","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"    public MaheveerException(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"        super(message);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"ojassurana":18}},{"path":"src/main/java/mahaveer/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"    protected String by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"        return \"deadline, \" + (isDone ? \"1\" : \"0\") + \", \" + description + \", \" + by;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ojassurana":20}},{"path":"src/main/java/mahaveer/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"    protected String start;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"    protected String end;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"        return \"event, \" + (isDone ? \"1\" : \"0\") + \", \" + description + \", \" + start + \", \" + end;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ojassurana":22}},{"path":"src/main/java/mahaveer/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ojassurana"},"content":"package mahaveer.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ojassurana"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ojassurana"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ojassurana"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ojassurana"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ojassurana"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ojassurana"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ojassurana"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ojassurana"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ojassurana"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ojassurana"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ojassurana"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ojassurana"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ojassurana"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ojassurana"},"content":"        return isDone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ojassurana"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ojassurana"},"content":"        return description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ojassurana"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ojassurana"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ojassurana"},"content":"        return \"todo, \" + (isDone ? \"1\" : \"0\") + \", \" + description;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ojassurana"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ojassurana"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ojassurana":36}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ojassurana"},"content":"java -classpath ..\\bin mahaveer.Mahaveer \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"ojassurana":1}}]
