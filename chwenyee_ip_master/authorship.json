[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"# Luke project template","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"1. Click `Open`.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"1. Select the project directory, and click `OK`.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"-":22,"chwenyee":4}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"T | 0 | makan","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"T | 1 | makanlah","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"D | 0 | hihi | 2024-03-20 1920","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"E | 1 | byebye | 2020-09-23 1910 | 2021-01-23 2300","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"chwenyee":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"# Luke User Guide","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"![Screenshot of the Luke application when it starts](Luke.png)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"Luke is a chatbot and task manager designed to help users stay organized effortlessly.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"Using Luke, users can add, find, track and manage different types of tasks, such as to-dos,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"deadlines, and events with ease.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"It features a simple command-line interface and supports saving users\u0027 tasks automatically, so they will never","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"lose track of what needs to be done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"Ready to get started? Follow this guide to learn how to use Luke effectively.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"## Features","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"\u003e [!NOTE]","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"\u003e - Words in `UPPER_CASE` are the parameters to be supplied by the user. \u003cbr\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo do laundry`.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"\u003e - Every parameter must be supplied by the user. \u003cbr\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    e.g. if the command specifies `deadline DESCRIPTION /by DUE_DATE_TIME` , the user","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    must fill in all parameters for the input to be valid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"\u003e - Parameters must be entered in the specified order. \u003cbr\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    e.g. if the command specifies `DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME`, the user","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    must follow this exact sequence for the input to be valid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored. \u003cbr\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    e.g. if the command specifies `list 12345`, it will be interpreted as `list`.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"## Adding a Todo: `todo`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"Example: `todo revise CS2113 OOP`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"Expected output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"Yay! I\u0027ve added this task for you: ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"  [T][ ] revise CS2113 OOP","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"Now you have 1 tasks in the list.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"## Adding a Deadline: `deadline`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"Format: `deadline DESCRIPTION /by DUE_DATE_TIME`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"- `DUE_DATE_TIME` must follow this format: `yyyy-MM-dd HHmm`, where `yyyy` is year, `MM` is month,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"  `dd` is day, and `HHmm` is time in 24-hour format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"Example: `deadline submit CS2113 iP /by 2025-03-14 1600`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"Expected output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"Yay! I\u0027ve added this task for you: ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"  [D][ ] submit CS2113 iP (by: Mar 14 2025, 4:00 PM)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"## Adding an Event: `event`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"Adds an event to the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"Format: `event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"- `START_DATE_TIME` and `END_DATE_TIME` must follow this format: `yyyy-MM-dd HHmm`, where `yyyy` is year, `MM` is month,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"  `dd` is day, and `HHmm` is time in 24-hour format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"Example: `event orientation /from 2025-03-07 1000 /to 2025-03-07 2000`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"Expected output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"Yay! I\u0027ve added this task for you: ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"  [E][ ] orientation (from: Mar 7 2025, 10:00 AM to: Mar 7 2025, 8:00 PM)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"## Listing all tasks: `list`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"Format: `list`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"Example: `list`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"Expected output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"1.[T][ ] revise CS2113 OOP","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"2.[D][ ] submit CS2113 iP (by: Mar 14 2025, 4:00 PM)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"3.[E][ ] orientation (from: Mar 7 2025, 10:00 AM to: Mar 7 2025, 8:00 PM)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"## Marking a task as done: `mark`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chwenyee"},"content":"Marks a specified task as done in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"Format: `mark INDEX`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"- Mark the task as done at the specified `INDEX`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"- The index refers to the number assigned to a task in the displayed task list when using the `list` command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chwenyee"},"content":"Example: `list` followed by `mark 1` marks the 1st task as **done** in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chwenyee"},"content":"Expected output of `mark 1`:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chwenyee"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chwenyee"},"content":"[T][X] revise CS2113 OOP","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chwenyee"},"content":"## Marking a task as not done: `unmark`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chwenyee"},"content":"Marks a specified task as not done in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chwenyee"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chwenyee"},"content":"- Mark the task as not done at the specified `INDEX`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chwenyee"},"content":"- The index refers to the number assigned to a task in the displayed task list when using the `list` command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chwenyee"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chwenyee"},"content":"Example: `list` followed by `unmark 1` marks the 1st task as **not done** in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chwenyee"},"content":"Expected output of `unmark 1`:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chwenyee"},"content":"Nice! I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chwenyee"},"content":"[T][ ] revise CS2113 OOP","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chwenyee"},"content":"## Deleting a task: `delete`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chwenyee"},"content":"Delete a specified task from the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chwenyee"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chwenyee"},"content":"- Deletes the task at the specified `INDEX`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chwenyee"},"content":"- The index refers to the number assigned to a task in the displayed task list when using the `list` command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chwenyee"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chwenyee"},"content":"Example: `list` followed by `delete 1` deletes the 1st task in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chwenyee"},"content":"Expected output of `delete 1`:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chwenyee"},"content":"There you go. I\u0027ve removed this task for you:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chwenyee"},"content":"  [T][ ] revise CS2113 OOP","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chwenyee"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chwenyee"},"content":"## Finding tasks by keyword: `find`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chwenyee"},"content":"Finds tasks which descriptions contain the given keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chwenyee"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chwenyee"},"content":"- The search is case-insensitive. e.g. `book` will match `Book`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chwenyee"},"content":"- Only the task description is searched.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chwenyee"},"content":"- Partial word matches are allowed e.g. `bo` will match `book`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chwenyee"},"content":"- Tasks matching the keyword will be returned. e.g. `book` will return `borrow book from Ethan`, `buy exercise book`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"chwenyee"},"content":"- If there is no matching task, a message indicating zero result will be displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chwenyee"},"content":"Example: `find book`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"chwenyee"},"content":"Expected output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"chwenyee"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"chwenyee"},"content":"1.[T][ ] buy exercise book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"chwenyee"},"content":"2.[T][ ] borrow book from Ethan","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"chwenyee"},"content":"## Finding tasks by date: `findDate`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"chwenyee"},"content":"Finds tasks with the specified date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"chwenyee"},"content":"Format: `findDate DATE`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"chwenyee"},"content":"- `DATE` must follow this format: `yyyy-MM-dd`, where `yyyy` is year, `MM` is month, `dd` is day","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"chwenyee"},"content":"- `Todo` tasks are not included in the search as they do not have a date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"chwenyee"},"content":"- For `deadline` tasks, its `DUE_DATE_TIME` are checked.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"chwenyee"},"content":"- For `event` tasks, both the `START_DATE_TIME` and `END_DATE_TIME` are checked.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"chwenyee"},"content":"- Tasks with a matching date (`yyyy-MM-dd`) will be returned, regardless of the time (`HHmm`) in","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"chwenyee"},"content":"  `DUE_DATE_TIME`, `START_DATE_TIME`, or `END_DATE_TIME`.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"chwenyee"},"content":"Example: `findDate 2025-03-07`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"chwenyee"},"content":"Expected output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"chwenyee"},"content":"Here are the tasks on 2025-03-07:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"chwenyee"},"content":"1. [E][ ] orientation (from: Mar 7 2025, 10:00 AM to: Mar 7 2025, 8:00 PM)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"chwenyee"},"content":"## Exiting the program: `bye`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"chwenyee"},"content":"Exits the program.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"chwenyee"},"content":"Format: `bye`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"chwenyee"},"content":"Example: `bye`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"chwenyee"},"content":"Expected output:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"chwenyee"},"content":"It\u0027s my pleasure to help you. Hope to see you again soon! :\u0027)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"chwenyee"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"chwenyee"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"chwenyee"},"content":"## Saving the data","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"chwenyee"},"content":"Luke data, i.e. tasks in the task list, are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"chwenyee"},"content":"There is no need to save manually.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"chwenyee"},"content":"## Editing the data file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"chwenyee"},"content":"Luke data, i.e. tasks in the task list, are saved automatically as a text file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"chwenyee"},"content":"[your current directory in Command Prompt]/data/tasks.txt.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"chwenyee"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"chwenyee"},"content":"\u003e [!CAUTION] ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"chwenyee"},"content":"\u003e If your changes to the data file makes its format invalid, Luke will skip that row,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"chwenyee"},"content":"\u003e notify you and continue loading the next one.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"chwenyee"},"content":"\u003e Consequently, the task list will not include the invalid task. \u003cbr\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"chwenyee"},"content":"\u003e Therefore, only edit the data file if you are confident in making the correct updates.","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"-":16,"chwenyee":202}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.command.Command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" * The main class for Luke CLI program, a task manager.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" * This class initializes the necessary components, such as loading saved tasks from a text file,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" * and then runs the program.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"public class Luke {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * Initializes a Luke instance.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     * This sets up the user interface, storage and loads task from the text file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     * @param filePath The file path where the tasks are stored.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"     * @throws RuntimeException if the task file is not found.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"    public Luke(String filePath) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"            tasks \u003d new TaskList(Storage.load());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"     * Runs the Luke CLI program.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"     * This method continuously reads user commands, processes them, and executes the corresponding actions.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"     * Luke exits only when the user inputs \u0027bye\u0027.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"    public void run() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"            try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"                // show the divider line (\"-----\")","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"                Ui.showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"                // Executes the command, displays messages, and updates the task file accordingly.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"            } catch (LukeException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"            } finally {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"                Ui.showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"     * The entry point of the Luke application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"     * Initializes and starts the program.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        // A relative path is used for the txt file that stores the tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"        new Luke(\"data/tasks.txt\").run();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"chwenyee":70}},{"path":"src/main/java/luke/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":" * Represents exceptions specific to the Luke application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":" * This Exception is thrown when invalid operations are performed within the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"     * Constructs a LukeException with the specified error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    public LukeException(String message) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"        super(message);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"chwenyee":19}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.command.AddCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.command.Command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.command.DeleteCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import luke.command.ExitCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import luke.command.FindCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import luke.command.FindDateCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import luke.command.ListCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import luke.command.MarkCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import luke.command.UnmarkCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"import luke.task.Deadline;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"import luke.task.Event;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"import luke.task.Todo;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":" * Parses user commands and executes the corresponding actions.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":" * This class is responsible for interpreting user inputs and converting them into command objects.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"public class Parser {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     * @return The corresponding command object","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     * @throws LukeException If the user input does not match any valid command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    public static Command parse(String userInput) throws LukeException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"        // Split into two parts to extract the command keyword and its detail","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"        String commandWord \u003d parts[0];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"        case \"list\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"        case \"mark\", \"unmark\", \"delete\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"            return parseCommandWithIndex(parts, commandWord);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"        case \"find\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"            return new FindCommand(parseFind(parts));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"        case \"findDate\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"            return new FindDateCommand(parseFind(parts));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"            return new AddCommand(parseTodo(parts));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"            return new AddCommand(parseDeadline(parts));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"        case \"event\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"            return new AddCommand(parseEvent(parts));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"        default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"I\u0027m sorry, but I don\u0027t know what that means :\u0027(\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"    private static Command parseCommandWithIndex(String[] parts, String commandType) throws LukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"        if (parts.length \u003c 2 || parts[1].isBlank()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Oops! You forget to specify a task number to mark.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"            // Convert user-inputted task number (1-based) to array index (0-based).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"            // The task list shown to the user starts numbering from 1 (Ui.printTaskList method),","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"            // but array indices start from 0, so subtract 1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"            switch (commandType) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"            case \"mark\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"                return new MarkCommand(taskIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"            case \"unmark\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"                return new UnmarkCommand(taskIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"                return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"            default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"                throw new LukeException(\"Invalid command type: \" + commandType);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Haiyaaa......The task number must be an integer.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"    private static String parseFind(String[] parts) throws LukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"        if (parts.length \u003c 2 || parts[1].isBlank()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Whoops, do you notice that you are finding nothing?\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"        return parts[1];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"    private static Todo parseTodo(String[] parts) throws LukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chwenyee"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Whoops, the description of a todo is empty.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"        return new Todo(parts[1], false);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chwenyee"},"content":"     * Parses a deadline command and returns the corresponding Deadline object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chwenyee"},"content":"     * Expects the user input to follow the format: \"deadline \u003cdescription\u003e /by yyyy-MM-dd HHmm\",","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chwenyee"},"content":"     * extracts the description and the deadline date-time, converting the date-time string to a LocalDateTime object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chwenyee"},"content":"     * @param parts The split user input, where the second part contains the deadline description and date-time details.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chwenyee"},"content":"     * @return A Deadline object representing the parsed deadline.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chwenyee"},"content":"     * @throws LukeException If the input format is incorrect or if the date-time format is wrong.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chwenyee"},"content":"    private static Deadline parseDeadline(String[] parts) throws LukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chwenyee"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\" /by \")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Your command format is incorrect!\" + System.lineSeparator()","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chwenyee"},"content":"                    + \"Please make sure to follow the format: deadline \u003cdescription\u003e /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chwenyee"},"content":"        String[] details \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chwenyee"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(details[1], INPUT_FORMAT);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chwenyee"},"content":"            return new Deadline(details[0], by, false);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chwenyee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Oops! The date format is incorrect.\" + System.lineSeparator()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chwenyee"},"content":"                    + \"Please use the format: yyyy-MM-dd HHmm (e.g., 2024-03-05 1800).\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chwenyee"},"content":"     * Parses an event command and returns the corresponding Event object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chwenyee"},"content":"     * Expects the user input to follow the format: \"event \u003cdescription\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\", and","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chwenyee"},"content":"     * extracts the event details, converting the date-time strings to LocalDateTime objects.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chwenyee"},"content":"     * @param parts The split user input, where the second part contains the event description and date-time details.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chwenyee"},"content":"     * @return An Event object representing the parsed event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chwenyee"},"content":"     * @throws LukeException If the input format is incorrect or if the date-time format is wrong.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chwenyee"},"content":"    private static Event parseEvent(String[] parts) throws LukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chwenyee"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\" /from \") || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Your command format is incorrect!\" + System.lineSeparator()","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chwenyee"},"content":"                    + \"Please make sure to follow the format: event \u003cdescription\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chwenyee"},"content":"        String[] details \u003d parts[1].split(\" /from \", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chwenyee"},"content":"        String description \u003d details[0];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chwenyee"},"content":"        String[] times \u003d details[1].split(\" /to \", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chwenyee"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(times[0], INPUT_FORMAT);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chwenyee"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(times[1], INPUT_FORMAT);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chwenyee"},"content":"            return new Event(description, from, to, false);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chwenyee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Oops! The date format is incorrect.\" + System.lineSeparator()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chwenyee"},"content":"                    + \"Please use the format: yyyy-MM-dd HHmm (e.g., 2024-03-05 1800).\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chwenyee"},"content":"     * Parses a saved task from a text file and converts it into a Task object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chwenyee"},"content":"     * @param line A stored task that is saved as a line of text.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"chwenyee"},"content":"     * @return A Task object, or null if parsing fails.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chwenyee"},"content":"    public static Task parseTaskFromStorage(String line) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"chwenyee"},"content":"        // Splits the input line into parts based on task type format","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"chwenyee"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chwenyee"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"chwenyee"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"chwenyee"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"chwenyee"},"content":"            switch (type) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"chwenyee"},"content":"            case \"T\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"chwenyee"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"chwenyee"},"content":"            case \"D\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"chwenyee"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[3], INPUT_FORMAT);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"chwenyee"},"content":"                return new Deadline(description, by, isDone);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"chwenyee"},"content":"            case \"E\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"chwenyee"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(parts[3], INPUT_FORMAT);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"chwenyee"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(parts[4], INPUT_FORMAT);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"chwenyee"},"content":"                return new Event(description, from, to, isDone);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"chwenyee"},"content":"            default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"chwenyee"},"content":"                // To handle cases such as having an unknown task type stored in txt file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"chwenyee"},"content":"                throw new LukeException(\"Unknown task type in storage.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"chwenyee"},"content":"        // Return null and let Storage.load to handle this error","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"chwenyee"},"content":"        } catch (DateTimeParseException | LukeException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"chwenyee"},"content":"            return null;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":186}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":" * Handles the storage operations for the Luke application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":" * This class saves tasks to a text file and loads them when the application starts.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"public class Storage {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    private static String filePath;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     * Initializes a Storage instance with the specified file path.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     * Saves the given list of tasks to a text file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     * If the file does not exist, it is created automatically.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     * @param tasks The file path where the tasks are stored.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"            // Creates the parent directory if it does not exist.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"            // Overwrites the file instead of using append mode to prevent data duplication","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"            // Writes each task in a format suitable for storage","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"            for (Task currentTask : tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"                fw.write(currentTask.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"            fw.close();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"            Ui.showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"     * Loads saved tasks from the storage file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"     * If the file does not exist, an empty list is returned.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"     * @return A list of tasks retrieved from the storage file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"     * @throws FileNotFoundException If the task file is not found.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"    public static ArrayList\u003cTask\u003e load() throws FileNotFoundException{","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"            return tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"        Scanner input \u003d new Scanner(file);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"        // Reads file content and converts each line into a task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"        while (input.hasNextLine()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"            String line \u003d input.nextLine();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"            Task currentTask \u003d Parser.parseTaskFromStorage(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"            // currentTask is returned to be null if the current saved task is written in wrong format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"            if (currentTask !\u003d null) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"                tasks.add(currentTask);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"            // null currentTask will not be added. Instead, an error message is displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"            } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"                Ui.showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"                System.out.println(\"Skipping invalid task in storage: \" + line + System.lineSeparator()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"                        + \"This could be due to wrong format.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"        input.close();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"        return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"chwenyee":91}},{"path":"src/main/java/luke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.task.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.task.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":" * Represents a list of tasks. It provides methods to add, delete, mark, unmark and search.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"public class TaskList {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     * Instantiates an empty task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * Initializes a task list with a given set of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * @param tasks The initial list of tasks to be stored in the TaskList..","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"     * @throws LukeException If the task limit (100 tasks) is exceeded.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    public void addTask(Task task) throws LukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"        if (tasks.size() \u003e\u003d 100) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"You have reach the task limit of 100!\" + System.lineSeparator()","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"                    +  \"Please delete some tasks before adding new ones.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"     * Deletes a task from the list based on the given index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"     * @return The deleted task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"     * Marks a task as done based on the given index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"     * Marks a task as not done based on the given index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"     * Finds tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"     * @param keyword The keyword to search for (case-insensitive).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"     * @return A list of tasks that contain the keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"            // Ignore the case in searching process by making both description and keyword lower case.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"        return matchingTasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"     * Finds tasks that are associated with a specific date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chwenyee"},"content":"     * Tasks found are either deadlines or events.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chwenyee"},"content":"     * @param date The date to search for. The date must follow the input format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"     * @return A list of tasks occurring on the specified date. If no tasks match the date, an empty list is returned.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"    public ArrayList\u003cTask\u003e findTasksByDate(LocalDate date) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chwenyee"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chwenyee"},"content":"                if (((Deadline) task).getBy().toLocalDate().equals(date)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chwenyee"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chwenyee"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chwenyee"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chwenyee"},"content":"                if (((Event) task).getFrom().toLocalDate().equals(date) || ((Event) task).getTo().toLocalDate().equals(date)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chwenyee"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chwenyee"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chwenyee"},"content":"        return matchingTasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chwenyee"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chwenyee"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chwenyee"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chwenyee"},"content":"        return tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":122}},{"path":"src/main/java/luke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":" * Handles user interactions by reading user inputs, displaying messages and printing task lists.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"public class Ui {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * Creates a new instance of Ui with an input scanner to read user input.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    public Ui() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     * Reads and returns the next command input by the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     * @return The user input command as a string.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     * A horizontal divider line used for UI formatting.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    public static final String DIVIDER \u003d \"-\".repeat(100);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"     * Prints a divider line to separate sections in the UI.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"    public static void showLine() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"      System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"     * Displays a greeting message when Luke starts.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Hi there! I\u0027m Luke a.k.a your best task manager.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"I\u0027m always here to help, so feel to ask me anything!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"     * Displays a goodbye message when Luke exits.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"It\u0027s my pleasure to help you. Hope to see you again soon! :\u0027)\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"     * @param taskIndex The index of the task that was marked as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"    public static void showMarkTaskAsDone(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"     * @param taskIndex The index of the task that was marked as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"    public static void showMarkTaskAsNotDone(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"     * Displays a message when a task is added to the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"    public static void showTaskAdded(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Yay! I\u0027ve added this task for you: \");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"        // -1 because the taskCount has incremented after adding a new task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"  \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"     * Displays a message when a task is deleted from the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"     * @param tasks The list of remaining tasks after deletion.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"     * @param deletedTask The task that was deleted.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chwenyee"},"content":"    public static void showTaskDeleted(ArrayList\u003cTask\u003e tasks, Task deletedTask) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"There you go. I\u0027ve removed this task for you:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"  \" + deletedTask.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chwenyee"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chwenyee"},"content":"     * Display a message indicating that the task list is empty if so","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chwenyee"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chwenyee"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chwenyee"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"You don\u0027t have any tasks yet. Time to add one now!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chwenyee"},"content":"        } else {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chwenyee"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chwenyee"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chwenyee"},"content":"     * Displays a list of tasks that match a search query.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chwenyee"},"content":"     * @param matchingTasks The list of matching tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chwenyee"},"content":"    public static void showTasksFound(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chwenyee"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"It looks like there are no tasks with this keyword. Try a different one!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chwenyee"},"content":"        } else {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chwenyee"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i +\u003d 1) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chwenyee"},"content":"                System.out.println((i + 1) + \".\" + matchingTasks.get(i).toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chwenyee"},"content":"     * Displays tasks that fall on a specified date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chwenyee"},"content":"     * @param matchingTasks The list of tasks on the given date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chwenyee"},"content":"     * @param date The date being searched.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chwenyee"},"content":"    public static void showTasksFoundByDate(ArrayList\u003cTask\u003e matchingTasks, LocalDate date) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chwenyee"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"No deadlines or events found on this date.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chwenyee"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"Here are the tasks on \" + date + \":\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chwenyee"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chwenyee"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chwenyee"},"content":"     * Displays an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"chwenyee"},"content":"     * @param output The error message to display.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"chwenyee"},"content":"    public void showError(String output) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"chwenyee"},"content":"        System.out.println(output);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":166}},{"path":"src/main/java/luke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.LukeException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    protected Task task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * Creates an AddCommand with the specified task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by adding the task to the task list,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * displaying a message after the task is successfully added, and saving the updated list to storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list to add the task to.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     * @throws LukeException If the task list exceeds the maximum limit, i.e. 100.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws LukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"        Ui.showTaskAdded(tasks.getTasks());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":39}},{"path":"src/main/java/luke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.LukeException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" * Represents an abstract command that can be executed on the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":" * Subclasses of this class implement specific commands such as adding, deleting, marking and finding tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by performing operations on the given task list, UI, and storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list to operate on.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     * @throws LukeException If an error occurs during execution.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws LukeException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * Determines if this command exits the Luke application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * @return true if the command exits the program, false otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"        return false;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":31}},{"path":"src/main/java/luke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    protected int index;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     * Creates a DeleteCommand with the specified task index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     * @param index The index of the task to be deleted (zero-based).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by deleting the task at the specified index,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     * displaying a message after the specified task is deleted, and saving the updated list to storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * If the index is out of bounds, an error message is displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list where the task will be deleted.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"            Task removedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"            Ui.showTaskDeleted(tasks.getTasks(), removedTask);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"            ui.showError(\"Hmm... Why are you trying to delete a non-existent task?\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":42}},{"path":"src/main/java/luke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" * Represents a command to exit the Luke application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by displaying a goodbye message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage that saves tasks inputted by users (not used in this command).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        Ui.showGoodbyeMessage();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * Indicates that this command exits the Luke application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * @return true, as this command is for exiting.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"        return true;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":32}},{"path":"src/main/java/luke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.LukeException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":" * Represents a command to find tasks that match a given keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    protected String keyword;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * Creates a FindCommand with the specified keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by searching for tasks containing the keyword","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     * and displaying the results.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list to search in.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage that saves tasks inputted by users (not used in this command).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTask(keyword);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        Ui.showTasksFound(matchingTasks);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":39}},{"path":"src/main/java/luke/command/FindDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.LukeException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import luke.task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":" * Represents a command to find tasks occurring on a specific date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"public class FindDateCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    protected LocalDate date;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     * Creates a FindDateCommand with the specified date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"     * @param dateString The date to search for, in yyyy-MM-dd format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     * @throws LukeException If the date format is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"    public FindDateCommand(String dateString) throws LukeException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"            this.date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"            throw new LukeException(\"Invalid date format! Please use yyyy-MM-dd.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by searching for tasks matching the specified date","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"     * and displaying the results.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list to search in.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage that saves tasks inputted by users (not used in this command).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasksByDate(date);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"        Ui.showTasksFoundByDate(matchingTasks, date);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"chwenyee":46}},{"path":"src/main/java/luke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" * Represents a command to print out all tasks in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by retrieving the tasks from TaskList,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * and displaying all of them.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list containing all tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage that saves tasks inputted by users (not used in this command).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"        Ui.printTaskList(tasks.getTasks());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":24}},{"path":"src/main/java/luke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    protected int index;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * Creates a MarkCommand with the specified task index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * @param index The index of the task to be marked as done (zero-based).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by marking the task as done,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * displaying a message after the task is successfully marked as done, and saving the updated list to storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     * If the index is out of bounds, an error message is displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list containing the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"            tasks.markTask(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"            Ui.showMarkTaskAsDone(tasks.getTasks(), index);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"            ui.showError(\"Hmm... Why are you trying to mark a non-existent task?\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":41}},{"path":"src/main/java/luke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.command;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import luke.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import luke.TaskList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import luke.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" * Represents a command to unmark a task (mark it as not done).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    protected int index;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * Creates an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * @param index The index of the task to be unmarked (zero-based).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     * Executes the command by marking the task as not done,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * displaying a message after the task is successfully marked as not done, and saving the updated list to storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     * If the index is out of bounds, an error message is displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     * @param tasks   The task list containing the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"            tasks.unmarkTask(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"            Ui.showMarkTaskAsNotDone(tasks.getTasks(), index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"            ui.showError(\"Hmm... Why are you trying to unmark a non-existent task?\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":41}},{"path":"src/main/java/luke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * Constructs a Deadline task with a description, deadline, and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     * @param by The deadline date and time for the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     * @param isDone The completion status of the task (true if done, false if not done).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     * Returns the deadline date and time for the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     * @return The deadline as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"        return by;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the deadline task with its status, description and deadline.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the deadline task in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the deadline task in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"        return (\"D\" + super.toFileFormat() + \" | \" + by.format(INPUT_FORMAT));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"chwenyee":55}},{"path":"src/main/java/luke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" * Represents a task that occurs within a range of time.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * Constructs an Event task with a description, start and end time, and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     * @param from The start date and time for the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"     * @param to The end date and time for the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     * @param isDone The completion status of the event (true if done, false if not done).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     * Returns the start date and time for the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"     * @return The start date and time as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        return from;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"     * Returns the end date and time for the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"     * @return The end date and time as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"        return to;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the event with its status, description, start and end time.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(OUTPUT_FORMAT) + \" to: \" + to.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the event in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the event in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        return (\"E\" + super.toFileFormat() + \" | \" + from.format(INPUT_FORMAT) + \" | \" + to.format(INPUT_FORMAT));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"chwenyee":69}},{"path":"src/main/java/luke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":" * Represents a task with a description and its completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"public class Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"    protected String description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     * Constructs a Task with a given description and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     * @param isDone The completion status of the task (true if done, false if not done).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"     * Returns the icon representing the task\u0027s completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     * @return \"X\" if the task is done, a space character if the task is not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"        return description;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the task with its status and description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"        return (\"[\" + this.getStatusIcon()+ \"] \" + description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the task in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"     * File-friendly format for the Luke Application is as follows:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"     * - Delimiters (in this case, \u0027|\u0027 character) is used to separate different attributes of the task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"     * - The task completion status, represented as \"1\" for done or \"0\" for not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"     * - A description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the task in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"        return (\" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":78}},{"path":"src/main/java/luke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package luke.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":" * Represents a task that does not have a specific deadline or time range.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"     * Constructs a Todo task with a description and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     * @param isDone The completion status of the task (true if done, false if not done).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the Todo task with its status and description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the Todo task in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     * @return A string representing the Todo task in a file-friendly format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"        return (\"T\" + super.toFileFormat());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"chwenyee":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"java -classpath ..\\bin Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"chwenyee":1}}]
