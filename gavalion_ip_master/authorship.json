[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"name: Bug report","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"about: Create a report to help us improve","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"title: \u0027\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"labels: \u0027\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"**Describe the bug**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"**To Reproduce**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"4. See error","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"**Expected behavior**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"**Screenshots**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"**Desktop (please complete the following information):**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":" - OS: [e.g. iOS]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":" - Browser [e.g. chrome, safari]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":" - Version [e.g. 22]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"**Smartphone (please complete the following information):**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":" - Device: [e.g. iPhone6]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":" - OS: [e.g. iOS8.1]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":" - Browser [e.g. stock browser, safari]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":" - Version [e.g. 22]","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"**Additional context**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"Add any other context about the problem here.","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":38}},{"path":"data/bryan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"T # 0 # read book","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"E # 1 # project meeting # Aug 6th 2-4pm","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"D # 1 # submit ip # 14-03-2025","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"D # 0 # tp meeting # 17-07-2026","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"D # 0 # ee4308 meeting # 19-07-2026","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"gavalion":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"# Bryan","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"Bryan is a simple task management application based on Duke, featuring a cli-based interface for managing tasks efficiently.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"## **Quick Start**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"1. Ensure you have **Java 17 or higher** installed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"2. Go to the main github page","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"3. Download the latest `ip.jar` file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"4. Run the application using:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"   ```sh","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"   java -jar ip.jar","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"   ```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"## Commands","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"  e.g. in `deadline {DESCRIPTION} /by {DATE}`, `DESCRIPTION` and `DATE` parameter which can be used as `deadline submit ip /by 14-03-2025`.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"* Parameters must be in any order.\u003cbr\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"  e.g. in event `{DESCRIPTION} /from {FROM DATE} /to {TO DATE}` the `/from` is always stated befor `/to`.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `bye` and `list`) will be considered and raised as exception.\u003cbr\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"  e.g. if the command specifies `bye 11`, it will be considered as an error and valid commands are printed for user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"  ![Extra Parameter](images/extra%20param.png)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"* ❗ Indicates possible errors encountered, some errors are not listed in this README because their messages clearly explain the issue.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"Bryan supports the following commands to help you manage your tasks:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"### **1. Exit the program: `bye`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"Shuts down the application with exit code `130`.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"bye","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"📌 **Example Output:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"![Bye Message](images/bye%20message.png)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"### **2. Listing all tasks: `list`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"Displays all the tasks currently stored in the application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"📌 **Example Output:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"![List Message](images/list%20message.png)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"❗ **If no tasks are added, an error will occur.**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"![List Error](images/list%20error.png)  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"### **3. Create a To-Do Task: `todo`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"Creates a new **To-Do** task with the given description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"todo {DESCRIPTION}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"📌 **Example:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"todo go to school","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"❗ **If the description is empty, an error will occur.**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"![Todo Error](images/todo%20error.png)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gavalion"},"content":"### **4. Create a Deadline Task: `deadline`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gavalion"},"content":"Creates a **Deadline** task with a specific due date in (dd-mm-yyyy) format.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gavalion"},"content":"deadline {DESCRIPTION} /by {DATE}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gavalion"},"content":"📌 **Example:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gavalion"},"content":"deadline submit assignment /by 15-05-2025","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gavalion"},"content":"❗ **The deadline format is invalid due to missing `/by`, empty date or empty description.**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gavalion"},"content":"![Deadline Error](images/deadline%20error.png) ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gavalion"},"content":"### **5. Create an Event Task: `event`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gavalion"},"content":"Creates an **Event** task with a specified start and end time. The date is stored as a string instead of date time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gavalion"},"content":"event {DESCRIPTION} /from {FROM DATE} /to {TO DATE}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gavalion"},"content":"📌 **Example:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gavalion"},"content":"event japan trip /from 20th may /to 31th may","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gavalion"},"content":"❗ **The event format is invalid due to missing `/from`, `/to`, empty from date, empty to date, `/from` is stated after `/to` or empty description.**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gavalion"},"content":"![Event Error](images/event%20error.png) ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gavalion"},"content":"### **6. Mark/Unmark a Task: `mark` / `unmark`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gavalion"},"content":"Marks a task as done or not done based on the provided index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gavalion"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gavalion"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gavalion"},"content":"mark {INDEX}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gavalion"},"content":"unmark {INDEX}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gavalion"},"content":"📌 **Example:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gavalion"},"content":"mark 3","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gavalion"},"content":"❗ **There is going to be an exception raised when marking a marked task, vice versa.**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gavalion"},"content":"❗ **The index can not be out of bounds, if so it will raise an exception.**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gavalion"},"content":"### **7. Delete a Task: `delete`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gavalion"},"content":"Deletes a task from the list based on the provided index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gavalion"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gavalion"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gavalion"},"content":"delete {INDEX}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gavalion"},"content":"📌 **Example:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gavalion"},"content":"delete 2","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gavalion"},"content":"❗ **The index can not be out of bounds, if so it will raise an exception.**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gavalion"},"content":"### **8. Search tasks by Keyword: `find`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gavalion"},"content":"Finds and displays all tasks that contain the specified keyword. The keyword can only be used to search based on tasks description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gavalion"},"content":" ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gavalion"},"content":" - The search is case-sensitive. e.g **meeting** will not match **Meeting**.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gavalion"},"content":"find {KEYWORD}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gavalion"},"content":"📌 **Example:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gavalion"},"content":"![Find Example](images/find%20example.png) ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gavalion"},"content":"❗ **The keyword is needed, otherwise an exception is raised.**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gavalion"},"content":"### **9. Search deadlines by Date: `before` / `after`**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gavalion"},"content":"Finds and lists all **deadline** tasks that are due before or after the given date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gavalion"},"content":"📌 **Format:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gavalion"},"content":"before {DATE}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gavalion"},"content":"after {DATE}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gavalion"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gavalion"},"content":"📌 **Example:**  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"gavalion"},"content":"![After Example](images/after%20example.png) ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gavalion"},"content":"❗ **The date is needed, otherwise an exception is raised.**   ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gavalion"},"content":"❗ **The date must be in `dd-mm-yyyy` format, otherwise an exception is raised.**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gavalion"},"content":"## **Saving**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"gavalion"},"content":"The application will automatically save all tasks when task is being manipulated from commands like `mark`, `unmark`, `delete`, `todo`, `deadline` and `event`.    ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"gavalion"},"content":"the file path is based on the current directory of where the jar file being exceuted, change `FILE_PATH` in bryan.java to change the directory.  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gavalion"},"content":"## **Usage**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"gavalion"},"content":"Once the application is running, type any of the commands listed above in the command input field to interact with Bryan.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"gavalion"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false}],"authorContributionMap":{"gavalion":186,"-":19}},{"path":"src/main/java/bryan/Bryan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.exception.*;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"import bryan.task.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"public class Bryan {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"    public static final String FILE_PATH \u003d \"data/bryan.txt\"; //change to data/bryan.txt for real test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"        ui.greeting();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"        Scanner userInput \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"        String userString;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"        Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d storage.run();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"        Task task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"        boolean isNewTaskAdded;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"        while (true) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"            userString \u003d userInput.nextLine();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"            //echo(userString); //uncomment for txt ui-testing","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"            isNewTaskAdded \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"            try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"                Parser parsedCommand \u003d new Parser(userString);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"                String commandText \u003d parsedCommand.getCommandText();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"                String detail \u003d parsedCommand.getDetail();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"                TaskList tasklist \u003d new TaskList(commandText, detail, taskArray, storage);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"                tasklist.process();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidCommandException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"                ui.printEmptyTaskException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"                ui.printIndexOutOfBoundsException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"            } catch (MarkingException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"                ui.printMarkingException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidDeadlineFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidDeadlineFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidEventFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidEventFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidMarkFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidMarkFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidUnmarkFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidUnmarkFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidTodoFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidTodoFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidDeleteFormatException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidDeleteFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"                ui.printNumberFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"            } catch (EmptyDeadlineDescription e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"                ui.printEmptyDeadlineDescription();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"            } catch (EmptyEventDescription e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"                ui.printEmptyEventDescription();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"            } catch (InvalidFindFormatException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"                ui.printFindFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"            }catch (InvalidAfterFormatException | InvalidBeforeFormatException e){","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidBeforeAfterFormatException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"            }catch (DateTimeParseException e){","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"                ui.printInvalidDateFormat();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"//            catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"//                System.out.println(\"number is out of index, maximum list length is 100\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"//            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"//        ui.sayBye();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"    public static void echo(String userString) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"        System.out.println(userString);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"gavalion":83}},{"path":"src/main/java/bryan/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.exception.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"public class Parser {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"     * All available commands","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"    public static final String[] COMMAND_ARRAY \u003d {\"todo\", \"list\", \"deadline\", \"mark\", \"unmark\", \"event\", \"bye\", \"delete\", \"find\", \"before\", \"after\"};","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"     * Command from user input","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"    protected String commandText;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"     * Text that comes after the command if there is any","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"    protected String detail;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"     * Check whether the command is valid and available.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"     * It checks for formatting for event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"     * @param userString user input from terminal","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidCommandException due to command does not exist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidEventFormatException due to missing /from or /to and /from is stated after /to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"    public static void commandChecker(String userString) throws InvalidCommandException, InvalidEventFormatException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"        for (String s : COMMAND_ARRAY) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"            if (userString.startsWith(s + \" \") \u0026\u0026 !s.equals(\"bye\") \u0026\u0026 !s.equals(\"list\")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"                isValid \u003d true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"            } else if (userString.startsWith(\"event \") \u0026\u0026 !(userString.contains(\"/from\") \u0026\u0026 userString.contains(\"/to\") \u0026\u0026 userString.indexOf(\"/from\") \u003c userString.indexOf(\"/to\"))) {//\u0026\u0026 userString.indexOf(\"/from\") \u003e userString.indexOf(\"/to\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"                throw new InvalidEventFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"            } else if (userString.equals(s)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"                isValid \u003d true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"        if (!isValid) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"     * Constructor for the parser class.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"     * Parse the user input and fill command and detail attribute","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"     * Check whether command is valid","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"     * Check whether command format is correct","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"     * @param userString User input string","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidFindFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidBeforeFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidAfterFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidCommandException due to command does not exist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeleteFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeadlineFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidEventFormatException due to invalid event format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidMarkFormatException empty number to mark","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidUnmarkFormatException empty number to mark","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTodoFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"    public Parser(String userString) throws","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"            InvalidFindFormatException, InvalidBeforeFormatException, InvalidAfterFormatException, InvalidCommandException, InvalidDeleteFormatException, InvalidDeadlineFormatException, InvalidEventFormatException, InvalidMarkFormatException, InvalidUnmarkFormatException, InvalidTodoFormatException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"            commandChecker(userString);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"            String[] parsedCommand \u003d userString.split(\" \", 2);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"            this.commandText \u003d parsedCommand[0];","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"            if (parsedCommand.length \u003e 1) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"                this.detail \u003d parsedCommand[1];","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"            this.checkDescription();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"    public String getCommandText() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"        return commandText;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"    public String getDetail() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"        return detail;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gavalion"},"content":"     * Check whether the command have any error in formatting.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gavalion"},"content":"     * Throw error if there is any exception triggered.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gavalion"},"content":"     * Command checked are commands that requires details to be functional.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidAfterFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidBeforeFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidFindFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeleteFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeadlineFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidEventFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidMarkFormatException empty number to mark","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidUnmarkFormatException empty number to mark","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTodoFormatException due to empty detail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gavalion"},"content":"    public void checkDescription() throws InvalidAfterFormatException, InvalidBeforeFormatException, InvalidFindFormatException,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gavalion"},"content":"            InvalidDeleteFormatException, InvalidDeadlineFormatException, InvalidEventFormatException, InvalidMarkFormatException,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gavalion"},"content":"            InvalidUnmarkFormatException, InvalidTodoFormatException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gavalion"},"content":"        {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gavalion"},"content":"            if (this.detail \u003d\u003d null) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gavalion"},"content":"                switch (this.getCommandText()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gavalion"},"content":"                    case \"todo\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidTodoFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gavalion"},"content":"                    case \"deadline\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidDeadlineFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gavalion"},"content":"                    case \"mark\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidMarkFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gavalion"},"content":"                    case \"event\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidEventFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gavalion"},"content":"                    case \"unmark\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidUnmarkFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gavalion"},"content":"                    case \"delete\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidDeleteFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gavalion"},"content":"                    case \"find\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidFindFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gavalion"},"content":"                    case \"before\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidBeforeFormatException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gavalion"},"content":"                    case \"after\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gavalion"},"content":"                        throw new InvalidAfterFormatException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gavalion"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gavalion"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"gavalion":130}},{"path":"src/main/java/bryan/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.exception.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"import bryan.task.Deadline;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"import bryan.task.Event;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"import bryan.task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"import bryan.task.Todo;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"import java.io.File;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"public class Storage {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"    protected String filePath;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"    public Storage(String fileName){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"        this.filePath \u003d fileName;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"     * Read txt file and convert it into Arraylist of tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"     * @return Arraylist of tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"     * @throws FileNotFoundException Exception die to missing file or directory","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTextFormatException exception due to invalid task text format in the txt file Exception due to format error inside the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"    public ArrayList\u003cTask\u003e readFile() throws FileNotFoundException, InvalidTextFormatException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"            try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"                // convert each line in txt to task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"                taskArray.add(textToTask(s.nextLine()));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"            } catch (MarkingException | EmptyEventDescription | InvalidTextFormatException |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"                     InvalidTodoFormatException | InvalidEventFormatException | InvalidDeadlineFormatException |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"                     EmptyDeadlineDescription e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"                throw new InvalidTextFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"        return taskArray;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"     * Convert string into task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"     * @param input String input receieved from a line in the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"     * @return task read from the input","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"     * @throws MarkingException exception due to marking an marked task, vice versa","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyEventDescription exception due to empty event description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeadlineFormatException exception due to invalid deadline format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidEventFormatException exception due to invalid event format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTodoFormatException exception due to invalid todo format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyDeadlineDescription exception due to empty deadline description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTextFormatException exception due to invalid task text format in the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"    public Task textToTask(String input) throws MarkingException, EmptyEventDescription, InvalidDeadlineFormatException, InvalidEventFormatException, InvalidTodoFormatException, EmptyDeadlineDescription, InvalidTextFormatException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"        String[] parsedInput \u003d input.split(\" # \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"        Task t;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"        String taskType \u003d parsedInput[0];","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"        t \u003d switch (taskType) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"            // identify the type of task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"            case \"T\" -\u003e new Todo(parsedInput[2], false);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"            case \"D\" -\u003e new Deadline(parsedInput[2] + \" /by \" + parsedInput[3], false);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"            case \"E\" -\u003e new Event(parsedInput[2] + \" /from \" + parsedInput[3].split(\"-\")[0] + \" /to \" + parsedInput[3].split(\"-\")[1], false);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"            default -\u003e throw new InvalidTextFormatException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"        };","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"        // check whether the  task is marked or unmarked","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"        boolean isDone \u003d (parsedInput[1].equals(\"1\"));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"        if (isDone !\u003d t.isDone()){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"            t.setDone(isDone);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"        return t;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"     * Convert tasks to String","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"     * Overwrite the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"     * This method is used whenever the user delete or mark/unmark a task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gavalion"},"content":"     * @param taskArray An arraylist of tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gavalion"},"content":"    public void taskToText(ArrayList\u003cTask\u003e taskArray){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gavalion"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gavalion"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gavalion"},"content":"            for (Task t : taskArray) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gavalion"},"content":"                fw.write(t.convertToTxtFormat() + System.lineSeparator());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gavalion"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gavalion"},"content":"            fw.close();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gavalion"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"error in file io\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gavalion"},"content":"            System.exit(1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gavalion"},"content":"     * Convert a task into String","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gavalion"},"content":"     * Append a line of task into the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gavalion"},"content":"     * This method is used whenever the user add a task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gavalion"},"content":"     * Adding task commands are todo, event and deadline","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gavalion"},"content":"     * @param task A single task that just been added by user","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gavalion"},"content":"    public void taskToText(Task task){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gavalion"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gavalion"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath,true);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gavalion"},"content":"            fw.write(task.convertToTxtFormat() + System.lineSeparator());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gavalion"},"content":"            fw.close();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gavalion"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"error in file io\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gavalion"},"content":"            System.exit(1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gavalion"},"content":"     * Read the txt file and create a new file if it does not exist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gavalion"},"content":"     * If there is no error, then return arraylist of task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gavalion"},"content":"     * If the file is missing then return empty array list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gavalion"},"content":"     * @return Arraylist of tasks if the file exist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gavalion"},"content":"    public ArrayList\u003cTask\u003e run() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gavalion"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gavalion"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gavalion"},"content":"            taskArray \u003d readFile();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gavalion"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gavalion"},"content":"            createNewFolder();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gavalion"},"content":"        } catch (InvalidTextFormatException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"Error in text format\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gavalion"},"content":"            System.exit(1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gavalion"},"content":"        return taskArray;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gavalion"},"content":"     * Create new folder and file if it does not exist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gavalion"},"content":"    public void createNewFolder(){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"File not found\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"please check the txt file, it should be bryan.txt under the \\\"data\\\" folder\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gavalion"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gavalion"},"content":"        boolean directoryCreated \u003d directory.mkdir();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gavalion"},"content":"        if (directoryCreated) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"Directory created\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gavalion"},"content":"        } else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"Failed to create directory. It may already exist\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gavalion"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gavalion"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gavalion"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gavalion"},"content":"                System.out.println(\"File created: \" + f.getName());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gavalion"},"content":"                System.out.println(\"path: \" + f.getPath());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gavalion"},"content":"            } else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gavalion"},"content":"                System.out.println(\"File already exists.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gavalion"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gavalion"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"IO exception error\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gavalion"},"content":"            System.exit(1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"gavalion":168}},{"path":"src/main/java/bryan/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.exception.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"import bryan.task.Deadline;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"import bryan.task.Event;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"import bryan.task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"import bryan.task.Todo;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"//import bryan.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"public class TaskList {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"     * Command from user input","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"    protected String commandText;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"     * Text that comes after the command if there is any","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"    protected String detail;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"     * Array list of tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"    protected ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"     * Storage class to manipulate txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"    protected Storage storage;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"     * Constructor for task list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"     * @param commandText command from the user","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"     * @param detail text that comes after command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"     * @param taskArray Task arraylist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"     * @param storage Storage class to manipulate the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"    public TaskList(String commandText, String detail, ArrayList\u003cTask\u003e taskArray, Storage storage) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"        this.commandText \u003d commandText;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"        this.taskArray \u003d taskArray;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"     * Process the command and details from the constructor.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"     * \"bye\" will shutdown the process","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"     * \"list\" will print out all task inside the array list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"     * \"Todo\" will create a new todo task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"     * \"Event\" will create a new Event task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"     * \"Deadline\" will create a new deadline task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"     * \"mark\" will mark a task as done","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"     * \"unmark\" will mark a task as undone","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"     * \"delete\" will delete a task based on index number","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"     * \"find\" will print out tasks that contains inputted string inside the description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"     * \"before\" will print out tasks that is before the inputted date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"     * \"after\" will print out the tasks that is after the inputted date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"     * @throws DateTimeParseException exception due to parsing error in deadline","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyTaskException exception due to empty arraylist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"     * @throws MarkingException exception due to marking a marked task, vice versa","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyEventDescription exception due to empty event description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeadlineFormatException  exception due to invalid deadline format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidEventFormatException exception due to invalid event format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTodoFormatException  exception due to invalid todo format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyDeadlineDescription exception due to empty deadline description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"    public void process() throws DateTimeParseException, EmptyTaskException, MarkingException, EmptyEventDescription, InvalidDeadlineFormatException, InvalidEventFormatException, InvalidTodoFormatException, EmptyDeadlineDescription {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"        // indicates when a new task is added from todo, deadline and event","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"        boolean isNewTaskAdded \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"        Task task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"        ArrayList\u003cTask\u003e searchedTasks;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"        switch (this.commandText) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"            case \"bye\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"                ui.sayBye();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"                // system exit 130 to break out of the loop and indicate that the process has finished","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"                System.exit(130);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gavalion"},"content":"            case \"list\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gavalion"},"content":"                // send error message if the array is empty","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gavalion"},"content":"                this.checkEmptyList(taskArray);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gavalion"},"content":"                ui.printTask(taskArray);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gavalion"},"content":"            case \"mark\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gavalion"},"content":"            case \"unmark\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gavalion"},"content":"                int numberMark \u003d Integer.parseInt(this.detail);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gavalion"},"content":"                boolean isMark \u003d this.commandText.equals(\"mark\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gavalion"},"content":"                // set the task to be mark or unmark, the -1 is added since array indexing starts 0 while ui list indexing starts from 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gavalion"},"content":"                taskArray.get(numberMark - 1).setDone(isMark);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gavalion"},"content":"                ui.printMarkedTask(taskArray.get(numberMark - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gavalion"},"content":"                this.storage.taskToText(taskArray);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gavalion"},"content":"            case \"todo\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gavalion"},"content":"                task \u003d new Todo(this.detail);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gavalion"},"content":"                taskArray.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gavalion"},"content":"                isNewTaskAdded \u003d true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gavalion"},"content":"            case \"deadline\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gavalion"},"content":"                task \u003d new Deadline(this.detail);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gavalion"},"content":"                taskArray.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gavalion"},"content":"                isNewTaskAdded \u003d true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gavalion"},"content":"            case \"event\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gavalion"},"content":"                task \u003d new Event(this.detail);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gavalion"},"content":"                taskArray.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gavalion"},"content":"                isNewTaskAdded \u003d true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gavalion"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gavalion"},"content":"                taskArray.remove(Integer.parseInt(this.detail) - 1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gavalion"},"content":"                this.storage.taskToText(taskArray);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gavalion"},"content":"                ui.printListSize(\"deleted\", taskArray.size());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gavalion"},"content":"            case \"find\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gavalion"},"content":"                // find all tasks that contains this.detail inside the task description attribute","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gavalion"},"content":"                searchedTasks \u003d taskArray.stream()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gavalion"},"content":"                        .filter(searchedTask -\u003e searchedTask.getDescription().contains(this.detail))","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gavalion"},"content":"                        .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gavalion"},"content":"                ui.printSearchedTasks(searchedTasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gavalion"},"content":"            case \"before\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gavalion"},"content":"                try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gavalion"},"content":"                    LocalDate dateBefore \u003d LocalDate.parse(this.detail, Deadline.DATE_TIME_FORMATER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gavalion"},"content":"                    // find all deadlines with by attribute before this.detail date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gavalion"},"content":"                    searchedTasks \u003d taskArray.stream()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gavalion"},"content":"                            .filter(searchedTask -\u003e searchedTask instanceof Deadline)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gavalion"},"content":"                            .filter(searchedTask -\u003e ((Deadline) searchedTask).getBy().isBefore(dateBefore))","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gavalion"},"content":"                            .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gavalion"},"content":"                    ui.printDateSearchTasks(searchedTasks, \"before\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gavalion"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gavalion"},"content":"                    System.out.println(2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gavalion"},"content":"                    throw e;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gavalion"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gavalion"},"content":"            case \"after\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gavalion"},"content":"                // find all deadlines with by attribute after this.detail date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gavalion"},"content":"                try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gavalion"},"content":"                    LocalDate dateAfter \u003d LocalDate.parse(this.detail, Deadline.DATE_TIME_FORMATER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gavalion"},"content":"                    searchedTasks \u003d taskArray.stream()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gavalion"},"content":"                            .filter(searchedTask -\u003e searchedTask instanceof Deadline)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gavalion"},"content":"                            .filter(searchedTask -\u003e ((Deadline) searchedTask).getBy().isAfter(dateAfter))","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gavalion"},"content":"                            .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gavalion"},"content":"                    ui.printDateSearchTasks(searchedTasks, \"after\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gavalion"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gavalion"},"content":"                    System.out.println(3);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gavalion"},"content":"                    throw e;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gavalion"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gavalion"},"content":"                break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gavalion"},"content":"        // print the task that is added recently from todo, event and deadline; print also the current size of the list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gavalion"},"content":"        if (isNewTaskAdded) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gavalion"},"content":"            storage.taskToText(taskArray.get(taskArray.size() - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gavalion"},"content":"            ui.printListSize(\"added\", taskArray.size());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gavalion"},"content":"     * Check whether the current array list is empty.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gavalion"},"content":"     * Empty list will throw EmptyTaskException","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gavalion"},"content":"     * @param taskArray ArrayList of tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyTaskException exception due to empty arraylist Exception to indicate the ArrayList is empty","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gavalion"},"content":"    public void checkEmptyList(ArrayList\u003cTask\u003e taskArray) throws EmptyTaskException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gavalion"},"content":"        if (taskArray.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gavalion"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"gavalion":174}},{"path":"src/main/java/bryan/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"public class Ui {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"    public static String[] COMMAND_ARRAY \u003d {\"todo\", \"list\", \"deadline\", \"mark\", \"unmark\", \"event\", \"bye\", \"delete\", \"find\", \"after\", \"before\"};","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"    public void printLine() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"----------------------------------------------------\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"    public void printBryanLogo() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"BBBBB  RRRR   Y   Y   A   N   N\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"B    B R   R   Y Y   A A  NN  N\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"BBBBB  RRRR     Y   A   A N N N\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"B    B R  R     Y   AAAAA N  NN\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"BBBBB  R   R    Y   A   A N   N\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"    public void greeting() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"        printBryanLogo();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"        printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"how can I help you?\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"     * Print all the commands available in this software.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"    public void printCommandArray() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"these are the valid commands:\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"        for (String s : COMMAND_ARRAY) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"-\" + s);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"     * Print all tasks inside the task array param.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"     * @param taskArray The arraylist that contains tasks to be printed","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"    public void printTask(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"            System.out.println(i + 1 + \".\" + taskArray.get(i));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"    public void sayBye() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"Goodbye, see you again!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"     * Print ui message every time the size of the array list changed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"     * Indicates whether a task is added or deleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"     * Indicates the number of tasks inside the array","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"     * @param operation Indicates whether a task is added or deleted","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"     * @param taskSize  Number of tasks inside the arraylist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"    public void printListSize(String operation, int taskSize) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"task \" + operation);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"now you have \" + taskSize + \" tasks in the list\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"     * Print ui message for marked and unmarked task and print the task as well.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"     * @param task The task that is marked/unmarked","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"    public void printMarkedTask(Task task) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"        String markMessage \u003d (task.isDone()) ? \"Nice! I\u0027ve marked this task as done:\" : \" OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"        System.out.println(markMessage);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"        System.out.println(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"    public void printDateSearchTasks(ArrayList\u003cTask\u003e taskArray, String type) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"        if (taskArray.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"no deadline is \" + type + \" that date\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"        printTask(taskArray);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gavalion"},"content":"    public void printInvalidBeforeAfterFormatException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"invalid before/after format\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"there should be a date following the word \u0027after\u0027 or \u0027before\u0027\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. before {dd-mm-yyyy}\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gavalion"},"content":"    public void printInvalidDateFormat() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"invalid date format\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"it should be dd-mm-yyyy\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gavalion"},"content":"    public void printSearchedTasks(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gavalion"},"content":"        if (taskArray.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"no task contains that description\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gavalion"},"content":"        printTask(taskArray);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gavalion"},"content":"     * Print ui message error if command is invalid.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gavalion"},"content":"    public void printInvalidCommandException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"invalid command\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gavalion"},"content":"        this.printCommandArray();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gavalion"},"content":"     * Print ui message error if the event description is empty due to wrong format or missing /from and /to details.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gavalion"},"content":"    public void printEmptyEventDescription() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"description or from is empty or to is empty, please follow the correct event format\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. event {description} /from {from date} /to {to date}\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gavalion"},"content":"     * Print ui error message when list feature is called but task array is empty","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gavalion"},"content":"    public void printEmptyTaskException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"list is still empty, please add new tasks\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gavalion"},"content":"    public void printIndexOutOfBoundsException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"there is no task in that index, make sure you have the correct number\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to marking/unmarking an marked/unmarked task, respectively","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gavalion"},"content":"    public void printMarkingException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"you can not marked an marked task, vice versa\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid deadline format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gavalion"},"content":"    public void printInvalidDeadlineFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"wrong deadline format, it should contain description and followed with one \u0027/by\u0027 and by date\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"by date is formated dd-mm-yyyy\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. deadline {description} /by {by date}\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid event format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gavalion"},"content":"    public void printInvalidEventFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"wrong event format, it should contain \u0027/from\u0027 followed with the from date then \u0027/to\u0027 followed with the to date\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. event {description} /from {from date} /to {to date}\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid mark format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gavalion"},"content":"    public void printInvalidMarkFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"wrong mark format, a number after unmark\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. mark {index}\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid unmark format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gavalion"},"content":"    public void printInvalidUnmarkFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"wrong unmark format, a number after unmark\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. unmark {index}\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid todo format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gavalion"},"content":"    public void printInvalidTodoFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"wrong todo format, it should contain description\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. todo {description}\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid delete format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gavalion"},"content":"    public void printInvalidDeleteFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"wrong delete format, it should be followed by index\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. delete {index}\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid mark/unmark format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gavalion"},"content":"    public void printNumberFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"please enter an integer after the commandText \u0027mark\u0027 or \u0027unmark\u0027 \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. mark 1\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gavalion"},"content":"     * Print ui message error due to invalid deadline format caused by empty description or /by date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"gavalion"},"content":"    public void printEmptyDeadlineDescription() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"description or by is empty, please follow the correct deadline format\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. deadline {description} /by {by date}\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"gavalion"},"content":"    public void printFindFormatException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"Wrong find format, add keyword after find\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"eg. find {keywordl}\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"gavalion":208}},{"path":"src/main/java/bryan/exception/EmptyDeadlineDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class EmptyDeadlineDescription extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/EmptyEventDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class EmptyEventDescription extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class EmptyTaskException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidAfterFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidAfterFormatException extends Exception{","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidBeforeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidBeforeFormatException extends Exception{","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidDeadlineFormatException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidDeleteFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidDeleteFormatException extends Exception{","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidEventFormatException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidFindFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidFindFormatException extends Exception{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidMarkFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidMarkFormatException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidTextFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidTextFormatException extends Exception{","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidTodoFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidTodoFormatException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/InvalidUnmarkFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class InvalidUnmarkFormatException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/exception/MarkingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"public class MarkingException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"gavalion":4}},{"path":"src/main/java/bryan/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.exception.EmptyDeadlineDescription;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"import bryan.exception.InvalidDeadlineFormatException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"    // set the date time format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"     * Deadline constructor that convert the detail into description and by date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"     * Prints out when a task is added","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"     * Method is called whenever the user add a new deadline","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"     * @param detail Any text that comes after \"deadline\" command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeadlineFormatException Invalid deadline exception due to missing by","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyDeadlineDescription Invalid deadline exception due to empty description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"    public Deadline(String detail) throws InvalidDeadlineFormatException, EmptyDeadlineDescription {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"        super(detail);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"        String[] detailArray \u003d description.split(\" /by \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"        if (detailArray.length !\u003d 2) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"            throw new InvalidDeadlineFormatException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"        this.description \u003d detailArray[0];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"            this.by \u003d LocalDate.parse(detailArray[1],DATE_TIME_FORMATER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"            throw new InvalidDeadlineFormatException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"        if (this.description.isBlank()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"            throw new EmptyDeadlineDescription();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"got it task added\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"        System.out.println(this);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"     * Deadline constructor that convert the detail into description and by date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"     * It has the option to not print task added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"     * Mainly for creating task when reading the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"     * @param detail Any text that comes after \"deadline\" command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"     * @param printMessage Boolean value to choose whether to print or not print the message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidDeadlineFormatException Invalid deadline exception due to missing by","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyDeadlineDescription Invalid deadline exception due to empty description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"    public Deadline(String detail, boolean printMessage) throws InvalidDeadlineFormatException, EmptyDeadlineDescription {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"        super(detail);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"        String[] detailArray \u003d description.split(\" /by \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"        if (detailArray.length !\u003d 2) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"            throw new InvalidDeadlineFormatException();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"        this.description \u003d detailArray[0];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"//            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"            this.by \u003d LocalDate.parse(detailArray[1], DATE_TIME_FORMATER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"            throw new InvalidDeadlineFormatException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"        if (this.description.isBlank()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"            throw new EmptyDeadlineDescription();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"        if (printMessage) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"got it task added\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"            System.out.println(this);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"        return by;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"    public void setBy(String by) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"    public String toString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"        return \"[D]\" + super.toString() + \" (by \" + getBy().format(DATE_TIME_FORMATER) + \")\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gavalion"},"content":"     * Convert the task into deadline txt format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gavalion"},"content":"     * @return String of the deadline txt format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gavalion"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gavalion"},"content":"    public String convertToTxtFormat() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gavalion"},"content":"        return \"D # \" + super.convertToTxtFormat() + \" # \" + this.getBy().format(DATE_TIME_FORMATER);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"gavalion":93}},{"path":"src/main/java/bryan/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.exception.EmptyEventDescription;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"import bryan.exception.InvalidEventFormatException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"    protected String from;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"    protected String to;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"     * Event constructor that convert the detail into description, from and to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"     * Prints out when a task is added","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"     * Method is called whenever the user add a new event","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"     * @param detail Any text that comes after \"event\" command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidEventFormatException Invalid deadline exception due to missing from and to or from is after to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyEventDescription Invalid deadline exception due to empty description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"    public Event(String detail) throws InvalidEventFormatException, EmptyEventDescription {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"        super(detail);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"        // Check whether there are /from and /to inside the detail dnd /from is before /to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"        if (!(detail.contains(\" /from \") \u0026\u0026 detail.contains(\" /to \") \u0026\u0026 detail.indexOf(\"/from\") \u003c detail.indexOf(\"/to\"))) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"            throw new InvalidEventFormatException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"        String[] detailArray \u003d detail.split(\" /from \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"        String[] fromToArray \u003d detailArray[1].split(\" /to \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"        if (detailArray.length !\u003d 2 || fromToArray.length !\u003d 2) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"            throw new InvalidEventFormatException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"        this.description \u003d detailArray[0];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"        this.from \u003d detail.split(\" /from \")[1].split(\" /to \")[0];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"        this.to \u003d detail.split(\" /to \")[1];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"        if (this.description.isBlank() || this.from.isBlank() || this.to.isBlank()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"            throw new EmptyEventDescription();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"got it task added\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"        System.out.println(this);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"     * event constructor that convert the detail into description, from and to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"     * It has the option to not print task added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"     * Mainly for creating task when reading the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"     * @param detail Any text that comes after \"deadline\" command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"     * @param printMessage Boolean value to choose whether to print or not print the message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidEventFormatException Invalid deadline exception due to missing from and to or from is after to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"     * @throws EmptyEventDescription Invalid deadline exception due to empty description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"    public Event(String detail, boolean printMessage) throws InvalidEventFormatException, EmptyEventDescription {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"        super(detail);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"        if (!(detail.contains(\" /from \") \u0026\u0026 detail.contains(\" /to \") \u0026\u0026 detail.indexOf(\"/from\") \u003c detail.indexOf(\"/to\"))) {//\u0026\u0026 userString.indexOf(\"/from\") \u003e userString.indexOf(\"/to\")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"            throw new InvalidEventFormatException();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"        String[] detailArray \u003d detail.split(\" /from \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"        String[] fromToArray \u003d detailArray[1].split(\" /to \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"        if (detailArray.length !\u003d 2 || fromToArray.length !\u003d 2) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"            throw new InvalidEventFormatException();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gavalion"},"content":"        this.description \u003d detailArray[0];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gavalion"},"content":"        this.from \u003d detail.split(\" /from \")[1].split(\" /to \")[0];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gavalion"},"content":"        this.to \u003d detail.split(\" /to \")[1];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gavalion"},"content":"        if (this.description.isBlank() || this.from.isBlank() || this.to.isBlank()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gavalion"},"content":"            throw new EmptyEventDescription();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gavalion"},"content":"        if (printMessage) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"got it task added\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gavalion"},"content":"            System.out.println(this);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gavalion"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gavalion"},"content":"        return from;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gavalion"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gavalion"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gavalion"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gavalion"},"content":"        return to;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gavalion"},"content":"    public void setTo(String to) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gavalion"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gavalion"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gavalion"},"content":"    public String toString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gavalion"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFrom() + \" to: \" + getTo() + \")\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gavalion"},"content":"//        return \"description: \"+super.getDescription() +\"\\n\" +\" \" + ((isDone) ? \"yes\": \"no\") +\"\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gavalion"},"content":"     * Convert the task into event txt format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gavalion"},"content":"     * @return String of the event txt format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gavalion"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gavalion"},"content":"    public String convertToTxtFormat() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gavalion"},"content":"        return \"E # \" + super.convertToTxtFormat() + \" # \" + this.getFrom() + \"-\" + this.getTo();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"gavalion":102}},{"path":"src/main/java/bryan/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"import bryan.exception.MarkingException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"public class Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"    protected String description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"        return description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"        return isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"    public void setDone(boolean done) throws MarkingException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"        if ((done \u0026\u0026 this.isDone() || (!done \u0026\u0026 !this.isDone()))) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"            throw new MarkingException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"     * Convert task to txt format that includes the marking","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"     * @return string of task in the txt format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"    public String convertToTxtFormat() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"        return (this.isDone() ? \"1\" : \"0\") + \" # \" + this.description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"    @Override","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"    public String toString() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"//...","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"gavalion":51}},{"path":"src/main/java/bryan/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"package bryan.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gavalion"},"content":"import bryan.exception.InvalidTodoFormatException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gavalion"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gavalion"},"content":"     * Todo constructor that convert the detail into description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"     * Prints out when a task is added","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gavalion"},"content":"     * Method is called whenever the user add a new todo","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gavalion"},"content":"     * @param detail Any text that comes after \"todo\" command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTodoFormatException@throws InvalidTodoFormatException Invalid todo format that occurs because of empty description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gavalion"},"content":"    public Todo(String detail) throws InvalidTodoFormatException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gavalion"},"content":"        super(detail);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gavalion"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"            throw new InvalidTodoFormatException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gavalion"},"content":"        System.out.println(\"got it task added\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gavalion"},"content":"        System.out.println(this);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gavalion"},"content":"     * Todo constructor that convert the detail into description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gavalion"},"content":"     * It has the option to not print task added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gavalion"},"content":"     * Mainly for creating task when reading the txt file","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gavalion"},"content":"     * @param detail Any text that comes after \"todo\" command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gavalion"},"content":"     * @param printMessage Boolean value to choose whether to print or not print the message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gavalion"},"content":"     * @throws InvalidTodoFormatException@throws InvalidTodoFormatException Invalid todo format that occurs because of empty description","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gavalion"},"content":"    public Todo(String detail, boolean printMessage) throws InvalidTodoFormatException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gavalion"},"content":"        super(detail);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gavalion"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gavalion"},"content":"            throw new InvalidTodoFormatException();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gavalion"},"content":"        if (printMessage) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gavalion"},"content":"            System.out.println(\"got it task added\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gavalion"},"content":"            System.out.println(this);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gavalion"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gavalion"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gavalion"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gavalion"},"content":"    public String toString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gavalion"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gavalion"},"content":"//        return \"description: \"+super.getDescription() +\"\\n\" +\" \" + ((isDone) ? \"yes\": \"no\") +\"\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gavalion"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gavalion"},"content":"     * Convert the task into todo txt format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gavalion"},"content":"     * @return String of the todo txt format","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gavalion"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gavalion"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gavalion"},"content":"    public String convertToTxtFormat() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gavalion"},"content":"        return \"T # \" + super.convertToTxtFormat();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gavalion"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gavalion"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"gavalion":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gavalion"},"content":"bye","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"gavalion":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gavalion"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bryan\\*.java ..\\src\\main\\java\\bryan\\exception\\*.java ..\\src\\main\\java\\bryan\\task\\*.java","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gavalion"},"content":"java -classpath ..\\bin bryan.Bryan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"gavalion":2,"-":19}}]
