[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"# TheGroad project template","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"1. After that, locate the `src/main/java/TheGroad.java` file, right-click it, and choose `Run TheGroad.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"RyanLing169":2,"-":24}},{"path":"data/TheGroad.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"T | 0 | work","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"T | 0 | many things","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"RyanLing169":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"# TheGroad User Guide","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"RyanLing169":1,"-":29}},{"path":"src/main/java/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"public enum CommandType {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"    LIST,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":"    MARK,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"    UNMARK,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":"    TODO,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"    DEADLINE,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"    EVENT,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"    DELETE,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"    BYE,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"    FIND","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"RyanLing169":11}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":" * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a Task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":" * represented by a description and a deadline the task is due by,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":" * e.g\u003ccode\u003ehomework,by tonight\u003c/code\u003e","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"     * Constructs a new instance of the Deadline class.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"     * @param description The information on what the task entails.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"     * @param by The deadline for this Deadline task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"     * Converts the deadline task to the printing format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"     * @return The Deadline in printing format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"     * Converts the deadline task to the saving/file format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"     * @return The Deadline in saving/file format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"RyanLing169":47}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":" * Represents an Event type of the task class. An \u003ccode\u003eEvent\u003c/code\u003e object corressponds","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":" * to a task represented by a start date/time and an ending date/time","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":" * e.g. \u003ccode\u003e9pm, 6pm\u003c/code\u003e","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":" *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":" * Extends {@link Task} to provide additional functionality.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"    protected String from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"    protected String to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"     * Constructs an Event with a specified description, from and to date/time.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"     * @param description The details on what the event entails.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"     * @param from The starting date/time of the event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"     * @param to The ending date/time of the event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"     *  Creates a new instance of {@link Event}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"     * @param inputParts_1 The neccessary portion of the user input used to create the instance.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"     * @return A new instance of {@link Event}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the neccesary inputs are missing or invalid.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"    public static Event of(String inputParts_1) throws TheGroadException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"        if (!inputParts_1.contains(\"/from\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! The from portion of the EVENT cannot be empty!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"        String[] eventPartsFrom \u003d inputParts_1.split(\"/from\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"        if (!eventPartsFrom[1].contains(\"/to\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! The to portion of the EVENT cannot be empty!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"        String[] eventPartsTo \u003d eventPartsFrom[1].split(\"/to\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"        return new Event(eventPartsFrom[0].trim(), eventPartsTo[0].trim(), eventPartsTo[1].trim());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"     * Converts the Event instance to printing format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"     * @return The Event instance in printing format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RyanLing169"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RyanLing169"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RyanLing169"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RyanLing169"},"content":"     * Converts the Event instance to saving/file format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RyanLing169"},"content":"     * @return The Event instance in saving/file format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RyanLing169"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RyanLing169"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"RyanLing169":66}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":" * Utility class for parsing operations","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":"public class Parser {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"     * Parses the command from the user into specified enums for better processing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"     * @param input The user input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"     * @return The specified enum for the command input by user for classification of user\u0027s intention.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the input command is unrecognisable.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"    public static CommandType parseCommand(String input) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"        String[] inputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"        String command \u003d inputParts[0].toLowerCase();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"        switch (command) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"        case \"list\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.LIST;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.MARK;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.TODO;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"        case \"event\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.BYE;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"        case \"find\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"            return CommandType.FIND;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"        default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS!! Sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"     * Extracts an integer representing the required task number from the specified input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"     * @param input The input from the user containing the task number that they wish to perform","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"     *              an action on.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"     * @return The specified task number as an integer.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the task number is missing or invalid.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"    public static int extractTaskNumber(String input) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RyanLing169"},"content":"            String[] inputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RyanLing169"},"content":"            return Integer.parseInt(inputParts[1].trim()) ;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RyanLing169"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS!! Please provide a valid task number :(\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RyanLing169"},"content":"     * Extracts a string representing the description of a certain task from the specified input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RyanLing169"},"content":"     * @param input The input from the user containing the description for the task they wish to add.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RyanLing169"},"content":"     * @return The specified task description as a string.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the task description is missing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RyanLing169"},"content":"    public static String extractDescription(String input) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RyanLing169"},"content":"        String[] inputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RyanLing169"},"content":"        if (inputParts.length \u003c 2 || inputParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! The description for the task cannot be empty :(\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RyanLing169"},"content":"          return inputParts[1].trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RyanLing169"},"content":"     * Extracts the strings representing the description of the deadline and the due date of the deadline.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RyanLing169"},"content":"     * @param input The portion of the input from the user containing the description and details of the deadline.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RyanLing169"},"content":"     * @return An array of strings, containing the description of the deadline and the due date.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the description or due date is missing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RyanLing169"},"content":"    public static String[] extractDeadlineDetails(String input) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RyanLing169"},"content":"        String description \u003d extractDescription(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RyanLing169"},"content":"        String[] deadlineParts \u003d description.split(\"/by\", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RyanLing169"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! The Task\u0027s deadline cannot be  empty!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RyanLing169"},"content":"        return new String[]{deadlineParts[0].trim(), deadlineParts[1].trim()};","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RyanLing169"},"content":"     * Extracts the strings representing the description of the event, the start date/time of the Event and the","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RyanLing169"},"content":"     * ending date/time of the Event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RyanLing169"},"content":"     * @param input The portion of the input from the user containing the description and details of the Event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RyanLing169"},"content":"     * @return An array of strings, containing the description of the Event and the starting and ending date/times.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the description or starting/ending date/times is missing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RyanLing169"},"content":"    public static String[] extractEventDetails(String input) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RyanLing169"},"content":"        String description \u003d extractDescription(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RyanLing169"},"content":"        String[] eventParts \u003d description.split(\"/from\", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RyanLing169"},"content":"        if(eventParts.length \u003c 2 || eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! The from portion of the event is missing or incomplete!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RyanLing169"},"content":"        String[] fromToParts \u003d eventParts[1].split(\"/to\", 2);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RyanLing169"},"content":"        if (fromToParts.length \u003c2 || fromToParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! The to portion of the event is missing or incomplete!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RyanLing169"},"content":"        return new String[] {eventParts[0].trim(), fromToParts[0].trim(), fromToParts[1].trim()};","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"RyanLing169":112}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"import java.io.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":" * Represents a storage class responsible for saving and loading the task list into a .txt document.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"public class Storage {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"    private static final String FILE_PATH \u003d \"./data/TheGroad.txt\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"     * Checks if the .txt  file exist and creates a new .txt file if there one does not","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"     * already exist.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"    public Storage() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"        ensureFileExists();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"        File folder \u003d file.getParentFile();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"            if (folder !\u003d null \u0026\u0026 !folder.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"                folder.mkdirs(); // Create folder if missing","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"                file.createNewFile(); // Create file if missing","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"            System.out.println(\"Error creating save file: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"     * Saves the existing tasklist to the .txt document for future reference.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"     * @param taskList The current working tasklist containing all added tasks the user wishes to save.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"     * @param taskCount The number of tasks in the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"    public void saveTasks(Task[] taskList, int taskCount) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"        try  (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))){","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) { // Only save valid tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"                writer.write(taskList[i].toFileFormat());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RyanLing169"},"content":"     * Extracts and loads the saved tasks into an instance of the TaskList class from the .txt file.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RyanLing169"},"content":"     * @param taskList The instance of TaskList we load the saved tasks into.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RyanLing169"},"content":"     * @return the number of tasks saved and in the .txt file and hence loaded into the TaskList class.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RyanLing169"},"content":"    public int loadTasks(TaskList taskList) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RyanLing169"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RyanLing169"},"content":"        try  (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))){","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RyanLing169"},"content":"            String line;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RyanLing169"},"content":"            while ((line \u003d reader.readLine()) !\u003d null \u0026\u0026 taskCount \u003c MAX_TASKS) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RyanLing169"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RyanLing169"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RyanLing169"},"content":"                    taskList.addTaskSilent(task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RyanLing169"},"content":"                    taskCount++;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RyanLing169"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RyanLing169"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RyanLing169"},"content":"            System.out.println(\"No previous task list found. Starting fresh!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RyanLing169"},"content":"        return taskCount;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RyanLing169"},"content":"     * parses the task saved in the .txt file to be added to the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RyanLing169"},"content":"     * @param line The line in the .txt file that represents the saved task to be added","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RyanLing169"},"content":"     *             back to the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RyanLing169"},"content":"     * @return The saved task converted into an instance of the Task class.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RyanLing169"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RyanLing169"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RyanLing169"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RyanLing169"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RyanLing169"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RyanLing169"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RyanLing169"},"content":"            Task task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RyanLing169"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RyanLing169"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RyanLing169"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RyanLing169"},"content":"                task \u003d new Deadline(description, LocalDate.parse(parts[3]));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RyanLing169"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RyanLing169"},"content":"                task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RyanLing169"},"content":"            } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RyanLing169"},"content":"                return null; // Invalid format","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RyanLing169"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RyanLing169"},"content":"                task.MarkAsDone();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RyanLing169"},"content":"            return task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RyanLing169"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RyanLing169"},"content":"            System.out.println(\"Error parsing task: \" + line);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RyanLing169"},"content":"            return null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"RyanLing169":108}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":" * Represents a task to be completed by the user. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":" * a description represented by a string and a state of whether it is done represented","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":" * by a boolean e.g, \u003ccode\u003ehomework,false\u003c/code\u003e","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"public class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"    protected String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"     * Constructs an instance of the Task class with the specified description.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"     * @param description The details on what the task entails.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"     * Changes the boolean state representing whether the task has been completed to true.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"    public void MarkAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"     * Changes the boolean state representing the completion status of the specified task to false.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"    public void UnmarkAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"     * Provides the printable status icon representing completion status of the specified task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"     * @return The respective status icon depending on whether the specified task has been completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"     * Provides the specified task in the printing format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"     * @return The task in printing format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RyanLing169"},"content":"     * Provides the specified task in the saving/file format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RyanLing169"},"content":"     * @return The task in saving/file format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RyanLing169"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RyanLing169"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"RyanLing169":63}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":" * Represents a fixed array of size 100 containing tasks. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":" * list of tasks represented by an array and a taskcount represented by an integer","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":" * e.g., \u003ccode\u003etaskList[100],2\u003c/code\u003e","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"public class TaskList {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"    private Task[] tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"    private int taskCount;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"    String INDENT \u003d \"    \";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"     * Constructs a new instance of the TaskList class.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"        this.tasks \u003d new Task[100];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"     * Adds a task to the specified taskList object.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"     * @param task The task to add to the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"        tasks[taskCount] \u003d task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"        Ui.printAddedTask(taskCount - 1, task, taskCount);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"     * Adds a task to the specified taskList object without printing anything to the user.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"     * @param task The task to add to the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"    public void addTaskSilent(Task task) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"        tasks[taskCount] \u003d task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"     * Deletes a task from the specified taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"     * @param taskNum The index of the task to delete from the taskList","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the task number is invalid,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"     * meaning there is no task that posseses that index.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"    public void deleteTask(int taskNum) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e taskCount) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! This task does not exist\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RyanLing169"},"content":"        Ui.printDeleted(taskNum, this.tasks[taskNum - 1], taskCount - 1);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RyanLing169"},"content":"        for (int i \u003d taskNum - 1; i \u003c taskCount - 1; i +\u003d 1) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RyanLing169"},"content":"            tasks[i] \u003d tasks[i + 1];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RyanLing169"},"content":"        taskCount -\u003d 1;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RyanLing169"},"content":"     * Marks a specified task of a specified taskList as completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RyanLing169"},"content":"     * @param taskNum The index of the task to be marked as completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the index is invalid, meaning the index does not","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RyanLing169"},"content":"     * belong to any task in the specified taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RyanLing169"},"content":"    public void markTask(int taskNum) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RyanLing169"},"content":"        if (taskNum \u003c 1 || taskNum \u003e taskCount ) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! That task does not exist!!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RyanLing169"},"content":"        if (tasks[taskNum - 1].isDone)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RyanLing169"},"content":"        {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! That task has already been marked!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RyanLing169"},"content":"        tasks[taskNum - 1].MarkAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RyanLing169"},"content":"        Ui.printMarked(taskNum, this.tasks[taskNum - 1]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RyanLing169"},"content":"     * Marks a specified task of a specified taskList as uncompleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RyanLing169"},"content":"     * @param taskNum The index of the task to be marked as uncompleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the index is invalid, meaning the index does not","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RyanLing169"},"content":"     * belong to any task in the specified taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RyanLing169"},"content":"    public void unmarkTask(int taskNum) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RyanLing169"},"content":"        if (taskNum \u003c 1 || taskNum \u003e taskCount ) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! That task does not exist!!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RyanLing169"},"content":"        if (!tasks[taskNum - 1].isDone)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RyanLing169"},"content":"        {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS! That task has not yet already unmarked!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RyanLing169"},"content":"        tasks[taskNum - 1].UnmarkAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RyanLing169"},"content":"        Ui.printUnmarked(taskNum, this.tasks[taskNum - 1]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RyanLing169"},"content":"     * Lists the tasks out to the user by printing each task in the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RyanLing169"},"content":"     * @param ui The Ui class utilised by the parent class.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RyanLing169"},"content":"    public void listTasks(Ui ui) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RyanLing169"},"content":"        ui.printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RyanLing169"},"content":"        ui.printMessage(INDENT + \"Here are your tasks:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RyanLing169"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RyanLing169"},"content":"            ui.printMessage(INDENT + \"No tasks available.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RyanLing169"},"content":"        } else {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RyanLing169"},"content":"            for (int i \u003d 0; i \u003c taskCount; i +\u003d 1) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RyanLing169"},"content":"                ui.printMessage(INDENT + (i + 1) + \". \" + tasks[i]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RyanLing169"},"content":"        ui.printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RyanLing169"},"content":"     * Returns the tasks in the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RyanLing169"},"content":"     * @return The tasks in the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RyanLing169"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RyanLing169"},"content":"        Ui.printLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RyanLing169"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RyanLing169"},"content":"        for (int i \u003d 0 ; i \u003c taskCount; i +\u003d 1) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RyanLing169"},"content":"            if (tasks[i].description.contains(keyword)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RyanLing169"},"content":"                Ui.printMessage(INDENT + count + \".\" + tasks[i]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RyanLing169"},"content":"                count +\u003d 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RyanLing169"},"content":"            } else if (count \u003d\u003d 1 \u0026\u0026 i \u003d\u003d taskCount - 1){","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RyanLing169"},"content":"                Ui.printMessage(INDENT + \"SORRY! No tasks contain the keyword :\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RyanLing169"},"content":"                Ui.printMessage(INDENT + keyword);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RyanLing169"},"content":"                Ui.printMessage(INDENT + \":-(\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RyanLing169"},"content":"        Ui.printLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RyanLing169"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"RyanLing169"},"content":"        return tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"RyanLing169"},"content":"     * Returns the number of tasks in the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"RyanLing169"},"content":"     * @return The number of tasks in the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"RyanLing169"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"RyanLing169"},"content":"        return taskCount;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"RyanLing169":155}},{"path":"src/main/java/TheGroad.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":" * Represents a chatbot designed to help users track different kinds of tasks.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"public class TheGroad {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"    private Ui ui;              // Handles user interaction","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"    private Storage storage;    // Handles file storage","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"    private TaskList taskList;  // Manages task data","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"    private  Parser parser;      // Parses user input","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"     * Constructs a new instance of TheGroad class.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"     * @param filePath The location where the class will be instantiated.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"    public TheGroad(String filePath) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"        storage.loadTasks(taskList); // Load saved tasks from file","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"     * Constantly loops to take in user input and output replies.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"    public void run() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"        while (true) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"            try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"                CommandType command \u003d parser.parseCommand(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"                processCommand(command, input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"            } catch (TheGroadException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"     * Processes all commands that the user inputs and executes them as instructed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"     * @param command The enum classifying the command to be executed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the input is invalid or missing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"    private void processCommand(CommandType command, String input) throws TheGroadException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"        switch (command) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RyanLing169"},"content":"        case LIST:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RyanLing169"},"content":"            taskList.listTasks(ui);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RyanLing169"},"content":"        case MARK:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RyanLing169"},"content":"            int markIndex \u003d parser.extractTaskNumber(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RyanLing169"},"content":"            taskList.markTask(markIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RyanLing169"},"content":"            ui.printLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RyanLing169"},"content":"            storage.saveTasks(taskList.getTasks(), taskList.getTaskCount());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RyanLing169"},"content":"        case UNMARK:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RyanLing169"},"content":"            int unmarkIndex \u003d parser.extractTaskNumber(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RyanLing169"},"content":"            taskList.unmarkTask(unmarkIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RyanLing169"},"content":"            storage.saveTasks(taskList.getTasks(), taskList.getTaskCount());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RyanLing169"},"content":"        case TODO:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RyanLing169"},"content":"            String todoDescription \u003d parser.extractDescription(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RyanLing169"},"content":"            taskList.addTask(new Todo(todoDescription));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RyanLing169"},"content":"            storage.saveTasks(taskList.getTasks(), taskList.getTaskCount());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RyanLing169"},"content":"        case DEADLINE:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RyanLing169"},"content":"            String[] deadlineDetails \u003d parser.extractDeadlineDetails(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RyanLing169"},"content":"            taskList.addTask(new Deadline(deadlineDetails[0], LocalDate.parse(deadlineDetails[1])));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RyanLing169"},"content":"            storage.saveTasks(taskList.getTasks(), taskList.getTaskCount());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RyanLing169"},"content":"        case EVENT:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RyanLing169"},"content":"            String[] eventDetails \u003d parser.extractEventDetails(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RyanLing169"},"content":"            taskList.addTask(new Event(eventDetails[0], eventDetails[1], eventDetails[2]));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RyanLing169"},"content":"            storage.saveTasks(taskList.getTasks(), taskList.getTaskCount());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RyanLing169"},"content":"        case DELETE:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RyanLing169"},"content":"            int deleteIndex \u003d parser.extractTaskNumber(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RyanLing169"},"content":"            taskList.deleteTask(deleteIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RyanLing169"},"content":"            storage.saveTasks(taskList.getTasks(), taskList.getTaskCount());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RyanLing169"},"content":"        case FIND:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RyanLing169"},"content":"            String keyword \u003d parser.extractDescription(input);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RyanLing169"},"content":"            taskList.findTask(keyword);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RyanLing169"},"content":"        case BYE:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RyanLing169"},"content":"            ui.showGoodbye();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RyanLing169"},"content":"            System.exit(0);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RyanLing169"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RyanLing169"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RyanLing169"},"content":"        new TheGroad(\"data/TheGroad.txt\").run();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"RyanLing169":101}},{"path":"src/main/java/TheGroadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":" * Exception thrown when inputs are invalid or missing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":"public class TheGroadException extends Exception {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"     * Constructs a TheGroadException with a specified message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"     * @param error_Message The detailed error message to be diaplyed","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"     *                      to the user.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"    public TheGroadException(String error_Message) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"        super(error_Message);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"RyanLing169":17}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":" * Represents the Todo type of Task class. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":" * a description represented by a string e.g., \u003ccode\u003eProposal\u003c/code\u003e","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":" *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":" * Extends {@link Task} to provide added functionality.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"     * Constructs a new instance of the Todo task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"     * @param description The description which entails details on the Todo Task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"     * Creates a new instance of {@link Todo}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"     * @param inputPart The user input.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"     * @return A new instance of {@link Todo}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"     * @throws TheGroadException If the input is invalid or missing.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"    public static Todo of(String inputPart) throws TheGroadException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"        if ( inputPart.isEmpty())","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"        {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"            throw new TheGroadException(\"OOPS!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"        return new Todo(inputPart);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"     * Converts the Todo task to printing format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"     * @return The Todo task as a printable String.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"     * Converts the Todo task to saving/file format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"     * @return The Todo task as a savable String.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"RyanLing169":51}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":" * Utility class handling User interface operations.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"public class Ui {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"    private static final String LINE \u003d \"______________________________\" +","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"            \"__________________________\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"     * Constructs a new instance of a Ui class, instantiating a scanner to read user inputs.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"    public Ui() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"     * Prints the welcome message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(LINE + \"____\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(\"Hello! I\u0027m THE GROAD\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(LINE + \"____\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RyanLing169"},"content":"     * Reads the next line of the user\u0027s input and returns it as a string.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RyanLing169"},"content":"     * @return The User\u0027s input as a string.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RyanLing169"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RyanLing169"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RyanLing169"},"content":"     * Prints a line.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RyanLing169"},"content":"    public static void printLine() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RyanLing169"},"content":"     * Prints a specified error message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RyanLing169"},"content":"     * @param message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RyanLing169"},"content":"    public void printError(String message) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(INDENT + \"Error:\" + message);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RyanLing169"},"content":"     * Prints a specified message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RyanLing169"},"content":"     * @param message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RyanLing169"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RyanLing169"},"content":"        System.out.println(INDENT + message);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RyanLing169"},"content":"     * Prints the standard message for when a Task gets marked as completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RyanLing169"},"content":"     * @param taskNum The index of the Task that got marked as completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RyanLing169"},"content":"     * @param task The task that got marked as completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RyanLing169"},"content":"    public static void printMarked(int taskNum, Task task) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RyanLing169"},"content":"        printMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RyanLing169"},"content":"        printMessage(taskNum + task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RyanLing169"},"content":"     * Prints the standard message for when a task gets marked as uncompleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RyanLing169"},"content":"     * @param taskNum The index of the task that got marked as uncompleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RyanLing169"},"content":"     * @param task The task that got marked as uncompleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RyanLing169"},"content":"    public static void printUnmarked(int taskNum, Task task) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RyanLing169"},"content":"        printMessage(\"Nice! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RyanLing169"},"content":"        printMessage(taskNum + task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RyanLing169"},"content":"     * Prints the standard message for when a task gets added to the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RyanLing169"},"content":"     * @param taskNum The index of the task that just got added","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RyanLing169"},"content":"     * @param task The task task that got added to the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RyanLing169"},"content":"     * @param taskCount The resultant number of tasks in the taskList post addition.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RyanLing169"},"content":"    public static void printAddedTask(int taskNum, Task task, int taskCount) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RyanLing169"},"content":"        printMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RyanLing169"},"content":"        printMessage(task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RyanLing169"},"content":"        printMessage(\"You now have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RyanLing169"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RyanLing169"},"content":"     * Prints a standard message for when a task gets deleted from the taskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RyanLing169"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RyanLing169"},"content":"     * @param taskNum The index of the task that got deleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RyanLing169"},"content":"     * @param task The task that got deleted.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RyanLing169"},"content":"     * @param taskCount The resultant number of tasks in the taskList post deletion.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RyanLing169"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RyanLing169"},"content":"    public static void printDeleted(int taskNum, Task task, int taskCount) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RyanLing169"},"content":"        printMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RyanLing169"},"content":"        printMessage(task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RyanLing169"},"content":"        printMessage(\"You now have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RyanLing169"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RyanLing169"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RyanLing169"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"RyanLing169":124}},{"path":"src/main/text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"@ECHO OFF","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"REM delete output from previous run","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"    exit /b 1","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":")","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"java -classpath ..\\bin TheGroad \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"REM compare the output to the expected output","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"RyanLing169":21}},{"path":"src/main/text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"RyanLing169"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RyanLing169"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RyanLing169"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RyanLing169"},"content":"then","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RyanLing169"},"content":"    mkdir ../bin","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RyanLing169"},"content":"fi","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RyanLing169"},"content":"# delete output from previous run","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RyanLing169"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RyanLing169"},"content":"then","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RyanLing169"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RyanLing169"},"content":"fi","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RyanLing169"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RyanLing169"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RyanLing169"},"content":"then","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RyanLing169"},"content":"    exit 1","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RyanLing169"},"content":"fi","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RyanLing169"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RyanLing169"},"content":"java -classpath ../bin TheGroad \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RyanLing169"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RyanLing169"},"content":"# compare the output to the expected output","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RyanLing169"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RyanLing169"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RyanLing169"},"content":"then","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RyanLing169"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RyanLing169"},"content":"    exit 0","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RyanLing169"},"content":"else","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RyanLing169"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RyanLing169"},"content":"    exit 1","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RyanLing169"},"content":"fi","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"RyanLing169":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RyanLing169"},"content":"java -classpath ..\\bin TheGroad \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"RyanLing169":1,"-":20}}]
