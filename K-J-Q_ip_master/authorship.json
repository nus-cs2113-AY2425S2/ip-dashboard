[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"# Minion User Guide","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"## Introduction","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"Minion is a simple task management application that helps you keep track of your tasks. You can add, list, mark, unmark, delete, and search tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"## Features","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"### 1. Add Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"You can add three types of tasks:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"- **Todo**: A task without any date/time attached to it.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"- **Deadline**: A task that needs to be done before a specific date/time.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"- **Event**: A task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"#### Examples:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"- Add a Todo: `todo read book`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"- Add a Deadline: `deadline submit report /by end of the day`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"- Add an Event: `event project meeting /from morning /to afternoon`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"### 2. List Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"List all the tasks in your task list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"#### Example:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"- `list`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"### 3. Mark Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"Mark a task as done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"#### Example:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"- `mark 1`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"### 4. Unmark Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"Mark a task as not done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"#### Example:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"- `unmark 1`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"### 5. Delete Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"Delete a task from your task list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"#### Example:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"- `delete 1`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"### 6. Save and Load Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"Tasks are automatically saved to a file and loaded when the application starts.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"### 7. Search Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"Search for tasks that contain a specific keyword.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"#### Example:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"- `find book`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"K-J-Q"},"content":"## Command Summary","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"K-J-Q"},"content":"- **Add Todo**: `todo TASK_DESCRIPTION`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"K-J-Q"},"content":"- **Add Deadline**: `deadline TASK_DESCRIPTION /by DATE_OR_STRING`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"K-J-Q"},"content":"- **Add Event**: `event TASK_DESCRIPTION /from START_DATE_OR_STRING /to END_DATE_OR_STRING`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"K-J-Q"},"content":"- **List Tasks**: `list`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"K-J-Q"},"content":"- **Mark Task**: `mark INDEX`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"K-J-Q"},"content":"- **Unmark Task**: `unmark INDEX`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"K-J-Q"},"content":"- **Delete Task**: `delete INDEX`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"K-J-Q"},"content":"- **Search Tasks**: `find KEYWORD`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"K-J-Q"},"content":"## Examples","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"K-J-Q"},"content":"### Adding a Todo","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"K-J-Q"},"content":"todo read book","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"K-J-Q"},"content":"### Adding a Deadline","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"K-J-Q"},"content":"deadline submit report /by end of the day","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"K-J-Q"},"content":"### Adding an Event","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"K-J-Q"},"content":"event project meeting /from morning /to afternoon","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"K-J-Q"},"content":"### Listing Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"K-J-Q"},"content":"### Marking a Task","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"K-J-Q"},"content":"mark 1","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"K-J-Q"},"content":"### Unmarking a Task","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"K-J-Q"},"content":"unmark 1","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"K-J-Q"},"content":"### Deleting a Task","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"K-J-Q"},"content":"delete 1","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"K-J-Q"},"content":"### Searching for Tasks","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"K-J-Q"},"content":"find book","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"K-J-Q"},"content":"```","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"K-J-Q":81,"-":20}},{"path":"src/main/java/minion/Minion.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"import minion.parser.Parser;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"import minion.parser.UserCommand;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"import minion.task.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"import minion.ui.MessagePrinter;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"public class Minion {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"        // Initialise the message inputs and outputs","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"        MessagePrinter minionOut \u003d new MessagePrinter();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"            tasks.loadTasks(parser);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"        } catch (MinionException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(\"Unable to load task from memory!\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"        Boolean isExiting \u003d false;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"        UserCommand userCommand \u003d new UserCommand();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"        minionOut.printIntro();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"        // Keep reading the user\u0027s input until exit condition reached","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"        while (!isExiting) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"            userCommand.message \u003d in.nextLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"            userCommand.command \u003d parser.parse(userCommand.message);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"            try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"                isExiting \u003d parser.execute(userCommand, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"            } catch (MinionException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"        // Handle final message after \"bye\" was sent by user","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"        minionOut.printMessageAndSep(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"K-J-Q":44}},{"path":"src/main/java/minion/MinionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"public class MinionException extends Exception {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"    public MinionException(String message) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"        super(message);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"K-J-Q":7}},{"path":"src/main/java/minion/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"import java.io.File;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"public class Storage {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"    private static final String FILE_PATH \u003d \"./taskInfo.txt\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"    ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"    File f \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"    public void saveString(String[] tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"            for (String task : tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"                fw.append(task);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"                fw.append(System.lineSeparator());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"            fw.close();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"            System.out.println(\"Unable to save tasks!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"    public String getString() throws MinionException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"            return tasks.toString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"                tasks.append(s.nextLine());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"                tasks.append(System.lineSeparator());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"            System.out.println(\"Failed to load file!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"        return tasks.toString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"K-J-Q":47}},{"path":"src/main/java/minion/parser/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.parser;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"public enum Command {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"    TASK_MARK,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"    TASK_UNMARK,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"    DELETE_TASK,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"    LIST_TASK,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"    BYE,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"    ADD_TODO, ADD_DEADLINE, ADD_EVENT, TASK_FIND, UNKNOWN","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"K-J-Q":11}},{"path":"src/main/java/minion/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.parser;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"import minion.MinionException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"import minion.task.Deadline;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"import minion.task.Event;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"import minion.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"import minion.task.Todo;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"import minion.ui.MessagePrinter;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":" * Parses user commands and executes them.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"public class Parser {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_SAVED_TODO \u003d \"T|\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_TODO \u003d \"todo\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_SAVED_EVENT \u003d \"E|\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_EVENT \u003d \"event\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_FROM \u003d \"from\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_TO \u003d \"to\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_SAVED_DEADLINE \u003d \"D|\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_BY \u003d \"by\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_FIND \u003d \"find\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"     * Parses a user command.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"     * @param cmd The user input text (command) as a string.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"     * @return The parsed command as a class Command","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"    public Command parse(String cmd) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"        switch (cmd) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"            return (Command.BYE);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"        case \"list\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"            return (Command.LIST_TASK);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"        default:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"            return getTaskCommand(cmd);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"    private static Command getTaskCommand(String cmd) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"        if (cmd.startsWith(\"mark\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"            return (Command.TASK_MARK);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"            return (Command.TASK_UNMARK);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"            return (Command.DELETE_TASK);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"K-J-Q"},"content":"            return Command.ADD_TODO;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"K-J-Q"},"content":"            return Command.ADD_DEADLINE;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"event\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"K-J-Q"},"content":"            return Command.ADD_EVENT;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"find\")) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"K-J-Q"},"content":"            return (Command.TASK_FIND);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"K-J-Q"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"K-J-Q"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"K-J-Q"},"content":"    private static Command getSavedTaskCommand(String cmd) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"K-J-Q"},"content":"        if (cmd.startsWith(\"T\")) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"K-J-Q"},"content":"            return Command.ADD_TODO;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"D\")) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"K-J-Q"},"content":"            return Command.ADD_DEADLINE;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"K-J-Q"},"content":"        } else if (cmd.startsWith(\"E\")) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"K-J-Q"},"content":"            return Command.ADD_EVENT;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"K-J-Q"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"K-J-Q"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"K-J-Q"},"content":"     * Executes a user command.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"K-J-Q"},"content":"     * @param cmd       The processed user command","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"K-J-Q"},"content":"     * @param tasks     The task list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"K-J-Q"},"content":"     * @param minionOut The message printer.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"K-J-Q"},"content":"     * @return True if the command is to exit, false otherwise.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"K-J-Q"},"content":"     * @throws MinionException If the command cannot be executed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"K-J-Q"},"content":"    public Boolean execute(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) throws MinionException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"K-J-Q"},"content":"        switch (cmd.command) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"K-J-Q"},"content":"        case BYE:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"K-J-Q"},"content":"            return true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"K-J-Q"},"content":"        case LIST_TASK:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"K-J-Q"},"content":"            listTask(tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"K-J-Q"},"content":"        case ADD_TODO:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"K-J-Q"},"content":"            addTodo(cmd, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"K-J-Q"},"content":"        case ADD_DEADLINE:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"K-J-Q"},"content":"            addDeadline(cmd, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"K-J-Q"},"content":"        case ADD_EVENT:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"K-J-Q"},"content":"            addEvent(cmd, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"K-J-Q"},"content":"        case TASK_MARK:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"K-J-Q"},"content":"            markTask(cmd, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"K-J-Q"},"content":"        case TASK_UNMARK:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"K-J-Q"},"content":"            unmarkTask(cmd, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"K-J-Q"},"content":"        case DELETE_TASK:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"K-J-Q"},"content":"            deleteTask(cmd, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"K-J-Q"},"content":"        case TASK_FIND:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"K-J-Q"},"content":"            findTask(cmd, tasks, minionOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"K-J-Q"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"K-J-Q"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"K-J-Q"},"content":"        default:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"K-J-Q"},"content":"            throw new MinionException(\"Keyword not caught!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"K-J-Q"},"content":"    private void findTask(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"K-J-Q"},"content":"        String messageOut \u003d \"Here are the matching tasks in your list:\" + System.lineSeparator();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"K-J-Q"},"content":"        String findText \u003d cmd.message.substring(KEYWORD_FIND.length()).trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"K-J-Q"},"content":"        messageOut +\u003d tasks.findTitle(findText);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"K-J-Q"},"content":"        minionOut.printMessageAndSep(messageOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"K-J-Q"},"content":"    private static void listTask(TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"K-J-Q"},"content":"        minionOut.printMessageAndSep(tasks.listTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"K-J-Q"},"content":"    private static void deleteTask(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"K-J-Q"},"content":"        int deleteIndex \u003d Integer.parseInt(cmd.message.substring(\"delete\".length()).trim()) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"K-J-Q"},"content":"        minionOut.printMessage(tasks.delete(deleteIndex));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"K-J-Q"},"content":"    private static void unmarkTask(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"K-J-Q"},"content":"        int unmarkIndex \u003d Integer.parseInt(cmd.message.substring(\"unmark\".length()).trim()) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"K-J-Q"},"content":"        minionOut.printMessage(tasks.unmarkDone(unmarkIndex));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"K-J-Q"},"content":"    private static void markTask(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"K-J-Q"},"content":"        int markIndex \u003d Integer.parseInt(cmd.message.substring(\"mark\".length()).trim()) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"K-J-Q"},"content":"        minionOut.printMessage(tasks.markDone(markIndex));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"K-J-Q"},"content":"    private static void addEvent(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"K-J-Q"},"content":"        String messageOut;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"K-J-Q"},"content":"        String message \u003d cmd.message;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"K-J-Q"},"content":"        String title, fromDateTime \u003d \"\", toDateTime \u003d \"\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"K-J-Q"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"K-J-Q"},"content":"            if (message.startsWith(KEYWORD_EVENT)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"K-J-Q"},"content":"                message \u003d message.substring(KEYWORD_EVENT.length());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"K-J-Q"},"content":"                String[] userInputs \u003d message.split(\"/\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"K-J-Q"},"content":"                if (userInputs.length !\u003d 3 || userInputs[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"K-J-Q"},"content":"                    throw new MinionException(\"Ahhh!!! The events must include (1) description, (2) from datetime and (3) to datetime\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"K-J-Q"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"K-J-Q"},"content":"                title \u003d userInputs[0].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"K-J-Q"},"content":"                for (int i \u003d 1; i \u003c 3; i++) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"K-J-Q"},"content":"                    if (userInputs[i].startsWith(KEYWORD_FROM)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"K-J-Q"},"content":"                        fromDateTime \u003d userInputs[i].substring(KEYWORD_FROM.length()).trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"K-J-Q"},"content":"                        if (fromDateTime.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"K-J-Q"},"content":"                            throw new MinionException(\"Ahhh!!! from datetime is empty\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"K-J-Q"},"content":"                        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"K-J-Q"},"content":"                    } else if (userInputs[i].startsWith(KEYWORD_TO)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"K-J-Q"},"content":"                        toDateTime \u003d userInputs[i].substring(KEYWORD_TO.length()).trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"K-J-Q"},"content":"                        if (toDateTime.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"K-J-Q"},"content":"                            throw new MinionException(\"Ahhh!!! to datetime is empty\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"K-J-Q"},"content":"                        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"K-J-Q"},"content":"                    } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"K-J-Q"},"content":"                        throw new MinionException(\"Ahhh!!! I don\u0027t understand this: /\" + userInputs[i]);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"K-J-Q"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"K-J-Q"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"K-J-Q"},"content":"                if (fromDateTime.isEmpty() || toDateTime.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"K-J-Q"},"content":"                    throw new MinionException(\"OOPS!!! The event timings are invalid.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"K-J-Q"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"K-J-Q"},"content":"            } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"K-J-Q"},"content":"                throw new MinionException(\"Unknown start pattern.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"K-J-Q"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"K-J-Q"},"content":"            messageOut \u003d tasks.addTask(new Event(title, fromDateTime, toDateTime));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(messageOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"K-J-Q"},"content":"        } catch (MinionException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(e.getMessage());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"K-J-Q"},"content":"    private static void addDeadline(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"K-J-Q"},"content":"        String messageOut;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"K-J-Q"},"content":"        String message \u003d cmd.message;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"K-J-Q"},"content":"        String title, dueDate;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"K-J-Q"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"K-J-Q"},"content":"            if (message.startsWith(KEYWORD_DEADLINE)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"K-J-Q"},"content":"                message \u003d message.substring(KEYWORD_DEADLINE.length());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"K-J-Q"},"content":"                String[] userInputs \u003d message.split(\"/\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"K-J-Q"},"content":"                if (userInputs.length !\u003d 2 || userInputs[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"K-J-Q"},"content":"                    throw new MinionException(\"Ahhh!!! The deadlines must include (1) description and (2) done by datetime\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"K-J-Q"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"K-J-Q"},"content":"                title \u003d userInputs[0].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"K-J-Q"},"content":"                if (userInputs[1].startsWith(KEYWORD_BY)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"K-J-Q"},"content":"                    dueDate \u003d userInputs[1].substring(KEYWORD_BY.length()).trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"K-J-Q"},"content":"                    if (dueDate.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"K-J-Q"},"content":"                        throw new MinionException(\"Ahhh!!! Deadline is empty\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"K-J-Q"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"K-J-Q"},"content":"                } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"K-J-Q"},"content":"                    throw new MinionException(\"Ahhh!!! I don\u0027t understand this: /\" + userInputs[1]);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"K-J-Q"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"K-J-Q"},"content":"            } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"K-J-Q"},"content":"                throw new MinionException(\"Unknown start pattern.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"K-J-Q"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"K-J-Q"},"content":"            messageOut \u003d tasks.addTask(new Deadline(title, dueDate));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(messageOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"K-J-Q"},"content":"        } catch (MinionException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(e.getMessage());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"K-J-Q"},"content":"     * Gets a saved deadline task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"K-J-Q"},"content":"     * @param cmd The parsed user command","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"K-J-Q"},"content":"     * @return The saved deadline task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"K-J-Q"},"content":"     * @throws MinionException If the task cannot be parsed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"K-J-Q"},"content":"    public Deadline getSavedDeadline(UserCommand cmd) throws MinionException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"K-J-Q"},"content":"        String message \u003d cmd.message;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"K-J-Q"},"content":"        String title, dueDate;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"K-J-Q"},"content":"        boolean isDone;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"K-J-Q"},"content":"        if (message.startsWith(KEYWORD_SAVED_DEADLINE)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"K-J-Q"},"content":"            message \u003d message.substring(KEYWORD_SAVED_DEADLINE.length());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"K-J-Q"},"content":"            String[] userInputs \u003d message.split(\"\\\\|\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"K-J-Q"},"content":"            title \u003d userInputs[1].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"K-J-Q"},"content":"            dueDate \u003d userInputs[2].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"K-J-Q"},"content":"            isDone \u003d userInputs[0].trim().equals(\"1\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"K-J-Q"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"K-J-Q"},"content":"            throw new MinionException(\"Unknown start pattern.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"K-J-Q"},"content":"        return new Deadline(title, dueDate, isDone);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"K-J-Q"},"content":"     * Gets a saved todo task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"K-J-Q"},"content":"     * @param cmd The parsed user command","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"K-J-Q"},"content":"     * @return The saved todo task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"K-J-Q"},"content":"     * @throws MinionException If the task cannot be parsed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"K-J-Q"},"content":"    public Todo getSavedTodo(UserCommand cmd) throws MinionException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"K-J-Q"},"content":"        String message \u003d cmd.message;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"K-J-Q"},"content":"        String title;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"K-J-Q"},"content":"        boolean isDone;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"K-J-Q"},"content":"        if (message.startsWith(KEYWORD_SAVED_TODO)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"K-J-Q"},"content":"            message \u003d message.substring(KEYWORD_SAVED_TODO.length());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"K-J-Q"},"content":"            String[] userInputs \u003d message.split(\"\\\\|\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"K-J-Q"},"content":"            isDone \u003d userInputs[0].trim().equals(\"1\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"K-J-Q"},"content":"            title \u003d userInputs[1].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"K-J-Q"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"K-J-Q"},"content":"            throw new MinionException(\"Unknown start pattern.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"K-J-Q"},"content":"        return new Todo(title, isDone);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"K-J-Q"},"content":"     * Gets a saved event task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"K-J-Q"},"content":"     * @param cmd The parsed user command","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"K-J-Q"},"content":"     * @return The saved event task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"K-J-Q"},"content":"     * @throws MinionException If the task cannot be parsed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"K-J-Q"},"content":"    public Event getSavedEvent(UserCommand cmd) throws MinionException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"K-J-Q"},"content":"        String message \u003d cmd.message;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"K-J-Q"},"content":"        String title, fromDateTime, toDateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"K-J-Q"},"content":"        boolean isDone;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"K-J-Q"},"content":"        if (message.startsWith(KEYWORD_SAVED_EVENT)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"K-J-Q"},"content":"            message \u003d message.substring(KEYWORD_SAVED_EVENT.length());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"K-J-Q"},"content":"            String[] inputs \u003d message.split(\"\\\\|\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"K-J-Q"},"content":"            isDone \u003d inputs[0].trim().equals(\"1\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"K-J-Q"},"content":"            title \u003d inputs[1].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"K-J-Q"},"content":"            fromDateTime \u003d inputs[2].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"K-J-Q"},"content":"            toDateTime \u003d inputs[3].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"K-J-Q"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"K-J-Q"},"content":"            throw new MinionException(\"Unknown start pattern.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"K-J-Q"},"content":"        return new Event(title, fromDateTime, toDateTime, isDone);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"K-J-Q"},"content":"    private static void addTodo(UserCommand cmd, TaskList tasks, MessagePrinter minionOut) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"K-J-Q"},"content":"        String messageOut;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"K-J-Q"},"content":"        String message \u003d cmd.message;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"K-J-Q"},"content":"        String title;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"K-J-Q"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"K-J-Q"},"content":"            if (message.startsWith(KEYWORD_TODO)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"K-J-Q"},"content":"                title \u003d message.substring(KEYWORD_TODO.length()).trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"K-J-Q"},"content":"                if (title.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"K-J-Q"},"content":"                    throw new MinionException(\"Ahhh!!! Todos must contain (1) description\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"K-J-Q"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"K-J-Q"},"content":"            } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"K-J-Q"},"content":"                throw new MinionException(\"Unknown start pattern.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"K-J-Q"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"K-J-Q"},"content":"            messageOut \u003d tasks.addTask(new Todo(title));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(messageOut);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"K-J-Q"},"content":"        } catch (MinionException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"K-J-Q"},"content":"            minionOut.printMessageAndSep(e.getMessage());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"K-J-Q"},"content":"     * Parses a saved task command.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"K-J-Q"},"content":"     * @param cmd The saved task command as a string.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"K-J-Q"},"content":"     * @return The parsed command.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"K-J-Q"},"content":"    public Command parseSaved(String cmd) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"K-J-Q"},"content":"        return getSavedTaskCommand(cmd);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"K-J-Q":322}},{"path":"src/main/java/minion/parser/UserCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.parser;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"public class UserCommand {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"    public Command command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"    public String message;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"K-J-Q":6}},{"path":"src/main/java/minion/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":" * Represents a Deadline task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"    private String dueDate \u003d \"\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"     * Constructs a Deadline task with the given title and due date.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"     * @param title The title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"     * @param doneBy The due date of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"    public Deadline(String title, String doneBy) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"        this.dueDate \u003d doneBy;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"     * Constructs a Deadline task with the given title, due date, and completion status. This is generally used for initialising from saved files.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"     * @param title The title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"     * @param doneBy The due date of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"    public Deadline(String title, String doneBy, Boolean isDone) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"        this.dueDate \u003d doneBy;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"    public String getTask() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"        return String.format(\"[D][%c] %s (by: %s)\", this.isDone ? \u0027X\u0027 : \u0027 \u0027, this.title, this.dueDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the Deadline task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the Deadline task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"    public String getSaveString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"        return super.getSaveString() + String.format(\"D|%s|%s|%s\", this.isDone ? \"1\" : \"0\", this.title, this.dueDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"K-J-Q":52}},{"path":"src/main/java/minion/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"import minion.MinionException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":" * Represents an Event task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_SAVED_EVENT \u003d \"E|\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_EVENT \u003d \"event\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_FROM \u003d \"from\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_TO \u003d \"to\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"    String fromDateTime \u003d \"\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"    String toDateTime \u003d \"\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"     * Constructs an Event task with the given title, start datetime, and end datetime.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"     * @param title The title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"     * @param fromDateTime The start datetime of the event.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"     * @param toDateTime The end datetime of the event.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"    public Event(String title, String fromDateTime, String toDateTime) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"     * Constructs an Event task with the given title, start datetime, end datetime, and completion status.This is generally used for initialising from saved files.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"     * @param title The title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"     * @param fromDateTime The start datetime of the event.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"     * @param toDateTime The end datetime of the event.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"    public Event(String title, String fromDateTime, String toDateTime, Boolean isDone) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"    public String getTask() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"K-J-Q"},"content":"        return String.format(\"[E][%c] %s (from: %s to: %s)\", this.isDone ? \u0027X\u0027 : \u0027 \u0027, this.title, this.fromDateTime, this.toDateTime);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the Event task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the Event task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"K-J-Q"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"K-J-Q"},"content":"    public String getSaveString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"K-J-Q"},"content":"        return super.getSaveString() + String.format(\"E|%s|%s|%s|%s\", this.isDone ? \"1\" : \"0\", this.title, this.fromDateTime, this.toDateTime);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"K-J-Q":64}},{"path":"src/main/java/minion/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":" * Represents a generic task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"public class Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"    protected String title \u003d \"\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"    protected Boolean isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"    public Boolean isDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"        return isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"     * @param done The completion status to be set.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"    public void setDone(Boolean done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"     * Returns the title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"     * @return The title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"    public String getTitle() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"        return title;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"    public String getTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"        return String.format(\"[%c] %s\", this.isDone ? \u0027X\u0027 : \u0027 \u0027, this.title);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"    public String getSaveString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"K-J-Q"},"content":"        return \"\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"K-J-Q":54}},{"path":"src/main/java/minion/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"import minion.MinionException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"import minion.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"import minion.parser.Parser;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"import minion.parser.UserCommand;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":" * Manages the list of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":" * Any tasks that are extended from class Task can be included here.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"public class TaskList {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); // Create an ArrayList object","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"    Storage taskStorage \u003d new Storage();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"     * Checks if the given index is valid.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"     * @param index The index to be checked.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"     * @return True if the index is valid, false otherwise.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"    private Boolean isValidIndex(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"        return (index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"     * Loads a saved task from the given string.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"     * @param task   The string representation of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"     * @param parser The parser class","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"     * @throws MinionException If the task cannot be processed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"    private void loadSavedTask(String task, Parser parser) throws MinionException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"            return;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"        UserCommand cmd \u003d new UserCommand();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"        cmd.command \u003d parser.parseSaved(task);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"        cmd.message \u003d task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"        switch (cmd.command) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"        case ADD_TODO:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"            this.tasks.add(parser.getSavedTodo(cmd));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"            break;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"        case ADD_DEADLINE:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"            this.tasks.add(parser.getSavedDeadline(cmd));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"            break;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"        case ADD_EVENT:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"            this.tasks.add(parser.getSavedEvent(cmd));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"K-J-Q"},"content":"            break;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"K-J-Q"},"content":"        default:","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"K-J-Q"},"content":"            throw new MinionException(\"Unable to process task: \" + task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"K-J-Q"},"content":"     * Loads tasks from storage.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"K-J-Q"},"content":"     * @param parser The parser class","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"K-J-Q"},"content":"     * @throws MinionException If the tasks cannot be loaded.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"K-J-Q"},"content":"    public void loadTasks(Parser parser) throws MinionException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"K-J-Q"},"content":"        String tasks \u003d taskStorage.getString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"K-J-Q"},"content":"        for (String task : tasks.split(System.lineSeparator())) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"K-J-Q"},"content":"            loadSavedTask(task, parser);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"K-J-Q"},"content":"    private void saveTasks() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"K-J-Q"},"content":"        String[] taskStrs \u003d new String[tasks.size()];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"K-J-Q"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"K-J-Q"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"K-J-Q"},"content":"            taskStrs[i++] \u003d task.getSaveString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"K-J-Q"},"content":"        taskStorage.saveString(taskStrs);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"K-J-Q"},"content":"     * Adds a task to the list and saves the updated list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"K-J-Q"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"K-J-Q"},"content":"     * @return Message confirming the addition of the task, to be printed to the console.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"K-J-Q"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"K-J-Q"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"K-J-Q"},"content":"        saveTasks();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"K-J-Q"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d task(s) in the list.\", task.getTask(), this.tasks.size());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of a task at the given index.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"K-J-Q"},"content":"     * @param index The index of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"K-J-Q"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"K-J-Q"},"content":"     * Example:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"K-J-Q"},"content":"     * If the task at index 0 is a Todo task with the title \"Read book\" and is not done,","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"K-J-Q"},"content":"     * the returned string will be \"[T][ ] Read book\".","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"K-J-Q"},"content":"    public String getTaskString(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"K-J-Q"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"K-J-Q"},"content":"            return \"Invalid Selection!\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"K-J-Q"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"K-J-Q"},"content":"        saveTasks();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"K-J-Q"},"content":"        return String.format(\"[%c] %s\", task.isDone() ? \u0027X\u0027 : \u0027 \u0027, task.getTitle());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"K-J-Q"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"K-J-Q"},"content":"     * @return A string representation of all tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"K-J-Q"},"content":"    public String listTasks() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"K-J-Q"},"content":"        StringBuilder out \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"K-J-Q"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"K-J-Q"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"K-J-Q"},"content":"            out.append(String.format(\"%d.%s\\n\", i++, task.getTask()));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"K-J-Q"},"content":"        // if there are tasks, remove trailing new line character","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"K-J-Q"},"content":"        if (!out.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"K-J-Q"},"content":"            out \u003d new StringBuilder(out.substring(0, out.length() - 1));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"K-J-Q"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"K-J-Q"},"content":"            out \u003d new StringBuilder(\"You don\u0027t have any items!\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"K-J-Q"},"content":"        return out.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"K-J-Q"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"K-J-Q"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"K-J-Q"},"content":"     * @return A message confirming the task has been marked as done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"K-J-Q"},"content":"    public String markDone(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"K-J-Q"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"K-J-Q"},"content":"            return \"Invalid Selection!\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"K-J-Q"},"content":"        this.tasks.get(index).setDone(true);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"K-J-Q"},"content":"        saveTasks();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"K-J-Q"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + getTaskString(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"K-J-Q"},"content":"     * Marks a task as not done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"K-J-Q"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"K-J-Q"},"content":"     * @return A message confirming the task has been marked as not done.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"K-J-Q"},"content":"    public String unmarkDone(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"K-J-Q"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"K-J-Q"},"content":"            return \"Invalid Selection!\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"K-J-Q"},"content":"        this.tasks.get(index).setDone(false);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"K-J-Q"},"content":"        saveTasks();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"K-J-Q"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + getTaskString(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"K-J-Q"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"K-J-Q"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"K-J-Q"},"content":"     * @return A message confirming the deletion of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"K-J-Q"},"content":"    public String delete(int index) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"K-J-Q"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"K-J-Q"},"content":"            return \"Invalid Selection!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"K-J-Q"},"content":"        String taskStr \u003d getTaskString(index);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"K-J-Q"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"K-J-Q"},"content":"        saveTasks();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"K-J-Q"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + taskStr + \"\\nNow you have \" + this.tasks.size() + \" task(s) in the list.\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"K-J-Q"},"content":"    public String findTitle(String findText) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"K-J-Q"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"K-J-Q"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"K-J-Q"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"K-J-Q"},"content":"            if (task.getTitle().contains(findText)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"K-J-Q"},"content":"                out.append(String.format(\"%d.%s %s\", i++, task.getTask(), System.lineSeparator()));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"K-J-Q"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"K-J-Q"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"K-J-Q"},"content":"        return out.toString();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"K-J-Q":188}},{"path":"src/main/java/minion/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_SAVED_TASK \u003d \"T|\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"    private static final String KEYWORD_TASK \u003d \"todo\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"     * Constructs a Todo task with the given title.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"     * @param title The title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"    public Todo(String title) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"     * Constructs a Todo task with the given title and completion status. This is generally used for initialising from saved files.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"     * @param title  The title of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"    public Todo(String title, Boolean isDone) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"    public String getTask() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"        return String.format(\"[T][%c] %s\", this.isDone ? \u0027X\u0027 : \u0027 \u0027, this.title);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"     * Returns the string representation of the Todo task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"     * @return The string representation of the Todo task for saving.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"    public String getSaveString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"        return super.getSaveString() + String.format(\"T|%s|%s|\", this.isDone ? \"1\" : \"0\", this.title);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"K-J-Q":51}},{"path":"src/main/java/minion/ui/MessagePrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"package minion.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"/**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":" * The MessagePrinter class prints messages with a specific format.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":" * This includes separator, indentation, and logos.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":" */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"public class MessagePrinter {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"    // Constant variables","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"    final String LOGO \u003d \"\"\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"              __  __ _       _","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"             |  \\\\/  (_)_ __ (_) ___  _ __","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"             | |\\\\/| | | \u0027_ \\\\| |/ _ \\\\| \u0027_ \\\\","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"             | |  | | | | | | | (_) | | | |","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"             |_|  |_|_|_| |_|_|\\\\___/|_| |_|","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"            \"\"\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"    final String NAME \u003d \"Minion\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"    private String indentation \u003d \"   \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"    private String lineSeparator \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"     * Adds an indentation of 4 spaces \"    \" to the given message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"     * @param message The message to be indented.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"     * @return The indented message.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"    private String addIndentation(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"        // add indentation after every new line too","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"        message \u003d message.replace(\"\\n\", \"\\n\" + indentation);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"        return this.indentation + message;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"     * Prints a line separator with indentation.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"    public void printSep() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"        System.out.println(addIndentation(lineSeparator));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"     * Prints a given message with indentation.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"        System.out.println(addIndentation(message));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"     * Prints a given message with indentation and surrounds it with line separators.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"K-J-Q"},"content":"     * ","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"K-J-Q"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"K-J-Q"},"content":"    public void printMessageAndSep(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"K-J-Q"},"content":"        this.printSep();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"K-J-Q"},"content":"        this.printMessage(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"K-J-Q"},"content":"        this.printSep();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"K-J-Q"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"K-J-Q"},"content":"     * Prints the introductory message with the logo and name.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"K-J-Q"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"K-J-Q"},"content":"    public void printIntro() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"K-J-Q"},"content":"        this.printMessageAndSep(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"K-J-Q"},"content":"        this.printMessage(\"Hello! I\u0027m [\" + NAME + \"]\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"K-J-Q"},"content":"        this.printMessageAndSep(\"What can I do for you?\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"K-J-Q"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"K-J-Q"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"K-J-Q":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"K-J-Q"},"content":"todo read book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"K-J-Q"},"content":"todo borrow book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"K-J-Q"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"K-J-Q"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"K-J-Q"},"content":"event gaming /to Mon 11pm /from 5pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"mark 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"mark 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"mark 3","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"unmark 3","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"K-J-Q"},"content":"mark 3","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"K-J-Q"},"content":"unmark 3","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"K-J-Q"},"content":"unmark 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"K-J-Q"},"content":"unmark 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"K-J-Q"},"content":"delete 1","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"K-J-Q"},"content":"delete 5","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"K-J-Q"},"content":"delete 4","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"K-J-Q"},"content":"delete 2","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"K-J-Q"},"content":"delete 1","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"K-J-Q"},"content":"delete 1","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"K-J-Q"},"content":"list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"K-J-Q"},"content":"todo","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"K-J-Q"},"content":"deadline","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"K-J-Q"},"content":"deadline noBy","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"K-J-Q"},"content":"deadline noBy /hi","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"K-J-Q"},"content":"deadline noBy /hi fdsf","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"K-J-Q"},"content":"event","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"K-J-Q"},"content":"event test","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"K-J-Q"},"content":"event test /from","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"K-J-Q"},"content":"event test /to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"K-J-Q"},"content":"event test /from fds","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"K-J-Q"},"content":"event test /to fsadf","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"K-J-Q"},"content":"event test /from test /to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"K-J-Q"},"content":"event test /from test /taa","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"K-J-Q"},"content":"event test /fdsa test /to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"K-J-Q"},"content":"event test /fds 123  /fsd 21","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"K-J-Q"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"K-J-Q"},"content":"dfksalf","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"K-J-Q"},"content":"blah","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"K-J-Q"},"content":"bye","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"K-J-Q":49}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"K-J-Q"},"content":"if exist taskInfo.txt del taskInfo.txt","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"K-J-Q"},"content":"REM compile the code into the bin folder (recursive compilation for /minion package)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"K-J-Q"},"content":"dir /s /b ..\\src\\main\\java\\minion\\*.java \u003e sources.txt","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"K-J-Q"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"K-J-Q"},"content":"del sources.txt","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"K-J-Q"},"content":"java -classpath ..\\bin minion.Minion \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"K-J-Q":6,"-":19}}]
