[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"# Snorlax.Snorlax project template","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"1. After that, locate the `src/main/java/Snorlax.Snorlax.java` file, right-click it, and choose `Run Snorlax.Snorlax.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"Carlton369":2,"-":24}},{"path":"data/SnorlaxData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"0|todo bye","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"1|event bing/from2012-10-10/to2020-12-12","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"0|deadline bong/by2012-02-01","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Carlton369":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"# Snorlax User Guide","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"Snorlax is a task management application that helps you keep track of your tasks. You can add, delete, mark, unmark, find, and list tasks. You can also search if there are any Tasks on a certain date. Tasks can be of three types: Todo, Deadline, and Event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"Note that any variable in CAPS_LOCK is meant to be for the user\u0027s input, while non caps-lock is a fixed command that is expected by the program","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"## Features","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"### Adding a Todo Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"Adds a todo task to the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"todo read book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"Ok..... I have added this \"todo\" task.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"[T][ ] read book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"You now have X tasks in the list...","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"### Adding a Deadline Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"Adds a deadline task to the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"deadline TASK_DESCRIPTION /by DATE(yyyy-MM-dd)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"deadline return book /by 2023-12-31","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"Ok..... I have added this \"deadline\" task.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"[D][ ] return book (by: 31-DECEMBER-2023)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"You now have X tasks in the list...","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Carlton369"},"content":"### Adding an Event Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Carlton369"},"content":"Adds an event task to the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Carlton369"},"content":"event TASK_DESCRIPTION /from START_DATE(yyyy-MM-dd) /to END_DATE(yyyy-MM-dd)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Carlton369"},"content":"event project meeting /from 2023-12-01 /to 2023-12-02","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Carlton369"},"content":"Ok..... I have added this \"event\" task.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Carlton369"},"content":"[E][ ] project meeting (from: 1-DECEMBER-2023 to: 2-DECEMBER-2023)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Carlton369"},"content":"You now have X tasks in the list...","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Carlton369"},"content":"### Listing All Tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Carlton369"},"content":"Lists all tasks in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Carlton369"},"content":"list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Carlton369"},"content":"Here are the tasks in the list:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Carlton369"},"content":"1. [T][ ] read book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Carlton369"},"content":"2. [D][ ] return book (by: 31-DECEMBER-2023)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Carlton369"},"content":"3. [E][ ] project meeting (from: 1-DECEMBER-2023 to: 2-DECEMBER-2023)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Carlton369"},"content":"### Marking a Task as Done","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Carlton369"},"content":"Marks a task as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Carlton369"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Carlton369"},"content":"mark 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Carlton369"},"content":"Ok..... I will mark this task as done.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Carlton369"},"content":"[T][X] read book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Carlton369"},"content":"### Unmarking a Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Carlton369"},"content":"Unmarks a task as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Carlton369"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Carlton369"},"content":"unmark 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Carlton369"},"content":"Ok..... I will mark this task as not done yet.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Carlton369"},"content":"[T][ ] read book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Carlton369"},"content":"### Deleting a Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Carlton369"},"content":"Deletes a task from the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Carlton369"},"content":"delete TASK_NUMBER","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Carlton369"},"content":"delete 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Carlton369"},"content":"Ok..... I will delete this task.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Carlton369"},"content":"[T][ ] read book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Carlton369"},"content":"### Finding Tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Carlton369"},"content":"Finds tasks that contain a specific keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Carlton369"},"content":"find KEYWORD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Carlton369"},"content":"find book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Carlton369"},"content":"Here are the related tasks:.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Carlton369"},"content":"[T][ ] read book","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Carlton369"},"content":"[D][ ] return book (by: 31-DECEMBER-2023)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Carlton369"},"content":"### Checking Tasks on a Specific Date","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Carlton369"},"content":"Lists tasks that are due or happening on a specific date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Carlton369"},"content":"on DATE(yyyy-MM-dd)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Carlton369"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Carlton369"},"content":"on 2023-12-31","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Carlton369"},"content":"Here\u0027s what\u0027s going on.....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Carlton369"},"content":"[D][ ] return book (by: 31-DECEMBER-2023)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Carlton369"},"content":"### Exiting the Application","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Carlton369"},"content":"Exits the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Carlton369"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Carlton369"},"content":"bye","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Carlton369"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Carlton369"},"content":"Bye..... see you soon....","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Carlton369"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Carlton369":174,"-":27}},{"path":"src/main/java/Snorlax/CommandPackage/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.CommandPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.ParserPackage.IO;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"import Snorlax.ExceptionsPackage.*;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"import Snorlax.TaskListPackage.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":" * This class represents the commands and handles the execution","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":" * @author Yee Zhan Xian Carlton","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"public class Commands {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"     * Prints out all items in the list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"     * If empty list, prints error message indicating empty list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"     * @param list list to be printed out","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"    public static void List(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     No tasks yet.....\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     Here are the tasks in the list:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"                System.out.println(\"     \" + (i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Carlton369"},"content":"     * Marks a specified unmarked Task as done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"     * Prints a message with borders to indicate the task has been marked","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"     * @param list list storing all tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"     * @param taskNumber index of task to be marked","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"     * @throws NonexistentTaskException if taskNumber does not exist in list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Carlton369"},"content":"     * @throws CompletedTaskException if specified task is already marked as done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"    public static void Mark(ArrayList\u003cTask\u003e list, int taskNumber) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d list.size()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"            throw new NonexistentTaskException();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"        } else if (list.get(taskNumber).isDone) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"            throw new CompletedTaskException();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Carlton369"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Carlton369"},"content":"            list.get(taskNumber).markAsDone();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     Ok..... I will mark this task as done.....\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     \" + list.get(taskNumber).toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Carlton369"},"content":"     * Unmarks a specified already marked Task as not done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Carlton369"},"content":"     * Prints a message with borders to indicate the task has been unmarked","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Carlton369"},"content":"     * @param list list storing all tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Carlton369"},"content":"     * @param taskNumber index of task to be unmarked","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Carlton369"},"content":"     * @throws NonexistentTaskException if taskNumber does not exist in list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Carlton369"},"content":"     * @throws IncompleteTaskException if specified task is not marked as done","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Carlton369"},"content":"    public static void Unmark(ArrayList\u003cTask\u003e list, int taskNumber) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Carlton369"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d list.size()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Carlton369"},"content":"            throw new NonexistentTaskException();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Carlton369"},"content":"        } else if (!list.get(taskNumber).isDone) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Carlton369"},"content":"            throw new IncompleteTaskException();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Carlton369"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Carlton369"},"content":"            list.get(taskNumber).unmarkAsDone();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     Ok..... I will mark this task as not done yet.....\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     \" + list.get(taskNumber).toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Carlton369"},"content":"     * Deletes a specified task in the list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Carlton369"},"content":"     * Prints a message with borders to indicate the deleted task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Carlton369"},"content":"     * @param list  list storing all tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Carlton369"},"content":"     * @param taskNumber index of task to be deleted","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Carlton369"},"content":"     * @throws NonexistentTaskException if taskNumber does not exist in list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Carlton369"},"content":"    public static void Delete(ArrayList\u003cTask\u003e list, int taskNumber) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Carlton369"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d list.size()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Carlton369"},"content":"            throw new NonexistentTaskException();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Carlton369"},"content":"        } else {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     Ok..... I will delete this task.....\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Carlton369"},"content":"            String taskDescription \u003d list.get(taskNumber).toString();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     \" + taskDescription);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Carlton369"},"content":"            list.remove(taskNumber);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Carlton369"},"content":"     * Creates a new Deadline task in the list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Carlton369"},"content":"     * Prints a message with borders to indicate the new Deadline task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Carlton369"},"content":"     * @param list list to store all tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Carlton369"},"content":"     * @param taskDescription description of the task to be created","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Carlton369"},"content":"     * @throws InvalidDeadlineException if there is no deadline indicated","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Carlton369"},"content":"    public static void Deadline(ArrayList\u003cTask\u003e list, String taskDescription) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Carlton369"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Carlton369"},"content":"            String[] splitTaskDescription \u003d taskDescription.split(\"/by\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Carlton369"},"content":"            if (splitTaskDescription.length !\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Carlton369"},"content":"            String taskAction \u003d splitTaskDescription[0].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Carlton369"},"content":"            String deadlineBy \u003d splitTaskDescription[1].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Carlton369"},"content":"            list.add(new Deadline(taskAction, deadlineBy));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Carlton369"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Carlton369"},"content":"            throw new SnorlaxDateException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Ok..... I have added this \\\"deadline\\\" task.....\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     You now have \" + list.size() + \" tasks in the list...\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Carlton369"},"content":"     * Creates a new Todo task in the list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Carlton369"},"content":"     * Prints a message with borders to indicated the new Todo task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Carlton369"},"content":"     * @param list list to store all tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Carlton369"},"content":"     * @param taskDescription description of the task to be created","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Carlton369"},"content":"    public static void Todo(ArrayList\u003cTask\u003e list, String taskDescription) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Carlton369"},"content":"        list.add(new Todo(taskDescription));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Ok..... I have added this \\\"todo\\\" task.....\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     You now have \" + list.size() + \" tasks in the list...\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Carlton369"},"content":"     * Creates a new Event task in the list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Carlton369"},"content":"     * Prints a message with borders to indicated the new Event task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Carlton369"},"content":"     * @param list list to store all tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Carlton369"},"content":"     * @param taskDescription description of the task to be created","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Carlton369"},"content":"     * @throws InvalidEventException if no description was given","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Carlton369"},"content":"     * @throws IndexOutOfBoundsException if description is missing a start or end date","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Carlton369"},"content":"    public static void Event(ArrayList\u003cTask\u003e list, String taskDescription) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Carlton369"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Carlton369"},"content":"            String[] splitDescription \u003d taskDescription.split(\"/from\", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Carlton369"},"content":"            String eventDescription \u003d splitDescription[0].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Carlton369"},"content":"            String[] eventTimeline \u003d splitDescription[1].split(\"/to\", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Carlton369"},"content":"            String eventStart \u003d eventTimeline[0].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Carlton369"},"content":"            String eventEnd \u003d eventTimeline[1].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Carlton369"},"content":"            if (eventDescription.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Carlton369"},"content":"            list.add(new Event(eventDescription, eventStart, eventEnd));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Carlton369"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Carlton369"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Carlton369"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Carlton369"},"content":"            throw new SnorlaxDateException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Ok..... I have added this \\\"event\\\" task.....\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     You now have \" + list.size() + \" tasks in the list...\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Carlton369"},"content":"     * Sets the isRunning boolean to false, causing program to exit","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Carlton369"},"content":"    public static void Exit(){","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Carlton369"},"content":"        IO.isRunning \u003d false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Carlton369"},"content":"     * Checks list for any Deadlines or Events occuring on inputDate","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Carlton369"},"content":"     * Prints any results back to the user","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Carlton369"},"content":"     * @param list list to store all tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Carlton369"},"content":"     * @param inputDate date to search for deadlines or tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Carlton369"},"content":"     * @throws DateTimeParseException if inputDate not in correct format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Carlton369"},"content":"    public static void CheckOnDate(ArrayList\u003cTask\u003e list, String inputDate) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Carlton369"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     Here\u0027s what\u0027s going on.....\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Carlton369"},"content":"            LocalDate date \u003d LocalDate.parse(inputDate);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Carlton369"},"content":"            for (Task task : list) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Carlton369"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Carlton369"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Carlton369"},"content":"                    if (deadline.getBy().isEqual(date)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Carlton369"},"content":"                        System.out.println(\"     \" + deadline);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Carlton369"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Carlton369"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Carlton369"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Carlton369"},"content":"                    LocalDate from \u003d event.getFrom();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Carlton369"},"content":"                    LocalDate to \u003d event.getTo();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Carlton369"},"content":"                    boolean isAfter \u003d date.isAfter(from) || date.isEqual(from);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Carlton369"},"content":"                    boolean isBefore \u003d date.isBefore(to) || date.isEqual(to);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Carlton369"},"content":"                    if (isAfter \u0026\u0026 isBefore) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Carlton369"},"content":"                        System.out.println(\"     \" + event);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Carlton369"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Carlton369"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Carlton369"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Carlton369"},"content":"            throw new SnorlaxDateException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Carlton369"},"content":"        } finally {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Carlton369"},"content":"            UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Carlton369"},"content":"     * Checks list if any Tasks have a description matching the input keyword","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Carlton369"},"content":"     * @param list list to store all tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Carlton369"},"content":"     * @param toFindKey keyword to search for","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Carlton369"},"content":"    public static void Find(ArrayList\u003cTask\u003e list, String toFindKey) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Here are the related tasks:.....\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Carlton369"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Carlton369"},"content":"            if (task.description.contains(toFindKey)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Carlton369"},"content":"                System.out.println(\"     \"  + task.toString());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":240}},{"path":"src/main/java/Snorlax/ExceptionsPackage/CompletedTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when an attempt is made to mark an already completed task as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class CompletedTaskException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the task is already completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Task is already done.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/FullListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when an attempt is made to add more Tasks than the list can hold","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class FullListException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the list is full.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Sorry.... list is full.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/IncompleteTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when an attempt is made to unmark a Task that is not yet marked","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class IncompleteTaskException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the task is has not been completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Task is not done.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when the user inputs an invalid command","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class InvalidCommandException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the command is not valid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Please give a valid command.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when an attempt is made create a new Deadline Task without a deadline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class InvalidDeadlineException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the input deadline is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Invalid deadline.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":24}},{"path":"src/main/java/Snorlax/ExceptionsPackage/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when an attempt is made to add an Event Task without a valid description, start, or end date","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class InvalidEventException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the input description is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Invalid event.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when the taskDescription is not valid","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class InvalidTaskException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the task is not valid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Invalid task.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/NoInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when the user provides an empty input","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class NoInputException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating there is no input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Huh? Please type something.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/NonexistentTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when an attempt is made to modify a Task that does not exist","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class NonexistentTaskException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the task does not exist.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Task does not exist.....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/SnorlaxDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Exception thrown when an attempt is made to parse a date in the wrong format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class SnorlaxDateException extends SnorlaxException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the correct date input format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Please input date as yyyy-MM-dd.....\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":23}},{"path":"src/main/java/Snorlax/ExceptionsPackage/SnorlaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":" * Parent Exception class, to be overridden by the corresponding exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"public abstract class SnorlaxException extends RuntimeException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"    public SnorlaxException() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"        super();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * Abstract method to be overriden by children","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    public abstract void handle();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":18}},{"path":"src/main/java/Snorlax/ExceptionsPackage/UnknownErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ExceptionsPackage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Default Exception thrown when there is an exception that was unanticipated","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" * This class extends {@code SnorlaxException} and provides a custom handler for the exception.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":" *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"public class UnknownErrorException extends SnorlaxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"     * Handles the exception by printing a message indicating the error was not expected","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"     * The message is with borders","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    public void handle() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Snorlax.Snorlax doesn\u0027t know what to do.......\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":24}},{"path":"src/main/java/Snorlax/ParserPackage/IO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.ParserPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import Snorlax.CommandPackage.Commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"import Snorlax.ExceptionsPackage.*;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"import Snorlax.StoragePackage.FileIO;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"import Snorlax.TaskListPackage.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":" * The IO class handles user input and command parsing for the Snorlax task manager.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"public class IO {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"     * Boolean flag to indicate if the program is running.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"    public static boolean isRunning \u003d true;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"     * Reads a command from the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"     * @return The trimmed user input as a string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"    public static String readCommand() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"        String userInput;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"        userInput \u003d in.nextLine().trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"        return userInput;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"     * Parses the user input into command and arguments.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Carlton369"},"content":"     * @param userInput The full user input string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"     * @return An array where the first element is the command and the second element (if any) is the argument.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"    public static String[] parseUserInput(String userInput) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"        return userInput.split(\" \", 2);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"     * Handles the parsed user input and executes the corresponding command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"     * @param list      The list of tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"     * @param splitLine The parsed user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Carlton369"},"content":"     * @throws InvalidTaskException    If the task number is missing or invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Carlton369"},"content":"     * @throws FullListException       If the task list is full (100 tasks limit).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Carlton369"},"content":"     * @throws NoInputException        If no input is provided.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Carlton369"},"content":"     * @throws InvalidCommandException If an unrecognized command is entered.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Carlton369"},"content":"    public static void handleInput (ArrayList\u003cTask\u003e list, String[] splitLine)  {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Carlton369"},"content":"        switch (splitLine[0].toLowerCase()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Carlton369"},"content":"        case \"list\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Carlton369"},"content":"            Commands.List(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Carlton369"},"content":"        case \"mark\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length \u003c 2 || !splitLine[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Carlton369"},"content":"                int taskNumber \u003d Integer.parseInt(splitLine[1]) - 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Carlton369"},"content":"                Commands.Mark(list, taskNumber);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Carlton369"},"content":"                FileIO.saveTasks(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Carlton369"},"content":"        case \"unmark\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length \u003c 2 || !splitLine[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Carlton369"},"content":"                int taskNumber \u003d Integer.parseInt(splitLine[1]) - 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Carlton369"},"content":"                Commands.Unmark(list, taskNumber);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Carlton369"},"content":"                FileIO.saveTasks(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Carlton369"},"content":"        case \"delete\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length \u003c 2 || !splitLine[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Carlton369"},"content":"                int taskNumber \u003d Integer.parseInt(splitLine[1]) - 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Carlton369"},"content":"                Commands.Delete(list, taskNumber);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Carlton369"},"content":"                FileIO.saveTasks(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Carlton369"},"content":"        case \"deadline\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length \u003c 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Carlton369"},"content":"            } else if (list.size() \u003e\u003d 100) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Carlton369"},"content":"                throw new FullListException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Carlton369"},"content":"                Commands.Deadline(list, splitLine[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Carlton369"},"content":"                FileIO.saveTasks(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Carlton369"},"content":"        case \"todo\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length !\u003d 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Carlton369"},"content":"            } else if (list.size() \u003e\u003d 100) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Carlton369"},"content":"                throw new FullListException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Carlton369"},"content":"                Commands.Todo(list, splitLine[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Carlton369"},"content":"                FileIO.saveTasks(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Carlton369"},"content":"        case \"event\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length !\u003d 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Carlton369"},"content":"            } else if (list.size() \u003e\u003d 100) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Carlton369"},"content":"                throw new FullListException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Carlton369"},"content":"                Commands.Event(list, splitLine[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Carlton369"},"content":"                FileIO.saveTasks(list);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Carlton369"},"content":"        case \"bye\" -\u003e {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Carlton369"},"content":"            Commands.Exit();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Carlton369"},"content":"        case \"on\" -\u003e {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length !\u003d 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Carlton369"},"content":"            } else if (list.size() \u003e\u003d 100) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Carlton369"},"content":"                throw new FullListException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Carlton369"},"content":"                Commands.CheckOnDate(list, splitLine[1]);;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Carlton369"},"content":"        case \"find\" -\u003e {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Carlton369"},"content":"            if (splitLine.length !\u003d 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Carlton369"},"content":"                Commands.Find(list, splitLine[1]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Carlton369"},"content":"        default -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Carlton369"},"content":"            if (splitLine[0].isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Carlton369"},"content":"                throw new NoInputException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Carlton369"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Carlton369"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Carlton369":145}},{"path":"src/main/java/Snorlax/Snorlax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"import Snorlax.ParserPackage.IO;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"import Snorlax.StoragePackage.FileIO;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"import Snorlax.ExceptionsPackage.SnorlaxException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"import Snorlax.TaskListPackage.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"import Snorlax.UIPackage.UI;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":" * The main class for the Snorlax task manager.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"public class Snorlax {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     * List of tasks managed by Snorlax.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"     * The file path where tasks are stored.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"    public static final String FILE_PATH \u003d \"./data/SnorlaxData.txt\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"     * Constructs a Snorlax instance and loads tasks from storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"    public Snorlax() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"        list \u003d FileIO.loadTasks();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"     * Runs the Snorlax assistant, handling user input and task management.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"    public void run() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Carlton369"},"content":"        String name \u003d \"Snorlax\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Carlton369"},"content":"        UI.printIntro(name);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"        while (IO.isRunning) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"                String userInput \u003d IO.readCommand();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Carlton369"},"content":"                String[] parsedInput \u003d IO.parseUserInput(userInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"                IO.handleInput(list, parsedInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"            } catch (SnorlaxException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"                e.handle();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"        UI.printOutro();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Carlton369"},"content":"     * The main entry point for running the Snorlax assistant.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Carlton369"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Carlton369"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Carlton369"},"content":"        new Snorlax().run();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":59}},{"path":"src/main/java/Snorlax/StoragePackage/FileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.StoragePackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import java.io.*;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"import Snorlax.ExceptionsPackage.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"import Snorlax.TaskListPackage.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"import static Snorlax.Snorlax.FILE_PATH;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":" * Handles file input and output operations for saving and loading tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"public class FileIO {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"     * Saves the list of tasks to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Carlton369"},"content":"     * Loads the list of tasks from a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Carlton369"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"        file.getParentFile().mkdirs(); // Ensure the folder exists","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"            return list; // Return empty list if file doesn\u0027t exist","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Carlton369"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Carlton369"},"content":"            String line;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Carlton369"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Carlton369"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Carlton369"},"content":"                String taskDescription \u003d parts[1];","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Carlton369"},"content":"                boolean isDone \u003d parts[0].equals(\"1\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Carlton369"},"content":"                String[] splitTaskDescription \u003d taskDescription.split(\" \", 2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Carlton369"},"content":"                switch (splitTaskDescription[0]) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Carlton369"},"content":"                case \"todo\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Carlton369"},"content":"                    list.add(new Todo(splitTaskDescription[1]));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Carlton369"},"content":"                    if (isDone) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Carlton369"},"content":"                        list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Carlton369"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Carlton369"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Carlton369"},"content":"                case \"deadline\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Carlton369"},"content":"                    String[] splitDeadlineDescription \u003d splitTaskDescription[1].split(\"/by\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Carlton369"},"content":"                    list.add(new Deadline(splitDeadlineDescription[0], splitDeadlineDescription[1]));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Carlton369"},"content":"                    if (isDone) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Carlton369"},"content":"                        list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Carlton369"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Carlton369"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Carlton369"},"content":"                case \"event\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Carlton369"},"content":"                    String[] splitEventDescription \u003d splitTaskDescription[1].split(\"/from\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Carlton369"},"content":"                    String[] eventToFrom \u003d splitEventDescription[1].split(\"/to\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Carlton369"},"content":"                    list.add(new Event(splitEventDescription[0], eventToFrom[0], eventToFrom[1]));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Carlton369"},"content":"                    if (isDone) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Carlton369"},"content":"                        list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Carlton369"},"content":"                    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Carlton369"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Carlton369"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Carlton369"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Carlton369"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Carlton369"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Carlton369"},"content":"            System.out.println(\"     WARNING!!!Corrupted dates in task\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Carlton369"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Carlton369"},"content":"        return list;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Carlton369":88}},{"path":"src/main/java/Snorlax/TaskListPackage/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.TaskListPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"     * The deadline of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     * Constructs a Deadline task with a description and deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"    public LocalDate getBy(){","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"        return by;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"     * @return A formatted string indicating the task type, status, description, and deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Carlton369"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Carlton369"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(by) + \")\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"     * Formats the deadline task for file storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"     * @return A string representation suitable for saving to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"        return super.toFileFormat() + \"deadline \" + description + \"/by\" + by;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":48}},{"path":"src/main/java/Snorlax/TaskListPackage/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.TaskListPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"     * The start time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"    protected LocalDate from;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     * The end time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    protected LocalDate to;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"        return from;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Carlton369"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Carlton369"},"content":"        return to;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"     * @return A formatted string indicating the task type, status, description, start time, and end time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDate(from) + \" to: \" + formatDate(to) + \")\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Carlton369"},"content":"     * Formats the event task for file storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Carlton369"},"content":"     * @return A string representation suitable for saving to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Carlton369"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Carlton369"},"content":"        return super.toFileFormat() + \"event \" + description + \"/from\" + from + \"/to\" + to;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":58}},{"path":"src/main/java/Snorlax/TaskListPackage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.TaskListPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":" * Represents a general task with a description and completion status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"public class Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"     * The description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"    public String description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"     * The completion status of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    public boolean isDone;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"     * Constructs a new Task with a given description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"        String day \u003d String.valueOf(date.getDayOfMonth());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"        String month \u003d date.getMonth().toString();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"        String year \u003d String.valueOf(date.getYear());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"        return day + \"-\" + month + \"-\" + year;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Carlton369"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Carlton369"},"content":"     * \"X\" for completed tasks, \" \" for incomplete tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Carlton369"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Carlton369"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Carlton369"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Carlton369"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Carlton369"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Carlton369"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Carlton369"},"content":"     * Unmarks the task as done (sets it to incomplete).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Carlton369"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Carlton369"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Carlton369"},"content":"     * Formats the task for file storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Carlton369"},"content":"     * @return A string representation suitable for saving to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Carlton369"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Carlton369"},"content":"        return (isDone ? \"1\" : \"0\") + \"|\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Carlton369"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Carlton369"},"content":"     * @return A formatted string indicating the status and description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Carlton369"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Carlton369"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":78}},{"path":"src/main/java/Snorlax/TaskListPackage/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.TaskListPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":" * Represents a Todo task with a description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"     * Constructs a Todo task with a given description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"     * @return A formatted string indicating the task type and status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"     * Formats the Todo task for file storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"     * @return A string representation suitable for saving to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"        return super.toFileFormat() + \"todo \" + description;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":35}},{"path":"src/main/java/Snorlax/UIPackage/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"package Snorlax.UIPackage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":" * Handles user interface functionalities for the Snorlax assistant.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"public class UI {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Carlton369"},"content":"     * Prints a border line to separate messages.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Carlton369"},"content":"    public static void printBorder() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Carlton369"},"content":"     * Prints the introduction message for the Snorlax assistant.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Carlton369"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"     * @param name The name of the assistant.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Carlton369"},"content":"    public static void printIntro(String name) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Carlton369"},"content":"        printBorder();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Hello..... I\u0027m \" + name + \".....\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Carlton369"},"content":"        printBorder();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Carlton369"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Carlton369"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Carlton369"},"content":"     * Prints the outro message when exiting the Snorlax assistant.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Carlton369"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Carlton369"},"content":"    public static void printOutro() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Carlton369"},"content":"        System.out.println(\"     Bye..... see you soon....\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Carlton369"},"content":"        UI.printBorder();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Carlton369"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Carlton369"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Carlton369":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carlton369"},"content":"todo borrow book","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Carlton369"},"content":"list","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Carlton369"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Carlton369"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Carlton369"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Carlton369"},"content":"list","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Carlton369"},"content":"bye","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Carlton369":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Carlton369"},"content":"java -classpath ..\\bin Snorlax.Snorlax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Carlton369":1,"-":20}}]
