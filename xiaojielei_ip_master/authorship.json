[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaojielei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xiaojielei"},"content":"    protected String by;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xiaojielei"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xiaojielei"},"content":"        super(description);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xiaojielei"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xiaojielei"},"content":"    public Deadline(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xiaojielei"},"content":"        super(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xiaojielei"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xiaojielei"},"content":"    public String toString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xiaojielei"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xiaojielei"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"xiaojielei":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaojielei"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xiaojielei"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xiaojielei"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xiaojielei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xiaojielei"},"content":"import java.io.File;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xiaojielei"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xiaojielei"},"content":" * Duke is a chatbox project that allows users to add, list, mark, unmark, delete, and find tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xiaojielei"},"content":" * It also save tasks to a file and loads them on startup.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xiaojielei"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xiaojielei"},"content":"    /** The list of tasks managed by Duke. */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xiaojielei"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xiaojielei"},"content":"    /** The file used to persist tasks. */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xiaojielei"},"content":"    private static final File f \u003d new File(\"docs/duke.txt\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xiaojielei"},"content":"    /** The directory path for the tasks file. */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xiaojielei"},"content":"    private static final String DIRECTORY_PATH \u003d \"docs\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xiaojielei"},"content":"    /** The directory object for the tasks file. */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xiaojielei"},"content":"    private static final File DIRECTORY \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xiaojielei"},"content":"     * Prints a horizontal line to separate output.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xiaojielei"},"content":"    private static void printLine() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"----------------------------------------------\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xiaojielei"},"content":"     * Prints an exit message and terminates the application.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xiaojielei"},"content":"    public static void exit() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xiaojielei"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xiaojielei"},"content":"    public static void list() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xiaojielei"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xiaojielei"},"content":"            System.out.println(\"Your task list is empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xiaojielei"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xiaojielei"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xiaojielei"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xiaojielei"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xiaojielei"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xiaojielei"},"content":"     * Marks a task as done based on the input index.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xiaojielei"},"content":"     * @param input The user input containing the mark command and task index.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xiaojielei"},"content":"     * @throws DukeException If the input is invalid or the task index is out of bounds.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xiaojielei"},"content":"    public static void mark(String input) throws DukeException, IOException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xiaojielei"},"content":"        if (input.trim().equals(\"mark\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Oops! The description of a mark cannot be empty.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xiaojielei"},"content":"        int index \u003d Integer.parseInt(input.substring(5).trim()) - 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xiaojielei"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(tasks.get(index));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xiaojielei"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xiaojielei"},"content":"     * Marks a task as not done based on the input index.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xiaojielei"},"content":"     * @param input The user input containing the unmark command and task index.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xiaojielei"},"content":"     * @throws DukeException If the input is invalid or the task index is out of bounds.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xiaojielei"},"content":"    public static void unmark(String input) throws DukeException, IOException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xiaojielei"},"content":"        if (input.trim().equals(\"unmark\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Oops! The description of an unmark cannot be empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xiaojielei"},"content":"        int index \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xiaojielei"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(tasks.get(index));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xiaojielei"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xiaojielei"},"content":"     * Adds a new Todo task to the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xiaojielei"},"content":"     * @param input The user input containing the todo command and task description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xiaojielei"},"content":"     * @throws DukeException If the task description is empty.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xiaojielei"},"content":"    public static void todo(String input) throws DukeException, IOException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xiaojielei"},"content":"        if (input.trim().equals(\"todo\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Oops! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xiaojielei"},"content":"        Task newTask \u003d new Todo(input.substring(5).trim());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xiaojielei"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xiaojielei"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xiaojielei"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xiaojielei"},"content":"     * @param input The user input containing the deadline command, task description, and deadline.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xiaojielei"},"content":"     * @throws DukeException If the task description or deadline is empty.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xiaojielei"},"content":"    public static void deadline(String input) throws DukeException, IOException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xiaojielei"},"content":"        if (input.trim().equals(\"deadline\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Oops! The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xiaojielei"},"content":"        String[] parts \u003d input.substring(9).trim().split(\" /by \");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xiaojielei"},"content":"        Task newTask \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xiaojielei"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xiaojielei"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xiaojielei"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xiaojielei"},"content":"     * @param input The user input containing the event command, task description, start time, and end time.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xiaojielei"},"content":"     * @throws DukeException If the task description, start time, or end time is empty or the event format is invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xiaojielei"},"content":"    public static void event(String input) throws DukeException, IOException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xiaojielei"},"content":"        if (input.trim().equals(\"event\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Oops! The description of an event cannot be empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xiaojielei"},"content":"        if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Invalid event format! Use: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xiaojielei"},"content":"        String[] parts \u003d input.substring(6).trim().split(\" /from \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xiaojielei"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xiaojielei"},"content":"        Task newTask \u003d new Event(parts[0].trim(), timeParts[0].trim(), timeParts[1].trim());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xiaojielei"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xiaojielei"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"xiaojielei"},"content":"     * Deletes a task from the task list based on the input index.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"xiaojielei"},"content":"     * @param input The user input containing the delete command and task index.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"xiaojielei"},"content":"     * @throws DukeException If the input is invalid or the task index is out of bounds.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"xiaojielei"},"content":"    public static void deleteTask(String input) throws DukeException, IOException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"xiaojielei"},"content":"        if (input.trim().equals(\"delete\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Oops! The description of a delete cannot be empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"xiaojielei"},"content":"        int index \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"xiaojielei"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"Oops! The task number is invalid.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"xiaojielei"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"  \" + removedTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"xiaojielei"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"xiaojielei"},"content":"     * Saves the current task list to the file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"xiaojielei"},"content":"    private static void saveTasksToFile() throws IOException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"xiaojielei"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"xiaojielei"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"xiaojielei"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"xiaojielei"},"content":"                fw.write(\"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.description + System.lineSeparator());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"xiaojielei"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"xiaojielei"},"content":"                fw.write(\"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.description + \" | \" + ((Deadline) task).by + System.lineSeparator());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"xiaojielei"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"xiaojielei"},"content":"                fw.write(\"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.description + \" | \" + ((Event) task).from + \" | \" + ((Event) task).to + System.lineSeparator());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"xiaojielei"},"content":"            }        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"xiaojielei"},"content":"        fw.close();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"xiaojielei"},"content":"     * Loads the current task list to the file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"xiaojielei"},"content":"    private static void loadTasksFromFile() throws IOException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"xiaojielei"},"content":"        if (!DIRECTORY.exists()) DIRECTORY.mkdir();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"xiaojielei"},"content":"        if (!f.exists()) f.createNewFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"xiaojielei"},"content":"        Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"xiaojielei"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"xiaojielei"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"xiaojielei"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"xiaojielei"},"content":"            Task task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"xiaojielei"},"content":"            switch (parts[0]) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"xiaojielei"},"content":"            case \"T\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"xiaojielei"},"content":"                task \u003d new Todo(parts[2]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"xiaojielei"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"xiaojielei"},"content":"            case \"D\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"xiaojielei"},"content":"                task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"xiaojielei"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"xiaojielei"},"content":"            case \"E\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"xiaojielei"},"content":"                task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"xiaojielei"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"xiaojielei"},"content":"            default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"xiaojielei"},"content":"                continue;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"xiaojielei"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"xiaojielei"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"xiaojielei"},"content":"                task.markAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"xiaojielei"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"xiaojielei"},"content":"            tasks.add(task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"xiaojielei"},"content":"        scanner.close();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"xiaojielei"},"content":"     * Finds and lists tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"xiaojielei"},"content":"     * @param wordToFind The keyword to search for in task descriptions.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"xiaojielei"},"content":"     * @throws DukeException If no matching tasks are found.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"xiaojielei"},"content":"    public static void find(String wordToFind) throws DukeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"xiaojielei"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"xiaojielei"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"xiaojielei"},"content":"            if (task.description.contains(wordToFind)) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"xiaojielei"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"xiaojielei"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"xiaojielei"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"xiaojielei"},"content":"            throw new DukeException(\"No matching tasks found.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"xiaojielei"},"content":"        } else {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"xiaojielei"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"xiaojielei"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"xiaojielei"},"content":"                System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"xiaojielei"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"xiaojielei"},"content":"        printLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"xiaojielei"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"xiaojielei"},"content":"     * The main method that starts the Duke application.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"xiaojielei"},"content":"     * It loads tasks from a file, processes user commands, and saves tasks to a file on exit.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"xiaojielei"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"xiaojielei"},"content":"     * @param args The command line arguments (not used).","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"xiaojielei"},"content":"     * @throws IOException If an I/O error occurs during file operations.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"xiaojielei"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"xiaojielei"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"xiaojielei"},"content":"        loadTasksFromFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"xiaojielei"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"xiaojielei"},"content":"        System.out.println(\"Hello! I\u0027m Jerry\\n\" + \"What can I do for you?\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"xiaojielei"},"content":"        while (true) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"xiaojielei"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"xiaojielei"},"content":"            try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"xiaojielei"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"xiaojielei"},"content":"                    exit();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"xiaojielei"},"content":"                    saveTasksToFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"xiaojielei"},"content":"                    break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"xiaojielei"},"content":"                    list();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"xiaojielei"},"content":"                    mark(input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"xiaojielei"},"content":"                    saveTasksToFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"xiaojielei"},"content":"                    unmark(input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"xiaojielei"},"content":"                    saveTasksToFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"xiaojielei"},"content":"                    todo(input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"xiaojielei"},"content":"                    saveTasksToFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"xiaojielei"},"content":"                    deadline(input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"xiaojielei"},"content":"                    saveTasksToFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"xiaojielei"},"content":"                    event(input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"xiaojielei"},"content":"                    saveTasksToFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"xiaojielei"},"content":"                    deleteTask(input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"xiaojielei"},"content":"                    saveTasksToFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"xiaojielei"},"content":"                } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"xiaojielei"},"content":"                    String wordToFind \u003d input.substring(5);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"xiaojielei"},"content":"                    find(wordToFind);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"xiaojielei"},"content":"                } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"xiaojielei"},"content":"                    throw new DukeException(\"Sorry, I don\u0027t understand that command. Please try again.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"xiaojielei"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"xiaojielei"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"xiaojielei"},"content":"                printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"xiaojielei"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"xiaojielei"},"content":"                printLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"xiaojielei"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"xiaojielei"},"content":"        in.close();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"xiaojielei":316,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaojielei"},"content":"class Event extends Task {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xiaojielei"},"content":"    protected String from;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xiaojielei"},"content":"    protected String to;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xiaojielei"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xiaojielei"},"content":"        super(description);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xiaojielei"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xiaojielei"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xiaojielei"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xiaojielei"},"content":"    public String toString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xiaojielei"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xiaojielei"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"xiaojielei":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaojielei"},"content":"public class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xiaojielei"},"content":"    protected String description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xiaojielei"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xiaojielei"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xiaojielei"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xiaojielei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xiaojielei"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xiaojielei"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xiaojielei"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xiaojielei"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xiaojielei"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xiaojielei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xiaojielei"},"content":"   public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xiaojielei"},"content":"        return  \"[ ][\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xiaojielei"},"content":"   }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xiaojielei"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"xiaojielei":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaojielei"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xiaojielei"},"content":"    private String description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xiaojielei"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xiaojielei"},"content":"        super(description);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xiaojielei"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xiaojielei"},"content":"        return description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xiaojielei"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xiaojielei"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xiaojielei"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xiaojielei"},"content":"    public String toString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xiaojielei"},"content":"        if (!super.toString().contains(\"X\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xiaojielei"},"content":"            return super.toString().replace(\"[ ][ ]\", \"[T][ ]\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xiaojielei"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xiaojielei"},"content":"            return super.toString().replace(\"[ ]\", \"[T]\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xiaojielei"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xiaojielei"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xiaojielei"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"xiaojielei":23}}]
