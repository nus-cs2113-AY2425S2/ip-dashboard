[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"# BOB project template","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"1. After that, locate the `src/main/java/BOB.java` file, right-click it, and choose `Run BOB.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"xyanjun02":2,"-":24}},{"path":"data/bob.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"T | X | ride a bike","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"E |   | tutorial | 1900 | 2000","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"T |   | BIKE","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"# Bob Chatbot User Guide","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"Welcome to **Bob**, your friendly task management chatbot! Bob helps you keep track of your tasks with ease. This guide will provide you with all the information you need to use Bob\u0027s features effectively.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"## üöÄ Quick Start","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"1. **Ensure Java is installed** on your computer.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"2. **Download** the latest version of `Bob.jar` from [GitHub Releases](https://github.com/yourusername/bob/releases).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"3. **Run Bob** from the terminal with the following command:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"java -jar Bob.jar","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"4. You should see a welcome message. You can start entering commands to manage your tasks!","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"## ‚ú® Features","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"### üìù Adding Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"Bob supports three types of tasks:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"#### 1. Todo","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"Adds a simple task without a date.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xyanjun02"},"content":"todo read book","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xyanjun02"},"content":"üí° **Tip:** Use clear and concise descriptions for better task management.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xyanjun02"},"content":"#### 2. Deadline","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xyanjun02"},"content":"Adds a task with a specific due date.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xyanjun02"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xyanjun02"},"content":"deadline TASK_DESCRIPTION /by DUE_DATE","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xyanjun02"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xyanjun02"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xyanjun02"},"content":"#### 3. Event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xyanjun02"},"content":"Adds a task that occurs during a specific period.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xyanjun02"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xyanjun02"},"content":"event TASK_DESCRIPTION /from START_TIME /to END_TIME","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xyanjun02"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xyanjun02"},"content":"event project meeting /from 2pm /to 4pm","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xyanjun02"},"content":"### üìã Listing All Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xyanjun02"},"content":"Displays all tasks in your list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xyanjun02"},"content":"**Command:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xyanjun02"},"content":"list","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xyanjun02"},"content":"### ‚úÖ Marking Tasks as Done","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xyanjun02"},"content":"Marks a task as completed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xyanjun02"},"content":"**Command:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xyanjun02"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xyanjun02"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xyanjun02"},"content":"mark 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xyanjun02"},"content":"### ‚ùå Unmarking Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xyanjun02"},"content":"Marks a task as not completed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xyanjun02"},"content":"**Command:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xyanjun02"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xyanjun02"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xyanjun02"},"content":"unmark 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xyanjun02"},"content":"### üóëÔ∏è Deleting Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xyanjun02"},"content":"Removes a task from your list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xyanjun02"},"content":"**Command:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xyanjun02"},"content":"delete TASK_NUMBER","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xyanjun02"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xyanjun02"},"content":"delete 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xyanjun02"},"content":"### üîç Finding Tasks by Keyword","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xyanjun02"},"content":"Searches for tasks containing a specific keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xyanjun02"},"content":"**Command:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xyanjun02"},"content":"find KEYWORD","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xyanjun02"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xyanjun02"},"content":"find book","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xyanjun02"},"content":"### üö™ Exiting the Application","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xyanjun02"},"content":"Closes Bob with a friendly message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xyanjun02"},"content":"**Command:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xyanjun02"},"content":"```bash","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xyanjun02"},"content":"bye","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xyanjun02"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xyanjun02"},"content":"## üíæ Saving Data","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xyanjun02"},"content":"Bob automatically saves your tasks to a file after any changes. Your data will be loaded automatically when you start Bob again.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xyanjun02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xyanjun02"},"content":"## üõ†Ô∏è Troubleshooting","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xyanjun02"},"content":"- **Invalid Input:** If you enter an unrecognized command, Bob will prompt you with a helpful message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xyanjun02"},"content":"- **Out of Range:** If a task number is invalid, Bob will let you know.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":148,"-":16}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"// AddCommand class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" * The {@code AddCommand} class handles adding new tasks to the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"    private final String[] parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * Constructs an {@code AddCommand} with the specified input parts.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     * @param parts An array of strings where the first element is the command and the second is the task details.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"    public AddCommand(String[] parts) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        this.parts \u003d parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"    public boolean execute(ArrayList\u003cTask\u003e tasks) throws BobException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"            throw new BobException(\" Please provide a task description.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"        String details \u003d parts[1];","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"        Task newTask;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"        switch (command) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"            case \"todo\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"                newTask \u003d new Todo(details);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"                break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"            case \"deadline\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"                String[] deadlineParts \u003d details.split(\" /by \", 2);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"                if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"                    throw new BobException(\" Sorry I don\u0027t really understand what you mean! üòï Use: deadline \u003ctask\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xyanjun02"},"content":"                newTask \u003d new Deadline(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xyanjun02"},"content":"                break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xyanjun02"},"content":"            case \"event\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xyanjun02"},"content":"                String[] eventParts \u003d details.split(\" /from | /to \", 3);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xyanjun02"},"content":"                if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xyanjun02"},"content":"                    throw new BobException(\" Sorry I don\u0027t really understand what you mean! üòï Use: event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xyanjun02"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xyanjun02"},"content":"                newTask \u003d new Event(eventParts[0], eventParts[1], eventParts[2]);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xyanjun02"},"content":"                break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xyanjun02"},"content":"            default:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xyanjun02"},"content":"                throw new BobException(\" Unknown task type.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xyanjun02"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"   \" + newTask);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xyanjun02"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":54}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":"// Bob class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" * The {@code Bob} class is the main application class for the Bob task manager.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":" * It handles the initialization of components, the main application loop, and","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":" * facilitates user interactions through the {@code Ui} class.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"public class Bob {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"    private static final String FILE_PATH \u003d \"data/bob.txt\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        tasks.addAll(Storage.loadTasks(FILE_PATH));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"            try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"                String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"                if (input.isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"                    throw new BobException(Ui.ERROR_EMPTY_INPUT);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"                isExit \u003d command.execute(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"                Storage.saveTasks(tasks, FILE_PATH);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"            } catch (BobException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"xyanjun02":35}},{"path":"src/main/java/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":" * BobException is a custom exception class specific to the Bob chatbot.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":" * It is used to handle errors related to user commands, input validation,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" * and other chatbot-specific issues.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"public class BobException extends Exception{","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"    public BobException(String message){","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"        super(message);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"xyanjun02":11}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"// Command class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" * The {@code Command} class is an abstract class for handling user commands.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" * It defines the structure for executing specific commands on the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     * Executes the command using the provided list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks to modify.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     * @return true if the application should exit, false otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     * @throws BobException if an error occurs during command execution.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"    public abstract boolean execute(ArrayList\u003cTask\u003e tasks) throws BobException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":18}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"// Deadline class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":" * The {@code Deadline} class represents a task that has a specific due date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"    private final String by;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"     * Constructs a {@code Deadline} task with a description and a due date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     * @param by The due date of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"        return \"D | \" + getStatusIcon() + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":28}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"// DeleteCommand class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" * The {@code DeleteCommand} class handles the \"delete\" command to remove a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"    private final String[] parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     * Constructs a {@code DeleteCommand} with the specified input parts.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     * @param parts An array of strings where the second element is the task index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"    public DeleteCommand(String[] parts) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"        this.parts \u003d parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"     * Executes the delete command by removing a task from the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks to modify.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"     * @throws BobException if the task index is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"    public boolean execute(ArrayList\u003cTask\u003e tasks) throws BobException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"        int index \u003d Ui.parseTaskIndex(parts, tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"   \" + removedTask);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":34}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"// Event class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":" * The {@code Event} class represents a task that occurs within a specific time range.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"    private final String from;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"    private final String to;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     * Constructs an {@code Event} task with a description and a time range.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"        return \"E | \" + getStatusIcon() + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":31}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"// ExitCommand class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" * The {@code ExitCommand} class handles the \"bye\" command, terminating the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"     * Executes the exit command by displaying a goodbye message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks (unused in this command).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * @return true to indicate the application should exit.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"    public boolean execute(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        return true;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":18}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"// FindCommand class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" * The {@code FindCommand} class implements the functionality to search for tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" * containing a specific keyword in their description. It filters tasks based on","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" * a case-insensitive search and displays the matching tasks to the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"    private final String keyword;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     * Constructs a FindCommand with the specified input parts.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     * @param parts An array of strings where the second element is the search keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"     * @throws BobException if the search keyword is not provided or is empty.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"    public FindCommand(String[] parts) throws BobException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"            throw new BobException(\" Please specify a keyword to search for.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"        this.keyword \u003d parts[1].trim().toLowerCase();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"     * Executes the find command by searching through the task list for matching","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"     * descriptions. Displays all tasks containing the keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks to search through.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"    public boolean execute(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"        Ui.printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xyanjun02"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xyanjun02"},"content":"            if (task.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xyanjun02"},"content":"                System.out.println(\" \" + index + \".\" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xyanjun02"},"content":"                index++;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xyanjun02"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xyanjun02"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xyanjun02"},"content":"            System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xyanjun02"},"content":"        Ui.printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xyanjun02"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":48}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"// ListCommand class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" * The {@code ListCommand} class handles the \"list\" command to display all tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"     * Executes the list command by displaying all tasks in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"    public boolean execute(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"        Ui.printTaskList(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":18}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"// MarkCommand class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" * The {@code MarkCommand} class handles the \"mark\" command to mark a task as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"    private final String[] parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * Constructs a {@code MarkCommand} with the specified input parts.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     * @param parts An array of strings where the second element is the task index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"    public MarkCommand(String[] parts) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        this.parts \u003d parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"     * Executes the mark command by marking a task as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks to update.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"     * @throws BobException if the task index is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"    public boolean execute(ArrayList\u003cTask\u003e tasks) throws BobException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"        int index \u003d Ui.parseTaskIndex(parts, tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"   \" + tasks.get(index));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":34}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"// Parser class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":" * The {@code Parser} class is responsible for interpreting user input","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" * and creating the appropriate {@code Command} object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"public class Parser {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"     * Parses the user input and returns the corresponding {@code Command} object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     * @param input The full input string entered by the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * @return The {@code Command} object to execute.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     * @throws BobException if the input command is not recognized.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"    public static Command parse(String input) throws BobException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"        return switch (command) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"            case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"            case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"            case \"mark\" -\u003e new MarkCommand(parts);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"            case \"unmark\" -\u003e new UnmarkCommand(parts);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"            case \"todo\", \"deadline\", \"event\" -\u003e new AddCommand(parts);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"            case \"delete\" -\u003e new DeleteCommand(parts);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"            case \"find\" -\u003e new FindCommand(parts);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"            default -\u003e throw new BobException(\" What that mean? Use \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027delete\u0027, \u0027list\u0027, or \u0027find\u0027.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"        };","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":29}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.io.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":"// Storage class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" * The {@code Storage} class is responsible for saving and loading tasks from a file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"public class Storage {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     * Saves the list of tasks to the specified file path.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     * @param filePath The file path to save the tasks to.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks, String filePath) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"            if (!file.getParentFile().exists() \u0026\u0026 !file.getParentFile().mkdirs()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"                System.out.println(\"Failed to create directories for file path: \" + filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"                return;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"            try (PrintWriter writer \u003d new PrintWriter(file)) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"                    writer.println(task.toFileFormat());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"     * Loads the list of tasks from the specified file path.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"     * @param filePath The file path to load the tasks from.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xyanjun02"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xyanjun02"},"content":"    public static ArrayList\u003cTask\u003e loadTasks(String filePath) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xyanjun02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xyanjun02"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xyanjun02"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xyanjun02"},"content":"            return tasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xyanjun02"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xyanjun02"},"content":"            String line;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xyanjun02"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xyanjun02"},"content":"                tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xyanjun02"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xyanjun02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xyanjun02"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xyanjun02"},"content":"        return tasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"xyanjun02":55}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"// Task class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":" * The {@code Task} class is an abstract base class for all task types.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" * It provides common functionality for managing task descriptions and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"    protected String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"     * Returns the status icon representing completion (\u0027X\u0027 if done, \u0027 \u0027 if not).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xyanjun02"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xyanjun02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xyanjun02"},"content":"        return isDone ? \"X\" : \" \";  // Display \u0027X\u0027 when done, otherwise a blank space","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xyanjun02"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xyanjun02"},"content":"     * @return The task description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xyanjun02"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xyanjun02"},"content":"        return description;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xyanjun02"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xyanjun02"},"content":"        return getDescription();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xyanjun02"},"content":"     * Converts the task to a savable string format.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xyanjun02"},"content":"     * @return The formatted string for saving the task to a file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xyanjun02"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xyanjun02"},"content":"     * Converts a string from file format to a {@code Task} object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xyanjun02"},"content":"     * @param line The line from the saved file representing a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xyanjun02"},"content":"     * @return The reconstructed {@code Task} object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xyanjun02"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xyanjun02"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xyanjun02"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xyanjun02"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xyanjun02"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xyanjun02"},"content":"        switch (type) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xyanjun02"},"content":"            case \"T\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xyanjun02"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xyanjun02"},"content":"                if (isDone) todo.markAsDone();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xyanjun02"},"content":"                return todo;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xyanjun02"},"content":"            case \"D\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xyanjun02"},"content":"                Deadline deadline \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xyanjun02"},"content":"                if (isDone) deadline.markAsDone();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xyanjun02"},"content":"                return deadline;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xyanjun02"},"content":"            case \"E\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xyanjun02"},"content":"                Event event \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xyanjun02"},"content":"                if (isDone) event.markAsDone();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xyanjun02"},"content":"                return event;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xyanjun02"},"content":"            default:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xyanjun02"},"content":"                throw new IllegalArgumentException(\"Invalid task format.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":93}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"// Todo class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":" * The {@code Todo} class represents a simple task with only a description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"     * Constructs a {@code Todo} task with the given description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"        return \"T | \" + getStatusIcon() + \" | \" + description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":25}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"// Ui class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" * The {@code Ui} class handles all user interactions, including reading input and displaying output.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" * It provides methods for showing messages, task lists, and error handling.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"public class Ui {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"    public static final String ERROR_EMPTY_INPUT \u003d \"Input cannot be empty. Please enter a command.\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"    public static final String ERROR_OUT_OF_RANGE \u003d \"Sorry, that is out of range! Please enter a valid task number.\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"    public static void printDivider() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"        printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" Bye! Hope to see you again soon! üòÄ\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" - BOB\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"        printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"        printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" Hello! I\u0027m BOB\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" What can I do for you? üòÄ\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"        printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"    public static int parseTaskIndex(String[] parts, ArrayList\u003cTask\u003e tasks) throws BobException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"            throw new BobException(\"Please specify a task number.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xyanjun02"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xyanjun02"},"content":"                throw new BobException(ERROR_OUT_OF_RANGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xyanjun02"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xyanjun02"},"content":"            return index;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xyanjun02"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xyanjun02"},"content":"            throw new BobException(\"Please enter a valid numeric task number.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xyanjun02"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xyanjun02"},"content":"        printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xyanjun02"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xyanjun02"},"content":"            System.out.println(\" No tasks added yet.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xyanjun02"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xyanjun02"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xyanjun02"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xyanjun02"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xyanjun02"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xyanjun02"},"content":"        printDivider();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":57}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyanjun02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xyanjun02"},"content":"// UnmarkCommand class","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xyanjun02"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xyanjun02"},"content":" * The {@code UnmarkCommand} class handles the \"unmark\" command to mark a task as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xyanjun02"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xyanjun02"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xyanjun02"},"content":"    private final String[] parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xyanjun02"},"content":"     * Constructs an {@code UnmarkCommand} with the specified input parts.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xyanjun02"},"content":"     * @param parts An array of strings where the second element is the task index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xyanjun02"},"content":"    public UnmarkCommand(String[] parts) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xyanjun02"},"content":"        this.parts \u003d parts;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xyanjun02"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xyanjun02"},"content":"     * Executes the unmark command by marking a task as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xyanjun02"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xyanjun02"},"content":"     * @param tasks The list of tasks to update.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xyanjun02"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xyanjun02"},"content":"     * @throws BobException if the task index is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xyanjun02"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xyanjun02"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xyanjun02"},"content":"    public boolean execute(ArrayList\u003cTask\u003e tasks) throws BobException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xyanjun02"},"content":"        int index \u003d Ui.parseTaskIndex(parts, tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xyanjun02"},"content":"        tasks.get(index).unmarkAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xyanjun02"},"content":"        System.out.println(\"   \" + tasks.get(index));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xyanjun02"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xyanjun02"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xyanjun02"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xyanjun02"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xyanjun02":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xyanjun02"},"content":"java -classpath ..\\bin BOB \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"xyanjun02":1,"-":20}}]
