[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"# Juke User Guide","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"This guide provides an overview of the commands and features available in our todo list assistant, \"Juke\"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"## Table of Contents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"1. [Overview](#overview)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"2. [Installation](#installation)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"3. [Usage](#usage)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"   - [Adding Tasks](#adding-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"   - [Managing Tasks](#managing-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"   - [Searching Tasks](#searching-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"4. [Commands Reference](#commands-reference)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"## Overview","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"This application is a task manager that supports adding, listing, marking, unmarking, deleting, and searching tasks. Tasks are of three types:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"- Todo","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"- Deadline","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"- Event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"## Installation","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"1. Ensure you have Java installed (Java 17 preferred).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"2. Download the latest JAR file from the repository\u0027s release page","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"3. Open Powershell or Command Prompt in the same directory where the JAR file is saved","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"4. Run the program with the command `java -jar Juke.jar`\u0027","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"5. You should see the following output `Hello! I\u0027m Juke Excited to talk to you! :)`","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"## Usage","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"### Adding Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"- **Todo:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"  `todo Buy groceries`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"  Adds a new todo task with the description \"Buy groceries\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"- **Deadline:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"  `deadline Submit report /by 2023-12-31`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"  Adds a deadline task with the description \"Submit report\" and deadline \"2023-12-31\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"- **Event:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"  `event Conference /from 2023-12-01 /to 2023-12-03`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"  Adds an event with the description \"Conference\" starting on \"2023-12-01\" and ending on \"2023-12-03\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"### Managing Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"- **Mark Task as Completed:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"  `mark 1`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"  Marks task number 1 as completed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"- **Unmark Task:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"  `unmark 1`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"  Marks task number 1 as incomplete.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"- **Delete Task:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"  `delete 1`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"  Deletes task number 1.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"- **List Tasks:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"  `list`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"  Displays all tasks in the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"- **Clear Task List:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"  `clear`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"  Clears all tasks from the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"- **Exit Application:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"  `bye`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"  Exits the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"### Searching Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"- **Search:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ecxm02"},"content":"  `search keyword`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ecxm02"},"content":"  Searches for tasks containing the specified keyword in the description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ecxm02"},"content":"## Commands Reference","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ecxm02"},"content":"| Command            | Format                                           | Description                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ecxm02"},"content":"| ------------------ | ------------------------------------------------ | ------------------------------------------------ |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ecxm02"},"content":"| **todo**           | `todo \u003ctask description\u003e`                        | Adds a new todo task.                            |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ecxm02"},"content":"| **deadline**       | `deadline \u003ctask description\u003e /by \u003cyyyy-MM-dd\u003e`   | Adds a new deadline task.                        |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ecxm02"},"content":"| **event**          | `event \u003ctask description\u003e /from \u003cyyyy-MM-dd\u003e /to \u003cyyyy-MM-dd\u003e` | Adds a new event task.                   |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ecxm02"},"content":"| **mark**           | `mark \u003ctask number\u003e`                             | Marks a task as completed.                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ecxm02"},"content":"| **unmark**         | `unmark \u003ctask number\u003e`                           | Marks a task as incomplete.                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ecxm02"},"content":"| **delete**         | `delete \u003ctask number\u003e`                           | Deletes a task from the list.                    |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ecxm02"},"content":"| **list**           | `list`                                           | Lists all tasks.                                 |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ecxm02"},"content":"| **search**         | `search \u003ckeyword\u003e`                               | Searches tasks by keyword.                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ecxm02"},"content":"| **clear**          | `clear`                                          | Clears the task list.                            |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ecxm02"},"content":"| **bye**            | `bye`                                            | Exits the application.                           |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ecxm02"},"content":"| **help**           | `help`                                           | Displays help information.                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ecxm02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ecxm02"},"content":"This user guide helps you understand the application\u0027s basic functionality and how to interact with it using the provided commands.","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"ecxm02":90,"-":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"# Juke User Guide","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"This guide provides an overview of the commands and features available in our todo list assistant, \"Juke\"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"## Table of Contents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"1. [Overview](#overview)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"2. [Installation](#installation)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"3. [Usage](#usage)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"   - [Adding Tasks](#adding-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"   - [Managing Tasks](#managing-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"   - [Searching Tasks](#searching-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"4. [Commands Reference](#commands-reference)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"## Overview","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"This application is a task manager that supports adding, listing, marking, unmarking, deleting, and searching tasks. Tasks are of three types:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"- Todo","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"- Deadline","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"- Event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"## Installation","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"1. Ensure you have Java installed (Java 17 preferred).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"2. Download the latest JAR file from the repository\u0027s release page","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"3. Open Powershell or Command Prompt in the same directory where the JAR file is saved","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"4. Run the program with the command `java -jar Juke.jar`\u0027","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"5. You should see the following output `Hello! I\u0027m Juke Excited to talk to you! :)`","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"## Usage","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"### Adding Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"- **Todo:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"  `todo Buy groceries`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"  Adds a new todo task with the description \"Buy groceries\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"- **Deadline:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"  `deadline Submit report /by 2023-12-31`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"  Adds a deadline task with the description \"Submit report\" and deadline \"2023-12-31\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"- **Event:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"  `event Conference /from 2023-12-01 /to 2023-12-03`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"  Adds an event with the description \"Conference\" starting on \"2023-12-01\" and ending on \"2023-12-03\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"### Managing Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"- **Mark Task as Completed:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"  `mark 1`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"  Marks task number 1 as completed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"- **Unmark Task:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"  `unmark 1`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"  Marks task number 1 as incomplete.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"- **Delete Task:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"  `delete 1`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"  Deletes task number 1.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"- **List Tasks:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"  `list`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"  Displays all tasks in the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"- **Clear Task List:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"  `clear`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"  Clears all tasks from the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"- **Exit Application:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"  `bye`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"  Exits the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"### Searching Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"- **Search:**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ecxm02"},"content":"  `search keyword`  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ecxm02"},"content":"  Searches for tasks containing the specified keyword in the description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ecxm02"},"content":"## Commands Reference","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ecxm02"},"content":"| Command            | Format                                           | Description                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ecxm02"},"content":"| ------------------ | ------------------------------------------------ | ------------------------------------------------ |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ecxm02"},"content":"| **todo**           | `todo \u003ctask description\u003e`                        | Adds a new todo task.                            |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ecxm02"},"content":"| **deadline**       | `deadline \u003ctask description\u003e /by \u003cyyyy-MM-dd\u003e`   | Adds a new deadline task.                        |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ecxm02"},"content":"| **event**          | `event \u003ctask description\u003e /from \u003cyyyy-MM-dd\u003e /to \u003cyyyy-MM-dd\u003e` | Adds a new event task.                   |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ecxm02"},"content":"| **mark**           | `mark \u003ctask number\u003e`                             | Marks a task as completed.                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ecxm02"},"content":"| **unmark**         | `unmark \u003ctask number\u003e`                           | Marks a task as incomplete.                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ecxm02"},"content":"| **delete**         | `delete \u003ctask number\u003e`                           | Deletes a task from the list.                    |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ecxm02"},"content":"| **list**           | `list`                                           | Lists all tasks.                                 |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ecxm02"},"content":"| **search**         | `search \u003ckeyword\u003e`                               | Searches tasks by keyword.                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ecxm02"},"content":"| **clear**          | `clear`                                          | Clears the task list.                            |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ecxm02"},"content":"| **bye**            | `bye`                                            | Exits the application.                           |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ecxm02"},"content":"| **help**           | `help`                                           | Displays help information.                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ecxm02"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ecxm02"},"content":"This user guide helps you understand the application\u0027s basic functionality and how to interact with it using the provided commands.","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"ecxm02":81,"-":14}},{"path":"src/main/java/juke/exception/DateParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class DateParserException extends RuntimeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public DateParserException() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.DATE_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/DeadlineParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class DeadlineParserException extends RuntimeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public DeadlineParserException() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.DEADLINE_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/DeleteParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class DeleteParserException extends RuntimeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public DeleteParserException() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.DELETE_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/EventParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class EventParserException extends RuntimeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public EventParserException() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.EVENT_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/FindParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class FindParserException extends RuntimeException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public FindParserException() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.FIND_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/MarkParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class MarkParserException extends RuntimeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public MarkParserException(){","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.MARK_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/TaskIndexOutOfBounds.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class TaskIndexOutOfBounds extends RuntimeException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public TaskIndexOutOfBounds() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.TASK_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/TodoParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class TodoParserException extends RuntimeException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public TodoParserException() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.TODO_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/exception/UnmarkParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.exception;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"public class UnmarkParserException extends RuntimeException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"    public UnmarkParserException(){","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"        super(Constants.UNMARK_PARSER_EXCEPTION);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"src/main/java/juke/input/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.input;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.task.TaskManager;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"import juke.main.Juke;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":" * The `InputHandler` class is responsible for handling user input by parsing the text and executing the corresponding commands.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"public class InputHandler {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"    private static String textInput;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"    private InputHandler() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"     * Reads and processes the input text.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"     * @param textInput the input text to be processed","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"    public static void readText(String textInput) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"        Parser.cleanText(textInput);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"        respondToText(Parser.getInputCommand(), Parser.getTaskName(), Parser.getTaskIndex(),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"                Parser.getDeadline(), Parser.getFrom(), Parser.getTo());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"     * Responds to the parsed input command by executing the appropriate method.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"     * @param inputCommand the parsed command","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"     * @param taskName     the name of the task (if applicable)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"     * @param taskIndex    the index of the task (if applicable)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"     * @param deadline     the deadline of the task (if applicable)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"     * @param from         the start date of the event (if applicable)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"     * @param to           the end date of the event (if applicable)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"    public static void respondToText(String inputCommand, String taskName, int taskIndex,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"                                     LocalDate deadline, LocalDate from, LocalDate to) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"        switch (inputCommand) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"            Juke.endProgram();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"        case \"list\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"            TaskManager.listTask();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"            TaskManager.addTodo(taskName);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"            TaskManager.addDeadline(taskName, deadline);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"        case \"event\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"            TaskManager.addEvent(taskName, from, to);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"            TaskManager.markTask(taskIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"            TaskManager.unmarkTask(taskIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"        case \"clear\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"            TaskManager.clearTaskList();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"            TaskManager.deleteTask(taskIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"        case \"find\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"            TaskManager.findTask(taskName);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"        case \"help\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ecxm02"},"content":"            System.out.println(Constants.HELP_MESSAGE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ecxm02"},"content":"        default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Invalid Command, type \u0027help\u0027 for a list of commands\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ecxm02"},"content":"        System.out.println(Constants.LINE_BREAK);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ecxm02":81}},{"path":"src/main/java/juke/input/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.input;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.exception.*;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"import juke.task.TaskManager;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":" * The `Parser` class is responsible for parsing and validating user input commands.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":" * It cleans the input text, determines the command, and extracts the necessary parameters.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":" * This class also handles exceptions related to incorrect command formats.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"public class Parser {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"    private static String textInput;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"    private static String inputCommand \u003d \"invalid\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"    private static String taskName;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"    private static String taskNumber;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"    private static int taskIndex;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"    private static LocalDate deadline;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"    private static LocalDate from;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"    private static LocalDate to;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"    private Parser() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"     * Cleans and parses the input text to determine the command and its parameters.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"     * @param text the input text to be parsed","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"    public static void cleanText(String text) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"        resetVariables();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"        textInput \u003d text;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"        if (textInput.startsWith(\"mark\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"            cleanUpMark();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"unmark\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"            cleanUpUnmark();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"            cleanUpTodo();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"            cleanUpDeadline();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"event\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"            cleanUpEvent();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"            cleanUpDelete();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"find\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"            cleanUpFind();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"list\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"list\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"bye\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"bye\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"clear\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"clear\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"        } else if (textInput.startsWith(\"help\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"help\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"     * Parses and validates the \u0027mark\u0027 command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"     * @throws MarkParserException if the input does not match the expected format","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"    private static void cleanUpMark() throws MarkParserException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"        Pattern pattern \u003d Pattern.compile(Constants.MARK_REGEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"        Matcher matcher \u003d pattern.matcher(textInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"            taskNumber \u003d matcher.group(1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"            taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ecxm02"},"content":"            if (TaskManager.getSize() \u003c\u003d taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ecxm02"},"content":"                throw new TaskIndexOutOfBounds();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"mark\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ecxm02"},"content":"            throw new MarkParserException();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ecxm02"},"content":"     * Parses and validates the \u0027unmark\u0027 command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ecxm02"},"content":"     * @throws UnmarkParserException if the input does not match the expected format","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ecxm02"},"content":"    private static void cleanUpUnmark() throws UnmarkParserException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ecxm02"},"content":"        Pattern pattern \u003d Pattern.compile(Constants.UNMARK_REGEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ecxm02"},"content":"        Matcher matcher \u003d pattern.matcher(textInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ecxm02"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ecxm02"},"content":"            taskNumber \u003d matcher.group(1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ecxm02"},"content":"            taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ecxm02"},"content":"            if (TaskManager.getSize() \u003c\u003d taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ecxm02"},"content":"                throw new TaskIndexOutOfBounds();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"unmark\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ecxm02"},"content":"            throw new UnmarkParserException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ecxm02"},"content":"     * Parses and validates the \u0027todo\u0027 command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ecxm02"},"content":"     * @throws TodoParserException if the input does not match the expected format","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ecxm02"},"content":"    private static void cleanUpTodo() throws TodoParserException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ecxm02"},"content":"        Pattern pattern \u003d Pattern.compile(Constants.TODO_REGEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ecxm02"},"content":"        Matcher matcher \u003d pattern.matcher(textInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ecxm02"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ecxm02"},"content":"            taskName \u003d matcher.group(1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"todo\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ecxm02"},"content":"            throw new TodoParserException();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ecxm02"},"content":"     * Parses and validates the \u0027deadline\u0027 command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ecxm02"},"content":"     * @throws DeadlineParserException if the input does not match the expected format","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ecxm02"},"content":"    private static void cleanUpDeadline() throws DeadlineParserException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ecxm02"},"content":"        Pattern pattern \u003d Pattern.compile(Constants.DEADLINE_REGEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ecxm02"},"content":"        Matcher matcher \u003d pattern.matcher(textInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ecxm02"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ecxm02"},"content":"            taskName \u003d matcher.group(1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ecxm02"},"content":"            String deadlineString \u003d matcher.group(2);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ecxm02"},"content":"            try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ecxm02"},"content":"                deadline \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ecxm02"},"content":"                inputCommand \u003d \"deadline\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ecxm02"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ecxm02"},"content":"                throw new DateParserException();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ecxm02"},"content":"            throw new DeadlineParserException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ecxm02"},"content":"     * Parses and validates the \u0027event\u0027 command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ecxm02"},"content":"     * @throws EventParserException if the input does not match the expected format","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ecxm02"},"content":"    private static void cleanUpEvent() throws EventParserException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ecxm02"},"content":"        Pattern pattern \u003d Pattern.compile(Constants.EVENT_REGEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ecxm02"},"content":"        Matcher matcher \u003d pattern.matcher(textInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ecxm02"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ecxm02"},"content":"            taskName \u003d matcher.group(1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ecxm02"},"content":"            String fromString \u003d matcher.group(2);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ecxm02"},"content":"            String toString \u003d matcher.group(3);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ecxm02"},"content":"            try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ecxm02"},"content":"                from \u003d LocalDate.parse(fromString);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ecxm02"},"content":"                to \u003d LocalDate.parse(toString);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ecxm02"},"content":"                inputCommand \u003d \"event\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ecxm02"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ecxm02"},"content":"                throw new DateParserException();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ecxm02"},"content":"            throw new EventParserException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ecxm02"},"content":"     * Parses and validates the \u0027delete\u0027 command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ecxm02"},"content":"     * @throws DeleteParserException if the input does not match the expected format","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ecxm02"},"content":"    private static void cleanUpDelete() throws DeleteParserException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ecxm02"},"content":"        Pattern pattern \u003d Pattern.compile(Constants.DELETE_REGEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ecxm02"},"content":"        Matcher matcher \u003d pattern.matcher(textInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ecxm02"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ecxm02"},"content":"            taskNumber \u003d matcher.group(1);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ecxm02"},"content":"            taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ecxm02"},"content":"            if (TaskManager.getSize() \u003c\u003d taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ecxm02"},"content":"                throw new TaskIndexOutOfBounds();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"delete\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ecxm02"},"content":"            throw new DeleteParserException();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ecxm02"},"content":"     * Parses and validates the \u0027find\u0027 command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ecxm02"},"content":"     * @throws FindParserException if the input does not match the expected format","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ecxm02"},"content":"    private static void cleanUpFind() throws FindParserException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ecxm02"},"content":"        Pattern pattern \u003d Pattern.compile(Constants.FIND_REGEX);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ecxm02"},"content":"        Matcher matcher \u003d pattern.matcher(textInput);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ecxm02"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ecxm02"},"content":"            taskName \u003d matcher.group(1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ecxm02"},"content":"            inputCommand \u003d \"find\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ecxm02"},"content":"            throw new FindParserException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ecxm02"},"content":"     * Resets all parser variables to their default values.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ecxm02"},"content":"    private static void resetVariables() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ecxm02"},"content":"        inputCommand \u003d \"invalid\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ecxm02"},"content":"        taskName \u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ecxm02"},"content":"        taskNumber \u003d null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ecxm02"},"content":"        taskIndex \u003d -1;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ecxm02"},"content":"        deadline \u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ecxm02"},"content":"        from \u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ecxm02"},"content":"        to \u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ecxm02"},"content":"    public static String getInputCommand() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ecxm02"},"content":"        return inputCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ecxm02"},"content":"    public static int getTaskIndex() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ecxm02"},"content":"        return taskIndex;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ecxm02"},"content":"    public static String getTaskName() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ecxm02"},"content":"        return taskName;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ecxm02"},"content":"    public static LocalDate getDeadline() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ecxm02"},"content":"        return deadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ecxm02"},"content":"    public static LocalDate getFrom() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ecxm02"},"content":"        return from;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ecxm02"},"content":"    public static LocalDate getTo() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ecxm02"},"content":"        return to;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"ecxm02":238}},{"path":"src/main/java/juke/input/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.input;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":" * The `Ui` class handles user interaction, including displaying messages and reading input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"public class Ui {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"    private Ui() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"    private static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"    private static String text;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"     * Displays the introductory message and help message to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"    public static void introMessage() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"        System.out.println(Constants.INTRO_MESSAGE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"        System.out.print(Constants.HELP_MESSAGE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"        System.out.println(Constants.LINE_BREAK + System.lineSeparator());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"     * Displays the end program message to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"    public static void endProgramMessage() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"        System.out.println(Constants.END_MESSAGE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"     * Reads input from the user and passes it to the InputHandler.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"    public static void readInput() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"        text \u003d input.nextLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"        InputHandler.readText(text);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"     * Closes the input scanner.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"    public static void closeInput() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"        input.close();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":47}},{"path":"src/main/java/juke/main/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.main;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":" * The `Constants` class holds all the constant values used throughout the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":" * This includes messages, file paths, regular expressions, and error messages.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"public class Constants {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"    private Constants() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"    public static final String LINE_BREAK \u003d \"---------------------------------------------------\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"    public static final String SAVE_FILE_PATH \u003d \"save\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"    public static final String SAVE_FILE_NAME \u003d \"save/jukeSaveFile.txt\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"    public static final String END_MESSAGE \u003d \"Bye! See you again!\" + System.lineSeparator();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"    public static final String INTRO_MESSAGE \u003d \"Hello! I\u0027m Juke\" + System.lineSeparator()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"            + \"Excited to talk to you! :)\" + System.lineSeparator() + System.lineSeparator();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"     * The help message displayed to the user, listing all available commands and their formats.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"    public static final String HELP_MESSAGE \u003d \"Here are the available commands!\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"            \"** [Deadline], [Event] and [Task] need to be in standard form [YYYY-MM-DD] **\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"            \"1. To add a normal Task\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"            \"\u0027todo\u0027 + [Task Name]\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"            \"2. To add a Deadline\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"            \"\u0027deadline\u0027 + [Task Name] + \u0027/by\u0027 + [Deadline]\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"            \"3. To add an Event\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"            \"\u0027event\u0027 + [Task Name] + \u0027/from\u0027 + [Start] + \u0027/to\u0027 + [End]\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"            \"4. To mark any Task as Completed/Incomplete\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"            \"\u0027mark/unmark\u0027 + [Task Index]\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"            \"5. To list all added Tasks\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"            \"\u0027list\u0027\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"            \"6. To delete a specific Task\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"            \"\u0027delete\u0027 + [Task Index]\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"            \"7. To find a Task using a keyword\" + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"            \"\u0027find\u0027 + [Keyword]\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"            \"8. To clear the whole Task List\" + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"            \"\u0027clear\u0027\" + System.lineSeparator();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when a date parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"    public static final String DATE_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your [by], [from], [to] follows this date format\"  + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"            \"[YEAR]-[MONTH]-[DATE], Example: 2025-01-31\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"            \"Regardless of single digit months or days, pad with 0 if needed\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when a \u0027todo\u0027 command parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"    public static final String TODO_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your \u0027todo\u0027 command follows this format\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"            \"\u0027todo\u0027 + [Task Name]\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when a \u0027deadline\u0027 command parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"    public static final String DEADLINE_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your \u0027deadline\u0027 command follows this format\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"            \"\u0027deadline\u0027 + [Task Name] + \u0027/by\u0027 + [Deadline]\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when an \u0027event\u0027 command parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"    public static final String EVENT_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your \u0027event\u0027 command follows this format\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"            \"\u0027event\u0027 + [Task Name] + \u0027/from\u0027 + [Start] + \u0027/to\u0027 + [End]\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when a \u0027delete\u0027 command parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"    public static final String DELETE_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your \u0027delete\u0027 command follows this format\" + System.lineSeparator() +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"            \"\u0027delete\u0027 + [Task Index]\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when a \u0027mark\u0027 command parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ecxm02"},"content":"    public static final String MARK_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your \u0027mark\u0027 command follows this format\" + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ecxm02"},"content":"            \"\u0027mark\u0027 + [Task Index]\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when an \u0027unmark\u0027 command parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ecxm02"},"content":"    public static final String UNMARK_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your \u0027unmark\u0027 command follows this format\" + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ecxm02"},"content":"            \"\u0027unmark\u0027 + [Task Index]\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when a task index is out of bounds.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ecxm02"},"content":"    public static final String TASK_INDEX_OUT_OF_BOUNDS \u003d \"Index Error detected! Ensure that your Task Index is exists in your Task List\" + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ecxm02"},"content":"            \"Type \u0027list\u0027 to view your Task List\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ecxm02"},"content":"     * The error message displayed when a \u0027find\u0027 command parsing error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ecxm02"},"content":"    public static final String FIND_PARSER_EXCEPTION \u003d \"Syntax Error detected! Ensure that your \u0027find\u0027 command follows this format\" + System.lineSeparator() +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ecxm02"},"content":"            \"\u0027find\u0027 + [Keyword]\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ecxm02"},"content":"    public static final String MARK_REGEX \u003d \"^mark\\\\s+(\\\\d+)$\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ecxm02"},"content":"    public static final String UNMARK_REGEX \u003d \"^unmark\\\\s+(\\\\d+)$\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ecxm02"},"content":"    public static final String TODO_REGEX \u003d \"^todo\\\\s+(.+)$\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ecxm02"},"content":"    public static final String DEADLINE_REGEX \u003d \"^deadline\\\\s+(.+)\\\\s+/by\\\\s+(.+)$\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ecxm02"},"content":"    public static final String EVENT_REGEX \u003d \"event\\\\s+(.+)\\\\s+/from\\\\s+(.+)\\\\s+/to\\\\s+(.+)$\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ecxm02"},"content":"    public static final String DELETE_REGEX \u003d \"^delete\\\\s+(\\\\d+)$\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ecxm02"},"content":"    public static final String FIND_REGEX \u003d \"^find\\\\s+(.+)$\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ecxm02":103}},{"path":"src/main/java/juke/main/Juke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.main;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.input.Ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"import juke.storage.FileLoader;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"import juke.task.TaskManager;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":" * The `Juke` class serves as the main entry point for the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":" * It manages the program\u0027s lifecycle, including initialization, running the main loop, and termination.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"public class Juke {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"    private static boolean isRunning \u003d true; //a master flag so that main knows when to end the program","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"    public static boolean isRunning() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"        return isRunning;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"     * Ends the program by setting the `isRunning` flag to false.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"     * This causes the main loop to terminate.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"    public static void endProgram() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"        isRunning \u003d false;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"     * The main method initializes the application, displays the intro message,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"     * and enters the main loop to process user input until the program is terminated.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"        FileLoader.loadFile(TaskManager.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"        Ui.introMessage();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"        while (Juke.isRunning()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"                Ui.readInput();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"                System.out.println(Constants.LINE_BREAK);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"        Ui.endProgramMessage();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"        Ui.closeInput();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ecxm02":48}},{"path":"src/main/java/juke/storage/FileLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"import juke.task.Deadline;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"import juke.task.Event;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"import juke.task.Task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"import juke.task.Todo;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":" * The `FileLoader` class is responsible for loading tasks from a save file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":" * It reads the file line by line, parses the task information, and adds the tasks to the provided task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"public class FileLoader {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"    private static String taskType;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"    private static String taskName;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"    private static LocalDate deadline;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"    private static LocalDate from;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"    private static LocalDate to;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"    private static boolean isDone;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"    private FileLoader() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"     * Loads tasks from the save file and adds them to the provided task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"     * If the save file is not found, it starts with a new task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"     * @param taskList the list to which the loaded tasks will be added","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"    public static void loadFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(Constants.SAVE_FILE_NAME))) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Save file found, loading save file\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"            String line;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) { //Reads one line at a time","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"                String[] words \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"                taskType \u003d words[0];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"                isDone \u003d Boolean.parseBoolean(words[1]);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"                switch (taskType) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"                case \"T\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"                    taskName \u003d words[2];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"                    taskList.add(new Todo(taskName, isDone));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"                    break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"                case \"D\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"                    taskName \u003d words[2];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"                    String deadlineString \u003d words[3];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"                    deadline \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"                    taskList.add(new Deadline(taskName, isDone, deadline));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"                    break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"                case \"E\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"                    taskName \u003d words[2];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"                    String fromString \u003d words[3];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"                    String toString \u003d words[4];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"                    from \u003d LocalDate.parse(fromString);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"                    to \u003d LocalDate.parse(toString);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"                    taskList.add(new Event(taskName, isDone, from, to));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"                default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"                    System.out.println(\"Error in case type, check FileLoader class\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"No save file found! Will start on a new task list\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"ecxm02":73}},{"path":"src/main/java/juke/storage/FileSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import juke.main.Constants;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"import juke.task.Task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"import juke.task.Deadline;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"import juke.task.Event;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"import java.io.File;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":" * The `FileSaver` class is responsible for saving tasks to a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":" * It provides methods to write tasks to the file, clear the save file, and ensure the save directory exists.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"public class FileSaver {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"    private FileSaver() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"     * Writes a task to the save file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"     * The task is appended to the file in a specific format based on its type.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"     * @param task the task to be written to the file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"    public static void writeToFile(Task task) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"        ensureDirectoryExists();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"        try (FileWriter writer \u003d new FileWriter((Constants.SAVE_FILE_NAME), true)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"            String taskType \u003d task.getTaskType();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"            case \"T\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"                writer.write(\"T\" + \"|\" + task.isDone() + \"|\" + task.getTaskName() + System.lineSeparator());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"            case \"D\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"                writer.write(\"D\" + \"|\" + task.isDone() + \"|\" + deadlineTask.getTaskName() + \"|\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"                        + deadlineTask.getDeadline() + System.lineSeparator());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"            case \"E\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"                writer.write(\"E\" + \"|\" + task.isDone() + \"|\" + eventTask.getTaskName() + \"|\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"                        + eventTask.getFrom() + \"|\" + eventTask.getTo() + System.lineSeparator());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Error writing to file.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"     * Clears the save file by deleting it if it exists.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"    public static void clearSaveFile() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"        File file \u003d new File(Constants.SAVE_FILE_NAME);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"            file.delete();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"     * Ensures that the save directory exists.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"     * If the directory does not exist, it creates the directory and any necessary parent directories.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"    public static void ensureDirectoryExists() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"        File directory \u003d new File(Constants.SAVE_FILE_PATH);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"            directory.mkdirs(); // Creates the directory and any necessary parents","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"ecxm02":76}},{"path":"src/main/java/juke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":" * The `Deadline` class represents a task with a specific deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":" * It extends the `Task` class and includes a `LocalDate` deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"    private LocalDate deadline;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"     * Constructs a new `Deadline` task with the specified task name and deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"     * @param task     the name of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"     * @param deadline the deadline of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"    public Deadline(String task, LocalDate deadline) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"        super(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"     * Constructs a new `Deadline` task with the specified task name, completion status, and deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"     * @param task     the name of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"     * @param isDone   the completion status of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"     * @param deadline the deadline of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"    public Deadline(String task, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"        super(task, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"     * @return the deadline of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"        return deadline;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"     * @return the type of the task, which is \"D\" for deadline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"        return \"D\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":53}},{"path":"src/main/java/juke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":" * The `Event` class represents a task that occurs within a specific time frame.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":" * It extends the `Task` class and includes a start date (`from`) and an end date (`to`).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"    private LocalDate from;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"    private LocalDate to;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"     * Constructs a new `Event` task with the specified task name, start date, and end date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"     * @param from     the start date of the event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"     * @param to       the end date of the event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"    public Event(String taskName, LocalDate from, LocalDate to){","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"        super(taskName);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"     * Constructs a new `Event` task with the specified task name, completion status, start date, and end date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"     * @param isDone   the completion status of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"     * @param from     the start date of the event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"     * @param to       the end date of the event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"    public Event(String taskName, boolean isDone, LocalDate from, LocalDate to){","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"     * @return the start date of the event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"        return from;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"     * @return the end date of the event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"        return to;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"     * @return the type of the task, which is \"E\" for event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"        return \"E\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":67}},{"path":"src/main/java/juke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":" * Represents an abstract task with a name and a completion status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":" * Subclasses should implement the abstract method getTaskType to indicate","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":" * the specific type of task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"    protected String taskName; //actual content of task","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"    protected boolean isDone; //boolean flag to check if its completed or uncompleted","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"     * Constructs a Task with the specified task name.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"     * Constructs a Task with the specified task name and completion status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"     * Returns the name of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"     * @return the task name","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"        return taskName;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"     * Subclasses must override to specify the task type.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"     * @return the type of the task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"     * Marks this task as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"    public void markTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"     * Checks whether the task is completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"     * @return true if the task is completed, false otherwise","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"        return isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"ecxm02":72}},{"path":"src/main/java/juke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"package juke.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"import juke.storage.FileSaver;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":" * Manages a list of tasks, providing operations to list, add, modify, and delete tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"public class TaskManager {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"    private TaskManager() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"     * Lists all tasks in the task list with their details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"    public static void listTask() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"            String isDone;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"            String taskType \u003d task.getTaskType();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"            String taskName \u003d task.getTaskName();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"            if (task.isDone()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"                isDone \u003d \"Completed\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"            } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"                isDone \u003d \"Incomplete\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"            System.out.print((i + 1) + \". \");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ecxm02"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ecxm02"},"content":"            case \"T\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"[Todo][\" + isDone + \"]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"Task Name: \" + taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ecxm02"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ecxm02"},"content":"            case \"D\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ecxm02"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"[Todo][\" + isDone + \"]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"Task Name: \" + taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"Deadline: \" + deadlineTask.getDeadline().format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ecxm02"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ecxm02"},"content":"            case \"E\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ecxm02"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"[Todo][\" + isDone + \"]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"Task Name: \" + taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"From: \" + eventTask.getFrom().format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"To: \" + eventTask.getTo().format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ecxm02"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ecxm02"},"content":"            default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ecxm02"},"content":"                System.out.println(\"Error in case type, check TaskManager class\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ecxm02"},"content":"     * Displays details for a single task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ecxm02"},"content":"     * @param task the task to display.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ecxm02"},"content":"    private static void listOneTask(Task task) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ecxm02"},"content":"        String isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ecxm02"},"content":"        String taskType \u003d task.getTaskType();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ecxm02"},"content":"        String taskName \u003d task.getTaskName();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ecxm02"},"content":"        int taskIndex \u003d taskList.indexOf(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ecxm02"},"content":"        if (task.isDone()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ecxm02"},"content":"            isDone \u003d \"Completed\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ecxm02"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ecxm02"},"content":"            isDone \u003d \"Incomplete\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ecxm02"},"content":"        System.out.print((taskIndex + 1) + \". \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ecxm02"},"content":"        switch (taskType) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ecxm02"},"content":"        case \"T\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"[Todo][\" + isDone + \"]\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Task Name: \" + taskName);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ecxm02"},"content":"        case \"D\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ecxm02"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"[Todo][\" + isDone + \"]\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Task Name: \" + taskName);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Deadline: \" + deadlineTask.getDeadline().format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ecxm02"},"content":"        case \"E\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ecxm02"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"[Todo][\" + isDone + \"]\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Task Name: \" + taskName);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"From: \" + eventTask.getFrom().format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"To: \" + eventTask.getTo().format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ecxm02"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ecxm02"},"content":"        default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"Error in case type, check TaskManager class\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ecxm02"},"content":"     * Creates a new todo task and adds it to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ecxm02"},"content":"    public static void addTodo(String taskName) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ecxm02"},"content":"        Task newTask \u003d new Todo(taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ecxm02"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Okay! I\u0027ve added a new todo\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ecxm02"},"content":"        System.out.println(taskList.size() + \". \" + taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ecxm02"},"content":"        FileSaver.writeToFile(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ecxm02"},"content":"     * Creates a new deadline task and adds it to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ecxm02"},"content":"     * @param deadline the due date of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ecxm02"},"content":"    public static void addDeadline(String taskName, LocalDate deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ecxm02"},"content":"        Task newTask \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ecxm02"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Okay! I\u0027ve added a new deadline\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ecxm02"},"content":"        System.out.println(taskList.size() + \". \" + taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Deadline: \" + deadline.format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ecxm02"},"content":"        FileSaver.writeToFile(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ecxm02"},"content":"     * Creates a new event task and adds it to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ecxm02"},"content":"     * @param from the start date of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ecxm02"},"content":"     * @param to the end date of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ecxm02"},"content":"    public static void addEvent(String taskName, LocalDate from, LocalDate to) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ecxm02"},"content":"        Task newTask \u003d new Event(taskName, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ecxm02"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Okay! I\u0027ve added a new event\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ecxm02"},"content":"        System.out.println(taskList.size() + \". \" + taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"From: \" + from.format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"To: \" + to.format(DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\")));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ecxm02"},"content":"        FileSaver.writeToFile(newTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ecxm02"},"content":"     * Marks the specified task as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ecxm02"},"content":"     * @param taskIndex the index of the task to mark.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ecxm02"},"content":"    public static void markTask(int taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ecxm02"},"content":"        taskList.get(taskIndex).markTask();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ecxm02"},"content":"        System.out.println(taskIndex + 1 + \". Task Name: \" + taskList.get(taskIndex).getTaskName());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Status: [Completed]\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ecxm02"},"content":"     * Marks the specified task as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ecxm02"},"content":"     * @param taskIndex the index of the task to unmark.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ecxm02"},"content":"    public static void unmarkTask(int taskIndex) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ecxm02"},"content":"        taskList.get(taskIndex).unmarkTask();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Okay! I\u0027ve marked this task as incomplete:\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ecxm02"},"content":"        System.out.println(taskIndex + 1 + \". Task Name: \" + taskList.get(taskIndex).getTaskName());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Status: [Incomplete]\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ecxm02"},"content":"     * Clears all tasks from the task list and the associated save file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ecxm02"},"content":"    public static void clearTaskList() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ecxm02"},"content":"        taskList.clear();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ecxm02"},"content":"        FileSaver.clearSaveFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Okay! I\u0027ve cleared the task list\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ecxm02"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ecxm02"},"content":"        return taskList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ecxm02"},"content":"     * Deletes the specified task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ecxm02"},"content":"     * @param taskIndex the index of the task to delete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ecxm02"},"content":"    public static void deleteTask(int taskIndex) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ecxm02"},"content":"        String taskName \u003d taskList.get(taskIndex).getTaskName();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ecxm02"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ecxm02"},"content":"        System.out.println(\"Okay! I\u0027ve deleted this task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ecxm02"},"content":"        System.out.println(taskIndex + 1 + \". \" + taskName);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ecxm02"},"content":"     * Searches and displays tasks that contain the given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ecxm02"},"content":"     * @param keyword the keyword to search for.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ecxm02"},"content":"    public static void findTask(String keyword) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ecxm02"},"content":"        int found \u003d 0;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ecxm02"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ecxm02"},"content":"            if (task.getTaskName().contains(keyword)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ecxm02"},"content":"                listOneTask(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ecxm02"},"content":"                found +\u003d 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ecxm02"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ecxm02"},"content":"        if (found \u003d\u003d 0) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ecxm02"},"content":"            System.out.println(\"No tasks found with the keyword: \" + keyword);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ecxm02"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ecxm02"},"content":"    public static int getSize() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ecxm02"},"content":"        return taskList.size();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ecxm02":220}},{"path":"src/main/java/juke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"package juke.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":" * Represents a todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"     * Constructs a new Todo task with the specified task name.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ecxm02"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ecxm02"},"content":"        super(taskName);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ecxm02"},"content":"     * Constructs a new Todo task with the specified task name and completion status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ecxm02"},"content":"     * @param taskName the name of the todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ecxm02"},"content":"     * @param isDone   the completion status of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ecxm02"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ecxm02"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ecxm02"},"content":"     * Returns the task type identifier.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ecxm02"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ecxm02"},"content":"     * @return \"T\" indicating a Todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ecxm02"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ecxm02"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ecxm02"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ecxm02"},"content":"        return \"T\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ecxm02"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ecxm02"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ecxm02"},"content":"hello","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ecxm02"},"content":"todo 1","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ecxm02"},"content":"deadline 2 /by 3pm","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ecxm02"},"content":"event 4 /from 5pm /to 6pm","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ecxm02"},"content":"list","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ecxm02"},"content":"mark 2","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"list","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ecxm02"},"content":"unmark 2","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ecxm02"},"content":"bye","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ecxm02"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ecxm02"},"content":"java -classpath ..\\bin juke.main.Juke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ecxm02"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"ecxm02":3,"-":19}}]
