[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"# Project Nanat","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"   Hello from","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"   __  __            __  __            _______","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"   | \\ | |    / \\    | \\ | |     / \\   |_   _|","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"   |  \\| |   / _ \\   |  \\| |    / _ \\    | |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"   | . ` |  / ___ \\  | . ` |   / ___ \\   | |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"   |_|\\ _| /_/   \\_\\ |_|\\ _|  /_/   \\_\\  |_|","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"   ```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"**Project Nanat** is an educational software project designed to guide users through the process of building a small software incrementally. It emphasizes the application of Java and Software Engineering (SE) techniques throughout the development process. The ultimate goal of this project is to build **Nanat**, a Personal Assistant Chatbot that helps users keep track of various tasks and events.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"## Features","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"Nanat provides a set of functionalities to help users manage their tasks efficiently:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"- **ToDo Management**: Keep track of your to-do list and manage tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"- **Event Tracking**: Keep track of upcoming events.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"- **Deadline Management**: Set and manage deadlines for various tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"- **Error Handling**: Robust error management to ensure smooth user experience.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"- **Task Management**: Add, delete, and save tasks as needed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"- **Task Display**: View your task list and see tasks based on specific criteria.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"- **Task Search**: Search for tasks containing specific keywords to quickly find relevant tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"## Technologies Used","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"- **Java SE**: The core programming language for the development of the project.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"- **Object-Oriented Programming (OOP)**: Using OOP principles to structure the software.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"- **Error Handling**: Implementing appropriate error-handling mechanisms to prevent crashes and ensure stability.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"## Features in Detail","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"1. **Add Task**: Users can add tasks to the system, providing details such as the task name, deadline, and priority.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"2. **Delete Task**: Users can delete a task from their list when it is no longer needed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"3. **Show Task List**: Display a list of all tasks currently saved in the system.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"4. **Find Tasks**: Search through the list of tasks for specific keywords to easily locate relevant tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"5. **Task Management**: Efficiently manage tasks with features like marking tasks as done, prioritizing them, and categorizing them.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"## Installation","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"1. Clone the repository:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"   ```bash","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"   git clone https://github.com/melee/ip.git","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"melee01":41,"-":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"# Project Nanat User Guide","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":"```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"   Hello from","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"   __  __            __  __            _______","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"   | \\ | |    / \\    | \\ | |     / \\   |_   _|","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"   |  \\| |   / _ \\   |  \\| |    / _ \\    | |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"   | . ` |  / ___ \\  | . ` |   / ___ \\   | |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"   |_|\\ _| /_/   \\_\\ |_|\\ _|  /_/   \\_\\  |_|","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"   ```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"**Project Nanat** is an educational software project designed to guide users through the process of building a small software incrementally. It emphasizes the application of Java and Software Engineering (SE) techniques throughout the development process. The ultimate goal of this project is to build **Nanat**, a Personal Assistant Chatbot that helps users keep track of various tasks and events.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"## Features","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"Nanat provides a set of functionalities to help users manage their tasks efficiently:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"- **ToDo Management**: Keep track of your to-do list and manage tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"- **Event Tracking**: Keep track of upcoming events.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"- **Deadline Management**: Set and manage deadlines for various tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"- **Error Handling**: Robust error management to ensure smooth user experience.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"- **Task Management**: Add, delete, and save tasks as needed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"- **Task Display**: View your task list and see tasks based on specific criteria.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"- **Task Search**: Search for tasks containing specific keywords to quickly find relevant tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"## Technologies Used","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"- **Java SE**: The core programming language for the development of the project.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"- **Object-Oriented Programming (OOP)**: Using OOP principles to structure the software.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"- **Error Handling**: Implementing appropriate error-handling mechanisms to prevent crashes and ensure stability.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"## Features in Detail","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"1. **Add Task**: Users can add tasks to the system, providing details such as the task name, deadline, and priority.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"2. **Delete Task**: Users can delete a task from their list when it is no longer needed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"3. **Show Task List**: Display a list of all tasks currently saved in the system.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"4. **Find Tasks**: Search through the list of tasks for specific keywords to easily locate relevant tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"5. **Task Management**: Efficiently manage tasks with features like marking tasks as done, prioritizing them, and categorizing them.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"## Installation","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"1. Clone the repository:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"   ```bash","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"   git clone https://github.com/melee/ip.git","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"melee01":33,"-":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"class Deadline extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"    private String by;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"     * Constructs a Deadline task with a description and a deadline.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"     * @param by The deadline for the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"     * Returns the task type identifier for Deadline.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"        return \"[D]\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":34}},{"path":"src/main/java/ErrorHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"public class ErrorHandler {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"     * Handles number format exceptions.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"    public static void handleNumberFormatException() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"        Ui.showInvalidTaskMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"     * Handles the case when an attempt is made to unmark a task that is already not marked.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"     * @param task The task that is already unmarked.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"    public static void handleTaskAlreadyUnmarked(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Task is already unmarked: \" + task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     You cannot unmark a task that is already not done.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"     * Handles the case when a description is empty.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"     * This method displays a message indicating that the description cannot be empty.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"    public static void handleEmptyDescription() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     OOPS!!! Description cannot be empty.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Please input again\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"     * Handles the case when the deadline format is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"     * This method displays a message indicating that the deadline format is incorrect.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"     * It suggests the correct format: \"deadline \u003cdescription\u003e /by \u003ctime\u003e\".","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"melee01"},"content":"    public static void handleEmptyDeadline() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     OOPS!!! Invalid deadline format. Use: deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Please input again\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"melee01"},"content":"     * Handles the case when the event format is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"melee01"},"content":"     * This method displays a message indicating that the event format is incorrect.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"melee01"},"content":"     * It suggests the correct format: \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\".","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"melee01"},"content":"    public static void handleEmptyEvent() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     OOPS!!! Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Please input again\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":57}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":" * Represents an event task that has a specific start and end date/time.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"class Event extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"    private String from;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"    private String to;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"     * Returns the task type identifier for Event.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"        return \"[E]\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"        return super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":37}},{"path":"src/main/java/Nanat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":" * The main class that runs the task management program.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"public class Nanat {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"     * Starts the task management program, ensuring the data file exists and interacting with the user.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"     * @param args Command-line arguments (unused in this case).","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"        Save.ensureDataFileExists();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"        // Create a TaskList instance and load tasks from the file if they exist","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"        Save.loadTasksFromFile(taskList);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"        // Start the user command loop","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"        startCommandLoop(taskList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"     * Starts the loop to handle user commands.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"     * @param taskList The TaskList instance to store tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"    public static void startCommandLoop(TaskList taskList) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"        // Main loop to handle user commands","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"        while (true) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"            Parser.handleCommand(command, taskList);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"melee01":38}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":" * Parses and handles user commands.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"public class Parser {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"     * Handles user input and processes task-related commands.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"     * @param command The user input command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"     * @param taskList The TaskList to store tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"    public static void handleCommand(String command, TaskList taskList) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"            handleTodo(command, taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"            handleDeadline(command, taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"            handleEvent(command, taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"            taskList.listTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"            try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"                int taskNumber \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"                taskList.markTask(taskNumber);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"                ErrorHandler.handleNumberFormatException();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"            try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"                int taskNumber \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"                taskList.unmarkTask(taskNumber);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"                ErrorHandler.handleNumberFormatException();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"            int num \u003d taskList.numOfTasks();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"            try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"melee01"},"content":"                int index \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"                taskList.deleteTask(index, num-1);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"melee01"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"                ErrorHandler.handleNumberFormatException();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"            String keyword \u003d command.substring(5).trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"melee01"},"content":"            taskList.findTasks(keyword);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"melee01"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"melee01"},"content":"            Ui.showGoodbyeMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"melee01"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"melee01"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"melee01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"melee01"},"content":"            System.out.println(\"     OOPS!!! Unknown request :(\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"melee01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"melee01"},"content":"     * Handles the creation of a ToDo task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"melee01"},"content":"     * @param command The user input command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"melee01"},"content":"     * @param taskList The TaskList to store the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"melee01"},"content":"    private static void handleTodo(String command, TaskList taskList) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"melee01"},"content":"        String description \u003d command.substring(4).trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"melee01"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"melee01"},"content":"            ErrorHandler.handleEmptyDescription();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"melee01"},"content":"            Nanat.startCommandLoop(taskList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"melee01"},"content":"        while(description.charAt(0) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"melee01"},"content":"            description.substring(1).trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"melee01"},"content":"        int num \u003d taskList.numOfTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"melee01"},"content":"        Ui.showAddedMessage(1, description, num, taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"melee01"},"content":"     * Handles the creation of a Deadline task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"melee01"},"content":"     * @param command The user input command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"melee01"},"content":"     * @param taskList The TaskList to store the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"melee01"},"content":"    private static void handleDeadline(String command, TaskList taskList) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"melee01"},"content":"        String description \u003d command.substring(8).trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"melee01"},"content":"        String[] parts \u003d description.split(\" /by \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"melee01"},"content":"        if (description.isEmpty() || !description.contains(\"by\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"melee01"},"content":"            ErrorHandler.handleEmptyDeadline();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"melee01"},"content":"            Nanat.startCommandLoop(taskList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"melee01"},"content":"        while(description.charAt(0) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"melee01"},"content":"            description.substring(1).trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"melee01"},"content":"        if (parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"melee01"},"content":"            ErrorHandler.handleEmptyDeadline();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"melee01"},"content":"            Nanat.startCommandLoop(taskList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"melee01"},"content":"        int num \u003d taskList.numOfTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"melee01"},"content":"        Ui.showAddedMessage(2, description, num, taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"melee01"},"content":"     * Handles the creation of an Event task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"melee01"},"content":"     * @param command The user input command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"melee01"},"content":"     * @param taskList The TaskList to store the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"melee01"},"content":"    private static void handleEvent(String command, TaskList taskList) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"melee01"},"content":"        String description \u003d command.substring(5).trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"melee01"},"content":"        if (description.isEmpty() || !description.contains(\"from\") || !description.contains(\"to\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"melee01"},"content":"            ErrorHandler.handleEmptyEvent();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"melee01"},"content":"            Nanat.startCommandLoop(taskList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"melee01"},"content":"        while(description.charAt(0) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"melee01"},"content":"            description.substring(1).trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"melee01"},"content":"        String[] parts \u003d description.split(\" /from \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"melee01"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"melee01"},"content":"        if (!parts[1].contains(\" /to \") || parts[0].trim().isEmpty() || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"melee01"},"content":"            ErrorHandler.handleEmptyEvent();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"melee01"},"content":"            Nanat.startCommandLoop(taskList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"melee01"},"content":"        int num \u003d taskList.numOfTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"melee01"},"content":"        Ui.showAddedMessage(3, description, num, taskList);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":136}},{"path":"src/main/java/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":"import java.io.File;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"public class Save {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"    private static final String FILE_PATH \u003d \"./data/Nanat.txt\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"     * Ensures that the data file exists. If it does not, creates the necessary directories and file.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"    public static void ensureDataFileExists() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"                file.createNewFile(); // Create the file","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"                System.out.println(\"Data file created at: \" + FILE_PATH);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"            System.err.println(\"Error creating data file: \" + e.getMessage());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"     * Writes the task to the Nanat.txt file.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"     * @param task The task to be written to the file.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"    public static void writeTaskToFile(Task task) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"        FileWriter fileWriter \u003d null;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"            // Open the file in append mode (so we don\u0027t overwrite existing content)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"            fileWriter \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"            // Write the task to the file","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"            fileWriter.write(task.toString() + System.lineSeparator());  // Writing task as a string","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"            System.out.println(\"Task saved to file: \" + task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"melee01"},"content":"            System.err.println(\"An error occurred while writing the task to the file.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"        } finally {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"melee01"},"content":"            // Ensure the FileWriter is properly closed","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"melee01"},"content":"            if (fileWriter !\u003d null) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"melee01"},"content":"                try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"melee01"},"content":"                    fileWriter.close();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"melee01"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"melee01"},"content":"                    System.err.println(\"Error closing the file writer.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"melee01"},"content":"                    e.printStackTrace();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"melee01"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"melee01"},"content":"     * Updates the file by rewriting all tasks without the removed task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"melee01"},"content":"    public static void updateTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"melee01"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"melee01"},"content":"            // Create a new FileWriter to overwrite the file","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"melee01"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"melee01"},"content":"            // Re-write all tasks to the file","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"melee01"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"melee01"},"content":"                fileWriter.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"melee01"},"content":"            // Close the writer","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"melee01"},"content":"            fileWriter.close();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"melee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"melee01"},"content":"            System.err.println(\"An error occurred while updating the file.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"melee01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"melee01"},"content":"     * Loads the tasks from the Nanat.txt file and adds them to the TaskList.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"melee01"},"content":"    public static void loadTasksFromFile(TaskList taskList) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"melee01"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"melee01"},"content":"        // Ensure the file exists","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"melee01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"melee01"},"content":"            return; // No tasks to load","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"melee01"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"melee01"},"content":"            String line;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"melee01"},"content":"            int index \u003d 0;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"melee01"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"melee01"},"content":"                Task task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"melee01"},"content":"                if (line.length() \u003e 1) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"melee01"},"content":"                    char type \u003d line.charAt(1); // Extracts task type (T, D, etc.)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"melee01"},"content":"                    if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"melee01"},"content":"                        String command \u003d line.substring(7).trim(); // Extracts task description","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"melee01"},"content":"                        task \u003d new ToDo(command);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"melee01"},"content":"                    } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"melee01"},"content":"                        int byIndex \u003d line.indexOf(\"(by:\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"melee01"},"content":"                        String description \u003d line.substring(7, byIndex).trim();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"melee01"},"content":"                        String by \u003d line.substring(byIndex + 5, line.length() - 1).trim();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"melee01"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"melee01"},"content":"                    } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"melee01"},"content":"                        // Extract description, start time, and end time","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"melee01"},"content":"                        int fromIndex \u003d line.indexOf(\"(from:\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"melee01"},"content":"                        int toIndex \u003d line.indexOf(\"to:\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"melee01"},"content":"                        String description \u003d line.substring(7, fromIndex).trim();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"melee01"},"content":"                        String from \u003d line.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"melee01"},"content":"                        String to \u003d line.substring(toIndex + 3, line.length() - 1).trim();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"melee01"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"melee01"},"content":"                    } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"melee01"},"content":"                        task \u003d new Task(line); // Default fallback","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"melee01"},"content":"                    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"melee01"},"content":"                    // If task is successfully created","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"melee01"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"melee01"},"content":"                        taskList.setTask(index, task); // Assign task at index","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"melee01"},"content":"                        index++;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"melee01"},"content":"                        // check if it\u0027s marked done","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"melee01"},"content":"                        if(line.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"melee01"},"content":"                            task.markAsDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"melee01"},"content":"                        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"melee01"},"content":"                    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"melee01"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"melee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"melee01"},"content":"            System.err.println(\"An error occurred while reading tasks from the file.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"melee01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"melee01":137}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":" * Represents a task with a description, type, and completion status.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"class Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"    private String description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"     * Constructs a Task with the specified description and sets its status to not done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"     * @return A string representing the task\u0027s status. \"X\" if the task is done, otherwise a blank space.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"     * Returns the prefix based on the task type.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"        return \"\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"melee01"},"content":"     * Returns a string representation of the task, including its type, status, and description.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"melee01"},"content":"     * @return A string in the format \"[type][status] description\" (e.g., \"[T][X] Task description\").","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"melee01"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"melee01"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"melee01"},"content":"        return getTaskType() + getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":58}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"class TaskList {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"     * Constructs a TaskList object, initializing the list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"     * @param task The description of the task to be added.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"     * Sets the task at the specified index in the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"     * If the index is within the current size of the list, it replaces the existing task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"     * If the index exceeds the current size, it appends the task to the list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"     * @param index The position in the task list to set the task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"     * @param task  The task to be set at the specified index.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"    public void setTask(int index, Task task) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"            tasks.set(index, task); // Replace existing task at index","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"            tasks.add(task); // Add new task if index exceeds current size","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"melee01"},"content":"     * If the index is valid, the task is removed, and a confirmation message is displayed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"     * Otherwise, an error message is printed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"     * @param num   The updated number of tasks in the list after deletion.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"melee01"},"content":"    public void deleteTask(int index, int num) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"melee01"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"melee01"},"content":"            Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"melee01"},"content":"            Ui.showDeleteTaskMessage(removedTask, num);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"melee01"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"melee01"},"content":"            System.out.println(\"Invalid task index!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"melee01"},"content":"        // Update the file after task removal","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"melee01"},"content":"        Save.updateTasksToFile(tasks);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"melee01"},"content":"     * Displays all tasks in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"melee01"},"content":"    public void listTasks() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"melee01"},"content":"        Ui.showTaskList(tasks);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"melee01"},"content":"     * Displays number of tasks in the list","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"melee01"},"content":"    public int numOfTasks() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"melee01"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"melee01"},"content":"     * Marks a task as done based on the provided index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"melee01"},"content":"     * The task will be updated and the UI will show a confirmation message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"melee01"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"melee01"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid (out of bounds).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"melee01"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"melee01"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"melee01"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"melee01"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"melee01"},"content":"            Ui.showMarkMessage(task); // Convert Task to String","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"melee01"},"content":"            // Update the file after task marked","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"melee01"},"content":"            Save.updateTasksToFile(tasks);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"melee01"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"melee01"},"content":"            Ui.showInvalidTaskMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"melee01"},"content":"     * Unmarks a task as done based on the provided index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"melee01"},"content":"     * If the task is already unmarked, an error message is displayed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"melee01"},"content":"     * If the task is marked as done, it will be unmarked and the UI will show a confirmation message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"melee01"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"melee01"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid (out of bounds).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"melee01"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"melee01"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"melee01"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"melee01"},"content":"            if (!task.getStatusIcon().equals(\"[X]\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"melee01"},"content":"                ErrorHandler.handleTaskAlreadyUnmarked(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"melee01"},"content":"            } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"melee01"},"content":"                task.markAsNotDone();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"melee01"},"content":"                Ui.showUnmarkMessage(task); // Convert Task to String","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"melee01"},"content":"                // Update the file after task unmarked","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"melee01"},"content":"                Save.updateTasksToFile(tasks);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"melee01"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"melee01"},"content":"            Ui.showInvalidTaskMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"melee01"},"content":"     * Searches for tasks that contain the specified keyword in their string representation.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"melee01"},"content":"     * Displays the list of matching tasks, or a message if no matching tasks are found.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"melee01"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"melee01"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"melee01"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"melee01"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"melee01"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"melee01"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"melee01"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"melee01"},"content":"            System.out.println(\"     No matching tasks found.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"melee01"},"content":"        } else {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"melee01"},"content":"            System.out.println(\"Here are the matching tasks:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"melee01"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"melee01"},"content":"                System.out.println(\"     \" + (i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"melee01"},"content":"     * Checks if the provided index is valid in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"melee01"},"content":"     * @param index The index to check.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"melee01"},"content":"     * @return True if the index is valid, false otherwise.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"melee01"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"melee01"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":156}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":" * Represents a ToDo task, which has no specific date or time attached.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"class ToDo extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"     * Returns the task type identifier for ToDo.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"        return \"[T]\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"melee01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"melee01"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"melee01"},"content":" * Handles the user interface, displaying various messages and outputs.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"melee01"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"melee01"},"content":"class Ui {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"melee01"},"content":"     * Displays a welcome message when the program starts.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"melee01"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"melee01"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"melee01"},"content":"                __  __            __  __            _______","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"melee01"},"content":"                | \\\\ | |    / \\\\    | \\\\ | |     / \\\\   |_   _|","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"melee01"},"content":"                |  \\\\| |   / _ \\\\   |  \\\\| |    / _ \\\\    | |","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"melee01"},"content":"                | . ` |  / ___ \\\\  | . ` |   / ___ \\\\   | |","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"melee01"},"content":"                |_|\\\\ _| /_/   \\\\_\\\\ |_|\\\\ _|  /_/   \\\\_\\\\  |_|  ","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"melee01"},"content":"                \"\"\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"melee01"},"content":"        System.out.println(\"Good Morning! I\u0027m\\n\" + logo + \"\\nWhat brings you here today?\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"melee01"},"content":"     * Displays a goodbye message when the program ends.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"melee01"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Bye. Have a great day!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"melee01"},"content":"    /**Tweak the code to comply with a coding standard","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"melee01"},"content":"     Tweak the code to comply with a given coding standard. From this point onward, ensure any new code added are compliant with the given coding standard.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"melee01"},"content":"     * Displays the list of tasks currently stored in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"melee01"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"melee01"},"content":"    public static void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"melee01"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"melee01"},"content":"            System.out.println(\"     No tasks found.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"melee01"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"melee01"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"melee01"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"melee01"},"content":"                System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"melee01"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"melee01"},"content":"     * Displays a message indicating that a task is added to the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"melee01"},"content":"     * It also displays the details of the task and updates the total number of tasks in the list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"melee01"},"content":"     * This method determines the type of task based on the provided `types` value (1 for ToDo, 2 for Deadline, 3 for Event),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"melee01"},"content":"     * creates the corresponding task object, and adds it to the task list. It then prints a confirmation message with the task details","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"melee01"},"content":"     * and the updated number of tasks in the list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"melee01"},"content":"     * @param types The type of the task (1 for ToDo, 2 for Deadline, 3 for Event).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"melee01"},"content":"     * @param description The description of the task, which may contain additional details such as a deadline or event timing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"melee01"},"content":"     * @param num The current number of tasks in the list before the new task is added.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"melee01"},"content":"     * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"melee01"},"content":"    public static void showAddedMessage(int types, String description, int num, TaskList taskList) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"melee01"},"content":"        num \u003d num + 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"melee01"},"content":"        Task task \u003d null;  // Store the actual Task object","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"melee01"},"content":"        if (types \u003d\u003d 1) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"melee01"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"melee01"},"content":"        } else if (types \u003d\u003d 2) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"melee01"},"content":"            String[] parts \u003d description.split(\" /by \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"melee01"},"content":"            task \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"melee01"},"content":"        } else if (types \u003d\u003d 3) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"melee01"},"content":"            String[] parts \u003d description.split(\" /from \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"melee01"},"content":"            String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"melee01"},"content":"            task \u003d new Event(parts[0].trim(), timeParts[0].trim(), timeParts[1].trim());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"melee01"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"melee01"},"content":"            taskList.addTask(task);  // Add the actual Task object, not a formatted string","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"melee01"},"content":"            System.out.println(\"        \" + task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"melee01"},"content":"            Save.writeTaskToFile(task); // write the added task to saved data file","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"melee01"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Now you have \" + num + \" tasks in the list.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"melee01"},"content":"     * Displays a message confirming the deletion of a task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"melee01"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"melee01"},"content":"     * @param num  The number of remaining tasks in the list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"melee01"},"content":"    public static void showDeleteTaskMessage(Task task, int num) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Noted. Task deleted:\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"melee01"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Now you have \" + num + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"melee01"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"melee01"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"melee01"},"content":"    public static void showMarkMessage(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     \" + task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"melee01"},"content":"     * Displays a message when a task is unmarked.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"melee01"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"melee01"},"content":"     * @param task The task that has been unmarked.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"melee01"},"content":"    public static void showUnmarkMessage(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Oh no! Come back again pls, so many tasks to do!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     \" + task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"melee01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"melee01"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"melee01"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"melee01"},"content":"     * Displays a message when an invalid task number is entered.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"melee01"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"melee01"},"content":"    public static void showInvalidTaskMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"melee01"},"content":"        System.out.println(\"     Invalid task number.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"melee01"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"melee01"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"melee01":141}}]
