[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"# chatbot User Guide","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"**chatbot** is a simple, interactive command-line application that helps you manage tasks of various types. Whether you need to note down a quick to-do, track an upcoming deadline, or schedule an event, chatbot lets you create and organize tasks easily. You can also mark tasks as done, delete them, list all current tasks, and even search through them by keyword. The chatbot automatically saves your tasks, so theyâ€™re always available when you start it again.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"When you add a Deadline, you specify a description and a deadline time as a string.  ","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"This helps you keep track of tasks that have a specific due date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"Example: `deadline return book /by tomorrow`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"  [D][ ] return book (by: tomorrow)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"## Feature: Add a Todo","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"Use this command to add a basic to-do item without any date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"Example: `todo read book`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"  [T][ ] read book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"## Feature: Add an Event","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"Use this command to add an event with a start and end time/place.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"Example: `event meeting /from Monday /to Tuesday`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"  [E][ ] meeting (from: Monday to: Tuesday)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"## Feature: Mark a Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"Marks a specified task (by its number) as done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"Example: `mark 1`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"  [T][X] read book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"## Feature: Unmark a Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"Unmarks a specified task (by its number) as not done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"Example: `unmark 1`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"  [T][ ] read book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"## Feature: Delete a Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"Removes a specified task (by its number) from your list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"Example: `delete 1`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"  [T][ ] read book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"## Feature: List Tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"Displays all tasks currently in your list, in order of creation.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"Example: `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"2.[D][ ] return book (by: tomorrow)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"3.[E][ ] meeting (from: Monday to: Tuesday)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"## Feature: Find Tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Ahmish15"},"content":"Searches all tasks for a keyword in their description and displays the matches.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Ahmish15"},"content":"Example: `find book`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ahmish15"},"content":"Expected output:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Ahmish15"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Ahmish15"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Ahmish15"},"content":"2.[D][ ] return book (by: tomorrow)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Ahmish15"},"content":"~~~","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"Ahmish15":86,"-":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":" * Represents a Deadline task with a description and a \"by\" date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"     * Constructs a Deadline with the given description and due date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"     * @param description The task description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"     * @param by The deadline as a LocalDateTime.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"     * Returns the LocalDateTime representing the deadline.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"     * @return The by date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        return by;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"     * Returns a string representation of a Deadline task,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"     * including a formatted date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"     * @return \"[D]\" + status + description + \" (by: ...)\"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(outputFormat) + \")\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":41}},{"path":"src/main/java/DeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":" * Thrown when a user attempts to create a Deadline with incorrect formatting.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"public class DeadlineFormatException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"     * Constructs a DeadlineFormatException and prints an error message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    public DeadlineFormatException() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Deadline format should be: \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Ahmish15":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":" * Represents an Event task with a description, a \"from\" date/time, and a \"to\" date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"     * Constructs an Event with the given description, from-date/time, and to-date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"     * @param description The task description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"     * @param from The start time/place as a LocalDateTime.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"     * @param to The end time/place as a LocalDateTime.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"     * Returns the start date/time of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"     * @return The from date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"        return from;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"     * Returns the end date/time of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"     * @return The to date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        return to;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"     * Returns a string representation of an Event task,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"     * including formatted start and end date/time.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"     * @return \"[E]\" + status + description + \" (from: ... to: ...)\"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"                + \" (from: \" + from.format(outputFormat)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"                + \" to: \" + to.format(outputFormat) + \")\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":55}},{"path":"src/main/java/EventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":" * Thrown when a user attempts to create an Event with incorrect formatting.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"public class EventFormatException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"     * Constructs an EventFormatException and prints an error message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    public EventFormatException() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Event format should be: \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"                + \"event \u003cdescription\u003e /from \u003cd/M/yyyy HHmm\u003e /to \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Ahmish15":12}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":" * Interprets user commands and lines from the storage file,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":" * and performs the necessary actions on the TaskList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"public class Parser {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"     * Handles a single user command, updating tasks as necessary","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"     * and saving the changes.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"     * @param input    The raw command input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"     * @param tasks    The TaskList to operate on.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"     * @param ui       The Ui for printing messages.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"     * @param storage  The Storage for saving changes.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"     * @return         True if the command is \"bye\" (indicating an exit), else false.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"     * @throws TodoEmptyException        If a todo command has an empty description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"     * @throws DeadlineFormatException   If a deadline command is malformed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"     * @throws EventFormatException      If an event command is malformed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    public static boolean handleCommand(String input, TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"            throws TodoEmptyException, DeadlineFormatException, EventFormatException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"            return true;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"            tasks.listTasks();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"            int index \u003d Integer.parseInt(input.substring(5).trim()) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"            tasks.mark(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"            int index \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"            tasks.unmark(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"            int index \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"            String description \u003d input.substring(4).trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"                throw new TodoEmptyException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"                throw new DeadlineFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"            String[] parts \u003d input.substring(8).split(\"/by\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"                throw new DeadlineFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"            String dateTimeStr \u003d parts[1].trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"            if (description.isEmpty() || dateTimeStr.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"                throw new DeadlineFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"            Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"            tasks.addTask(d);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"            if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"                throw new EventFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"            String[] parts \u003d input.substring(5).split(\"/from|/to\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"                throw new EventFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"            String fromStr \u003d parts[1].trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"            String toStr \u003d parts[2].trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"            if (description.isEmpty() || fromStr.isEmpty() || toStr.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"                throw new EventFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(fromStr, formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(toStr, formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"            Event e \u003d new Event(description, from, to);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"            tasks.addTask(e);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ahmish15"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"            String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"            tasks.find(keyword);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"            ui.showError(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ahmish15"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ahmish15"},"content":"        return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Ahmish15"},"content":"     * Parses a single line from the storage file into a Task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Ahmish15"},"content":"     * Includes a try/catch block to handle invalid date/time formats","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ahmish15"},"content":"     * without crashing the program.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Ahmish15"},"content":"     * @param line A line from the file, e.g. \"T | 0 | read book\".","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Ahmish15"},"content":"     * @return The corresponding Task object, or null if unrecognized or invalid.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Ahmish15"},"content":"    public static Task parseTaskLine(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Ahmish15"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Ahmish15"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Ahmish15"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Ahmish15"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Ahmish15"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Ahmish15"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Ahmish15"},"content":"        switch (type) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Ahmish15"},"content":"            case \"T\": {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Ahmish15"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Ahmish15"},"content":"                todo.setIsDone(isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Ahmish15"},"content":"                return todo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Ahmish15"},"content":"            case \"D\": {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Ahmish15"},"content":"                // Expecting parts[3] to be date/time in d/M/yyyy HHmm","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Ahmish15"},"content":"                try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Ahmish15"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Ahmish15"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Ahmish15"},"content":"                    Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Ahmish15"},"content":"                    d.setIsDone(isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Ahmish15"},"content":"                    return d;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Ahmish15"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Ahmish15"},"content":"                    System.out.println(\"Invalid date/time format for Deadline: \" + parts[3]);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Ahmish15"},"content":"                    return null;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Ahmish15"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Ahmish15"},"content":"            case \"E\": {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Ahmish15"},"content":"                // Expecting parts[3], parts[4] to be from/to in d/M/yyyy HHmm","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Ahmish15"},"content":"                try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Ahmish15"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Ahmish15"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Ahmish15"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(parts[4], formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Ahmish15"},"content":"                    Event e \u003d new Event(description, from, to);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Ahmish15"},"content":"                    e.setIsDone(isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Ahmish15"},"content":"                    return e;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Ahmish15"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Ahmish15"},"content":"                    System.out.println(\"Invalid date/time format for Event: \" + line);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Ahmish15"},"content":"                    return null;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Ahmish15"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Ahmish15"},"content":"            default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Ahmish15"},"content":"                // Unrecognized task type","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Ahmish15"},"content":"                return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Ahmish15"},"content":"     * Converts a Task into a line of text suitable for saving in the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Ahmish15"},"content":"     * @param t The Task to encode.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Ahmish15"},"content":"     * @return  A string representation (e.g. \"T | 1 | read book\").","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Ahmish15"},"content":"    public static String encodeTask(Task t) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Ahmish15"},"content":"        String doneBit \u003d t.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Ahmish15"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Ahmish15"},"content":"            return \"T | \" + doneBit + \" | \" + t.getDescription();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Ahmish15"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Ahmish15"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Ahmish15"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Ahmish15"},"content":"            String dateTimeStr \u003d d.getBy().format(formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Ahmish15"},"content":"            return \"D | \" + doneBit + \" | \" + d.getDescription() + \" | \" + dateTimeStr;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Ahmish15"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Ahmish15"},"content":"            Event e \u003d (Event) t;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Ahmish15"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Ahmish15"},"content":"            String fromStr \u003d e.getFrom().format(formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Ahmish15"},"content":"            String toStr \u003d e.getTo().format(formatter);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Ahmish15"},"content":"            return \"E | \" + doneBit + \" | \" + e.getDescription() + \" | \" + fromStr + \" | \" + toStr;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Ahmish15"},"content":"            return \"T | \" + doneBit + \" | \" + t.getDescription();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":173}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"import java.io.File;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":" * Manages loading and saving of tasks to a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"public class Storage {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    private String filePath;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"     * Loads tasks from the file into a new TaskList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"     * @return A TaskList containing tasks loaded from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    public TaskList load() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"            if (!f.exists()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"                f.createNewFile();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"                return tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"            Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"                if (!line.trim().isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"                    Task t \u003d Parser.parseTaskLine(line);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"                    if (t !\u003d null) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"                        tasks.addFromLoad(t);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"                    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"            scanner.close();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"        return tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"     * Saves all tasks from the given TaskList to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"     * @param tasks The TaskList whose tasks are to be saved.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"            FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"                Task t \u003d tasks.get(i);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"                fw.write(Parser.encodeTask(t) + System.lineSeparator());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"            fw.close();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"            System.out.println(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":71}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":" * Represents a generic Task with a description and completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"public class Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"    private String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"     * @return The task description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        return description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"     * Returns true if the task is done, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"     * @return The isDone status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"        return isDone;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"     * Sets whether the task is done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"     * @param b True if done, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"    public void setIsDone(boolean b) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"        isDone \u003d b;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"     * Returns \"[X]\" if done, \"[ ]\" otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"     * @return A string representing the done status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"    public String status() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"     * Returns a string representation: \"[X]\" or \"[ ]\" plus the description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"     * @return The string form of this task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"        return status() + \" \" + description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":62}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":" * Manages a list of Task objects and provides operations","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":" * such as add, delete, mark, unmark, list, and find.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"public class TaskList {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"     * Constructs an empty TaskList using an ArrayList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"     * Adds a task when loading from file (no console output).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"     * @param t The task to add.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    public void addFromLoad(Task t) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        tasks.add(t);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"     * Adds a new task and prints a confirmation message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"     * @param t The task to add.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"        tasks.add(t);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"     * @param index The zero-based index of the task to mark.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"    public void mark(int index) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"            System.out.println(\"No task at that index to mark!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"            return;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        tasks.get(index).setIsDone(true);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(index));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"     * Unmarks a task as not done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"     * @param index The zero-based index of the task to unmark.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"    public void unmark(int index) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"            System.out.println(\"No task at that index to unmark!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"            return;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"        tasks.get(index).setIsDone(false);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + tasks.get(index));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"     * Deletes a task from the list, printing a confirmation.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"     * @param index The zero-based index of the task to delete.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"            System.out.println(\"No task at index \" + (index + 1));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"            return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + tasks.get(index));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"     * Lists all tasks with their 1-based indices.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ahmish15"},"content":"    public void listTasks() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"     * Finds tasks whose descriptions contain the given keyword.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Ahmish15"},"content":"     * @param keyword The string to search for.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Ahmish15"},"content":"    public void find(String keyword) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Ahmish15"},"content":"        int foundCount \u003d 0;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Ahmish15"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Ahmish15"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Ahmish15"},"content":"                foundCount++;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Ahmish15"},"content":"                System.out.println(foundCount + \".\" + t);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Ahmish15"},"content":"        if (foundCount \u003d\u003d 0) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Ahmish15"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Ahmish15"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Ahmish15"},"content":"     * @param i The zero-based index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Ahmish15"},"content":"     * @return The Task at index i.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Ahmish15"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Ahmish15"},"content":"        return tasks.get(i);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Ahmish15"},"content":"     * Returns the current number of tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Ahmish15"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Ahmish15"},"content":"    public int size() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Ahmish15"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":126}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":" * Represents a Todo task, which has only a description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"     * Constructs a Todo with the given description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"     * @param description The task description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"        super(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"     * Returns a string representation of a Todo task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"     * @return \"[T]\" + status + description","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":23}},{"path":"src/main/java/TodoEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":" * Thrown when a user attempts to create a Todo with an empty description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"public class TodoEmptyException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"     * Constructs a TodoEmptyException and prints an error message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    public TodoEmptyException() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Ahmish15":11}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":" * Handles input and output interactions with the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"public class Ui {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"    private Scanner sc;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"     * Constructs a Ui object with a Scanner for reading user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    public Ui() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Hello! I\u0027m juan\\nWhat can I do for you?\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"     * Prints the goodbye message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"     * Reads a command from the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"     * @return The command string entered by the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"     * Prints an error message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"Ahmish15":47}},{"path":"src/main/java/chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":" * The main entry point for the chatbot application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":" * Manages the Ui, Storage, and TaskList components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"public class chatbot {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"     * Creates a chatbot instance with the specified data file path.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"    public chatbot(String filePath) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"     * Runs the main chatbot loop until the user exits.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    public void run() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"                isExit \u003d Parser.handleCommand(input, tasks, ui, storage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"            } catch (TodoEmptyException","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"                     | DeadlineFormatException","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"                     | EventFormatException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"                // Custom exceptions already print their messages in constructors","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"                ui.showError(\"Please enter a valid task number!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"     * The main method. Creates a new chatbot instance and runs it.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        new chatbot(\"data/duke.txt\").run();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Ahmish15":52}}]
