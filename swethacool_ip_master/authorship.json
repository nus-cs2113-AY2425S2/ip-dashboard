[{"path":"data/EchoBox.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"D | 1 | return book | Sunday","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"T | 1 | buy eggs","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"T | 0 | buy eggs","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"swethacool":5}},{"path":"src/main/java/EchoBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"import task.Todo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"import task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"import task.DataManager; // if it\u0027s in the task package","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"public class EchoBox {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); //use of dynamic array","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Hello! I\u0027m EchoBox\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"How can I help you today?\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        tasks \u003d DataManager.loadTasks();  // Load tasks from file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        while (true) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"            processCommand(userInput);  // Call the method to process the command","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"            if (userInput.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"                System.out.println(\"EchoBox: Bye! Don\u0027t forget to take breaks! See you soon!\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"                break; // Exit the loop","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"    private static void processCommand(String userInput) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"        String command \u003d userInput.toLowerCase();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"        if (command.startsWith(\"list\")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"            displayTaskList();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"        } else if (command.startsWith(\"mark \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"                handleMark(userInput);  // This may throw EchoBoxException","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"            } catch (EchoBoxException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"                System.out.println(\"EchoBox: \" + e.getMessage());  // Handle and print the exception message","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"        }  else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"                handleUnmark(userInput);  // This may throw EchoBoxException","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"            } catch (EchoBoxException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"                System.out.println(\"EchoBox: \" + e.getMessage());  // Handle and print the exception message","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"        } else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"                handleAddTodo(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"            } catch (EchoBoxException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"                System.out.println(\"EchoBox: \" + e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"        } else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"                handleAddDeadline(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"            } catch (EchoBoxException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"                System.out.println(\"EchoBox: \" + e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"        } else if (command.startsWith(\"event \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"                handleAddEvent(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"            } catch (EchoBoxException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"                System.out.println(\"EchoBox: \" + e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"        } else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"            try{","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"                handleDelete(userInput);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"            } catch (EchoBoxException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"                System.out.println(\"EchoBox: \" + e.getMessage());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"swethacool"},"content":"        } else if (userInput.equalsIgnoreCase(\"Hello\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"swethacool"},"content":"            System.out.println(\"EchoBox: Hey there! How is your day?\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"swethacool"},"content":"        } else if (userInput.equalsIgnoreCase(\"sad\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"swethacool"},"content":"            System.out.println(\"EchoBox: Don\u0027t be sad! Here\u0027s a hug :)\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"swethacool"},"content":"        } else if(!userInput.equalsIgnoreCase(EXIT_COMMAND)){","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"swethacool"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"swethacool"},"content":"    private static void displayTaskList() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"swethacool"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"swethacool"},"content":"            System.out.println(\"EchoBox: No tasks in your list!\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"swethacool"},"content":"            return;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"swethacool"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"swethacool"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"swethacool"},"content":"    // Helper method to check if a string is a number","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"swethacool"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"swethacool"},"content":"        return str.matches(\"\\\\d+\");  // Returns true if str contains only digits","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"swethacool"},"content":"    private static void handleDelete(String input) throws EchoBoxException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2 || !isNumeric(parts[1])) { //check if user provided number","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Oops! Please provide a valid task number to delete.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"swethacool"},"content":"        int taskNum \u003d Integer.parseInt(parts[1]) - 1; // Convert user input to index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"swethacool"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Oops! Task number out of range.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"swethacool"},"content":"        Task removedTask \u003d tasks.remove(taskNum);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks);  // Save the tasks to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"EchoBox: Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"  \" + removedTask);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"swethacool"},"content":"    private static void handleMark(String input) throws EchoBoxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2 || !isNumeric(parts[1])) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Oops! Please provide a valid task number to mark.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"swethacool"},"content":"        int taskNum \u003d Integer.parseInt(parts[1]) - 1; // Convert to zero-based index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"swethacool"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Oops! Task number out of range.\");// Ensures valid range","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"swethacool"},"content":"        tasks.get(taskNum).markAsDone(); // Marks task as done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks);  // Save the tasks to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"  \" + tasks.get(taskNum));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"swethacool"},"content":"    private static void handleUnmark(String input) throws EchoBoxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2 || !isNumeric(parts[1])) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Oops! Please provide a valid task number to mark.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"swethacool"},"content":"        int taskNum \u003d Integer.parseInt(parts[1]) - 1; // Convert to zero-based index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"swethacool"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Oops! Task number out of range.\");// Ensures valid range","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"swethacool"},"content":"        tasks.get(taskNum).unmarkAsDone(); // Marks task as not done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks);  // Save the tasks to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"EchoBox: OK, I\u0027ve unmarked this task. Let\u0027s get it done soon! 💪\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"  \" + tasks.get(taskNum)); // Displays updated task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"swethacool"},"content":"    private static void handleAddTodo(String input) throws EchoBoxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.split(\" \", 2); // Split only into two parts: \"todo\" and description","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox:OOPS!! Task description cannot be empty!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"swethacool"},"content":"        String taskDescription \u003d parts[1].trim(); // Get the task description","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"swethacool"},"content":"        tasks.add(new Todo(taskDescription)); // Create the new Todo task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks);  // Save the tasks to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"swethacool"},"content":"        printTaskAdded();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"swethacool"},"content":"    private static void handleAddDeadline(String input) throws EchoBoxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \", 2);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Incorrect format! Use: deadline \u003cdesc\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"swethacool"},"content":"        tasks.add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks);  // Save the tasks to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"swethacool"},"content":"        printTaskAdded();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"swethacool"},"content":"    private static void handleAddEvent(String input) throws EchoBoxException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.substring(6).split(\" /from | /to \", 3);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Incorrect format! Use: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"swethacool"},"content":"        if (parts[0].isEmpty()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"swethacool"},"content":"            throw new EchoBoxException(\"EchoBox: Task description cannot be empty!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"swethacool"},"content":"        tasks.add(new Event(parts[0], parts[1], parts[2]));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks);  // Save the tasks to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"swethacool"},"content":"        printTaskAdded();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"swethacool"},"content":"    private static void printTaskAdded() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"swethacool"},"content":"        System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"swethacool":182}},{"path":"src/main/java/EchoBoxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"public class EchoBoxException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"    public EchoBoxException(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"        super(message);  // Call the constructor of the Exception class to set the error message","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":6}},{"path":"src/main/java/task/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.io.*;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"public class DataManager {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    private static final String FILE_PATH \u003d \"./data/EchoBox.txt\"; // File path for the task list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    // Ensure data folder exists","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    static {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"            folder.mkdirs(); // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    // Method to load tasks from the file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    public static List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"        // Check if file exists, if not return empty task list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"            return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"            String line;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"                Task task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"                // Create tasks based on type (you can add more types like Deadline, Event)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"                switch (taskType) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"                    case \"T\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"                    case \"D\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"                        String by \u003d parts[3]; // Deadline\u0027s \"by\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"                    case \"E\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"                        String from \u003d parts[3]; // Event\u0027s \"from\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"                        String to \u003d parts[4];   // Event\u0027s \"to\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"                    default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Task(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"                }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"        return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"    // Method to save tasks to the file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"swethacool"},"content":"                writer.write(task.toFileString()); // Convert task to the required string format","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"swethacool"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"swethacool"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"swethacool"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"swethacool":77}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"    protected String by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    // Convert Deadline object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":18}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"    protected String from, to;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    // Convert Event object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":19}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"public class Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"    protected String description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        return (isDone ? \"[X]\" : \"[ ] \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"    // Convert task to string format for saving (e.g., \"T | 1 | read book\")","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":28}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    // Convert Todo object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"bye","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"swethacool":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"REM Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"REM Delete output from previous run","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"REM Compile the code into the bin folder","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\EchoBox.java","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"REM No error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"REM Run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"java -classpath ..\\bin EchoBox \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"REM Compare the output to the expected output","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"swethacool":10,"-":12}}]
