[{"path":"data/EchoBox.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"T | 0 | eggs","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"T | 1 | eat food","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"T | 0 | study a lot","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"T | 0 | Read Book","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"D | 0 | Complete the project report | 15-04-2025","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"D | 0 | Complete the project report | 15-04-2025","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"E | 0 | Project meeting | Monday 2pm | Monday 4pm","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"T | 0 | read books","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"swethacool":12}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"# **EchoBox User Guide**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"![screenshot of EchoBox in action](img.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"## **Product introduction** ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"EchoBox is a simple, user-friendly chatbot designed to help you organize your tasks, keep track of your to-dos, deadlines, and events in a categorized manner, and even brighten your day! With intuitive commands, EchoBox allows you to manage your tasks efficiently and interact in a fun way. Whether you need to add a new task, mark it as done, or simply get a motivational response when feeling down, EchoBox is here to make task management easier and more enjoyable.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"## **Table of contents** ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"\u003cins\u003eFeatures:\u003c/ins\u003e ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"1. _Add Deadlines_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"2. _Add Events_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"3. _Add ToDos_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"4. _Mark tasks as done_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"5. _Mark tasks as undone_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"6. _Find tasks_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"7. _List the available tasks_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"8. _Delete unwanted tasks_","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"### **Add deadlines** ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"Add a task with a due date using deadline `\u003cdescription\u003e /by \u003cdue date\u003e`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"#### Command: deadline Complete the project report /by 15-04-2025","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"#### Outcome: ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"![img_1.png](img_1.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"### **Add Events** ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"Add an event using event `\u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"#### Command: event Project meeting /from Monday 2pm /to Monday 4pm","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"#### Outcome: ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"![img_2.png](img_2.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"### **Add ToDos** ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"Add a task with todo: `\u003cdescription\u003e`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"#### Command: todo read books ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"#### Outcome:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"![img_3.png](img_3.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"### **Mark tasks as done** ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"Mark a finished task as done with mark `\u003ctask number\u003e`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"#### Command: mark 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"#### Outcome:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"![img_4.png](img_4.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"### **Mark tasks as not done** ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"Mark uncompleted task as not done with mark `\u003ctask number\u003e`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"#### Command: unmark 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"#### Outcome:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"![img_5.png](img_5.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"### **Find task**   ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"Search tasks by keyword using find `\u003ckeyword\u003e`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"#### Command: Find book","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"#### Outcome: ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"![img_6.png](img_6.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"### **List tasks**   ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"View all tasks with `\u003clist\u003e`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"#### Command: list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"#### Outcome:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"![img_7.png](img_7.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"swethacool"},"content":"### **Delete tasks**   ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"swethacool"},"content":"Delete an unwanted task using delete `\u003ctask number\u003e`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"swethacool"},"content":"#### Command: delete 2","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"swethacool"},"content":"#### Outcome:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"swethacool"},"content":"![img_8.png](img_8.png)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"swethacool"},"content":"## **End**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"swethacool"},"content":"That\u0027s all you need to get started with EchoBox! ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"swethacool"},"content":"With simple commands come powerful Organization!","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"swethacool":67,"-":15}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * Executes the bye command, which sets the exit flag to true, indicating","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * that the application should terminate.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"    ByeCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        exit \u003d true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":14}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * Represents a generic command in the EchoBox application.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * This class serves as a base class for specific commands such as ByeCommand, ListCommand, etc.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * It handles the basic functionality of a command, including parsing task indices and defining the exit flag.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"public class Command {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    protected String input;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    protected boolean exit;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    Command(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        exit \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"); //unknown command","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    public boolean isExit(){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        return exit;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"     * Parses and validates the task index from user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"    protected int parseIndex(String input, TaskList tasks) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2 || !parts[1].matches(\"\\\\d+\")) throw new EchoBoxException(\"Invalid task number!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) throw new EchoBoxException(\"Task number out of range!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"        return index;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":31}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Deadline;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import task.Todo;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * Parses the user input to create a {@link Deadline} task and adds it to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * Saves the task to storage and shows a confirmation message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" * Throws an {@link EchoBoxException} for invalid input format.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    DeadlineCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \", 2);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2) throw new EchoBoxException(\"Incorrect format! Use: deadline \u003cdesc\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        tasks.addTask(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this deadline:\\n  \" + tasks.getTask(tasks.size() - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":23}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Event;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * Parses the user input to identify the task index, deletes the task from the task list,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * and updates the storage. Displays a confirmation message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" * Throws an {@link EchoBoxException} for invalid task index.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    DeleteCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        int index \u003d parseIndex(input, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        Task removed \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\\n  \" + removed);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":22}},{"path":"src/main/java/EchoBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * The EchoBox class serves as the main entry point of the EchoBox application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * It initializes all components and manages the main program loop.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"public class EchoBox {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"    private Storage storage; // Handles loading and saving tasks to a file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    private TaskList tasks; // Holds the current list of tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    private Ui ui; // Manages interactions with the user (input/output)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"     * Constructs an EchoBox instance.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"     * Initializes the UI, storage, and parser components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"     * Attempts to load the tasks from the specified file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"     *filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    public EchoBox(String filePath) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"        catch (EchoBoxException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"            ui.showLoadingError(e.getMessage()); //loading failure shows error","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"     * Runs the main loop of the EchoBox application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"     * Reads user input, parses and executes commands until the user exits.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"     * If any errors occur during execution, they are caught and displayed to the user.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"    public void run() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"            try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"                c.execute(ui, tasks, storage);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"            } catch (EchoBoxException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"                ui.showMessage(\"EchoBox: \" + e.getMessage());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"        ui.showExit();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"        new EchoBox(\"./data/EchoBox.txt\").run();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"swethacool":51}},{"path":"src/main/java/EchoBoxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * Custom exception class for handling errors specific to the EchoBox application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * It extends the built-in `Exception` class to provide more meaningful exception messages.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"public class EchoBoxException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"     * Constructs a new EchoBoxException with the specified detail message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"     * @param message The detail message to be passed to the Exception constructor.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    public EchoBoxException(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        super(message);  // Call the constructor of the Exception class to set the error message","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":14}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Deadline;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import task.Event;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * Represents a command that adds an event to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The event command expects the format: \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\".","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It parses the user input, creates an Event object, and adds it to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" * Afterward, the task list is saved and the user is shown a confirmation message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    EventCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.substring(6).split(\" /from | /to \", 3);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 3) throw new EchoBoxException(\"Incorrect format! Use: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        tasks.addTask(new Event(parts[0], parts[1], parts[2]));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this event:\\n  \" + tasks.getTask(tasks.size() - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":23}},{"path":"src/main/java/FeelingsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * Represents a command that responds to the user\u0027s emotional state.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * The command displays a message based on whether the user is feeling sad or not.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * If the user is sad, a message of encouragement is shown; otherwise, a positive message is displayed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"public class FeelingsCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    private boolean isSad;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    FeelingsCommand(String input, boolean isSad){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"        this.isSad \u003d isSad;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        if(isSad)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"Don\u0027t be sad! Here\u0027s a hug :)\"); //cheer up message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        else","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"That\u0027s good to hear, keep going!\"); //cheer up message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":20}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * Represents a command that searches for tasks containing a specific keyword in their description.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" * The command extracts the keyword from the input, searches the task list, and displays matching tasks.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    FindCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        String keyword \u003d input.substring(5).trim(); // Extract keyword after \u0027find \u0027","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"OOPS!!! Please provide a keyword to search for.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"            return;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"        // Loop through all tasks and check if the description contains the keyword","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"No tasks found with the keyword: \" + keyword); //no match","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"        else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"Here are the matching tasks in your list:\"); //match spotted","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"                ui.showMessage((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":39}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * Represents a command that lists all the tasks in the current task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * If the task list is empty, it displays a message indicating so. Otherwise, it displays all tasks.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"   ListCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"       super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"   }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"   @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"   void execute(Ui ui, TaskList tasks, Storage storage){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"       List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"       if (taskList.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"           ui.showMessage(\"EchoBox: No tasks in your list!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"       }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"       else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"           for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"               ui.showMessage((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"           }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"       }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"   }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":25}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * Represents a command that marks a specific task as done in the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * The task is identified by its index, and the task\u0027s status is updated.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"    MarkCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"     * Executes the mark command by marking the specified task as done.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"     * If the task is found and marked, it updates the storage and shows a confirmation message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        int index \u003d parseIndex(input, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        tasks.getTask(index).markAsDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.getTask(index));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":21}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The Parser class is responsible for parsing user input and creating the corresponding command objects.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It determines the type of command based on the input string and returns the appropriate Command object.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"public class Parser {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"     * It checks the input for specific keywords or command patterns and creates the relevant Command.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        String command \u003d input.trim().toLowerCase();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"            return new ByeCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        else if (command.equals(\"list\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"            return new ListCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"        else if (command.startsWith(\"mark \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"        else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"        else if (command.startsWith(\"find \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"        else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"        else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"        else if (command.startsWith(\"event \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"            return new EventCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"        else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"        else if (command.equals(\"sad\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"            return new FeelingsCommand(input, true);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"        else if (command.equals(\"good\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"            return new FeelingsCommand(input, false);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"        else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"            return new Command(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":54}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import task.DataManager;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The Storage class handles loading and saving tasks to and from a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It uses DataManager to perform the actual file operations such load and save.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"public class Storage {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    public List\u003cTask\u003e loadTasks() throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        return DataManager.loadTasks(); //DataManager is implemented for loading","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks); //DataManager is implemented for saving","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":24}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The TaskList class manages a collection of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It provides methods to add, delete, and retrieve tasks, as well as check the list size or emptiness.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"public class TaskList {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"        return tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"     * Deletes a task from the TaskList based on the provided index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"     * @return The task that was removed from the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"     * Retrieves a task from the TaskList by index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"    public int size() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"     * @return True if the TaskList is empty, otherwise false.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":69}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Todo;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * The TodoCommand class represents a command to add a Todo task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * It parses the user input, validates the description, creates a new Todo task,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * and updates the task list and storage.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    TodoCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        String desc \u003d input.substring(5).trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        if (desc.isEmpty()) throw new EchoBoxException(\"Task description cannot be empty!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        tasks.addTask(new Todo(desc));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n  \" + tasks.getTask(tasks.size() - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * The Ui class handles all user interactions, including reading commands and displaying messages to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * It provides methods for showing welcome and exit messages, as well as handling errors and displaying custom messages.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Ui {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    public Ui() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"     * This message is shown when the program starts.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Hey there! I\u0027m EchoBox\\nHow is your day?\"); //greeting message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"     * Displays an exit message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"     * This message is shown when the program exits.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"    public void showExit() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"EchoBox: Bye! Don\u0027t forget to take breaks! See you soon!\"); //exit message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Error loading tasks: \" + message);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"     * @return The command entered by the user as a trimmed string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"     * Displays a custom message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":53}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The UnmarkCommand class represents a command to unmark a task as done.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It parses the user input, identifies the task to unmark, and updates","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" * the task status and storage accordingly.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    UnmarkCommand(String input){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        super(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    void execute(Ui ui, TaskList tasks, Storage storage) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        int index \u003d parseIndex(input, tasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        tasks.getTask(index).unmarkAsDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"OK, I\u0027ve unmarked this task:\\n  \" + tasks.getTask(index));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":23}},{"path":"src/main/java/task/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.io.*;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * Manages loading and saving tasks to and from a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" * It handles file operations, including checking the existence of the file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":" * and ensuring the necessary directories are created.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"public class DataManager {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    private static final String FILE_PATH \u003d \"./data/EchoBox.txt\"; // File path for the task list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    // Ensure data folder exists","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    static {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"            folder.mkdirs(); // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"     * It reads the file, parses each task, and returns a list of Task objects.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"     * If the file does not exist, an empty list is returned.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"     * @return A list of tasks read from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"    public static List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"        // Check if file exists, if not return empty task list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"            return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"            String line;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"                Task task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"                // Create tasks based on type","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"                switch (taskType) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"                    case \"T\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"                    case \"D\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"                        String by \u003d parts[3]; // Deadline\u0027s \"by\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"                    case \"E\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"                        String from \u003d parts[3]; // Event\u0027s \"from\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"                        String to \u003d parts[4];   // Event\u0027s \"to\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"                    default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Task(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"                }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"swethacool"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"swethacool"},"content":"        return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"swethacool"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"swethacool"},"content":"     * Each task is converted into a string format and written to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"swethacool"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"swethacool"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"swethacool"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"swethacool"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"swethacool"},"content":"                writer.write(task.toFileString()); // Convert task to the required string format","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"swethacool"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"swethacool"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"swethacool"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"swethacool":90}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a task with a deadline. Inherits from the Task class.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * A Deadline task has a description and a time by which it needs to be completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    protected String by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    // Convert Deadline object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":22}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a task with a time range. Inherits from the Task class.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * An Event task has a description and a time range defined by the start and end times.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    protected String from, to;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    // Convert Event object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":23}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * This is the base class for all task types, such as Deadline, Event, etc.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    protected String description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        return (isDone ? \"[X]\" : \"[ ] \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"        return description;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"    // Convert task to string format for saving (e.g., \"T | 1 | read book\")","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":36}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a Todo task that can be marked as done or undone.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * Inherits from the Task class and provides a string representation of a Todo task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    // Convert Todo object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"bye","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"swethacool":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"REM Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"REM Delete output from previous run","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"REM Compile the code into the bin folder","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\EchoBox.java","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"REM No error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"REM Run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"java -classpath ..\\bin EchoBox \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"REM Compare the output to the expected output","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"swethacool":10,"-":12}}]
