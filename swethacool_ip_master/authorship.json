[{"path":"data/EchoBox.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"D | 1 | return book | Sunday","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"T | 0 | buy eggs","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"T | 0 | read books and help with chores","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"T | 0 | eggs","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"T | 1 | eat food","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"T | 1 | study a lot","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":8}},{"path":"src/main/java/EchoBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * The EchoBox class serves as the main entry point of the EchoBox application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * It initializes all components and manages the main program loop.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"public class EchoBox {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"    private Storage storage; // Handles loading and saving tasks to a file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    private TaskList tasks; // Holds the current list of tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    private Ui ui; // Manages interactions with the user (input/output)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    private Parser parser; // Parses and executes user commands","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"     * Constructs an EchoBox instance.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"     * Initializes the UI, storage, and parser components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"     * Attempts to load the tasks from the specified file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"     *filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    public EchoBox(String filePath) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"        catch (EchoBoxException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"            ui.showLoadingError(e.getMessage()); //loading failure shows error","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"        parser \u003d new Parser(ui, tasks, storage); // Parser has access to everything needed","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"     * Runs the main loop of the EchoBox application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"     * Reads user input, parses and executes commands until the user exits.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"    public void run() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"            isExit \u003d parser.parseAndExecute(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"        ui.showExit();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"        new EchoBox(\"./data/EchoBox.txt\").run();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"swethacool":47}},{"path":"src/main/java/EchoBoxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":" * Custom exception class for handling errors specific to the EchoBox application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":" * It extends the built-in `Exception` class to provide more meaningful exception messages.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"public class EchoBoxException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"     * Constructs a new EchoBoxException with the specified detail message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"     * @param message The detail message to be passed to the Exception constructor.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    public EchoBoxException(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"        super(message);  // Call the constructor of the Exception class to set the error message","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The Parser class handles interpreting and executing user commands.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It connects the user interface, task list, and storage components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"public class Parser {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    private final Ui ui; // Handles user input and output","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    private final TaskList tasks; // The list of tasks being managed","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    private final Storage storage; // Manages saving/loading tasks to/from storage","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    public Parser(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"     * Parses the user\u0027s input and executes the corresponding command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"     * @param input The user\u0027s command input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"     * @return true if the user exits the program, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"    public boolean parseAndExecute(String input) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"        String command \u003d input.trim().toLowerCase();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"                return true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"            else if (command.equals(\"list\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"                handleList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"            else if (command.startsWith(\"mark \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"                handleMark(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"            else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"                handleUnmark(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"            else if (command.startsWith(\"find \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"                handleFind(input); // Handle the find command","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"            else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"                handleAddTodo(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"            else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"                handleAddDeadline(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"            else if (command.startsWith(\"event \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"                handleAddEvent(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"            else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"                handleDelete(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"            else if (command.equals(\"sad\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"                ui.showMessage(\"Don\u0027t be sad! Here\u0027s a hug :)\"); //cheer up message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"            else if (command.equals(\"good\")) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"                ui.showMessage(\"That\u0027s good to hear, keep going!\"); //cheer up message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"            else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"                ui.showMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"); //unknown command","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"        catch (EchoBoxException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"EchoBox: \" + e.getMessage());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"        return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"swethacool"},"content":"     * Displays the current list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"swethacool"},"content":"    private void handleList() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"swethacool"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"swethacool"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"EchoBox: No tasks in your list!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"swethacool"},"content":"        else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"swethacool"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"swethacool"},"content":"                ui.showMessage((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"swethacool"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"swethacool"},"content":"    private void handleMark(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"swethacool"},"content":"        int index \u003d parseIndex(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"swethacool"},"content":"        tasks.getTask(index).markAsDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.getTask(index));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"swethacool"},"content":"     * Unmarks a completed task based on user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"swethacool"},"content":"    private void handleUnmark(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"swethacool"},"content":"        int index \u003d parseIndex(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"swethacool"},"content":"        tasks.getTask(index).unmarkAsDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"OK, I\u0027ve unmarked this task:\\n  \" + tasks.getTask(index));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"swethacool"},"content":"     * Searches task based on the keyword provided by the user","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"swethacool"},"content":"    private void handleFind(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"swethacool"},"content":"        String keyword \u003d input.substring(5).trim(); // Extract keyword after \u0027find \u0027","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"swethacool"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"OOPS!!! Please provide a keyword to search for.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"swethacool"},"content":"            return;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"swethacool"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"swethacool"},"content":"        // Loop through all tasks and check if the description contains the keyword","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"swethacool"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"swethacool"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"swethacool"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"swethacool"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"No tasks found with the keyword: \" + keyword); //no match","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"swethacool"},"content":"        else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"swethacool"},"content":"            ui.showMessage(\"Here are the matching tasks in your list:\"); //match spotted","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"swethacool"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"swethacool"},"content":"                ui.showMessage((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"swethacool"},"content":"     * Adds a Todo task based on user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"swethacool"},"content":"    private void handleAddTodo(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"swethacool"},"content":"        String desc \u003d input.substring(5).trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"swethacool"},"content":"        if (desc.isEmpty()) throw new EchoBoxException(\"Task description cannot be empty!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"swethacool"},"content":"        tasks.addTask(new Todo(desc));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n  \" + tasks.getTask(tasks.size() - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"swethacool"},"content":"     * Adds a Deadline task based on user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"swethacool"},"content":"    private void handleAddDeadline(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \", 2);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2) throw new EchoBoxException(\"Incorrect format! Use: deadline \u003cdesc\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"swethacool"},"content":"        tasks.addTask(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this deadline:\\n  \" + tasks.getTask(tasks.size() - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"swethacool"},"content":"     * Adds an Event task based on user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"swethacool"},"content":"    private void handleAddEvent(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.substring(6).split(\" /from | /to \", 3);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 3) throw new EchoBoxException(\"Incorrect format! Use: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"swethacool"},"content":"        tasks.addTask(new Event(parts[0], parts[1], parts[2]));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this event:\\n  \" + tasks.getTask(tasks.size() - 1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"swethacool"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"swethacool"},"content":"    private void handleDelete(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"swethacool"},"content":"        int index \u003d parseIndex(input);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"swethacool"},"content":"        Task removed \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"swethacool"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"swethacool"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\\n  \" + removed);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"swethacool"},"content":"    * Parses and validates the task index from user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"swethacool"},"content":"    */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"swethacool"},"content":"    private int parseIndex(String input) throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"swethacool"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"swethacool"},"content":"        if (parts.length \u003c 2 || !parts[1].matches(\"\\\\d+\")) throw new EchoBoxException(\"Invalid task number!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"swethacool"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"swethacool"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) throw new EchoBoxException(\"Task number out of range!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"swethacool"},"content":"        return index;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":188}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import task.DataManager;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The Storage class handles loading and saving tasks to and from a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It uses DataManager to perform the actual file operations such load and save.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"public class Storage {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    public List\u003cTask\u003e loadTasks() throws EchoBoxException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        return DataManager.loadTasks(); //DataManager is implemented for loading","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        DataManager.saveTasks(tasks); //DataManager is implemented for saving","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":24}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import task.Task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" * The TaskList class manages a collection of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * It provides methods to add, delete, and retrieve tasks, as well as check the list size or emptiness.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"public class TaskList {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"        return tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"     * Deletes a task from the TaskList based on the provided index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"     * @return The task that was removed from the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"     * Retrieves a task from the TaskList by index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"    public int size() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"     * @return True if the TaskList is empty, otherwise false.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":69}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * The Ui class handles all user interactions, including reading commands and displaying messages to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * It provides methods for showing welcome and exit messages, as well as handling errors and displaying custom messages.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Ui {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    public Ui() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"     * This message is shown when the program starts.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Hey there! I\u0027m EchoBox\\nHow is your day?\"); //greeting message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"     * Displays an exit message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"     * This message is shown when the program exits.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"    public void showExit() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"EchoBox: Bye! Don\u0027t forget to take breaks! See you soon!\"); //exit message","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"        System.out.println(\"Error loading tasks: \" + message);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"     * @return The command entered by the user as a trimmed string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"     * Displays a custom message to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"swethacool":53}},{"path":"src/main/java/task/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"import java.io.*;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":"import java.util.List;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":" * Manages loading and saving tasks to and from a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":" * It handles file operations, including checking the existence of the file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":" * and ensuring the necessary directories are created.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"public class DataManager {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    private static final String FILE_PATH \u003d \"./data/EchoBox.txt\"; // File path for the task list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    // Ensure data folder exists","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    static {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"            folder.mkdirs(); // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"     * It reads the file, parses each task, and returns a list of Task objects.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"     * If the file does not exist, an empty list is returned.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"     * @return A list of tasks read from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"    public static List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"        // Check if file exists, if not return empty task list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"swethacool"},"content":"            return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"swethacool"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"swethacool"},"content":"            String line;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"swethacool"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"swethacool"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"swethacool"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"swethacool"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"swethacool"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"swethacool"},"content":"                Task task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"swethacool"},"content":"                // Create tasks based on type (you can add more types like Deadline, Event)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"swethacool"},"content":"                switch (taskType) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"swethacool"},"content":"                    case \"T\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"swethacool"},"content":"                    case \"D\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"swethacool"},"content":"                        String by \u003d parts[3]; // Deadline\u0027s \"by\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"swethacool"},"content":"                    case \"E\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"swethacool"},"content":"                        String from \u003d parts[3]; // Event\u0027s \"from\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"swethacool"},"content":"                        String to \u003d parts[4];   // Event\u0027s \"to\" value","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swethacool"},"content":"                    default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swethacool"},"content":"                        task \u003d new Task(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"swethacool"},"content":"                        task.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"swethacool"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"swethacool"},"content":"                }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"swethacool"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"swethacool"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"swethacool"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"swethacool"},"content":"        return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"swethacool"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"swethacool"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"swethacool"},"content":"     * Each task is converted into a string format and written to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"swethacool"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"swethacool"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"swethacool"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"swethacool"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"swethacool"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"swethacool"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"swethacool"},"content":"                writer.write(task.toFileString()); // Convert task to the required string format","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"swethacool"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"swethacool"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"swethacool"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"swethacool"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"swethacool"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"swethacool":97}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a task with a deadline. Inherits from the Task class.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * A Deadline task has a description and a time by which it needs to be completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    protected String by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    // Convert Deadline object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":22}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a task with a time range. Inherits from the Task class.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * An Event task has a description and a time range defined by the start and end times.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    protected String from, to;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    // Convert Event object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":23}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * This is the base class for all task types, such as Deadline, Event, etc.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    protected String description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"        return (isDone ? \"[X]\" : \"[ ] \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"swethacool"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"swethacool"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swethacool"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"swethacool"},"content":"        return description;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swethacool"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"swethacool"},"content":"    // Convert task to string format for saving (e.g., \"T | 1 | read book\")","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"swethacool"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":36}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"package task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"swethacool"},"content":" * Represents a Todo task that can be marked as done or undone.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"swethacool"},"content":" * Inherits from the Task class and provides a string representation of a Todo task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swethacool"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"swethacool"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"swethacool"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"swethacool"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"    // Convert Todo object to the string format for saving to file","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"swethacool"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"swethacool":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swethacool"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"swethacool"},"content":"list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"bye","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"swethacool":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"swethacool"},"content":"REM Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"swethacool"},"content":"REM Delete output from previous run","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"swethacool"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"swethacool"},"content":"REM Compile the code into the bin folder","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"swethacool"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\EchoBox.java","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"swethacool"},"content":"REM No error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swethacool"},"content":"REM Run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"swethacool"},"content":"java -classpath ..\\bin EchoBox \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"swethacool"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"swethacool"},"content":"REM Compare the output to the expected output","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"swethacool":10,"-":12}}]
