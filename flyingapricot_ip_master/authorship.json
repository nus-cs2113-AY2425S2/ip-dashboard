[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"# Orange project template","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":"This is a project template for a greenfield Java project. It\u0027s named after Orange. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"1. After that, locate the `src/main/java/Orange.java` file, right-click it, and choose `Run Orange.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"flyingapricot":3,"-":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"# Orange Chatbot - User Guide","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":"## Introduction","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":"**Orange** is a command-line-based chatbot designed to help users manage their tasks efficiently. ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":"Users can add different types of tasks, mark them as completed, delete them, find tasks, and check tasks on specific dates. ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":"Tasks are automatically saved and loaded from a file, ensuring persistence across sessions.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"## Quick Start","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"1. Ensure you have **Java 11** or later installed on your computer.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"2. Download the `Orange.jar` file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"3. Open a terminal or command prompt in the directory containing `Orange.jar`.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"4. Run the chatbot using the command:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"   ```sh","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"   java -jar Orange.jar","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"   ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"5. Start entering commands to interact with **Orange**.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"## Features","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"### 1. Listing all tasks: `list`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"Displays all tasks stored in Orange.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"list","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"**Example Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"1. [T][ ] Buy groceries","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"2. [D][X] Submit assignment (by: Mar 10 2024 23:59)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"3. [E][ ] Team meeting (from: Mar 12 2024 14:00 to: Mar 12 2024 15:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"### 2. Adding a To-Do task: `todo`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"Adds a To-Do task to the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"todo Read a book","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"[T][ ] Read a book","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"### 3. Adding a Deadline task: `deadline`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"Adds a Deadline task with a specified due date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"deadline TASK_DESCRIPTION /by YYYY-MM-DD HH:mm","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"deadline Finish report /by 2024-03-15 18:00","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"[D][ ] Finish report (by: Mar 15 2024 18:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"### 4. Adding an Event task: `event`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"Adds an Event task with a specified start and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"event TASK_DESCRIPTION /from YYYY-MM-DD HH:mm /to YYYY-MM-DD HH:mm","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"event Conference /from 2024-04-01 09:00 /to 2024-04-01 17:00","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"[E][ ] Conference (from: Apr 01 2024 09:00 to: Apr 01 2024 17:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"### 5. Marking a task as done: `mark`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"Marks a specified task as completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"mark 2","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"[D][X] Finish report (by: Mar 15 2024 18:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"### 6. Unmarking a task: `unmark`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"Marks a specified task as not completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"flyingapricot"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"flyingapricot"},"content":"unmark 2","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"flyingapricot"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"flyingapricot"},"content":"[D][ ] Finish report (by: Mar 15 2024 18:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"flyingapricot"},"content":"### 7. Deleting a task: `delete`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"flyingapricot"},"content":"Deletes a specified task from the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"flyingapricot"},"content":"delete TASK_NUMBER","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"flyingapricot"},"content":"delete 3","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"flyingapricot"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"flyingapricot"},"content":"[E][ ] Conference (from: Apr 01 2024 09:00 to: Apr 01 2024 17:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"flyingapricot"},"content":"### 8. Finding tasks by keyword: `find`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"flyingapricot"},"content":"Searches for tasks that contain a specific keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"flyingapricot"},"content":"find KEYWORD","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"flyingapricot"},"content":"find report","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"flyingapricot"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"flyingapricot"},"content":"[D][ ] Finish report (by: Mar 15 2024 18:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"flyingapricot"},"content":"### 9. Checking tasks on a specific date: `checkondate`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"flyingapricot"},"content":"Lists all tasks that are due or end on a given date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"flyingapricot"},"content":"checkondate YYYY-MM-DD","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"flyingapricot"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"flyingapricot"},"content":"checkondate 2024-03-15","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"flyingapricot"},"content":"Here are the tasks on Mar 15 2024:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"flyingapricot"},"content":"[D][ ] Finish report (by: Mar 15 2024 18:00)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"flyingapricot"},"content":"### 10. Exiting the program: `bye`","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"flyingapricot"},"content":"Terminates the chatbot session.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"flyingapricot"},"content":"**Usage:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"flyingapricot"},"content":"bye","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"flyingapricot"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"flyingapricot"},"content":"\u003ch2\u003eCommand Summary\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"flyingapricot"},"content":"\u003cp\u003eHere is a quick reference for all commands:\u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"flyingapricot"},"content":"## Command Summary","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"flyingapricot"},"content":"Here is a quick reference for all commands:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"flyingapricot"},"content":"| Command        | Format                                                               |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"flyingapricot"},"content":"|----------------|----------------------------------------------------------------------|","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"flyingapricot"},"content":"| **list**       | `list`                                                               |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"flyingapricot"},"content":"| **todo**       | `todo TASK_DESCRIPTION`                                              |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"flyingapricot"},"content":"| **deadline**   | `deadline TASK_DESCRIPTION /by YYYY-MM-DD HH:mm`                     |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"flyingapricot"},"content":"| **event**      | `event TASK_DESCRIPTION /from YYYY-MM-DD HH:mm /to YYYY-MM-DD HH:mm` |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"flyingapricot"},"content":"| **mark**       | `mark TASK_NUMBER`                                                   |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"flyingapricot"},"content":"| **unmark**     | `unmark TASK_NUMBER`                                                 |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"flyingapricot"},"content":"| **delete**     | `delete TASK_NUMBER`                                                 |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"flyingapricot"},"content":"| **find**       | `find KEYWORD`                                                       |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"flyingapricot"},"content":"| **checkondate**| `checkondate YYYY-MM-DD`                                             |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"flyingapricot"},"content":"| **bye**        | `bye`                                                                |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"flyingapricot"},"content":"## Saving and Loading","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"flyingapricot"},"content":"- Orange automatically **saves** tasks to a file (`saved.csv`) after every command that modifies tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"flyingapricot"},"content":"- Tasks are **loaded** from `saved.csv` when the chatbot starts.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"flyingapricot"},"content":"## Error Handling","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"flyingapricot"},"content":"If you enter an invalid command, Orange will prompt you with an appropriate error message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"flyingapricot"},"content":"Example:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"flyingapricot"},"content":"invalidcommand","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"flyingapricot"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"flyingapricot"},"content":"No idea what that means, start with a keyword man! List of keywords: \"mark\", \"unmark\", \"list\", \"todo\", \"event\", \"deadline\", \"delete\", \"checkondate\", \"find\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"flyingapricot"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"flyingapricot"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"flyingapricot"},"content":"## Acknowledgements","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"flyingapricot"},"content":"- Inspired by the **Duke** chatbot project from NUS Software Engineering Education.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"flyingapricot"},"content":"- Uses Java for implementation.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"flyingapricot":222,"-":21}},{"path":"src/main/java/orange/Orange.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"package orange;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":"import java.util.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":"import orange.command.CommandHandler;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"import orange.task.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"import orange.storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":" * The Orange class represents the main entry point of the Orange chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":" * It initializes the necessary components and manages user input and command execution.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":" * The chatbot continuously listens for user input and processes commands","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":" * until the user types \"bye\" to exit.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":" * @see Storage","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":" * @see TaskManager","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"public class Orange {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"  private Storage storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"  private Ui ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"  private Parser parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"  private TaskManager taskManager;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"   * Constructs an instance of the Orange chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"   * Initializes the storage and task management components.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"  public Orange() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"    try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"      storage \u003d new Storage();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"    } catch (OrangeException o) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"      System.out.println(o.getCustomMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"    taskManager \u003d new TaskManager();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"   * Starts the chatbot and processes user input in a loop.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"   * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"   * The chatbot scans for commands, executes them, and handles exceptions","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"   * if any errors occur during execution.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"   * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"  public void run() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"    Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"    Ui.greeting();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"    String line \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"    line \u003d in.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"    parser \u003d new Parser(line);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"    //Main chatbot loop","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"    while(!line.equals(\"bye\")) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"      String commandWord \u003d parser.scanForCommandWord();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"      CommandHandler command \u003d taskManager.getTask(commandWord);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"      if(command !\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"          command.execute();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"        } catch (OrangeException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"            //Error message","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(e.getCustomMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"      }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"      line \u003d in.nextLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"      parser.updateLine(line);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"    Ui.goodbye();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"   * The main method that starts the Orange chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"   * @param args Command-line arguments (not used).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"    Orange o \u003d new Orange();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"    o.run();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"flyingapricot":92}},{"path":"src/main/java/orange/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"package orange.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.DateParser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":" * Provides user interface functionalities for the Orange chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":" * This class handles displaying messages, tasks, and errors to the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":" * The class contains methods for greeting the user, displaying task lists,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":" * showing success/error messages, and handling user interactions.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"public class Ui {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"     * A horizontal line separator for formatting chatbot responses.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"    private static final String HORIZONTAL_LINE \u003d \"\\t\" + \"-\".repeat(50);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * The name of the chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"    private static final String CHATBOT_NAME \u003d \"ORANGE\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"     * Constructs a Ui instance.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"    public Ui() {}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"     * Displays the greeting message when the chatbot starts.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"     * This method prints a welcome message to the user, introducing the chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"    public static void greeting() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + \"Hello! I\u0027m \" + CHATBOT_NAME);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + \"What can I do for you?\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"     * Displays the goodbye message when the chatbot exits.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"     * This method prints a farewell message to the user before exiting.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"    public static void goodbye() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"     * Displays the list of tasks currently stored.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"    public static void showListOfTasks() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"        TaskList.getInstance().listTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"     * Displays a message Interface when a task is added.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"     * This method prints the task details and updates the total task count.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"     * @param t The task that was added.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"    public static void showAddTask(Task t) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"        System.out.print(\"\\t\\t\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(t.GetTaskWithCompletion());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\tNow you have \" + TaskList.getInstance().getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"     * Displays a message Interface when a task is marked as completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"     * @param t The task that was unmarked.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"    public static void showMarkTask(Task t) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"                \"\\t\\t\" + t.GetTaskWithCompletion());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"     * Displays a message Interface when a task is unmarked as completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"     * @param t The task that was unmarked.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"    public static void showUnmarkTask(Task t) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"flyingapricot"},"content":"                \"\\t\\t\" + t.GetTaskWithCompletion());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"flyingapricot"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"flyingapricot"},"content":"     * @param t The task that was deleted.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"flyingapricot"},"content":"    public static void showDeleteTask(Task t) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + t.GetTaskWithCompletion());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"Now you have \" + TaskList.getInstance().getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"flyingapricot"},"content":"     * Displays an error message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"flyingapricot"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"flyingapricot"},"content":"    public static void showError(String errorMessage) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + errorMessage);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"flyingapricot"},"content":"     * Displays the list of matching tasks found.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"flyingapricot"},"content":"     * @param matchingTasks The list of tasks that match the search criteria.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"flyingapricot"},"content":"    public static void showFoundTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"\\t\" + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"flyingapricot"},"content":"        for(Task task: matchingTasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"flyingapricot"},"content":"                    \"\\t\\t\" + task.GetTaskWithCompletion());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"flyingapricot"},"content":"    public static void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks, LocalDate checkDate) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"Here are the list of tasks that are due on \" + DateParser.getStringFromLocalDate(checkDate));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"flyingapricot"},"content":"        for(Task t: matchingTasks) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(\"\\t\" + t.GetTaskWithCompletion());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"flyingapricot"},"content":"        System.out.println(\"You have \" + matchingTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":165}},{"path":"src/main/java/orange/command/CheckOnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the \"check on date\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command finds and lists all tasks that are scheduled for a specific date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" * @see DateParser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.DateParser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Deadline;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Events;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"public class CheckOnDateCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * Executes the \"check on date\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the date, searches for tasks in the task list","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"     * that are scheduled on the specified date, and displays the results in the UI.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If there is an error in parsing the date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"        LocalDate checkDate \u003d Parser.parseCheckTasksOnDate();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"        // Search for tasks matching the specified date","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"        for (Task task : TaskList.getInstance().getTasks()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"                if (d.getLocalDateTime().toLocalDate().isEqual(checkDate)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"                    matchingTasks.add(d);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"            } else if (task instanceof Events) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"                Events e \u003d (Events) task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"                System.out.println(DateParser.getStringFromLocalDate(e.getEndLocalDateTime().toLocalDate()));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"                if (e.getEndLocalDateTime().toLocalDate().isEqual(checkDate)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"                    matchingTasks.add(e);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"        // Display matching tasks in the UI","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"        Ui.showMatchingTasks(matchingTasks, checkDate);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":60}},{"path":"src/main/java/orange/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * All specific command classes must extend this class and implement the executeCommand method.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see OrangeException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"     * Executes the command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If an error occurs during command execution.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"    public abstract void executeCommand() throws OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":18}},{"path":"src/main/java/orange/command/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Functional interface for handling command execution.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * Implementing classes must provide an implementation for the execute method.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see OrangeException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"@FunctionalInterface","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"public interface CommandHandler {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"     * Executes the command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If an error occurs during command execution.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"    void execute() throws OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":19}},{"path":"src/main/java/orange/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the deadline command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command creates a new deadline task and adds it to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Deadline","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Storage","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.DateParser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import orange.storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Deadline;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * Executes the deadline command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the deadline task description and due date,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     * creates a new Deadline task, adds it to the task list, updates the UI,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"     * and saves the task to the storage file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If there is an error in parsing the deadline command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"        ArrayList\u003cString\u003e deadlineTaskAndDoBy \u003d Parser.parseDeadline();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineTaskAndDoBy.get(0), deadlineTaskAndDoBy.get(1));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"        TaskList.getInstance().addTask(newDeadline);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"        Ui.showAddTask(newDeadline);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"        Storage.updateTaskFile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":44}},{"path":"src/main/java/orange/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the delete command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command deletes a specified task from the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Storage","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"import static orange.exception.ExceptionType.INVALID_TASKNUMBER;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     * Executes the delete command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the task number, retrieves the corresponding task,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * removes it from the task list, updates the UI, and saves the updated task list to storage.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the task number is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"        int taskNumber \u003d Parser.parseDelete();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"        Task taskToDelete;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"            taskToDelete \u003d TaskList.getInstance().getTasks().get(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"            TaskList.getInstance().deleteTask(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"        Ui.showDeleteTask(taskToDelete);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"        Storage.updateTaskFile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":47}},{"path":"src/main/java/orange/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the event command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command creates a new event task and adds it to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Events","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Storage","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Events;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     * Executes the event command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the event task description, start time, and end time,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * creates a new Event task, adds it to the task list, updates the UI,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * and saves the task to the storage file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If there is an error in parsing the event command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"        ArrayList\u003cString\u003e eventTaskStartOnDoBy \u003d Parser.parseEvent();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"        Events newEvent \u003d new Events(eventTaskStartOnDoBy.get(0), eventTaskStartOnDoBy.get(1), eventTaskStartOnDoBy.get(2));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"        TaskList.getInstance().addTask(newEvent);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"        Ui.showAddTask(newEvent);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"        Storage.updateTaskFile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":42}},{"path":"src/main/java/orange/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the find command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command searches for tasks in the task list that match a given keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"     * Executes the find command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the search keyword, searches for matching tasks in the task list,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * and displays the results in the UI.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If there is an error in parsing the find command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"        String taskToFind \u003d Parser.parseFind();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"        // Search the task list","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"        ArrayList\u003cTask\u003e tasksWithMatchingName \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"        for (Task task : TaskList.getInstance().getTasks()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"            if (task.getDescription().contains(taskToFind)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"                tasksWithMatchingName.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"        // Send results to UI","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"        Ui.showFoundTasks(tasksWithMatchingName);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":46}},{"path":"src/main/java/orange/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the list command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command displays all tasks in the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"     * Constructs a ListCommand instance.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"    public ListCommand() {}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"     * Executes the list command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"     * Calls the UI method to display all tasks in the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"        Ui.showListOfTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":28}},{"path":"src/main/java/orange/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the mark command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command marks a specified task as completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Storage","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"import static orange.exception.ExceptionType.INVALID_TASKNUMBER;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     * Executes the mark command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the task number, updates the completion status of the task,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * updates the UI, and saves the updated task list to storage.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the task number is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"        int taskNumber \u003d Parser.parseMark();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"            TaskList.getInstance().updateCompletionStatus(taskNumber, true);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"        Ui.showMarkTask(TaskList.getInstance().getTasks().get(taskNumber));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"        Storage.updateTaskFile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":45}},{"path":"src/main/java/orange/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the todo command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command creates a new todo task and adds it to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Todo","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Storage","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import orange.task.Todo;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"     * Executes the todo command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the todo task description,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * creates a new Todo task, adds it to the task list, updates the UI,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * and saves the task to the storage file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If there is an error in parsing the todo command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"        String toDoDescription \u003d Parser.parseTodo();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"        Todo newToDo \u003d new Todo(toDoDescription);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"        TaskList.getInstance().addTask(newToDo);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"        Ui.showAddTask(newToDo);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"        Storage.updateTaskFile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":40}},{"path":"src/main/java/orange/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles the execution of the unmark command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This command marks a specified task as not completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see Parser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Storage","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"package orange.command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.Parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import orange.storage.Storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import static orange.exception.ExceptionType.INVALID_TASKNUMBER;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"     * Executes the unmark command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     * Parses the user input to extract the task number, updates the completion status of the task,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * updates the UI, and saves the updated task list to storage.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the task number is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"    public void executeCommand() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"        int taskNumber \u003d Parser.parseUnMark();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"            TaskList.getInstance().updateCompletionStatus(taskNumber, false);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"        Ui.showUnmarkTask(TaskList.getInstance().getTasks().get(taskNumber));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"        Storage.updateTaskFile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":43}},{"path":"src/main/java/orange/exception/ExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Defines different types of exceptions that can occur in the Orange chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * Each exception type includes an error code and a descriptive error message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see OrangeException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"package orange.exception;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"import orange.task.TaskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"public enum ExceptionType {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"     * Represents an unknown command exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"    UNKNOWN_COMMAND(1, \"No idea what that means, start with a keyword man! List of keywords: \\\"mark\\\", \\\"unmark\\\", \\\"list\\\", \\\"todo\\\", \\\"event\\\", \\\"deadline\\\", \\\"delete\\\", \\\"checkondate\\\"\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing deadline exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"    MISSING_DEADLINE(2, \"You didn\u0027t provide a deadline date and time! Usage: /by [Date And Time Deadline Task Is Due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"     * Represents an invalid task number exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"    INVALID_TASKNUMBER(3, \"You have provided an invalid task number. Try again using a number from the range 0 - \" + (TaskList.getInstance().getSize()) + \" Usage: mark/unmark/delete [taskNumber] (Add a space between the keyword and taskNumber)\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing todo description exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"    MISSING_TODO_DESCRIPTION(4, \"You have provided an invalid/missing todo description. Todo descriptions cannot be empty. Try again. Usage: todo [todo task description]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing /by keyword in deadline exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"    MISSING_DEADLINE_BYWORD(5, \"You have not used the /by in your deadline command. Try this: deadline [deadline task description] /by [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing deadline description exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"    MISSING_DEADLINE_DESCRIPTION(6, \"You have not provided a deadline task description. Deadline descriptions cannot be empty. Try this: deadline [deadline task description] /by [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing deadline due date exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"    MISSING_DEADLINE_DOBY(7, \"You have not provided a date and time by which to complete the deadline. Try this: deadline [deadline task description] /by [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing /to keyword in event exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"    MISSING_EVENT_TOWORD(8, \"You have not used the /to in your event command. Try this: event [event task description] /from [Date And Time task starts on] /to [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing event description exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"    MISSING_EVENT_DESCRIPTION(9, \"You have not provided an event task description. Try this: event [event task description] /from [Date And Time task starts on] /to [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing event start date exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"    MISSING_EVENT_STARTON(10, \"You have not provided the start date for your event. Try this: event [event task description] /from [Date And Time task starts on] /to [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing event due date exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"    MISSING_EVENT_DOBY(11, \"You have not provided a date and time by which to complete the event. Try this: event [event task description] /from [Date And Time task starts on] /to [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"     * Represents a missing /from keyword in event exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"    MISSING_EVENT_FROMWORD(12, \"You have not used the /from in your event command. Try this: event [event task description] /from [Date And Time task starts on] /to [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"     * Represents an extra /by keyword in deadline exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"    EXTRA_BY_IN_DEADLINE(13, \"You have used extra /by in the deadline command, this is not allowed. Try this: deadline [deadline task description] /by [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"     * Represents an extra /from keyword in event exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"    EXTRA_FROM_IN_EVENT(14, \"You have used extra /from in the event command, this is not allowed. Try this: event [event task description] /from [Date And Time task starts on] /to [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"     * Represents an extra /to keyword in event exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"    EXTRA_TO_IN_EVENT(15, \"You have used extra /to in the event command, this is not allowed. Try this: event [event task description] /from [Date And Time task starts on] /to [Date And Time task is due]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"     * Represents an invalid find task exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"    INVALID_FINDTASK(16, \"You have not entered a task. Try this: find [task]\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"     * Represents an incorrect date and time format exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"    INCORRECT_DATE_AND_TIME_FORMAT(17, \"Date And Time Format Provided Is Incorrect. Try in this format: yyyy-mm-dd HH:mm\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"     * Represents an invalid date or time exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"    INVALID_DATE_OR_TIME(18, \"You have entered an invalid date or time, the format is correct. Try in this format: yyyy-mm-dd HH:mm\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"     * Represents an invalid date exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"    INVALID_DATE(19, \"You have entered an invalid date. Try in this format: yyyy-mm-dd\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"     * The error code associated with the exception type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"    private final int code;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"flyingapricot"},"content":"     * The error message associated with the exception type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"flyingapricot"},"content":"    private final String message;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"flyingapricot"},"content":"     * Constructs an ExceptionType with a specific code and message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"flyingapricot"},"content":"     * @param code The error code.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"flyingapricot"},"content":"     * @param message The error message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"flyingapricot"},"content":"    ExceptionType(int code, String message) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"flyingapricot"},"content":"        this.code \u003d code;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"flyingapricot"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"flyingapricot"},"content":"     * Retrieves the error message associated with the exception type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"flyingapricot"},"content":"     * @return The error message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"flyingapricot"},"content":"    public String getMessage() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"flyingapricot"},"content":"        return this.message;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"flyingapricot"},"content":"     * Retrieves the error code associated with the exception type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"flyingapricot"},"content":"     * @return The error code.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"flyingapricot"},"content":"    public int getCode() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"flyingapricot"},"content":"        return this.code;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":145}},{"path":"src/main/java/orange/exception/OrangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Represents a custom exception for handling errors specific to the Orange chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This exception is associated with an ExceptionType that provides an error code and message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see ExceptionType","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"package orange.exception;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"public class OrangeException extends Exception {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"   * The type of exception that occurred.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"  protected ExceptionType exception;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"   * Constructs an OrangeException with a specified exception type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"   * @param exception The specific exception type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"  public OrangeException(ExceptionType exception) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"    super(exception.getMessage()); // Set message","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"    this.exception \u003d exception;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"   * Retrieves the error message associated with this exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"   * @return The error message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"  public String getCustomMessage() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"    return exception.getMessage();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"   * Retrieves the error code associated with this exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"   * @return The error code.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"  public int getExceptionCode() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"    return exception.getCode();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":42}},{"path":"src/main/java/orange/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Provides utility methods for parsing and formatting date and time values.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This class handles conversions between string representations and LocalDate/LocalDateTime objects.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see OrangeException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"package orange.parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import static orange.exception.ExceptionType.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"public class DateParser {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"     * Converts a string representation of a date and time into a LocalDateTime object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     * @param timeAndDate The date and time string in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the input format is incorrect or if parsing fails.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"    public static LocalDateTime getDateTimeObject(String timeAndDate) throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"        String dateTimePattern \u003d \"^\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}$\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"        Pattern pattern \u003d Pattern.compile(dateTimePattern);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"        Matcher matcher \u003d pattern.matcher(timeAndDate);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"        if (!matcher.matches()) throw new OrangeException(INCORRECT_DATE_AND_TIME_FORMAT);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"            return LocalDateTime.parse(timeAndDate, formatter);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_DATE_OR_TIME);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"     * Converts a LocalDateTime object into a string representation with a different format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"     * @return A formatted date-time string in the format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"    public static String getDifferentFormat(LocalDateTime dateTime) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"     * Converts a string representation of a date into a LocalDate object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"     * @param givenDate The date string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the input format is incorrect or if parsing fails.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"    public static LocalDate getDateObject(String givenDate) throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"            return LocalDate.parse(givenDate, formatter);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_DATE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"     * Converts a LocalDate object into a string representation.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"     * @param localDate The LocalDate object to be formatted.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"     * @return A formatted date string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"    public static String getStringFromLocalDate(LocalDate localDate) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"        return localDate.format(formatter);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":79}},{"path":"src/main/java/orange/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Parses user input and extracts command information for processing.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This class handles parsing different command types and extracting relevant data.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see OrangeException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see DateParser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"package orange.parser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.ExceptionType;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"import orange.Ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"import static orange.exception.ExceptionType.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"public class Parser {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     * A set of valid command keywords.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"    private static final HashSet\u003cString\u003e commands \u003d new HashSet\u003c\u003e(Arrays.asList(\"mark\", \"unmark\", \"list\", \"todo\", \"event\", \"deadline\", \"delete\", \"checkondate\", \"find\"));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * Stores the user input command line.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"    protected static String line;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"     * Constructs a Parser instance with the given user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"     * @param line The user input command line.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"    public Parser(String line) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"        Parser.line \u003d line;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"     * Updates the stored command line with new user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"     * @param line The new user input command line.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"    public void updateLine(String line) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"        Parser.line \u003d line;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"     * Splits the user input into individual components.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"     * @return An array of strings representing the user input components.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"    private String[] getUserInput() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"        return line.split(\" \");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"     * Extracts and validates the command word from the user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"     * @return The extracted command word if valid, otherwise an empty string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"    public String scanForCommandWord() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"        String commandWord \u003d getUserInput()[0];","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"            if (!commands.contains(commandWord)) throw new OrangeException(ExceptionType.UNKNOWN_COMMAND);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"        } catch (OrangeException o) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"            Ui.showError(o.getCustomMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"            return \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"        return commandWord;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"     * Parses a \"todo\" task command and extracts the task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"     * @return The extracted todo task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the todo task description is missing.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"    public static String parseTodo() throws OrangeException{","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"        String TodoTask \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"            TodoTask \u003d (line.substring(5)).trim(); //Remove any trailing spaces","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"            if(TodoTask.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(MISSING_TODO_DESCRIPTION);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(MISSING_TODO_DESCRIPTION);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"        return TodoTask;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"     * Parses a \"deadline\" task command and extracts the task description and due date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"     * @return A list containing the task description and due date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the deadline format is incorrect or missing.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"    public static ArrayList\u003cString\u003e parseDeadline() throws OrangeException{","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"        int position \u003d line.indexOf(\"/by\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"        if(position \u003d\u003d -1) throw new OrangeException(MISSING_DEADLINE_BYWORD);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"        int oldPosition \u003d position;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"        position \u003d line.indexOf(\"/by\",position+1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"        if(position !\u003d -1) throw new OrangeException(EXTRA_BY_IN_DEADLINE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"        position \u003d oldPosition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"        String deadlineTask \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"flyingapricot"},"content":"        String doTaskBy \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"flyingapricot"},"content":"            deadlineTask \u003d line.substring(8, position).trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"flyingapricot"},"content":"            if (deadlineTask.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(MISSING_DEADLINE_DESCRIPTION);  // Throw exception if the task is empty after trimming","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"flyingapricot"},"content":"        } catch(IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(MISSING_DEADLINE_DESCRIPTION);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"flyingapricot"},"content":"            doTaskBy \u003d line.substring(position+4).trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"flyingapricot"},"content":"            if (doTaskBy.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(MISSING_DEADLINE_DOBY);  // Throw exception if the task is empty after trimming","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"flyingapricot"},"content":"        } catch(IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(MISSING_DEADLINE_DOBY);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"flyingapricot"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(deadlineTask, doTaskBy));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"flyingapricot"},"content":"     * Parses an \"event\" task command and extracts the task description, start time, and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"flyingapricot"},"content":"     * @return A list containing the task description, start time, and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the event format is incorrect or missing.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"flyingapricot"},"content":"    public static ArrayList\u003cString\u003e parseEvent() throws OrangeException{","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"flyingapricot"},"content":"        int fromPosition \u003d line.indexOf(\"/from\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"flyingapricot"},"content":"        if(fromPosition \u003d\u003d -1) throw new OrangeException(MISSING_EVENT_FROMWORD);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"flyingapricot"},"content":"        int oldFromPosition \u003d fromPosition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"flyingapricot"},"content":"        fromPosition \u003d line.indexOf(\"/by\",fromPosition+1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"flyingapricot"},"content":"        if(fromPosition !\u003d -1) throw new OrangeException(EXTRA_FROM_IN_EVENT);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"flyingapricot"},"content":"        fromPosition \u003d oldFromPosition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"flyingapricot"},"content":"        int byPosition \u003d line.indexOf(\"/to\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"flyingapricot"},"content":"        if(byPosition \u003d\u003d -1) throw new OrangeException(MISSING_EVENT_TOWORD);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"flyingapricot"},"content":"        int oldByPosition \u003d byPosition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"flyingapricot"},"content":"        byPosition \u003d line.indexOf(\"/by\",byPosition+1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"flyingapricot"},"content":"        if(byPosition !\u003d -1) throw new OrangeException(EXTRA_TO_IN_EVENT);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"flyingapricot"},"content":"        byPosition \u003d oldByPosition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"flyingapricot"},"content":"        String eventTask \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"flyingapricot"},"content":"        String doEventBy \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"flyingapricot"},"content":"        String startEventBy \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"flyingapricot"},"content":"            eventTask \u003d line.substring(5, fromPosition).trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"flyingapricot"},"content":"            if (eventTask.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(MISSING_EVENT_DESCRIPTION);  // Throw exception if the task is empty after trimming","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"flyingapricot"},"content":"        } catch(IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(MISSING_EVENT_DESCRIPTION);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"flyingapricot"},"content":"            startEventBy \u003d line.substring(fromPosition+5,byPosition).trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"flyingapricot"},"content":"            if (startEventBy.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(MISSING_EVENT_STARTON);  // Throw exception if the task is empty after trimming","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"flyingapricot"},"content":"        } catch(IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(MISSING_EVENT_STARTON);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"flyingapricot"},"content":"            doEventBy \u003d line.substring(byPosition+4).trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"flyingapricot"},"content":"            if (doEventBy.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(MISSING_EVENT_DOBY);  // Throw exception if the task is empty after trimming","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"flyingapricot"},"content":"        } catch(IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(MISSING_EVENT_DOBY);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"flyingapricot"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(eventTask,startEventBy,doEventBy));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"flyingapricot"},"content":"     * Parses and extracts the task number for marking as done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"flyingapricot"},"content":"     * @return The task number to mark.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the task number is missing or invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"flyingapricot"},"content":"    public static int parseMark() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"flyingapricot"},"content":"        String taskToMarkString \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"flyingapricot"},"content":"        int taskToMark \u003d -1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"flyingapricot"},"content":"            taskToMarkString \u003d line.substring(4).trim(); //Remove any trailing spaces","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"flyingapricot"},"content":"            if(taskToMarkString.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"flyingapricot"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"flyingapricot"},"content":"            taskToMark \u003d Integer.parseInt(taskToMarkString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"flyingapricot"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"flyingapricot"},"content":"        return taskToMark - 1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"flyingapricot"},"content":"     * Parses and extracts the task number for unmarking as done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"flyingapricot"},"content":"     * @return The task number to unmark.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the task number is missing or invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"flyingapricot"},"content":"    public static int parseUnMark() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"flyingapricot"},"content":"        String taskToUnMarkString \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"flyingapricot"},"content":"        int taskToUnMark \u003d -1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"flyingapricot"},"content":"            taskToUnMarkString \u003d line.substring(6).trim(); //Remove any trailing spaces","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"flyingapricot"},"content":"            if(taskToUnMarkString.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"flyingapricot"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"flyingapricot"},"content":"            taskToUnMark \u003d Integer.parseInt(taskToUnMarkString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"flyingapricot"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"flyingapricot"},"content":"        return taskToUnMark - 1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"flyingapricot"},"content":"     * Parses and extracts the task number for deletion.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"flyingapricot"},"content":"     * @return The task number to delete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the task number is missing or invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"flyingapricot"},"content":"    public static int parseDelete() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"flyingapricot"},"content":"        String taskToDeleteString \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"flyingapricot"},"content":"        int taskToDelete \u003d -1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"flyingapricot"},"content":"            taskToDeleteString \u003d line.substring(6).trim(); //Remove any trailing spaces","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"flyingapricot"},"content":"            if(taskToDeleteString.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"flyingapricot"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"flyingapricot"},"content":"            taskToDelete \u003d Integer.parseInt(taskToDeleteString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"flyingapricot"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_TASKNUMBER);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"flyingapricot"},"content":"        return taskToDelete - 1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"flyingapricot"},"content":"     * Parses and extracts the search keyword for finding tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"flyingapricot"},"content":"     * @return The search keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the keyword is missing.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"flyingapricot"},"content":"    public static String parseFind() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"flyingapricot"},"content":"        String taskToFind \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"flyingapricot"},"content":"            taskToFind \u003d line.substring(4).trim(); //Remove any trailing spaces","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"flyingapricot"},"content":"            if(taskToFind.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(INVALID_FINDTASK);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"flyingapricot"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(INVALID_FINDTASK);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"flyingapricot"},"content":"        return taskToFind;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"flyingapricot"},"content":"     * Parses and extracts the date for checking tasks scheduled on that date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"flyingapricot"},"content":"     * @return The parsed LocalDate object representing the date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If the date is missing or invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"flyingapricot"},"content":"    public static LocalDate parseCheckTasksOnDate() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"flyingapricot"},"content":"        String givenDate \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"flyingapricot"},"content":"            givenDate \u003d line.substring(11).trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"flyingapricot"},"content":"            if (givenDate.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"flyingapricot"},"content":"                throw new OrangeException(MISSING_DEADLINE_DESCRIPTION);  // Throw exception if the task is empty after trimming","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"flyingapricot"},"content":"        } catch(IndexOutOfBoundsException i) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"flyingapricot"},"content":"            throw new OrangeException(MISSING_DEADLINE_DESCRIPTION);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"flyingapricot"},"content":"        return DateParser.getDateObject(givenDate);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":317}},{"path":"src/main/java/orange/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Handles loading tasks from a file and saving tasks into a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This class manages persistent storage of tasks in a CSV file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see Todo","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" * @see Deadline","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":" * @see Events","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"package orange.storage;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import orange.task.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"import java.util.List;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"public class Storage {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     * Path to the task storage file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"    private static final String TASKFILE \u003d \"./saved.csv\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"     * Indicates if the save file is valid and can be used.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"    private static boolean saveFileValid \u003d true;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"     * Initializes the task file by creating it if it does not exist.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"     * @throws IOException If an error occurs while creating the file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"    private void initaliseTaskfile() throws IOException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"        Path path \u003d Paths.get(TASKFILE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(\"File exists, reading task file: \" + TASKFILE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"        } else {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"            Files.createFile(path);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(\"Task File created at: \" + TASKFILE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"     * Updates the task storage file with the current task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"    public static void updateTaskFile() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"            FileWriter writer \u003d new FileWriter(TASKFILE, false);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"            writer.write(\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"            writer.close();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(\"Error clearing CSV file: \" + e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"        ArrayList\u003cTask\u003e taskList \u003d TaskList.getInstance().getTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"            try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"                Path path \u003d Paths.get(TASKFILE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"                String finalTask \u003d \"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"                switch (task.getClass().getName()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"                    case \"orange.task.Todo\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"                        finalTask \u003d \"T,\" + task.getIsDone() + \",\" + task.getDescription() + \",-,-\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"                        break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"                    case \"orange.task.Deadline\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"                        finalTask \u003d \"D,\" + task.getIsDone() + \",\" + task.getDescription() + \",-,\" + ((Deadline) task).getDateAndTime();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"                        break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"                    case \"orange.task.Events\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"                        finalTask \u003d \"E,\" + task.getIsDone() + \",\" + task.getDescription() + \",\" + ((Events) task).getStartDateAndTime() + \",\" + ((Events) task).getEndDateAndTime();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"                        break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"                Files.write(path, List.of(finalTask), StandardOpenOption.APPEND);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"                System.out.println(\"Error writing Task \" + i + \" to CSV file: \" + e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"            i++;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"     * Loads tasks from the storage file into the task manager\u0027s list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If an error occurs while parsing the task file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"    private void loadTasks() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"            Path taskPath \u003d Paths.get(TASKFILE);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(taskPath);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"                String[] values \u003d line.split(\",\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"                switch (values[0]) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"                    case \"T\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"                        TaskList.getInstance().addTask(new Todo(values[2], Boolean.parseBoolean(values[1])));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"                        break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"                    case \"D\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"                        TaskList.getInstance().addTask(new Deadline(values[2], Boolean.parseBoolean(values[1]), values[4]));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"                        break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"                    case \"E\":","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"                        TaskList.getInstance().addTask(new Events(values[2], Boolean.parseBoolean(values[1]), values[4], values[3]));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"                        break;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"                }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(\"Error reading the file and loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"flyingapricot"},"content":"            saveFileValid \u003d false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"flyingapricot"},"content":"     * Constructs a Storage object and initializes the task file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"flyingapricot"},"content":"     * @throws OrangeException If there is an error loading tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"flyingapricot"},"content":"    public Storage() throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"flyingapricot"},"content":"        try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"flyingapricot"},"content":"            initaliseTaskfile();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"flyingapricot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(e);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"flyingapricot"},"content":"            saveFileValid \u003d false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"flyingapricot"},"content":"        if (saveFileValid) loadTasks();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"flyingapricot"},"content":"     * Returns whether the save file is valid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"flyingapricot"},"content":"     * @return True if the save file is valid, false otherwise.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"flyingapricot"},"content":"    public boolean getSaveFileValid() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"flyingapricot"},"content":"        return saveFileValid;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":140}},{"path":"src/main/java/orange/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Represents a deadline task with a specific due date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This class extends Task and includes functionality for handling date parsing and formatting.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see DateParser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see OrangeException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"package orange.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.DateParser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"   * The due date and time of the deadline task as a LocalDateTime object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"  protected LocalDateTime dateAndTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"   * The formatted string representation of the due date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"  protected String newDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"   * The original string representation of the due date and time as provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"  protected String originalDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"   * Constructs a Deadline task with a description, completion status, and due date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"   * @param isDone The completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"   * @param originalDateTimeString The original date-time string provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"   * @throws OrangeException If there is an error in parsing the date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"  public Deadline(String description, boolean isDone, String originalDateTimeString) throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"    super(description, isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"    this.originalDateTimeString \u003d originalDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"    this.dateAndTime \u003d DateParser.getDateTimeObject(originalDateTimeString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"    this.newDateTimeString \u003d DateParser.getDifferentFormat(dateAndTime);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"   * Constructs a Deadline task with a description and due date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"   * @param originalDateTimeString The original date-time string provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"   * @throws OrangeException If there is an error in parsing the date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"  public Deadline(String description, String originalDateTimeString) throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"    super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"    this.originalDateTimeString \u003d originalDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"    this.dateAndTime \u003d DateParser.getDateTimeObject(originalDateTimeString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"    this.newDateTimeString \u003d DateParser.getDifferentFormat(dateAndTime);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"   * Prints the task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"  @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"  public void printTaskWithCompletion() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[D][X] \" + this.description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[D][ ] \" + this.description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"   * Returns the formatted string representation of the task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"   * @return The formatted task string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"  @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"  public String GetTaskWithCompletion() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"      return \"[D][X] \" + this.description + \" (by: \" + newDateTimeString + \")\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"      return \"[D][ ] \" + this.description + \" \" + \"(by: \" + newDateTimeString + \")\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"   * Returns the original due date and time string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"   * @return The original date-time string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"  public String getDateAndTime() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"    return originalDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"   * Returns the LocalDateTime representation of the due date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"   * @return The LocalDateTime object representing the due date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"  public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"    return dateAndTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"flyingapricot":104}},{"path":"src/main/java/orange/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Represents an event task with a specific start and end date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This class extends Task and includes functionality for handling date parsing and formatting.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see DateParser","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" * @see OrangeException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"package orange.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"import orange.parser.DateParser;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"public class Events extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"   * The start date and time of the event as a LocalDateTime object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"  protected LocalDateTime startDateAndTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"   * The formatted string representation of the start date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"  protected String newStartDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"   * The original string representation of the start date and time as provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"  protected String originalStartDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"   * The end date and time of the event as a LocalDateTime object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"  protected LocalDateTime endDateAndTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"   * The formatted string representation of the end date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"  protected String newEndDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"   * The original string representation of the end date and time as provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"  protected String originalEndDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"   * Constructs an Events task with a description, completion status, start time, and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the event.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"   * @param isDone The completion status of the event.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"   * @param originalStartDateTimeString The original start date-time string provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"   * @param originalEndDateTimeString The original end date-time string provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"   * @throws OrangeException If there is an error in parsing the date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"  public Events(String description, boolean isDone, String originalStartDateTimeString, String originalEndDateTimeString) throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"    super(description, isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"    this.originalStartDateTimeString \u003d originalStartDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"    this.startDateAndTime \u003d DateParser.getDateTimeObject(originalStartDateTimeString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"    this.newStartDateTimeString \u003d DateParser.getDifferentFormat(startDateAndTime);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"    this.originalEndDateTimeString \u003d originalEndDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"    this.endDateAndTime \u003d DateParser.getDateTimeObject(originalEndDateTimeString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"    this.newEndDateTimeString \u003d DateParser.getDifferentFormat(endDateAndTime);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"   * Constructs an Events task with a description, start time, and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the event.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"   * @param originalStartDateTimeString The original start date-time string provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"   * @param originalEndDateTimeString The original end date-time string provided by the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"   * @throws OrangeException If there is an error in parsing the date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"  public Events(String description, String originalStartDateTimeString, String originalEndDateTimeString) throws OrangeException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"    super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"    this.originalStartDateTimeString \u003d originalStartDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"    this.startDateAndTime \u003d DateParser.getDateTimeObject(originalStartDateTimeString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"    this.newStartDateTimeString \u003d DateParser.getDifferentFormat(startDateAndTime);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"    this.originalEndDateTimeString \u003d originalEndDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"    this.endDateAndTime \u003d DateParser.getDateTimeObject(originalEndDateTimeString);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"    this.newEndDateTimeString \u003d DateParser.getDifferentFormat(endDateAndTime);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"   * Prints the event task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"  @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"  public void printTaskWithCompletion() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[E][X] \" + this.description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[E][ ] \" + this.description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"   * Returns the formatted string representation of the event task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"   * @return The formatted event task string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"  @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"  public String GetTaskWithCompletion() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"      return \"[E][X] \" + this.description + \" (from: \" + newStartDateTimeString + \" to: \" + newEndDateTimeString + \")\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"      return \"[E][ ] \" + this.description + \" (from: \" + newStartDateTimeString + \" to: \" + newEndDateTimeString + \")\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"flyingapricot"},"content":"   * Returns the original start date and time string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"flyingapricot"},"content":"   * @return The original start date-time string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"flyingapricot"},"content":"  public String getStartDateAndTime() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"flyingapricot"},"content":"    return originalStartDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"flyingapricot"},"content":"   * Returns the original end date and time string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"flyingapricot"},"content":"   * @return The original end date-time string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"flyingapricot"},"content":"  public String getEndDateAndTime() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"flyingapricot"},"content":"    return originalEndDateTimeString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"flyingapricot"},"content":"   * Returns the LocalDateTime representation of the end date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"flyingapricot"},"content":"   * @return The LocalDateTime object representing the end date and time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"flyingapricot"},"content":"  public LocalDateTime getEndLocalDateTime() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"flyingapricot"},"content":"    return endDateAndTime;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"flyingapricot":138}},{"path":"src/main/java/orange/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This serves as a base class for specific task types such as Deadlines, Events And Todo.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Deadline","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Events","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"package orange.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"public class Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"   * The description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"  protected String description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"   * The completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"  protected boolean isDone;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"   * Constructs a Task with a specified description and completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"   * @param isDone The completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"  public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"    this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"   * Constructs a Task with a specified description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"   * The task is initially not completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"  public Task(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"    this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"   * Retrieves the description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"   * @return The task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"  public String getDescription() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"    return description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"   * Updates the description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"   * @param description The new task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"  public void setDescription(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"    this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"   * Retrieves the completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"   * @return True if the task is completed, false otherwise.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"  public boolean getIsDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"    return isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"   * Updates the completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"   * @param isDone The new completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"  public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"   * Prints the task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"   * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"   * The format is [X] for completed tasks and [ ] for incomplete tasks,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"   * followed by the task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"   * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"  public void printTaskWithCompletion() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[X] \" + this.description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[ ] \" + this.description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"   * Returns a string representation of the task, including its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"   * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"   * The format is [X] for completed tasks and [ ] for incomplete tasks,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"   * followed by the task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"   * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"   * @return A string representing the task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"  public String GetTaskWithCompletion() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"      return \"[X] \" + this.description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"      return \"[ ] \" + this.description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"flyingapricot":112}},{"path":"src/main/java/orange/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Manages a list of tasks using the singleton pattern.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * This class allows adding, updating, deleting, and listing tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":"package orange.task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"import orange.exception.OrangeException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"public class TaskList {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"     * The single instance of TaskList.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"    private static TaskList instance;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"     * The list of tasks (shared by all Task objects).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"     * Private constructor to prevent instantiation from other classes.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"    private TaskList() {}","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     * Retrieves the singleton instance of TaskList.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"     * @return The single instance of TaskList.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"    public static TaskList getInstance() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"            instance \u003d new TaskList();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"        return instance;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"        taskList.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"     * Updates a task at the specified index in the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"     * @param taskNumber The index of the task to update.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"     * @param newTask The new task to replace the old one.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"    public void updateTask(int taskNumber, Task newTask) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"        if (taskNumber \u003e\u003d taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"        taskList.set(taskNumber, newTask);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"     * Deletes a task at the specified index in the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"flyingapricot"},"content":"     * @param taskNumber The index of the task to delete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"flyingapricot"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"flyingapricot"},"content":"    public void deleteTask(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"flyingapricot"},"content":"        if (taskNumber \u003e\u003d taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"flyingapricot"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"flyingapricot"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"flyingapricot"},"content":"     * Lists all tasks in the task list with their respective numbers.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"flyingapricot"},"content":"    public void listTasks() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"flyingapricot"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"flyingapricot"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"flyingapricot"},"content":"            System.out.println(\"\\t\" + count + \". \" + task.GetTaskWithCompletion());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"flyingapricot"},"content":"            count++;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"flyingapricot"},"content":"     * Retrieves a copy of the task list to prevent external modification.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"flyingapricot"},"content":"     * @return A copy of the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"flyingapricot"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"flyingapricot"},"content":"        return new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"flyingapricot"},"content":"     * Retrieves the number of tasks in the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"flyingapricot"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"flyingapricot"},"content":"    public int getSize() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"flyingapricot"},"content":"        return taskList.size();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"flyingapricot"},"content":"     * Updates the completion status of a task at a given index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"flyingapricot"},"content":"     * @param taskNumber The index of the task to update.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"flyingapricot"},"content":"     * @param status The new completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"flyingapricot"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"flyingapricot"},"content":"    public void updateCompletionStatus(int taskNumber, boolean status) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"flyingapricot"},"content":"        if (taskNumber \u003e\u003d taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"flyingapricot"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"flyingapricot"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"flyingapricot"},"content":"        taskList.get(taskNumber).setIsDone(status);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":118}},{"path":"src/main/java/orange/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Manages the mapping of commands to their respective handlers.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * The TaskManager class stores a command map and provides methods","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" * to retrieve and execute specific task commands.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see CommandHandler","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"package orange.task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"import orange.command.*;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"public class TaskManager {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"     * A mapping of command keywords to their respective command handlers.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"    private HashMap\u003cString, CommandHandler\u003e commandMap;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"     * The current task number being processed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"    private Integer taskNumber;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"     * Updates the current task number being processed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"     * @param number The new task number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"    public void updateTaskNumber(int number) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"        this.taskNumber \u003d number;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"     * Constructs a TaskManager instance and initializes the command map.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"     * The command map associates command strings with their respective","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"     * command handlers using method references.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"    public TaskManager() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"        commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"list\", new ListCommand()::executeCommand); //Method reference to point to executeCommand method","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"unmark\", new UnmarkCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"mark\",  new MarkCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"todo\", new TodoCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"deadline\", new DeadlineCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"event\", new EventCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"delete\", new DeleteCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"find\", new FindCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"        commandMap.put(\"checkondate\", new CheckOnDateCommand()::executeCommand);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"     * Retrieves the command handler for the specified task command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"     * @param task The command keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"     * @return The corresponding CommandHandler, or null if the command is not found.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"    public CommandHandler getTask(String task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"        return commandMap.getOrDefault(task, null);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"flyingapricot":63}},{"path":"src/main/java/orange/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":" * A Todo task is a type of task that consists of a description and completion status","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":" * but does not include any date or time information.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"flyingapricot"},"content":" * @see Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"flyingapricot"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"flyingapricot"},"content":"package orange.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"flyingapricot"},"content":"   * Constructs a Todo task with a description and completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"   * @param isDone The completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"  public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"flyingapricot"},"content":"    super(description, isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"   * Constructs a Todo task with a description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"   * The task is initially not completed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"   * @param description The description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"  public Todo(String description) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"    super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"flyingapricot"},"content":"   * Prints the task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"flyingapricot"},"content":"   * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"flyingapricot"},"content":"   * The task format includes a \"T\" to indicate a todo task,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"flyingapricot"},"content":"   * followed by a completion indicator ([X] for done, [ ] for not done).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"flyingapricot"},"content":"   * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"flyingapricot"},"content":"  @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"flyingapricot"},"content":"  public void printTaskWithCompletion() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[T][X] \" + this.description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"flyingapricot"},"content":"      System.out.print(\"[T][ ] \" + this.description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"flyingapricot"},"content":"  /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"flyingapricot"},"content":"   * Returns a string representation of the task, including its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"flyingapricot"},"content":"   * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"flyingapricot"},"content":"   * The format is [T][X] for completed tasks and [T][ ] for incomplete tasks,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"flyingapricot"},"content":"   * followed by the task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"flyingapricot"},"content":"   * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"flyingapricot"},"content":"   *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"flyingapricot"},"content":"   * @return A string representing the task with its completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"flyingapricot"},"content":"   */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"flyingapricot"},"content":"  @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"flyingapricot"},"content":"  public String GetTaskWithCompletion() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"flyingapricot"},"content":"    if (this.isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"flyingapricot"},"content":"      return \"[T][X] \" + this.description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"flyingapricot"},"content":"    } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"flyingapricot"},"content":"      return \"[T][ ] \" + this.description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"flyingapricot"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"flyingapricot"},"content":"  }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"flyingapricot"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"flyingapricot":65}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"flyingapricot"},"content":"todo borrow book","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"flyingapricot"},"content":"list","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"flyingapricot"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"flyingapricot"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"flyingapricot"},"content":"bye","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"flyingapricot":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"flyingapricot"},"content":"javac  -cp ..\\src\\main\\java\\orange.Orange.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"flyingapricot"},"content":"java -classpath ..\\bin orange.Orange \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"flyingapricot"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"flyingapricot"},"content":"    echo The contents of ACTUAL.TXT and EXPECTED.TXT do not match.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"flyingapricot"},"content":"    exit /b 1","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"flyingapricot"},"content":") ELSE (","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"flyingapricot"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"flyingapricot"},"content":"    echo The contents of ACTUAL.TXT and EXPECTED.TXT match.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"flyingapricot"},"content":"    exit /b 0","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"flyingapricot"},"content":")","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"flyingapricot"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"flyingapricot":13,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"flyingapricot"},"content":"if ! javac -cp ../src/main/java/Orange.java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"flyingapricot"},"content":"java -classpath ../bin Orange \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"flyingapricot":2,"-":36}}]
