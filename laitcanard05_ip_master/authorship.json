[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"# Bob","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"This is a Personal Assistant Chatbot that helps users to keep track of their tasks. It\u0027s named after the minion _Bob_. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"## Quick Start","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"1. Ensure you have Java `17` installed in your Computer.  ","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"   **Mac users**: Ensure you have the precise JDK version specified [here](https://se-education.org/guides/tutorials/javaInstallationMac.html). ","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"2. Download the latest `.jar` file from [here](https://github.com/laitcanard05/ip/releases/tag/v0.1.0).","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Bob. ","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar Bob.jar` command to run the application.  ","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"   You should see something like the below as the output:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"   Hello I\u0027m Bob.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"   What can I do for you?","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"## Features","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"### Viewing tasks in list: `list`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"Shows all the tasks in the current task list and their descriptions including the task name, the type of task, and the completion status.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"Format: `list`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"### Adding a Todo task: `todo`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"Adds a Todo task into the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"+ Adds a Todo task with the specified `TASK_NAME`  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"+ `todo Do laundry` adds a Todo task into the task list with the task name set to be `Do laundry`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"+ The completion status is set to not done by default","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"Adds a Deadline task into the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"Format: `deadline TASK_NAME /by DEADLINE`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"+ Adds a Deadline task with the specified `TASK_NAME` and `DEADLINE`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"+ `DEADLINE` should be specified in either one of these formats: `yyyy-MM-dd HH:mm`, `yyyy-MM-dd`, `HH:mm`.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"+ Chatbot processes the deadline and converts it to the corresponding format: `MMM dd yy HH:mm`, `MMM dd yy`, `HH:mm`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"+ The completion status is set to not done by default","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"+ `deadline Submit CS2113 iP /by 2025-03-14 23:59` adds a Deadline task into the task list and sets the task name and task deadline to be`Submit CS2113 iP` and `MAR 14 2025 23:59` respectively","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"### Adding an Event task: `Event`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"Adds an Event task into the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"Format: `event TASK_NAME /from START /to END`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"+ Adds an Event task with the specified `TASK_NAME`, start date/time `START` and end date/time `END`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"+ The completion status is set to not done by default","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"+ `event meeting /from 2pm /to 4pm` adds an Event task into the task list and sets the task name, start date/time and end date/time to `meeting`, `2pm` and `4pm`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"laitcanard05"},"content":"### Marking a task as done: `Mark`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"Changes the completion status of a task in the task list from not done to done.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"Format: `mark INDEX`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"+ Marks the task at the specified `INDEX` as done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` refers to the index number shown in the displayed task list when command `list` is given","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` must be a positive integer 1, 2, 3...","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"laitcanard05"},"content":"+ `mark 2` marks the 2nd task in the task list as done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"laitcanard05"},"content":"### Marking a task as not done: `Unmark`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"laitcanard05"},"content":"Changes the completion status of a task in the task list from done to not done.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"laitcanard05"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"laitcanard05"},"content":"+ Marks the task at the specified `INDEX` as not done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` refers to the index number shown in the displayed task list when command `list` is given","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` must be a positive integer 1, 2, 3...","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"laitcanard05"},"content":"+ `unmark 3` marks the 3rd task in the task list as not done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"laitcanard05"},"content":"### Searching for tasks: `find`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"laitcanard05"},"content":"Finds tasks whose names contain the given keyword.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"laitcanard05"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"laitcanard05"},"content":"+ The search is case-insensitive. e.g. `read` will match `Read`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"laitcanard05"},"content":"+ `KEYWORD` is taken as one keyword even if there are spaces in between the words","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"laitcanard05"},"content":"+ Only the name of the task is searched","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"laitcanard05"},"content":"+ `find Read` returns `read book`  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"laitcanard05"},"content":"  ![Screenshot of Bob\u0027s output after inputting `find Read`](img.png)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"laitcanard05"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"laitcanard05"},"content":"Deletes a specified task from the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"laitcanard05"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"laitcanard05"},"content":"+ Deletes the task at the specified `INDEX` from the task list","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` refers to the index number shown in the displayed task list when command `list` is given","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` must be a positive integer 1, 2, 3...","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"laitcanard05"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"laitcanard05"},"content":"Exits the program.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"laitcanard05"},"content":"Format: `bye`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"laitcanard05"},"content":"### Saving the data","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"laitcanard05"},"content":"TaskList data are saved in the hard disk automatically after any command that changes the data.   ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"laitcanard05"},"content":"There is no need to save manually.","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"laitcanard05":91,"-":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"# Bob","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"This is a Personal Assistant Chatbot that helps users to keep track of their tasks. It\u0027s named after the minion _Bob_. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"## Quick Start","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"    1. Click `Open`.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"1. After that, locate the `src/main/java/bob/function/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"   ```","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"   Hello I\u0027m Bob.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"   What can I do for you?","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"## Features","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"### Viewing tasks in list: `list`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"Shows all the tasks in the current task list and their descriptions including the task name, the type of task, and the completion status.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"Format: `list`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"### Adding a Todo task: `todo`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"Adds a Todo task into the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"+ Adds a Todo task with the specified `TASK_NAME`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"  Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"+ `todo Do laundry` adds a Todo task into the task list with the task name set to be `Do laundry`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"+ The completion status is set to not done by default","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"Adds a Deadline task into the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"Format: `deadline TASK_NAME /by DEADLINE`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"+ Adds a Deadline task with the specified `TASK_NAME` and `DEADLINE`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"+ `DEADLINE` should be specified in either one of these formats: `yyyy-MM-dd HH:mm`, `yyyy-MM-dd`, `HH:mm`.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"+ Chatbot processes the deadline and converts it to the corresponding format: `MMM dd yy HH:mm`, `MMM dd yy`, `HH:mm`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"+ The completion status is set to not done by default","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"+ `deadline Submit CS2113 iP /by 2025-03-14 23:59` adds a Deadline task into the task list and sets the task name and task deadline to be`Submit CS2113 iP` and `MAR 14 2025 23:59` respectively","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"### Adding an Event task: `Event`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"Adds an Event task into the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"Format: `event TASK_NAME /from START /to END`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"+ Adds an Event task with the specified `TASK_NAME`, start date/time `START` and end date/time `END`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"+ The completion status is set to not done by default","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"+ `event meeting /from 2pm /to 4pm` adds an Event task into the task list and sets the task name, start date/time and end date/time to `meeting`, `2pm` and `4pm`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"### Marking a task as done: `Mark`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"Changes the completion status of a task in the task list from not done to done.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"Format: `mark INDEX`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"+ Marks the task at the specified `INDEX` as done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` refers to the index number shown in the displayed task list when command `list` is given","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` must be a positive integer 1, 2, 3...","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"laitcanard05"},"content":"+ `mark 2` marks the 2nd task in the task list as done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"laitcanard05"},"content":"### Marking a task as not done: `Unmark`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"laitcanard05"},"content":"Changes the completion status of a task in the task list from done to not done.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"laitcanard05"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"laitcanard05"},"content":"+ Marks the task at the specified `INDEX` as not done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` refers to the index number shown in the displayed task list when command `list` is given","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` must be a positive integer 1, 2, 3...","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"laitcanard05"},"content":"Examples ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"laitcanard05"},"content":"+ `unmark 3` marks the 3rd task in the task list as not done","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"laitcanard05"},"content":"### Searching for tasks: `find`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"laitcanard05"},"content":"Finds tasks whose names contain the given keyword.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"laitcanard05"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"laitcanard05"},"content":"+ The search is case-insensitive. e.g. `read` will match `Read`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"laitcanard05"},"content":"+ `KEYWORD` is taken as one keyword even if there are spaces in between the words","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"laitcanard05"},"content":"+ Only the name of the task is searched ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"laitcanard05"},"content":"Examples","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"laitcanard05"},"content":"+ `find Read` returns `read book`  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"laitcanard05"},"content":"![Screenshot of Bob\u0027s output after inputting `find Read`](img.png)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"laitcanard05"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"laitcanard05"},"content":"Deletes a specified task from the task list.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"laitcanard05"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"laitcanard05"},"content":"+ Deletes the task at the specified `INDEX` from the task list","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` refers to the index number shown in the displayed task list when command `list` is given","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"laitcanard05"},"content":"+ `INDEX` must be a positive integer 1, 2, 3...","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"laitcanard05"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"laitcanard05"},"content":"Exits the program.  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"laitcanard05"},"content":"Format: `bye`  ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"laitcanard05"},"content":"### Saving the data","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"laitcanard05"},"content":"TaskList data are saved in the hard disk automatically after any command that changes the data.   ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"laitcanard05"},"content":"There is no need to save manually.","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"laitcanard05":86,"-":14}},{"path":"src/main/java/bob/exceptions/AlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class AlreadyDoneException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":4}},{"path":"src/main/java/bob/exceptions/AlreadyUndoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class AlreadyUndoneException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":4}},{"path":"src/main/java/bob/exceptions/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class MissingDescriptionException extends Exception{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":4}},{"path":"src/main/java/bob/exceptions/MissingSearchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.exceptions;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class MissingSearchException extends Exception {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"laitcanard05":5}},{"path":"src/main/java/bob/exceptions/UnfoundTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.exceptions;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class UnfoundTaskException extends Exception {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":4}},{"path":"src/main/java/bob/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":4}},{"path":"src/main/java/bob/function/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"import bob.exceptions.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"public class Bob {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a Bob instance with the specified file path for task storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"     * Initializes the user interface, storage, and task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"     * If an IOException occurs during task loading, an error message is displayed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"     * @param filepath The file path of the file where tasks are stored.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"    public Bob(String filepath) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"            storage \u003d new Storage(filepath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"            ui.processError(\"IO Exception\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"            ui.printMessage();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"    public void run() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"        while (!parser.isChatOver(userInput)) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"                ui.setMessage(parser.processInput(userInput, taskList), taskList);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"                storage.saveTasks(taskList);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"            } catch (UnknownCommandException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Unknown Command\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"            } catch (MissingDescriptionException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Missing Description\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"            } catch (UnfoundTaskException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Task Does Not Exist\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"            } catch (AlreadyDoneException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Already Marked As Done\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"            } catch (AlreadyUndoneException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Already Marked As Not Done\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Missing Date Or Time\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"laitcanard05"},"content":"            } catch (MissingSearchException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Missing Search Term\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Save Failed\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"                ui.processError(\"Invalid Format for Date/Time\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"            ui.printMessage();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"laitcanard05"},"content":"        ui.exit();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"laitcanard05"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"laitcanard05"},"content":"        new Bob(\"src/main/java/data/bob.txt\").run();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":68}},{"path":"src/main/java/bob/function/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"    protected String deadline;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a Deadline object with the specified name and deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"     * This constructor is called when the user input requires a new Deadline task to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"     * The isDone attribute is set to a default value of false.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"     * @param name  the name of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"     * @param deadline the deadline of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"    Deadline(String name, String deadline){","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"        super(name);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a Deadline object with the specified name, deadline and completion status.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"     * This constructor is called when adding a saved Deadline task where the completion status may be true or false.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"     * The isDone attribute is set to a default value of false.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"     * @param name  the name of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"     * @param deadline the deadline of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"     * @param isDone the completion status of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"    Deadline(String name, String deadline, Boolean isDone){","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"    public String getDueDate() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"        return deadline;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"    public void setDueDate(String dueDate) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"     * Displays the Deadline task in a formatted string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"     * The format includes the task type, task name, completion status, and deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"     * @return a string representation of the event task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"    public String displayTask() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"        return \"[D]\" + super.displayTask() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":50}},{"path":"src/main/java/bob/function/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"    protected String start;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"    protected String end;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"     * Constructs an Event object with the specified name, start time, and end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"     * This constructor is called when the user input requires a new Event task to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"     * The isDone attribute is set to a default value of false.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"     * @param name  the name of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"     * @param start the start time of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"     * @param end   the end time of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"        super(name);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"     * Constructs an Event object with the specified name, start time, end time, and completion status.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"     * This constructor is called when adding a Event saved task where the completion status may be true or false.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"     * @param name   the name of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"     * @param start  the start time of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"     * @param end    the end time of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"     * @param isDone the completion status of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"    public Event(String name, String start, String end, Boolean isDone) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"    public String getStart() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"        return start;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"    public void setStart(String start) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"    public String getEnd() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"        return end;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"    public void setEnd(String end) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"     * Displays the Event task in a formatted string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"laitcanard05"},"content":"     * The format includes the task type, task name, completion status, start time, and end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"     * @return a string representation of the event task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"    public String displayTask() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"        return \"[E]\" + super.displayTask() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":62}},{"path":"src/main/java/bob/function/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"import bob.exceptions.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"public class Parser {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"     * Returns a Boolean value of whether the user input indicates the end of the chat","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"     * by comparing it with the string \"bye\".","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"     * @return {@code true} if the input is \"Bye\" (ignoring case and spaces), otherwise {@code false}","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"     * @param userInput the user\u0027s input string to check","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"    public Boolean isChatOver(String userInput) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"        return userInput.trim().equalsIgnoreCase(\"bye\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"     * Processes user input to execute commands on the given TaskList and","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"     * returns the corresponding instruction for the output message to be set in ui.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"     * For the command {@code list}, the instruction contains the command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"     * For commands {@code mark}, {@code unmark}, {@code delete}, {@code todo}, {@code deadline}, {@code event},","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"     * the instruction contains the command and the string representation of the task to be displayed in the ui.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"     * For the command {@code find}, the instruction contains the command and the string representation of the","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"     * indexes of all matching tasks in the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"     * Supported commands:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"     *     \u003cli\u003e{@code list} - Displays all tasks.\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"     *     \u003cli\u003e{@code mark \u003ctaskIndex\u003e} - Marks a task as done.\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"     *     \u003cli\u003e{@code unmark \u003ctaskIndex\u003e} - Marks a task as not done.\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"     *     \u003cli\u003e{@code todo \u003cdescription\u003e}, {@code deadline \u003cdescription\u003e}, {@code event \u003cdescription\u003e} - Adds a task to the task list.\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"     *     \u003cli\u003e{@code delete \u003ctaskIndex\u003e} - Removes a task.\u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"     *     \u003cli\u003e{@code find \u003ckeyword\u003e} - Finds all matching tasks that contain the keyword in the task description \u003c/li\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"     * @param userInput The user\u0027s input command string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"     * @param taskList The task list on which operations are performed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"     * @return An instruction message for how to set the output message in ui.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"     * @throws MissingDescriptionException If the user input requires task description or task number but none is provided.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"     * @throws UnknownCommandException If the command is not recognized.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"     * @throws AlreadyDoneException If an attempt is made to mark an already completed task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"     * @throws AlreadyUndoneException If an attempt is made to unmark a task that is not completed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"     * @throws UnfoundTaskException If the specified task number does not exist.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"     * @throws StringIndexOutOfBoundsException If string manipulation causes an out-of-bounds error due to missing dates or times in the task description when performing addTask().","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"     * @throws ArrayIndexOutOfBoundsException If an array indexing error occurs while parsing input due to null user input or user input consisting of only whitespaces.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"    public String processInput(String userInput, TaskList taskList) throws MissingDescriptionException, UnknownCommandException, AlreadyDoneException, AlreadyUndoneException, UnfoundTaskException, StringIndexOutOfBoundsException, ArrayIndexOutOfBoundsException, MissingSearchException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"        String command \u003d userInput.split(\" \")[0].trim().toLowerCase();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"        String messageInstruction;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"        switch (command) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"laitcanard05"},"content":"        case \"list\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"            messageInstruction \u003d \"list\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"laitcanard05"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"            if (userInput.trim().split(\" \").length \u003c 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"                throw new MissingDescriptionException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"            int taskToMark \u003d Integer.parseInt(userInput.trim().split(\" \")[1]);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"            if (taskToMark \u003e taskList.getNumTasks()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"                throw new UnfoundTaskException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"laitcanard05"},"content":"            if (taskList.getTask(taskToMark - 1).getDone()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"laitcanard05"},"content":"                throw new AlreadyDoneException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"laitcanard05"},"content":"            taskList.getTask(taskToMark - 1).setDone(true);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"laitcanard05"},"content":"            messageInstruction \u003d \"mark \" + taskList.getTask(taskToMark - 1).displayTask();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"laitcanard05"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"laitcanard05"},"content":"            if (userInput.trim().split(\" \").length \u003c 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"laitcanard05"},"content":"                throw new MissingDescriptionException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"laitcanard05"},"content":"            taskToMark \u003d Integer.parseInt(userInput.trim().split(\" \")[1]);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"laitcanard05"},"content":"            if (taskToMark \u003e taskList.getNumTasks()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"laitcanard05"},"content":"                throw new UnfoundTaskException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"laitcanard05"},"content":"            if (!taskList.getTask(taskToMark - 1).getDone()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"laitcanard05"},"content":"                throw new AlreadyUndoneException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"laitcanard05"},"content":"            taskList.getTask(taskToMark-1).setDone(false);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"laitcanard05"},"content":"            messageInstruction \u003d \"unmark \" + taskList.getTask(taskToMark-1).displayTask();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"laitcanard05"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"laitcanard05"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"laitcanard05"},"content":"        case \"event\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"laitcanard05"},"content":"            if (userInput.trim().split(\" \").length \u003c 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"laitcanard05"},"content":"                throw new MissingDescriptionException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"laitcanard05"},"content":"            taskList.addTask(userInput);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"laitcanard05"},"content":"            messageInstruction \u003d \"add \" + taskList.getTask(taskList.getNumTasks() - 1).displayTask();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"laitcanard05"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"laitcanard05"},"content":"            if (userInput.trim().split(\" \").length \u003c 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"laitcanard05"},"content":"                throw new MissingDescriptionException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"laitcanard05"},"content":"            int taskToDelete \u003d Integer.parseInt(userInput.trim().split(\" \")[1]);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"laitcanard05"},"content":"            if (taskToDelete \u003e taskList.getNumTasks()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"laitcanard05"},"content":"                throw new UnfoundTaskException();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"laitcanard05"},"content":"            messageInstruction \u003d \"delete \" + taskList.getTask(taskToDelete - 1).displayTask();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"laitcanard05"},"content":"            taskList.deleteTask(taskToDelete-1);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"laitcanard05"},"content":"        case \"find\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"laitcanard05"},"content":"            if (userInput.trim().split(\" \").length \u003c 2) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"laitcanard05"},"content":"                throw new MissingSearchException();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"laitcanard05"},"content":"            String keyword \u003d userInput.substring(userInput.indexOf(\" \")+1).toLowerCase();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"laitcanard05"},"content":"            messageInstruction \u003d \"find \";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"laitcanard05"},"content":"            for (int i \u003d 0; i \u003c taskList.getNumTasks(); i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"laitcanard05"},"content":"                if (taskList.getTask(i).getName().toLowerCase().contains(keyword)) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"laitcanard05"},"content":"                    messageInstruction +\u003d Integer.toString(i);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"laitcanard05"},"content":"                }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"laitcanard05"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"laitcanard05"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"laitcanard05"},"content":"        return messageInstruction;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":123}},{"path":"src/main/java/bob/function/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"import java.io.File;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"public class Storage {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"    File savedTasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"    String filepath;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"     * Initializes the file for storing tasks. If the file does not exist,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"     * it attempts to create the necessary directories and the file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"     * @param filepath The file path of the file where tasks will be stored.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"     * @throws IOException If an I/O error occurs while creating the file or directories.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"    public Storage(String filepath) throws IOException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"        savedTasks \u003d new File(filepath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"        if (!savedTasks.exists()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"            Files.createDirectories(Paths.get(filepath).getParent());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"            Files.createFile(Paths.get(filepath));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"     * Returns a single string representation of the tasks loaded from the saved file,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"     * with each task on a new line.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"     * Each task is read line by line and appended to the resulting string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"     * @return string representation of loaded tasks","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"     * @throws FileNotFoundException If the saved tasks file does not exist.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"    public String loadTasks() throws FileNotFoundException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"        Scanner reader \u003d new Scanner(savedTasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"        String savedTasksAsString \u003d \"\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"        while (reader.hasNextLine()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"            savedTasksAsString +\u003d reader.nextLine() + \"\\n\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"        return savedTasksAsString;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"     * Returns a formatted string representation of the task list,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"     * with each task on a new line, to allow the current task list to","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"laitcanard05"},"content":"     * be saved in a .txt file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"     * @return the formatted string representation of the task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"laitcanard05"},"content":"     * @param taskList The TaskList to be converted into text format.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"    public String getTaskListAsText(TaskList taskList) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"        String taskListAsText \u003d \"\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"        int numTasks \u003d taskList.getNumTasks();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"            if (taskList.getTask(i) instanceof Todo) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"laitcanard05"},"content":"                taskListAsText +\u003d \"T | \" + (taskList.getTask(i).getDone() ? \"X | \" : \"O | \") + taskList.getTask(i).getName() + \"\\n\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"laitcanard05"},"content":"            } else if (taskList.getTask(i) instanceof Deadline) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"laitcanard05"},"content":"                taskListAsText +\u003d \"D | \" + (taskList.getTask(i).getDone() ? \"X | \" : \"O | \") + taskList.getTask(i).getName() + \" | \" + ((Deadline) taskList.getTask(i)).getDueDate() + \"\\n\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"laitcanard05"},"content":"            } else if (taskList.getTask(i) instanceof Event) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"laitcanard05"},"content":"                taskListAsText +\u003d \"E | \" + (taskList.getTask(i).getDone() ? \"X | \" : \"O | \") + taskList.getTask(i).getName() + \" | \" + ((Event) taskList.getTask(i)).getStart() + \" | \" + ((Event) taskList.getTask(i)).getEnd() + \"\\n\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"laitcanard05"},"content":"        return taskListAsText;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"laitcanard05"},"content":"     * Saves the given TaskList to a file by writing its text representation.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"laitcanard05"},"content":"     * The existing content of the file is overwritten.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"laitcanard05"},"content":"     * @param taskList The TaskList to be saved.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"laitcanard05"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"laitcanard05"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"laitcanard05"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"laitcanard05"},"content":"        fw.write(getTaskListAsText(taskList));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"laitcanard05"},"content":"        fw.close();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":84}},{"path":"src/main/java/bob/function/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"    protected String name;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"    protected Boolean isDone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"    public Task(String name) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"    public Task(String name, Boolean isDone) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"    public String getName() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"        return name;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"    public void setName(String name) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"    public Boolean getDone() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"        return isDone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"    public void setDone(Boolean done) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"    public String displayTask() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"        return (getDone() ? \"[X] \" : \"[ ] \") + name;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"    };","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":37}},{"path":"src/main/java/bob/function/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"public class TaskList {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"    protected int numTasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a TaskList object and initializes it with saved tasks loaded from a text file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"     * @param savedTasks a string containing saved tasks, each task separated by a newline character.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"     *                   If the string is empty or only contains whitespace, the task list will be initialized as empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"    public TaskList(String savedTasks) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"        taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"        numTasks \u003d 0;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"        if (!savedTasks.trim().isEmpty()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"            String[] savedTasksArray \u003d savedTasks.split(\"\\n\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"            for (int i \u003d 0; i \u003c savedTasksArray.length; i++) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"                addSavedTask(savedTasksArray[i]);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"     * Returns the current number of tasks in the task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"     * @return numTasks the number of tasks in the task list","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"    public int getNumTasks() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"        return numTasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"     * Adds a new task to the task list. The type of task to be added is determined by the provided user input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"     * The user input can specify a \"todo\", \"deadline\", or \"event\" task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"     * @param userInput a string containing the task details. The first word should be the task type","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"     *                  (e.g., \"todo\", \"deadline\", \"event\"), followed by the task description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"     *                  For Deadline tasks, \"/by\" is followed by the due date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"     *                  For Event tasks, \"/from\" is followed by the start time, and \"/to\" is followed by the end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"    public void addTask(String userInput) throws DateTimeParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"        Task newTask;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"        String command \u003d userInput.split(\" \")[0].trim().toLowerCase();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"        switch (command) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"laitcanard05"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"            String newTaskName \u003d userInput.substring(userInput.indexOf(\" \")+1);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Todo(newTaskName);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"            newTaskName \u003d userInput.substring(userInput.indexOf(\" \")+1, userInput.indexOf(\"/\")).trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"            String deadline \u003d userInput.substring(userInput.indexOf(\"/by\")+3).trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"            if (deadline.contains(\"-\") \u0026\u0026 deadline.contains(\":\")) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"                deadline \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"laitcanard05"},"content":"            else if (deadline.contains(\"-\")) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"laitcanard05"},"content":"                LocalDate date \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"laitcanard05"},"content":"                deadline \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Deadline(newTaskName, deadline);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"laitcanard05"},"content":"        case \"event\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"laitcanard05"},"content":"            newTaskName \u003d userInput.substring(userInput.indexOf(\" \")+1, userInput.indexOf(\"/\")).trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"laitcanard05"},"content":"            String start \u003d userInput.substring(userInput.indexOf(\"/from\")+5, userInput.indexOf(\"/to\")).trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"laitcanard05"},"content":"            String end \u003d userInput.substring(userInput.indexOf(\"/to\")+3).trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Event(newTaskName, start, end);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"laitcanard05"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"laitcanard05"},"content":"            newTaskName \u003d userInput.substring(userInput.indexOf(\" \")+1);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Task(newTaskName);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"laitcanard05"},"content":"        taskList.add(numTasks, newTask);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"laitcanard05"},"content":"        numTasks++;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"laitcanard05"},"content":"     * Returns the task at the specified index from the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"laitcanard05"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"laitcanard05"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"laitcanard05"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"laitcanard05"},"content":"        return taskList.get(index);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"laitcanard05"},"content":"     * Adds a saved task to the task list based on the provided string representation of the saved task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"laitcanard05"},"content":"     * The string representation of the saved task contains task details separated by a pipe character \u0027|\u0027.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"laitcanard05"},"content":"     * The task type (T for Todo, D for Deadline, E for Event) is the first element of the string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"laitcanard05"},"content":"     * The second element indicates whether the task is done (\u0027X\u0027 for done, otherwise not done).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"laitcanard05"},"content":"     * The third element contains the task name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"laitcanard05"},"content":"     * For Deadline tasks, the fourth element is the deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"laitcanard05"},"content":"     * For Event tasks, the fourth and fifth elements are the start and end times respectively.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"laitcanard05"},"content":"     * @param savedTask a string containing the details of the saved task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"laitcanard05"},"content":"    public void addSavedTask(String savedTask) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"laitcanard05"},"content":"        String[] savedTaskInArray \u003d savedTask.split(\"\\\\|\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"laitcanard05"},"content":"        String savedTaskType \u003d savedTaskInArray[0].trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"laitcanard05"},"content":"        Boolean savedTaskIsDone \u003d savedTaskInArray[1].trim().equals(\"X\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"laitcanard05"},"content":"        String savedTaskName \u003d savedTaskInArray[2].trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"laitcanard05"},"content":"        Task newTask;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"laitcanard05"},"content":"        switch (savedTaskType) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"laitcanard05"},"content":"        case \"T\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Todo(savedTaskName, savedTaskIsDone);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"laitcanard05"},"content":"        case \"D\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"laitcanard05"},"content":"            String savedTaskDeadline \u003d savedTaskInArray[3].trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Deadline(savedTaskName, savedTaskDeadline, savedTaskIsDone);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"laitcanard05"},"content":"        case \"E\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"laitcanard05"},"content":"            String savedTaskStart \u003d savedTaskInArray[3].trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"laitcanard05"},"content":"            String savedTaskEnd \u003d savedTaskInArray[4].trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Event(savedTaskName, savedTaskStart, savedTaskEnd, savedTaskIsDone);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"laitcanard05"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"laitcanard05"},"content":"            newTask \u003d new Task(savedTaskName, savedTaskIsDone);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"laitcanard05"},"content":"        taskList.add(numTasks, newTask);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"laitcanard05"},"content":"        numTasks++;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"laitcanard05"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"laitcanard05"},"content":"     * @param taskToDelete the index of the task to be deleted.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"laitcanard05"},"content":"    public void deleteTask(int taskToDelete) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"laitcanard05"},"content":"            taskList.remove(taskToDelete);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"laitcanard05"},"content":"            numTasks--;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":144}},{"path":"src/main/java/bob/function/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a Todo object with the specified name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"     * This constructor is called when the user input requires a new Todo task to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"     * The isDone attribute is set to a default value of false.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"     * @param name  the name of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"    public Todo(String name) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"        super(name);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a Todo object with the specified name and completion status.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"     * This constructor is called when adding a Todo saved task where the completion status may be true or false.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"     * @param name  the name of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"     * @param isDone the completion status of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"    public Todo(String name, Boolean isDone) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"     * Displays the Todo task in a formatted string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"     * The format includes the task type, task name and completion status.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"     * @return a string representation of the event task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"    public String displayTask() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"        return \"[T]\" + super.displayTask();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"laitcanard05":37}},{"path":"src/main/java/bob/function/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"package bob.function;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"laitcanard05"},"content":"public class Ui {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"laitcanard05"},"content":"    protected String outputMessage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"     * Constructs a {@code Ui} instance and initializes a greeting message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"laitcanard05"},"content":"     * The message is printed immediately upon creation.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"    public Ui() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"        outputMessage \u003d \"Hello! I\u0027m Bob\" + \".\\nWhat can I do for you?\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"        printMessage();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"laitcanard05"},"content":"     * Sets the output message based on the provided command and instruction.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"laitcanard05"},"content":"     * This method formats responses for different user actions, such as listing tasks, marking/unmarking tasks,","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"laitcanard05"},"content":"     * adding tasks, deleting tasks or finding tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"     * @param messageInstruction The processed command string that determines the type of operation","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"laitcanard05"},"content":"     * and contains information of the tasks required for the specific command operation.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"laitcanard05"},"content":"     * @param taskList The task list that contains the current tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"laitcanard05"},"content":"    public void setMessage(String messageInstruction, TaskList taskList) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"laitcanard05"},"content":"        int numTasks \u003d taskList.getNumTasks();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"laitcanard05"},"content":"        String command \u003d messageInstruction.trim().split(\" \")[0];","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"laitcanard05"},"content":"        String taskDisplay \u003d \"\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"laitcanard05"},"content":"        if (!(command.equals(\"list\") || command.equals(\"bye\"))) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"laitcanard05"},"content":"            taskDisplay \u003d messageInstruction.trim().substring(messageInstruction.indexOf(\" \") + 1);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"laitcanard05"},"content":"        switch(command) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"laitcanard05"},"content":"        case \"list\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"laitcanard05"},"content":"            for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"laitcanard05"},"content":"                outputMessage +\u003d String.format(\"\\n%d. %s\", i+1, taskList.getTask(i).displayTask());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"laitcanard05"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\" + taskDisplay;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"laitcanard05"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + taskDisplay;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"laitcanard05"},"content":"        case \"add\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d tasks in the list.\", taskDisplay, numTasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"laitcanard05"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d tasks in the list.\", taskDisplay, numTasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"laitcanard05"},"content":"        case \"find\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"laitcanard05"},"content":"            String[] matchingTasksIndex \u003d taskDisplay.split(\"\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"laitcanard05"},"content":"            int count \u003d 1;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"laitcanard05"},"content":"            for (int i \u003d 0; i \u003c matchingTasksIndex.length; i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"laitcanard05"},"content":"                int matchingTaskIndex \u003d Integer.parseInt(matchingTasksIndex[i]);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"laitcanard05"},"content":"                outputMessage +\u003d String.format(\"\\n%d. %s\", count, taskList.getTask(matchingTaskIndex).displayTask());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"laitcanard05"},"content":"                count++;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"laitcanard05"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"laitcanard05"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"laitcanard05"},"content":"     * Sets the output message to different types of error messages based on the provided error type.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"laitcanard05"},"content":"     * If the error type does not match any of the specified cases, a generic error message will be set.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"laitcanard05"},"content":"     * @param errorType the type of error to process. It must be one of the following values:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"laitcanard05"},"content":"     *                  \"Unknown Command\", \"Missing Description\", \"Task Does Not Exist\",","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"laitcanard05"},"content":"     *                  \"Already Marked As Done\", \"Already Marked As Not Done\", \"Missing Date Or Time\",","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"laitcanard05"},"content":"     *                  \"Save Failed\", \"IO Exception\", \"Missing Search Term\".","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"laitcanard05"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"laitcanard05"},"content":"    public void processError(String errorType) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"laitcanard05"},"content":"        switch (errorType) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"laitcanard05"},"content":"        case \"Unknown Command\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"I am unable to process this command. The available commands are\\n1.list\\n2.todo\\n3.deadline\\n4.event\\n5.mark\\n6.unmark\\n7.find\\n8.delete\\n9.bye\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"laitcanard05"},"content":"        case \"Missing Description\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"The description of the command is missing. Please try again.\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"laitcanard05"},"content":"        case \"Task Does Not Exist\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"The task is not found. Please try again.\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"laitcanard05"},"content":"        case \"Already Marked As Done\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"This task is already marked as done.\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"laitcanard05"},"content":"        case \"Already Marked As Not Done\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"This task is already marked as not done.\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"laitcanard05"},"content":"        case \"Missing Date Or Time\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"There are missing dates or times in the description. Please try again.\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"laitcanard05"},"content":"        case \"Save Failed\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"There were some problems saving the updated list. Please try again.\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"laitcanard05"},"content":"        case \"IO Exception\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"There was some problems opening the file. Please try again.\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"laitcanard05"},"content":"        case \"Missing Search Term\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"The keyword to search for is missing. Please try again.\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"laitcanard05"},"content":"        case \"Invalid Format for Date/Time\":","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"laitcanard05"},"content":"            outputMessage \u003d \"The input deadline is in an invalid format. Please input the deadline in one of these formats: yyyy-MM-dd HH:mm, yyyy-MM-dd, HH:mm.\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"laitcanard05"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"laitcanard05"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"laitcanard05"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"laitcanard05"},"content":"    public void printMessage() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"laitcanard05"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"laitcanard05"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"laitcanard05"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"laitcanard05"},"content":"     * Exits the program and prints a farewell message to the console.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"laitcanard05"},"content":"     * This method is called when the program is ready to terminate.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"laitcanard05"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"laitcanard05"},"content":"    public void exit() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"laitcanard05"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"laitcanard05"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"laitcanard05"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":123}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laitcanard05"},"content":"list","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"laitcanard05"},"content":"bye","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"laitcanard05"},"content":"del text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"laitcanard05"},"content":"@REM javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bob\\function\\Chat.java","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"laitcanard05"},"content":"javac -d ..\\bin src\\main\\java\\bob\\function\\*.java","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"laitcanard05"},"content":"javac -d ..\\bin src\\main\\java\\bob\\exceptions\\*.java","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"laitcanard05"},"content":"java -classpath ..\\bin\\src\\main\\java\\bob\\function\\Chat.java \u003c text-ui-test\\input.txt \u003e text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"laitcanard05"},"content":"FC text-ui-test\\ACTUAL.TXT text-ui-test\\EXPECTED.TXT","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"laitcanard05":6,"-":17}}]
