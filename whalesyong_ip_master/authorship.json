[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"# Project Duncan","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"This is a project template for a greenfield Java project named Duncan, adapted from Project Duke.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"whalesyong":2,"-":24}},{"path":"data/duncan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"[D]|0|ee2026 quiz |14/03/2025 2359","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"[E]|0|cs3244 group project meeting|14/03/2025 1200--14/03/2025 1400","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"[D]|0|Cs2113 quiz |15/03/2025 2359","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"whalesyong":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"okay. Could you help me create a section at the very top with quick links to each part of the user guide?","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"## Table of Contents","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"- [Features](#features)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"   - [Viewing help](#viewing-help-help)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"   - [Adding a to-do](#adding-a-to-do-todo)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"   - [Adding a deadline](#adding-a-deadline-deadline)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"   - [Adding an Event](#adding-an-event-event)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"   - [Deleting Tasks](#deleting-tasks-delete)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"   - [Marking/Unmarking tasks](#markingunmarking-tasks-mark-unmark)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"   - [Listing Tasks](#listing-tasks-list)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"   - [Finding tasks](#finding-tasks-find)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"   - [Exiting the program and Saving the list](#exiting-the-program-and-saving-the-list-bye)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"   - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"   - [Summary of Comands](#summary-of-commands-)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"![Duncan ASCII Art](20250314142043.png)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"## Introduction","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"Duncan is a friendly command-line interface (CLI) chatbot to help you organise your tasks!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"## Quick Start","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"1. Ensure you have Java 17 installed on your computer.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"2. Move or copy the `.jar` file from the root of this repository to a desired location on your machine (files will be created there).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"3. Run the `.jar` file by running `java -jar duncan.jar` in a terminal at the location you put the `.jar` file in. Note that double-clicking it might produce a Java exception. A greeting message should be printed to the output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"   ![](20250314145046.png)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"4. Type a command in the terminal and press enter to execute it. Below is a list of sample commands you may try. Refer to the corresponding feature sections for a more details about each command.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"    - `todo read book`: adds a to-do task named \"read book\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"    - `deadline submit iP /by 14/3/2025 2359`: adds a deadline named \"submit iP\", for you to complete by 14th March 2025 at 2359 hrs.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"    - `list`: lists all tasks in your list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"    - `mark 1`: marks the first task in your list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"    - `bye`: exists the app.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"## Features","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"\u003e  **Notes about the command format**:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"\u003e - Uppercased words in angled brackets,  `\u003cUPPER_CASE\u003e` are the parameters to be supplied by the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"\u003e - e.g. for `todo \u003cTASK NAME\u003e`, `TASK NAME` is a parameter, which can be `read book.`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `list`, `bye`) will be ignored.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"### Viewing help: `help`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"Shows the URL link to this page.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"### Adding a to-do: `todo`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"Adds a to-do to the task list. The to-do does not have any time associated with it.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"whalesyong"},"content":"todo \u003cTASK NAME\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"whalesyong"},"content":"**Examples**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"whalesyong"},"content":"1. `todo read book`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"whalesyong"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"whalesyong"},"content":"Adds a deadline to the task list. The deadline has **exactly one** time stamp associated with it.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"whalesyong"},"content":"``` ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"whalesyong"},"content":"deadline \u003cTASK NAME\u003e /by \u003cTIME\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"whalesyong"},"content":"\u003e **Tip**: Time Formats","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"whalesyong"},"content":"\u003e Duncan can understand a few different date formats. Generally, times can be provided as such:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"whalesyong"},"content":"\u003e -   `MM dd yyyy`, `dd MM yyyy`, `dd MM yy`, `MM dd yy`.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"whalesyong"},"content":"\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"whalesyong"},"content":"\u003e A 24 hour time `HHmm` can also be specified after the date if the deadline has a specific time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"whalesyong"},"content":"\u003e Duncan can also understand relative dates. For example, if the current date is 13/3/2025, and the following command is given to Duncan:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"whalesyong"},"content":"\u003e ```deadline CS2113 quiz /by this friday```, a deadline will be created for 2359 Hrs, for the first Friday that occurs after the current time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"whalesyong"},"content":"**Examples**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"whalesyong"},"content":"1. `deadline CS2113 quiz /by 14/3/2025 2359`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"whalesyong"},"content":"2. `deadline CS2113 quiz /by this friday`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"whalesyong"},"content":"3. `deadline CS2113 quiz /by tomorrow`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"whalesyong"},"content":"### Adding an Event: `event`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"whalesyong"},"content":"Adds an event to the task list. The event has **exactly two** time stamps associated with it.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"whalesyong"},"content":"event \u003cTASK NAME\u003e /from \u003cTIME\u003e /to \u003cTIME\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"whalesyong"},"content":"**Examples**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"whalesyong"},"content":"1. `event CS2113 lecture /from 14/3/2025 1600 /to 14/3/2025 1800`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"whalesyong"},"content":"2. `event CS2113 lecture /from this friday 1600 /to this friday 1800`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"whalesyong"},"content":"3. `event CS2113 lecture /from tomorrow 1600 /to tomorrow 1800`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"whalesyong"},"content":"### Deleting Tasks: `delete`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"whalesyong"},"content":"Deletes a specified task from the list by its number.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"whalesyong"},"content":"delete \u003cTASK NUMBER\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"whalesyong"},"content":"If we had a list as such:\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"whalesyong"},"content":"![](20250314155408.png)\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"whalesyong"},"content":"We could delete the **first** entry by doing `delete 1`:\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"whalesyong"},"content":"![](20250314155737.png)\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"whalesyong"},"content":"**Examples**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"whalesyong"},"content":"1. `delete 1`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"whalesyong"},"content":"### Marking/Unmarking tasks: `mark`/ `unmark`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"whalesyong"},"content":"Mark or unmark a specified task in the list by its number.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"whalesyong"},"content":"mark \u003cTASK NUMBER\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"whalesyong"},"content":"unmark \u003cTASK NUMBER\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"whalesyong"},"content":"If we had a list as such: \\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"whalesyong"},"content":"![](20250314160642.png)\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"whalesyong"},"content":"We could mark the **first** entry by doing `mark 1`:\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"whalesyong"},"content":"![](20250314160828.png)\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"whalesyong"},"content":"We can unmark the task that we just marked:\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"whalesyong"},"content":"![](20250314160838.png)\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"whalesyong"},"content":"**Examples**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"whalesyong"},"content":"1. `mark 1`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"whalesyong"},"content":"2. `unmark 1`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"whalesyong"},"content":"### Listing Tasks: `list`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"whalesyong"},"content":"Lists all tasks and their respective information in your list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"whalesyong"},"content":"list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"whalesyong"},"content":"### Finding tasks: `find`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"whalesyong"},"content":"Finds all tasks in your list that match the specific keyword provided.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"whalesyong"},"content":"find \u003cKEYWORD\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"whalesyong"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"whalesyong"},"content":"If you had a few tasks:\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"whalesyong"},"content":"![](20250314155408.png)\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"whalesyong"},"content":"And you just wanted all tasks with `cs2113`:\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"whalesyong"},"content":"![](20250314155501.png)\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"whalesyong"},"content":"**Examples**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"whalesyong"},"content":"1. `find cs2113`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"whalesyong"},"content":"### Exiting the program and Saving the list: `bye`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"whalesyong"},"content":"Save and exit the program by saying bye to Duncan!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"whalesyong"},"content":"bye","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"whalesyong"},"content":"Of course, he\u0027ll be sad to see you go:\\","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"whalesyong"},"content":"![](20250314160949.png)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"whalesyong"},"content":"### Editing the data file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"whalesyong"},"content":"The task data is saved upon exit as a `.txt` file. If you are familiar with the format used to save the tasks, you may edit the file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"whalesyong"},"content":"\u003e  **Exercise caution when editing the file**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"whalesyong"},"content":"\u003e","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"whalesyong"},"content":"\u003e - If your changes to the data file makes it format invalid, Duncan will discard all data and start with an empty file. Hence, it is advisable to backup the data in the files before editing.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"whalesyong"},"content":"\u003e - Certain edits may cause unexpected behaviour from Duncan. ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"whalesyong"},"content":"### Summary of Commands ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"whalesyong"},"content":"| Action   | Format,                                    | Examples                                                                                                                     |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"whalesyong"},"content":"| -------- | ------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"whalesyong"},"content":"| todo     | `todo \u003cTASK NAME\u003e`                         | `todo read book`                                                                                                             |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"whalesyong"},"content":"| deadline | `deadline \u003cTASK NAME\u003e /by \u003cTIME\u003e`          | `deadline CS2113 quiz /by 14/3/2025 2359`,`deadline CS2113 quiz /by tomorrow`                                                |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"whalesyong"},"content":"| event    | `event \u003cTASK NAME\u003e /from \u003cTIME\u003e /to \u003cTIME\u003e` | `event CS2113 lecture /from 14/3/2025 1600 /to 14/3/2025 1800`, `event CS2113 lecture /from tomorrow 1600 /to tomorrow 1800` |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"whalesyong"},"content":"| delete   | `delete \u003cTASK NUMBER\u003e`                     | `delete 1`                                                                                                                   |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"whalesyong"},"content":"| mark     | `mark \u003cTASK NUMBER\u003e`                       | `mark 1`                                                                                                                     |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"whalesyong"},"content":"| unmark   | `unmark \u003cTASK NUMBER\u003e`                     | `unmark 1`                                                                                                                   |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"whalesyong"},"content":"| list     | `list`                                     |                                                                                                                              |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"whalesyong"},"content":"| find     | `find \u003cKEYWORD\u003e`                           | `find cs2113`                                                                                                                |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"whalesyong"},"content":"| bye      |                                            |                                                                                                                              |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"whalesyong":132,"-":23}},{"path":"src/main/java/CustomDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":" * A wrapper class for {@link LocalDateTime} that provides custom date-related functionalities.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":" * This class wraps a {@link LocalDateTime} and overrides toString().","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"public class CustomDate {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"    protected final LocalDateTime dateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"    public CustomDate(LocalDateTime dateTime) { this.dateTime \u003d dateTime; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"    public LocalDate getDate() { return dateTime.toLocalDate(); }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    public String toString() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"whalesyong":20}},{"path":"src/main/java/CustomDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":" * A subclass of {@link CustomDate} that adds functionality for handling {@link LocalDateTime}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":" * Provides custom formatting for date-time representation.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"public class CustomDateTime extends CustomDate {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"    public CustomDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"        super(dateTime);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"    public LocalDateTime getDateTime() { return dateTime; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    @Override","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"    public String toString() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"whalesyong":21}},{"path":"src/main/java/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"import java.util.List;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":" * A utility class for parsing date and time strings in various formats.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":" * Supports flexible parsing of both exact and relative date-time strings.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"    //formats dates only","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"M d yyyy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d M yy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"M/d/yyyy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"M-dd-yyyy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yy\")","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"    );","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"    //formats time AND date","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_TIME_FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"M d yyyy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d M yy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"M-dd-yyyy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\"),","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yy HHmm\")","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"    );","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"    // List of recognized relative date terms","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"whalesyong"},"content":"    private static final List\u003cString\u003e RELATIVE_DATE_TERMS \u003d Arrays.asList(","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"whalesyong"},"content":"            \"today\", \"tomorrow\",  \"day after tomorrow\",","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"whalesyong"},"content":"            \"next\", \"this\", \"monday\", \"tuesday\", \"wednesday\",","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"whalesyong"},"content":"            \"thursday\", \"friday\", \"saturday\", \"sunday\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"whalesyong"},"content":"    );","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"whalesyong"},"content":"    // Define end of day time (23:59:59.999999999)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"whalesyong"},"content":"    private static final LocalTime END_OF_DAY \u003d LocalTime.of(23, 59, 59, 999999999);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"whalesyong"},"content":"    // Pattern to match 24-hour time format (e.g., 1400, 0900)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"whalesyong"},"content":"    private static final Pattern TIME_PATTERN \u003d Pattern.compile(\"\\\\s(\\\\d{3,4})$\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"whalesyong"},"content":"     * Parses a date-time string, returning a {@link CustomDateTime} instance.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"whalesyong"},"content":"     * This method first checks if the string contains relative date terms,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"whalesyong"},"content":"     * then attempts to parse with date-time formatters, and finally with date-only formatters.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"whalesyong"},"content":"     * @param dateStr The date-time string to be parsed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"whalesyong"},"content":"     * @return A {@link CustomDateTime} object representing the parsed date-time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If the input string cannot be parsed into a valid date or date-time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"whalesyong"},"content":"    public static CustomDateTime parseDateTimeString(String dateStr) throws DuncanException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"whalesyong"},"content":"        dateStr \u003d dateStr.trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"whalesyong"},"content":"        // Check if the input contains any relative date terms","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"whalesyong"},"content":"        String lowerCaseStr \u003d dateStr.toLowerCase();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"whalesyong"},"content":"        if (RELATIVE_DATE_TERMS.stream().anyMatch(lowerCaseStr::contains)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"whalesyong"},"content":"            try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"whalesyong"},"content":"                // Try to parse as a relative date","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"whalesyong"},"content":"                return parseRelativeDate(dateStr);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"whalesyong"},"content":"            } catch (IllegalArgumentException ignored) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"whalesyong"},"content":"                // If parsing as a relative date fails, continue with other methods","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"whalesyong"},"content":"        // Try to parse with date-time formatters","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"whalesyong"},"content":"        for (DateTimeFormatter formatter : DATE_TIME_FORMATTERS) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"whalesyong"},"content":"            try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"whalesyong"},"content":"                return new CustomDateTime(LocalDateTime.parse(dateStr, formatter));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"whalesyong"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"whalesyong"},"content":"        // Try to parse with date-only formatters","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"whalesyong"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"whalesyong"},"content":"            try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"whalesyong"},"content":"                // For date-only formats, set the time to end of day","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"whalesyong"},"content":"                LocalDate date \u003d LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"whalesyong"},"content":"                return new CustomDateTime(LocalDateTime.of(date, END_OF_DAY));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"whalesyong"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"whalesyong"},"content":"        throw new DuncanException(ErrorCode.INVALID_DATE_ERR, dateStr);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"whalesyong"},"content":"     * Parses a relative date string (e.g., \"today\", \"tomorrow\", \"next monday\") and returns the corresponding {@link CustomDateTime}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"whalesyong"},"content":"     * If a time component is provided (e.g., \"tomorrow 1400\"), that time is used; otherwise, the time is set to end of day.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"whalesyong"},"content":"     * @param relativeStr The relative date string (e.g., \"today\", \"tomorrow 1400\", \"next monday\").","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"whalesyong"},"content":"     * @return A {@link CustomDateTime} representing the parsed relative date with the specified time or end of day.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"whalesyong"},"content":"    public static CustomDateTime parseRelativeDate(String relativeStr) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"whalesyong"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"whalesyong"},"content":"        String lower \u003d relativeStr.toLowerCase();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"whalesyong"},"content":"        // Extract time component if present (e.g., \"1400\" from \"tomorrow 1400\")","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"whalesyong"},"content":"        LocalTime timeComponent \u003d END_OF_DAY;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"whalesyong"},"content":"        Matcher timeMatcher \u003d TIME_PATTERN.matcher(relativeStr);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"whalesyong"},"content":"        String datePartOnly \u003d relativeStr;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"whalesyong"},"content":"        if (timeMatcher.find()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"whalesyong"},"content":"            String timeStr \u003d timeMatcher.group(1);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"whalesyong"},"content":"            // Parse time based on length (3 or 4 digits)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"whalesyong"},"content":"            if (timeStr.length() \u003d\u003d 3) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"whalesyong"},"content":"                // Format: \"100\" -\u003e \"01:00\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"whalesyong"},"content":"                timeComponent \u003d LocalTime.of(Integer.parseInt(timeStr.substring(0, 1)),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"whalesyong"},"content":"                        Integer.parseInt(timeStr.substring(1)));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"whalesyong"},"content":"            } else if (timeStr.length() \u003d\u003d 4) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"whalesyong"},"content":"                // Format: \"1400\" -\u003e \"14:00\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"whalesyong"},"content":"                timeComponent \u003d LocalTime.of(Integer.parseInt(timeStr.substring(0, 2)),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"whalesyong"},"content":"                        Integer.parseInt(timeStr.substring(2)));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"whalesyong"},"content":"            // Remove the time part from the date string for further processing","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"whalesyong"},"content":"            datePartOnly \u003d relativeStr.substring(0, timeMatcher.start()).trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"whalesyong"},"content":"            lower \u003d datePartOnly.toLowerCase();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"whalesyong"},"content":"        LocalDate resultDate \u003d switch (lower) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"whalesyong"},"content":"            case \"today\" -\u003e today;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"whalesyong"},"content":"            case \"tomorrow\" -\u003e today.plusDays(1);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"whalesyong"},"content":"            case \"day after tomorrow\" -\u003e today.plusDays(2);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"whalesyong"},"content":"            default -\u003e parseFlexibleWeekday(lower, today);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"whalesyong"},"content":"        };","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"whalesyong"},"content":"        // Return the date with the specified time or end of day","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"whalesyong"},"content":"        return new CustomDateTime(LocalDateTime.of(resultDate, timeComponent));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"whalesyong"},"content":"     * Parses a string representing a weekday (e.g., \"next monday\") and returns the corresponding {@link LocalDate}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"whalesyong"},"content":"     * @param dayStr The weekday string to be parsed (e.g., \"next monday\").","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"whalesyong"},"content":"     * @param referenceDate The date from which the calculation should be made.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"whalesyong"},"content":"     * @return A {@link LocalDate} representing the next or current weekday based on the string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"whalesyong"},"content":"     * @throws IllegalArgumentException If the string does not represent a valid weekday.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"whalesyong"},"content":"    private static LocalDate parseFlexibleWeekday(String dayStr, LocalDate referenceDate) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"whalesyong"},"content":"        boolean isNext \u003d dayStr.contains(\"next\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"whalesyong"},"content":"        boolean isThis \u003d dayStr.contains(\"this\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"whalesyong"},"content":"        for (DayOfWeek day : DayOfWeek.values()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"whalesyong"},"content":"            if (dayStr.toLowerCase().contains(day.toString().toLowerCase())) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"whalesyong"},"content":"                int daysUntil \u003d (day.getValue() - referenceDate.getDayOfWeek().getValue() + 7) % 7;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"whalesyong"},"content":"                if (isNext) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"whalesyong"},"content":"                    daysUntil +\u003d 7;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"whalesyong"},"content":"                } else if (isThis \u0026\u0026 daysUntil \u003d\u003d 0) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"whalesyong"},"content":"                    return referenceDate; // happens if the day string after \"this\" is the current day","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"whalesyong"},"content":"                }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"whalesyong"},"content":"                return referenceDate.plusDays(daysUntil \u003d\u003d 0 ? 7 : daysUntil);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"whalesyong"},"content":"        throw new IllegalArgumentException(\"Unrecognized date description: \" + dayStr);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"whalesyong":170}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":" * A subclass of {@link Task} representing a task with a deadline.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":" * Contains functionality for setting, parsing, and formatting deadlines for tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"    //constant variables for symbols and string literals","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"    private static final String DEADLINE_FORMAT \u003d \" (by: %s)\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"    //format to a LocalDate object","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"    private CustomDateTime by;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    //getters and setters","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"    public CustomDateTime getBy() { return by; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"    public void setBy(CustomDateTime by) { this.by \u003d by; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"     * Constructs a {@link Deadline} task with a description and deadline parsed from the description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"     * @param description The task description which should contain the deadline in \"/by\" format.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If the description format is invalid or the date-time cannot be parsed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"    public Deadline(String description) throws DuncanException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"        super(description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"        super.taskLetter \u003d \"[D]\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"        String[] parts \u003d extractInfo(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"        super.description \u003d parts[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"        this.by \u003d DateTimeParser.parseDateTimeString(parts[1]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"     * Constructs a {@link Deadline} task from a description, done status, and a deadline string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"     * @param description The task description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"     * @param by The deadline string (to be parsed into a {@link CustomDateTime}).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If the deadline string is invalid or missing.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"    public Deadline(String description, boolean isDone, String by) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"        super(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"        super.taskLetter \u003d \"[D]\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"        if (by \u003d\u003d null || by.trim().isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.USAGE_ERR_DEADLINE_MISSING); //no deadline provided","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"whalesyong"},"content":"        super.description \u003d description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"whalesyong"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"whalesyong"},"content":"        this.by \u003d DateTimeParser.parseDateTimeString(by);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"whalesyong"},"content":"    // helper method to extract the \u0027by\u0027 field from the description","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"whalesyong"},"content":"    private String[] extractInfo(String description) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"whalesyong"},"content":"        String[] words \u003d description.split(\" \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"whalesyong"},"content":"        if (words.length \u003c\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.USAGE_ERR_DEADLINE_INVALID);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"whalesyong"},"content":"        String[] parts \u003d description.split(\"/by\", 2);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"whalesyong"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"whalesyong"},"content":"            String extractedBy \u003d parts[1].trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"whalesyong"},"content":"            if (extractedBy.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"whalesyong"},"content":"                throw new DuncanException(ErrorCode.USAGE_ERR_DEADLINE_MISSING);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"whalesyong"},"content":"            return parts;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"whalesyong"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.USAGE_ERR_DEADLINE_INVALID);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"whalesyong"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"whalesyong"},"content":"    public String toString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"whalesyong"},"content":"        return taskLetter + super.getStatusIcon() + \" \" + this.description + String.format(DEADLINE_FORMAT, by);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"whalesyong":74}},{"path":"src/main/java/Duncan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import org.w3c.dom.Text;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"public class Duncan {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"    public static void main(String[] args) throws DuncanException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"        System.out.println(\"Hi! I\u0027m \\n\" + TextUI.DUNCAN_LOGO);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"        TextUI.printHorizontalLine();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"        InputParser duncanInputParser \u003d new InputParser(scanner);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"        TextUI.greetUser();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"        duncanInputParser.startQueryLoop();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"        TextUI.sayBye();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"whalesyong":21}},{"path":"src/main/java/DuncanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"public class DuncanException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"    private final ErrorCode errorCode;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"    public DuncanException(ErrorCode errorCode, Object... args) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"        super(errorCode.getMessage(args)); // Format the message with args","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"        this.errorCode \u003d errorCode;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"    public ErrorCode getErrorCode() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"        return errorCode;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"    public String getMessage(ErrorCode errorCode) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"        return errorCode.getMessage();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"whalesyong":18}},{"path":"src/main/java/ErrorCode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"public enum ErrorCode {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"    INVALID_CMD_ERR(\"What is %s ?\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"    INVALID_CMD_ARGS_ERR(\"Missing argument for command %s\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"    USAGE_ERR_TODO(ErrorCode.TODO_USAGE),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"    USAGE_ERR_DEADLINE_MISSING(\"No deadline provided. \" + ErrorCode.DEADLINE_USAGE),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"    USAGE_ERR_DEADLINE_INVALID(ErrorCode.DEADLINE_USAGE),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"    USAGE_ERR_EVENT_TIME_MISSING(\"Please specify a start and end time. \" + ErrorCode.EVENT_USAGE),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"    USAGE_ERR_EVENT_INVALID(ErrorCode.EVENT_USAGE),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"    INVALID_TASK_LETTER(\"Invalid task detected.\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"    INVALID_DATE_ERR(\"Invalid date/time format: %s\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"    INVALID_INDEX_ERR(\"Invalid task number: %d\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"    IO_FILE_WRITE_ERR(\"Error writing to file: %s\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"    IO_FILE_READ_ERR(\"Error reading file: %s\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    IO_INVALID_TASK_ERR(\"Error reading task at line %s\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"    // Define constants after enum values","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"    private static final String TODO_USAGE \u003d \"Usage: todo \u003cdescription\u003e\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"    private static final String DEADLINE_USAGE \u003d \"Usage: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"    private static final String EVENT_USAGE \u003d \"Usage: event \u003cevent description\u003e /from \u003cevent from\u003e /to \u003cevent to\u003e\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"    private final String messageTemplate;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"    ErrorCode(String messageTemplate) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"        this.messageTemplate \u003d messageTemplate;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"    public String getMessage(Object... args) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"        if (args \u003d\u003d null || args.length \u003d\u003d 0) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"            return messageTemplate; // Return raw message if no arguments provided","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"        return String.format(messageTemplate, args);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"whalesyong":45}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":" * Represents an event with a start time and end time. Inherits from {@link Task}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":" * Provides functionality for setting, parsing, and displaying event details.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"    // Constant for time format","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"    private static final String TIME_RANGE_FORMAT \u003d \" (from: %s to: %s)\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"    private CustomDateTime from;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"    private CustomDateTime to;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"    //getters and setters","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"    public CustomDateTime getFrom() { return from; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"    public CustomDateTime getTo() { return to; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    public void setFrom(CustomDateTime from) { this.from \u003d from; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"    public void setTo(CustomDateTime to) { this.to \u003d to; }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    // Constructor with only description (parses /from and /to)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"     * Constructs an {@link Event} with the specified description, and parses the start and end times.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"     * @param description The description of the event, including \"/from\" and \"/to\" fields.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If there are errors in parsing or invalid fields.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"    public Event(String description) throws DuncanException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"        super(description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"        super.taskLetter \u003d \"[E]\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"        extractFromTo(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"    // Constructor with explicit description, from, and to","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"     * Constructs an {@link Event} with the specified description, completion status, and start and end times.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"     * @param from The start time as a string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"     * @param to The end time as a string.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If there are errors in parsing or invalid fields.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"    public Event(String description, boolean isDone, String from, String to) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"        super(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"        super.taskLetter \u003d \"[E]\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"whalesyong"},"content":"        if (from \u003d\u003d null || from.trim().isEmpty() || to \u003d\u003d null || to.trim().isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.USAGE_ERR_EVENT_INVALID);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"whalesyong"},"content":"        super.description \u003d description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"whalesyong"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"whalesyong"},"content":"        this.from \u003d DateTimeParser.parseDateTimeString(from);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"whalesyong"},"content":"        this.to \u003d DateTimeParser.parseDateTimeString(to);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"whalesyong"},"content":"    // Extracts \u0027from\u0027 and \u0027to\u0027 from the description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"whalesyong"},"content":"    private void extractFromTo(String description) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"whalesyong"},"content":"        if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.USAGE_ERR_EVENT_INVALID);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"whalesyong"},"content":"        String[] parts \u003d description.split(\"/from\", 2);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"whalesyong"},"content":"        super.description \u003d parts[0].trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"whalesyong"},"content":"        String[] timeParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"whalesyong"},"content":"        String fromStr \u003d timeParts[0].trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"whalesyong"},"content":"        String toStr \u003d timeParts.length \u003e 1 ? timeParts[1].trim() : \"\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"whalesyong"},"content":"        if (fromStr.isEmpty() || toStr.isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.USAGE_ERR_EVENT_TIME_MISSING);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"whalesyong"},"content":"        this.from \u003d DateTimeParser.parseDateTimeString(fromStr);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"whalesyong"},"content":"        this.to \u003d DateTimeParser.parseDateTimeString(toStr);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"whalesyong"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"whalesyong"},"content":"    public String toString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"whalesyong"},"content":"        return taskLetter + super.getStatusIcon() + \" \" + this.description +","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"whalesyong"},"content":"                String.format(TIME_RANGE_FORMAT, from, to);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"whalesyong":81}},{"path":"src/main/java/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"import java.io.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":" * The InputParser class handles user input, continuously prompting for input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":" * and processing commands. It interacts with the task list and performs various actions","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":" * like marking, unmarking, deleting tasks, and adding new ones.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"public class InputParser {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"//-------- attributes ---------------------------","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"    //Maps keywords to their associated length","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    final Map\u003cString, Integer\u003e KEYWORD_LENGTH_DICT","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"            \u003d Map.of(","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"            \"bye\", 3,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"            \"list\", 4,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"            \"mark\", 5,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"            \"unmark\", 7,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"            \"todo\", 5,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"            \"deadline\", 9,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"            \"event\", 6,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"            \"delete\", 7","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"    );","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"    public String userInput;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"    Scanner scanner;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"    List taskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"    TextFileSaver fileSaver;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"//-------- constructor  ---------------------------","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"     * Constructs an InputParser object, initializing the scanner and loading","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"     * the task list from the data file if it exists.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"     * @param scanner The scanner used to read user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"    public InputParser(Scanner scanner) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"        //check if data file exists","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"        File dataFile \u003d new File(\"./data/duncan.txt\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"        fileSaver \u003d new TextFileSaver();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"whalesyong"},"content":"        if (dataFile.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"whalesyong"},"content":"            try{","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"whalesyong"},"content":"                taskList \u003d fileSaver.readTextFile();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"whalesyong"},"content":"            } catch (DuncanException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"whalesyong"},"content":"                System.out.println(\"Error reading duncan.txt, a new list will be created!! Error: \" + e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"whalesyong"},"content":"                taskList \u003d new List();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"whalesyong"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"whalesyong"},"content":"                System.out.println(\"duncan.txt not found, please check the file!! Error: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"whalesyong"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"whalesyong"},"content":"            taskList \u003d new List();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"whalesyong"},"content":"//-------- methods  ---------------------------","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"whalesyong"},"content":"    //public methods","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"whalesyong"},"content":"    public static String getFirstWord(String input){","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"whalesyong"},"content":"        String[] parts \u003d input.split(\" \", 2); // Limit to 2 parts","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"whalesyong"},"content":"        return parts[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"whalesyong"},"content":"    public static String filterFirstWord(String input) throws DuncanException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"whalesyong"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"whalesyong"},"content":"        if (parts.length \u003c\u003d 1 ) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.INVALID_CMD_ARGS_ERR, parts[0]);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"whalesyong"},"content":"        return parts[1];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"whalesyong"},"content":"     * Starts the input query loop, processing user commands until \"bye\" is entered.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"whalesyong"},"content":"     * Handles task additions, modifications, and deletions.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If there is an error processing a command.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"whalesyong"},"content":"    public void startQueryLoop() throws DuncanException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"whalesyong"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"whalesyong"},"content":"        while (isRunning) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"whalesyong"},"content":"            TextUI.printUserIndent();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"whalesyong"},"content":"            userInput \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"whalesyong"},"content":"            TextUI.printHorizontalLine();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"whalesyong"},"content":"            String firstWord \u003d userInput.split(\" \")[0];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"whalesyong"},"content":"            try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"whalesyong"},"content":"                switch (firstWord) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"whalesyong"},"content":"                case \"bye\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"whalesyong"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"whalesyong"},"content":"                    fileSaver.writeTextFile(taskList);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"whalesyong"},"content":"                    break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"whalesyong"},"content":"                case \"help\":","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"whalesyong"},"content":"                    TextUI.printHelpUrl();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"whalesyong"},"content":"                    break;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"whalesyong"},"content":"                case \"find\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"whalesyong"},"content":"                    taskList.findKeyword(filterFirstWord(userInput));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"whalesyong"},"content":"                    break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"whalesyong"},"content":"                case \"list\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"whalesyong"},"content":"                    taskList.showTasks();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"whalesyong"},"content":"                    break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"whalesyong"},"content":"                case \"delete\", \"mark\", \"unmark\":","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"whalesyong"},"content":"                    handleTaskModification(firstWord);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"whalesyong"},"content":"                    break;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"whalesyong"},"content":"                case \"todo\", \"deadline\", \"event\":","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"whalesyong"},"content":"                    handleTaskAddition(firstWord);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"whalesyong"},"content":"                    break;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"whalesyong"},"content":"                default:","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"whalesyong"},"content":"                    System.out.println(\"Not a command: \u0027\" + firstWord + \"\u0027! stop.\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"whalesyong"},"content":"                }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"whalesyong"},"content":"            } catch (DuncanException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"whalesyong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"whalesyong"},"content":"    //private methods","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"whalesyong"},"content":"    private void handleTaskModification(String firstWord) throws DuncanException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"whalesyong"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"whalesyong"},"content":"            int taskNumber;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"whalesyong"},"content":"            String taskNumberString \u003d userInput.substring(KEYWORD_LENGTH_DICT.get(firstWord));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"whalesyong"},"content":"            try{","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"whalesyong"},"content":"                taskNumber \u003d Integer.parseInt(taskNumberString);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"whalesyong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"whalesyong"},"content":"                System.out.println(\"Not a number: \" + taskNumberString);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"whalesyong"},"content":"                return;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"whalesyong"},"content":"            switch (firstWord) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"whalesyong"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"whalesyong"},"content":"                taskList.deleteTask(taskNumber);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"whalesyong"},"content":"                break;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"whalesyong"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"whalesyong"},"content":"                taskList.markTask(taskNumber);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"whalesyong"},"content":"                break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"whalesyong"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"whalesyong"},"content":"                taskList.unmarkTask(taskNumber);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"whalesyong"},"content":"                break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"whalesyong"},"content":"        } catch (DuncanException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"whalesyong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"whalesyong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.INVALID_CMD_ARGS_ERR, firstWord);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"whalesyong"},"content":"    private void handleTaskAddition(String taskType) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"whalesyong"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"whalesyong"},"content":"            taskList.addTask(filterFirstWord(userInput), taskType.substring(0, 1).toUpperCase());","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"whalesyong"},"content":"            System.out.println(\"You have \" + taskList.size() + \" tasks.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"whalesyong"},"content":"        } catch (DuncanException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"whalesyong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"whalesyong":163}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":" * The List class manages a collection of tasks, allowing the addition, modification,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":" * deletion, and display of tasks. It supports operations such as marking, unmarking,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":" * and finding tasks based on keywords.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"public class List {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"     * Constructs a new List object with an empty list of tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"    public List() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"    public int size() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"     * Adds a new task to the list based on the description and task letter.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"     * The task letter determines the type of task (e.g., Todo, Deadline, Event).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"     * @param taskLetter A single character indicating the type of task (T, D, E).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If the task letter is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"    public void addTask(String description, String taskLetter) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"        Task newTask \u003d switch (taskLetter) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"            case \"T\" -\u003e new Todo(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"            case \"D\" -\u003e new Deadline(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"            case \"E\" -\u003e new Event(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"            default -\u003e throw new DuncanException(ErrorCode.INVALID_TASK_LETTER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"        };","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"        System.out.println(\"You have an extra thing to do now:\\n\"  + formatTaskMessage(newTask));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"whalesyong"},"content":"     * Formats the task message to be printed after adding a new task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"whalesyong"},"content":"     * Includes details such as the task letter, status icon, and specific task details.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"whalesyong"},"content":"     * @param task The task to format.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"whalesyong"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"whalesyong"},"content":"    private String formatTaskMessage(Task task) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"whalesyong"},"content":"        StringBuilder message \u003d new StringBuilder(task.taskLetter + task.getStatusIcon() + \" \" + task.description);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"whalesyong"},"content":"        if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"whalesyong"},"content":"            message.append(\" (\").append(deadline.getBy()).append(\")\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"whalesyong"},"content":"        } else if (task instanceof Event event) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"whalesyong"},"content":"            message.append(\" (\").append(event.getFrom()).append(\" to \").append(event.getTo()).append(\")\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"whalesyong"},"content":"        return message.toString();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"whalesyong"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"whalesyong"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If there is an error adding the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"whalesyong"},"content":"    public void addTask(Task task) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"whalesyong"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"whalesyong"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"whalesyong"},"content":"     * If the list is empty, prints a message indicating that no tasks are available.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"whalesyong"},"content":"    public void showTasks() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"whalesyong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"whalesyong"},"content":"            System.out.println(\"No tasks in your list!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"whalesyong"},"content":"            return;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"whalesyong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"whalesyong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"whalesyong"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"whalesyong"},"content":"     * Marks a task as done based on its index in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"whalesyong"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If the task index is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"whalesyong"},"content":"    public void markTask(int index) throws DuncanException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"whalesyong"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"whalesyong"},"content":"            tasks.get(index - 1).setDone(true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"whalesyong"},"content":"            System.out.println(\"Great! I\u0027ve marked this task as done: \\n\" + tasks.get(index - 1));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"whalesyong"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.INVALID_INDEX_ERR, index);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"whalesyong"},"content":"     * Unmarks a task, setting it as not done based on its index in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"whalesyong"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If the task index is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"whalesyong"},"content":"    public void unmarkTask(int index) throws DuncanException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"whalesyong"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"whalesyong"},"content":"            tasks.get(index - 1).setDone(false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"whalesyong"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \" + tasks.get(index - 1));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"whalesyong"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.INVALID_INDEX_ERR, index);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"whalesyong"},"content":"     * Deletes a task from the list based on its index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"whalesyong"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"whalesyong"},"content":"     * @throws DuncanException If the task index is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"whalesyong"},"content":"    public void deleteTask(int index) throws DuncanException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"whalesyong"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"whalesyong"},"content":"            System.out.println(\"Wow, you have one less thing to do now: \\n\" + tasks.get(index-1));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"whalesyong"},"content":"            tasks.remove(index-1);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"whalesyong"},"content":"        } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.INVALID_INDEX_ERR, index);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"whalesyong"},"content":"     * Checks if the given index is valid (within the bounds of the task list).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"whalesyong"},"content":"     * @param index The index to check.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"whalesyong"},"content":"     * @return true if the index is valid, false otherwise.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"whalesyong"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"whalesyong"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"whalesyong"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"whalesyong"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"whalesyong"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"whalesyong"},"content":"        return tasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"whalesyong"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"whalesyong"},"content":"     * Finds tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"whalesyong"},"content":"     * Prints the matching tasks and a message if no tasks are found.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"whalesyong"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"whalesyong"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"whalesyong"},"content":"    public void findKeyword(String keyword) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"whalesyong"},"content":"        boolean hasEntry \u003d false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"whalesyong"},"content":"        System.out.println(\"Finding tasks with keyword: \" + keyword);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"whalesyong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"whalesyong"},"content":"            if (tasks.get(i).description.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"whalesyong"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"whalesyong"},"content":"                if (!hasEntry) { hasEntry \u003d true; }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"whalesyong"},"content":"        if (!hasEntry) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"whalesyong"},"content":"            System.out.println(\"No tasks with the keyword: \" + keyword);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"whalesyong":175}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":" * Abstract class representing a task. This class serves as the base for all task types.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":" * Subclasses must implement specific task-related functionality.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"    /*","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"     Abstract class implementation of all tasks. Must be overriden","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"    //attributes","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    protected String description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"    public String taskLetter;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"    //constructors","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    public Task(String description) throws DuncanException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"    //helper methods","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"        return isDone;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"whalesyong":37}},{"path":"src/main/java/TextFileSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.io.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"// class for reading and writing from and to a .txt file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"public class TextFileSaver {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"    String directoryPath \u003d \"./data\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"    String fileName \u003d \"/duncan.txt\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"    String fullFilePath \u003d directoryPath + File.separator + fileName ;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"    final String SEPARATOR \u003d \"|\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"    private String boolToNumber(boolean inputBoolean) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"        return inputBoolean ? \"1\" : \"0\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"    public TextFileSaver() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"        // when called, make sure that the directory ./data exists","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"            directory.mkdirs();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"        //ensure file duncan.txt exists","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"        File dataFile \u003d new File(directoryPath + File.separator + fileName);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"            try{","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"                System.out.println(\"Error creating file \"+ dataFile.getAbsolutePath());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"    public void writeTextFile(List list) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"        ArrayList\u003cTask\u003e taskList \u003d list.getTasks();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"        // Open the writer once, before the loop","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"        try(BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fullFilePath))) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"                StringBuilder taskInfo \u003d new StringBuilder();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"                taskInfo.append(task.taskLetter)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"                        .append(SEPARATOR)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"whalesyong"},"content":"                        .append(boolToNumber(task.isDone()))","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"whalesyong"},"content":"                        .append(SEPARATOR)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"whalesyong"},"content":"                        .append(task.description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"whalesyong"},"content":"                // add task specific fields (by, from to)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"whalesyong"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"whalesyong"},"content":"                    Deadline deadline \u003d (Deadline)task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"whalesyong"},"content":"                    taskInfo.append(SEPARATOR)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"whalesyong"},"content":"                            .append(deadline.getBy().toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"whalesyong"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"whalesyong"},"content":"                    Event event \u003d (Event)task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"whalesyong"},"content":"                    taskInfo.append(SEPARATOR)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"whalesyong"},"content":"                            .append(event.getFrom() + \"--\" + event.getTo().toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"whalesyong"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"whalesyong"},"content":"                //write task info","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"whalesyong"},"content":"                writer.write(taskInfo.toString());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"whalesyong"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"whalesyong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.IO_FILE_WRITE_ERR, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"whalesyong"},"content":"    public List readTextFile() throws DuncanException, FileNotFoundException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"whalesyong"},"content":"        List taskList \u003d new List();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"whalesyong"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(fullFilePath))) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"whalesyong"},"content":"            String line;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"whalesyong"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"whalesyong"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"whalesyong"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"whalesyong"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"whalesyong"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"whalesyong"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"whalesyong"},"content":"            return taskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"whalesyong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.IO_FILE_READ_ERR, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"whalesyong"},"content":"    private Task parseTask(String line) throws DuncanException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"whalesyong"},"content":"        String[] taskInfo \u003d line.split(Pattern.quote(SEPARATOR));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"whalesyong"},"content":"        if (taskInfo.length \u003c 3) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.IO_INVALID_TASK_ERR ,line);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"whalesyong"},"content":"        String taskLetter \u003d taskInfo[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"whalesyong"},"content":"        boolean isDone \u003d taskInfo[1].equals(\"1\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"whalesyong"},"content":"        String description \u003d taskInfo[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"whalesyong"},"content":"        switch (taskLetter) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"whalesyong"},"content":"        case \"[T]\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"whalesyong"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"whalesyong"},"content":"        case \"[D]\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"whalesyong"},"content":"            return parseDeadline(taskInfo, line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"whalesyong"},"content":"        case \"[E]\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"whalesyong"},"content":"            return parseEvent(taskInfo, line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"whalesyong"},"content":"        default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.IO_INVALID_TASK_ERR, line);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"whalesyong"},"content":"    private Deadline parseDeadline(String[] taskInfo, String line) throws DuncanException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"whalesyong"},"content":"        if (taskInfo.length \u003c 4) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.IO_INVALID_TASK_ERR ,line);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"whalesyong"},"content":"        return new Deadline(taskInfo[2], taskInfo[1].equals(\"1\"), taskInfo[3]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"whalesyong"},"content":"    private Event parseEvent(String[] taskInfo, String line) throws DuncanException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"whalesyong"},"content":"        if (taskInfo.length \u003c 4) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.IO_INVALID_TASK_ERR, line);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"whalesyong"},"content":"        String[] times \u003d taskInfo[3].split(\"--\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"whalesyong"},"content":"        if (times.length \u003c 2) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.IO_INVALID_TASK_ERR, line);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"whalesyong"},"content":"        return new Event(taskInfo[2], taskInfo[1].equals(\"1\"), times[0], times[1]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"whalesyong":122}},{"path":"src/main/java/TextUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"public class TextUI {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"    public static final String DUNCAN_LOGO \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"                      \" ██████╗ ██╗   ██╗███╗   ██╗ ██████╗ █████╗ ███╗   ██╗\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"                    + \" ██╔══██╗██║   ██║████╗  ██║██╔════╝██╔══██╗████╗  ██║\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"                    + \" ██║  ██║██║   ██║██╔██╗ ██║██║     ███████║██╔██╗ ██║\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"                    + \" ██║  ██║██║   ██║██║╚██╗██║██║     ██╔══██║██║╚██╗██║\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"                    + \" ██████╔╝╚██████╔╝██║ ╚████║╚██████╗██║  ██║██║ ╚████║\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"                    + \"  ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═══╝\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"    public static final String HLINE \u003d \"___________________________________________________________\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"    public static final String USER_INDENT \u003d \"\u003e\u003e \";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"    public static final String HELP_URL \u003d \"https://whalesyong.github.io/ip/\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"    public static void printUserIndent(){ System.out.print(USER_INDENT); }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"    public static void printHorizontalLine(){","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"        System.out.println(HLINE);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"    public static void printLogo(){","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"        System.out.println(DUNCAN_LOGO);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"    public static void greetUser(){","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"        LocalTime currentTime \u003d LocalTime.now();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm:ss\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"        String formattedTime \u003d currentTime.format(formatter);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"        System.out.println(\"Hi there! It is now: \" + formattedTime );","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"whalesyong"},"content":"    public static void sayBye(){","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"whalesyong"},"content":"        System.out.println(\"Going so fast? :( I\u0027ll see you soon then!\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"whalesyong"},"content":"        printHorizontalLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"whalesyong"},"content":"    public static void printHelpUrl(){","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"whalesyong"},"content":"        System.out.println(\"Help for commands can be found at: \"+HELP_URL);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"whalesyong":41}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whalesyong"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"whalesyong"},"content":"    // Constructor with only description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"whalesyong"},"content":"    public Todo(String description) throws DuncanException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"whalesyong"},"content":"        super(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"whalesyong"},"content":"        super.taskLetter \u003d \"[T]\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"whalesyong"},"content":"        super.description \u003d validateDescription(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"whalesyong"},"content":"    // Constructor with description and isDone","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"whalesyong"},"content":"    public Todo(String description, boolean isDone) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"whalesyong"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"whalesyong"},"content":"        super.taskLetter \u003d \"[T]\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"whalesyong"},"content":"        super.description \u003d validateDescription(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"whalesyong"},"content":"        super.isDone \u003d isDone; // Set completion status","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"whalesyong"},"content":"    // Validates the description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"whalesyong"},"content":"    private String validateDescription(String description) throws DuncanException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"whalesyong"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"whalesyong"},"content":"            throw new DuncanException(ErrorCode.USAGE_ERR_TODO);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"whalesyong"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"whalesyong"},"content":"        return description.trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"whalesyong"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"whalesyong"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"whalesyong"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"whalesyong"},"content":"        return taskLetter + getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"whalesyong"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"whalesyong"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"whalesyong":31}}]
