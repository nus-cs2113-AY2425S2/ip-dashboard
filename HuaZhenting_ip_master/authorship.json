[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"# huke.huke project template","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"1. After that, locate the `src/main/java/huke.huke.java` file, right-click it, and choose `Run huke.huke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":2,"-":24}},{"path":"data/huke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"T | 0 | 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"D | 1 | Submit assignment | 15/3/2024 2359","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"E | 0 | Coding workshop | 20/6/2025 0930 | 20/6/2025 1200","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"E | 1 | Meeting with client | 20/6/2025 0930 | 20/6/2025 1200","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"T | 0 | play","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"E | 0 | Meeting with client | 20/6/2025 0930 | 20/6/2025 1200","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"# Huke.huke User Guide","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"Welcome to Huke! ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"This task management system helps you manage your tasks efficiently. ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"You can add tasks, mark and unmark them, delete them, and even search for specific tasks. ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"The available task types are To-Do, Deadline, and Event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"## Adding a todo","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"To add a to-do task, use the todo command followed by a description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"Example: todo play","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome: ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    Great! I\u0027ve added this task for you:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    [T][ ] play","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"## Adding a deadline","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"To add a deadline task, ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"use the deadline command followed by the description and /by for the deadline time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"deadline \u003cdescription\u003e /by \u003cdeadline_time\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"Example: deadline Submit assignment /by 15/3/2024 2359","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome: ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    Great! I\u0027ve added this task for you:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    [D][ ] Submit assignment (by: Mar 15 2024 23:59)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"## Adding a event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"To add an event task, ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"use the event command with /from for the start time and /to for the end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"event \u003cdescription\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"Example: event Meeting with client /from 20/6/2025 0930 /to 20/6/2025 1200","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome: ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    Great! I\u0027ve added this task for you:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    [E][ ] Meeting with client (from: Jun 20 2025 09:30 to: Jun 20 2025 12:00)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"## Listing tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"To see all your tasks, use the list command. ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"It will show you a numbered list of tasks along with their type and status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"Example: list","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    This is your list:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    1 [T][ ] 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"    2 [D][ ] Submit assignment (by: Mar 15 2024 23:59)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"    3 [E][ ] Coding workshop (from: Jun 20 2025 09:30 to: Jun 20 2025 12:00)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"    4 [E][ ] Meeting with client (from: Jun 20 2025 09:30 to: Jun 20 2025 12:00)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"## Marking Tasks as Done","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"To mark a task as completed, use the mark command followed by the task number.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"mark \u003ctask_number\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"Example: mark 5","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"    I\u0027ve helped you mark the task:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"    [T][X] play","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"## Unmarking Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"To unmark a task, use the unmark command followed by the task number.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"unmark \u003ctask_number\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"Example: unmark 5","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    I\u0027ve helped you unmark the task:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"    [T][ ] play","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"## Deleting Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"To delete a task, use the delete command followed by the task number.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"delete \u003ctask_number\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"Example: delete 6","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"    Finished a task? Great!","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"    I\u0027ve helped you remove it from your list:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"    [D][ ] Submit assignment (by: Mar 15 2024 23:59)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"## Finding Tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"To search for a task, use the find command followed by a keyword in the description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"Example: find workshop","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"Expected Outcome:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"    Here\u0027s what I found:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"    [E][ ] Coding workshop (from: Jun 20 2025 09:30 to: Jun 20 2025 12:00)","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":67,"-":11}},{"path":"src/main/java/huke/Huke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.command.Command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":" * Main class for running the Huke task management application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * The class interacts with the user interface, processes user commands,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * loads and saves tasks from/to a file, and manages the core application logic.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"public class Huke {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    private final Ui ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    private final Storage storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    private Parser parser;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Huke application with the specified file path for task storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePath The file path where tasks will be stored and loaded from.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    public Huke(String filePath) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"            tasks \u003d new TaskList(storage.loadTask(), ui);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"            parser \u003d new Parser(tasks, ui, storage);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"        } catch (HukeException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"            tasks \u003d new TaskList(ui); // Create an empty task list if loading tasks fails","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * Starts the Huke application and repeatedly reads user commands until an exit command is issued.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * The application will process commands, update tasks, and provide feedback to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    public void run() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"        ui.printWelcome();  // Display a welcome message to the user","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"            try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"                String cmd \u003d ui.readUserCommand();  // Read the user command","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"                Command c \u003d parser.parse(cmd);  // Parse the command into a corresponding Command object","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"                if (c \u003d\u003d null) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"                    continue;  // Skip empty or invalid commands","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"                }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"                c.execute(tasks, ui, storage);  // Execute the parsed command","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"                isExit \u003d c.isExit();  // Check if the exit command was issued","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"            } catch (HukeException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"                ui.printError(e.getMessage());  // Display any errors that occur during execution","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"        ui.closeScanner();  // Close the scanner when exiting the application","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"     * Main method to start the Huke application. This initializes the application","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     * and runs it by creating a new instance of the Huke class.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     * @param args Command-line arguments (not used in this implementation).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"        new Huke(\"./data/huke.txt\").run();  // Start the Huke application with the specified file path","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":67}},{"path":"src/main/java/huke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.*;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.command.*;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * Parses user input to determine the appropriate command to execute.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * The class is responsible for converting user commands into Command objects that the program can process.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"public class Parser {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    private final TaskList TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    private final Ui ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"    private final Storage storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Parser object with the specified TaskList, Ui, and Storage objects.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @param TaskList The list of tasks that the user can interact with.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The Ui object for displaying information to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage object to handle saving/loading tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    public Parser(TaskList TaskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"        this.TaskList \u003d TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * Parses the input command from the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * It splits the input into the command type and its description (if any),","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * and returns the corresponding Command object for execution.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * @param input The user input string representing the command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * @return The Command object that corresponds to the user input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the command is unknown or the input is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    public Command parse(String input) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"            return null;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"        String description \u003d null;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"            description \u003d parts[1];","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"        Command cmd \u003d getCommand(command, parts, description, input);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"        if (cmd \u003d\u003d null) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.unknownCommandError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"        return cmd;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     * Determines which command to create based on the input command type.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     * @param command The command type (e.g., \"todo\", \"deadline\", etc.).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     * @param parts The parts of the user input split by space.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description or details provided by the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     * @param input The complete user input string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * @return The appropriate Command object corresponding to the user input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If there is an error in parsing the input or the command is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"    private Command getCommand(String command, String[] parts, String description, String input) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"        switch (command) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"        case \"list\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"            return new MarkCommand(parts);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"            return new UnmarkCommand(parts);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"            if (description \u003d\u003d null) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.unknownError());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"            return new DeleteCommand(description);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"            if (description \u003d\u003d null) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.todoError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"            return new AddCommand(new Todo(description));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"            if (!input.toLowerCase().contains(\"/by \")) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.deadlineError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"            try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"                String[] splited \u003d description.split(\"/by \", 2);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"                return new AddCommand(new Deadline(splited[0].trim(), splited[1].trim()));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.deadlineError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"        case \"event\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"            if (!input.toLowerCase().contains(\"/from\") || !input.toLowerCase().contains(\"/to\")) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.eventError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"            String[] splited \u003d description.split(\"/from|/to\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"            if (splited.length \u003c 3) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.eventError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"            try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"                String startTimeString \u003d splited[1].trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"                String endTimeString \u003d splited[2].trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"                return new AddCommand(new Event(splited[0].trim(), startTimeString, endTimeString));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.eventError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"        case \"find\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"            if (description \u003d\u003d null) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.findError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"            return new FindCommand(description);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"        default:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"            return null;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":124}},{"path":"src/main/java/huke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import java.io.*;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import java.util.*;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.*;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Handles reading from and writing to the storage file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * This class manages loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"public class Storage {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    private static String FILE_PATH;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * If the file doesn\u0027t exist, it creates the necessary directories and the file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param path The path to the storage file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    public Storage(String path) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"        this.FILE_PATH \u003d path;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"            Path filePath \u003d Paths.get(path);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(\"Error: Create File Failure\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * It reads each line of the file, parsing it into a Task object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If there is an error while parsing the tasks or loading the file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"    public static ArrayList\u003cTask\u003e loadTask() throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"            String line;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"                try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"                    tasks.add(parseTask(line));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"                    System.out.println(\"Line corrupted:\" + e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        } catch (HukeException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"            throw e;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(\"Error: Read File Failure\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"        return tasks;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     * Parses a single line of text into a Task object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     * The line should contain task information in the format \"Type | DoneStatus | Description | [Additional Info]\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * @param line The line of text to parse.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the line is in an invalid format or the task type is unknown.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"    private static Task parseTask(String line) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.unknownCommandError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"        case \"T\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"            return new Todo(parts[2], isDone);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"        case \"D\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.deadlineError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"            return new Deadline(parts[2], isDone, parts[3]);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"        case \"E\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.eventError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"            return new Event(parts[2], isDone, parts[3], parts[4]);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"        default:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.unknownError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     * Saves the list of tasks to the storage file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     * It writes each task to the file in a specific format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"    public static void saveTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"        try (BufferedWriter w \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"                w.write(task.toFileFormat()); // Custom method to format each task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"                w.newLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(\"Error: Save File Failure\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":110}},{"path":"src/main/java/huke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import java.util.List;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.Task;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Represents the user interface that interacts with the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * This class handles displaying messages, reading user input,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * and showing task-related information to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"public class Ui {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    private static final String dottedLine \u003d \"  ------------------------------\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a new Ui object with a Scanner for reading user input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"    public Ui() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * Reads a user command from the console input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * @return The trimmed user command string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    public String readUserCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"            return scanner.nextLine().trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"            return \"\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    public void printWelcome() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"Hello! I\u0027m Huke!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * Prints an exit message when the user exits the program.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"    public void printExit() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"Bye! Hope to see you again!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * Prints an error message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     * @param Message The error message to be displayed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"    public void printError(String Message) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(Message);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     * Prints the list of tasks to the console.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"    public void printList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(\"No tasks at the moment. Have fun!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(\"This is your list: \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"                System.out.println(\"  \" + (i + 1) + \" \" + tasks.get(i));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     * Prints a message confirming the addition of a new task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"     * @param totalTasks The total number of tasks after addition.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"    public void printAdd(Task task, int totalTasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"Great! I\u0027ve added this task for you:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     * Prints a message confirming that a task has been marked as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"    public void printMark(Task task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"I\u0027ve helped you marked the task:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     * Prints a message confirming that a task has been unmarked.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"    public void printUnmark(Task task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"I\u0027ve helped you unmarked the task:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"     * Prints a message confirming the deletion of a task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"     * @param totalTasks The total number of tasks after deletion.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"    public void printDelete(Task task, int totalTasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"Finished a task? Great!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"I\u0027ve helped you remove it from your list:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the result of a search for tasks matching a keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks The list of tasks that match the search criteria.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"    public void showFindResult(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(\"Nothing here!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HuaZhenting"},"content":"        } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(\"Here\u0027s what I found:\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"                System.out.println(\"    \" + task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HuaZhenting"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HuaZhenting"},"content":"    public void closeScanner() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HuaZhenting"},"content":"        scanner.close();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":141}},{"path":"src/main/java/huke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.Task;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * This command takes a task and adds it to the provided task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    private final Task task;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to add the task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * This method adds the provided task to the TaskList and saves the updated task list using the Storage instance.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList to which the task will be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance to provide feedback to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance to save the updated task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If an error occurs during the task addition.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":38}},{"path":"src/main/java/huke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Abstract class representing a command in the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * All commands in the application should extend this class and implement the execute method.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"     * Determines if the command is an exit command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * By default, this method returns false.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * Subclasses can override this method to indicate whether the command should terminate the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @return A boolean indicating if the command is an exit command. Default is false.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"        return false;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command. This method must be implemented by subclasses to define the specific behavior of the command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList containing all tasks to be operated on.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance for displaying feedback to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance for saving the updated state of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If any error occurs during the execution of the command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":34}},{"path":"src/main/java/huke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * This class handles the logic of deleting a task based on the provided task index.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    private final int index;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a DeleteCommand instance with the task index.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * The task index is parsed from the given string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param indexStr The string representation of the task index to delete.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the index is not a valid integer or if any other error occurs.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    public DeleteCommand(String indexStr) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"            this.index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.unknownError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the delete command by removing the task at the specified index from the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance for displaying feedback to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance for saving the updated task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the index is out of range or if the task deletion fails.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":42}},{"path":"src/main/java/huke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command that exits the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * This class is responsible for printing the exit message and terminating the program.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the exit command by printing the exit message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"     * This method is responsible for displaying the goodbye message and signaling the system to terminate.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList containing all tasks (not used in this command).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance for printing the exit message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance for handling file operations (not used in this command).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"        ui.printExit();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * Returns whether the program should exit.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @return true to indicate the program should exit.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"        return true;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":34}},{"path":"src/main/java/huke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command that finds tasks in the Huke task management system based on a search keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * This class is responsible for searching and displaying tasks that match the given keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"    private final String description;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a FindCommand with the specified search keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The keyword used to search for matching tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the find command by searching for tasks that contain the specified keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * \u003cp\u003eThis method calls the {@link TaskList#findTask(String)} method to search for tasks that","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * match the given description. It will print the results using the Ui instance.\u003c/p\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList containing all the tasks to search through.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance for displaying the search results.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance for handling file operations (though not used here).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"        tasks.findTask(description);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":37}},{"path":"src/main/java/huke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command that lists all tasks in the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * This class is responsible for displaying all the tasks present in the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the list command by displaying all tasks in the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * \u003cp\u003eThis method calls the {@link TaskList#listTasks()} method to list all tasks currently","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * stored in the task management system.\u003c/p\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList containing all the tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance for printing the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance for handling file operations (though not used here).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"        tasks.listTasks();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":27}},{"path":"src/main/java/huke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command that marks a task in the Huke task management system.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * This class is responsible for executing the mark operation on a specific task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    private final String[] parts;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a MarkCommand with the given command parts.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * @param parts   The command parts, where the second element is the task number.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"    public MarkCommand(String[] parts) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"        this.parts \u003d parts;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the mark command by marking the task at the specified index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * \u003cp\u003eIf the task number is invalid or there are not enough arguments, an error message is displayed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * The task number is expected to be the second element in the parts array.\u003c/p\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList containing all the tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance for printing error or success messages.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance for handling file operations (though not used here).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)  {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.unknownCommandError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"            tasks.markTask(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"            ui.printError(\"Invalid task number format. Please enter a valid number.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"        } catch (HukeException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":47}},{"path":"src/main/java/huke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import huke.task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command that unmarks a task in the Huke task management system.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * This class is responsible for executing the unmark operation on a specific task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    private final String[] parts;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a UnmarkCommand with the given command parts.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * @param parts   The command parts, where the second element is the task number.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"    public UnmarkCommand(String[] parts) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"        this.parts \u003d parts;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the unmark command by either unmarking the task at the specified index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * \u003cp\u003eIf the task number is invalid or there are not enough arguments, an error message is displayed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * The task number is expected to be the second element in the parts array.\u003c/p\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks   The TaskList containing all the tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui      The Ui instance for printing error or success messages.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The Storage instance for handling file operations (though not used here).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)  {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"                throw new HukeException(HukeException.unknownCommandError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"            tasks.unmarkTask(Integer.parseInt(parts[1]));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"            ui.printError(\"Invalid task number format. Please enter a valid number.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"        } catch (HukeException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":47}},{"path":"src/main/java/huke/exception/HukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.exception;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":" * Represents a custom exception class for the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":" * This exception is thrown for various error scenarios like invalid commands, task formatting errors, and task marking errors.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"public class HukeException extends Exception {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a new HukeException with the specified detail message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"     * @param message The detail message of the exception.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    public HukeException(String message) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"        super(message);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for a todo task with an incorrect format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message for a wrongly formatted todo task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    public static String todoError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"        return \"Hey, you are trying to add a todo with a wrong format!\\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"                \"Let me give you an example: todo play with Huke \";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for a deadline task with an incorrect format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message for a wrongly formatted deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    public static String deadlineError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"        return \"Hey, you are trying to add a deadline with a wrong format!\\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"                \"Let me give you an example: deadline play with Huke /by 15/3/2024 2359\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for an event task with an incorrect format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message for a wrongly formatted event task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"    public static String eventError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"        return \"Hey, you are trying to add an event with a wrong format!\\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"                \"Let me give you an example: event play with Huke /from 20/6/2025 0930 /to 20/6/2025 1200\\n \";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message when trying to mark a task that is already marked.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message when the task is already marked as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"    public static String MarkedError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        return \"Let me see...\\n\" +","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"                \"This task is marked already! \";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message when trying to unmark a task that is already unmarked.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message when the task is already unmarked.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"    public static String UnmarkedError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"        return \"Let me see...\\n\" +","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"                \"This task is unmarked already! \";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message when an unknown command is provided by the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message for an unknown command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"    public static String unknownCommandError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"        return \"Not sure what you want.\\n\" +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"                \"Try start with: list | todo | event | deadline | mark | unmark | bye \";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message when an invalid task ID is provided.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"     * @param totalNumber The total number of tasks available.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message indicating that the task number is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"    public static String invalidIDError(int totalNumber) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"        return \"Did you give me the wrong task number? \\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"                \"Let me give you a hint: \\n\" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"                \"The task number should be an integer from 1 to \" +","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"                (totalNumber);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a generic error message for unknown errors.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message for an unknown error.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"    public static String unknownError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"        return \"Looks like there\u0027s an error!\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message when the user provides an invalid search query for finding tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     * @return The error message for an invalid find query.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"    public static String findError() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"        return \"You are looking for... what?\\n\" +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"                \"I don\u0027t understand! Keep to the format pls~\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":109}},{"path":"src/main/java/huke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * Represents a deadline task in the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * A deadline task has a description, a status (done or not), and a deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    private String taskForm \u003d \"D\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Deadline with the specified description and deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param deadlineString The deadline of the task as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If there is an error parsing the deadline string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    public Deadline(String description, String deadlineString) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"        super(description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"        setDeadline(deadlineString);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Deadline with the specified description, status, and deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param isDone The status of the task indicating whether it is done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param deadlineString The deadline of the task as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If there is an error parsing the deadline string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"    public Deadline(String description, boolean isDone, String deadlineString) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"        super(description, isDone);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"        setDeadline(deadlineString);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the deadline of the task from a string representation.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @param deadlineString The deadline as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the deadline string cannot be parsed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    public void setDeadline(String deadlineString) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"            this.deadline \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.deadlineError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a formatted string representation of the deadline task for saving to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"     * The format includes the task form, done status, description, and deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     * @return The formatted string for saving to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"        String deadlineTimeString \u003d deadline.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"        return taskForm + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + deadlineTimeString;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"     * Includes the task\u0027s status icon, description, and formatted deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"     * @return The deadline as a LocalDateTime object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"        return deadline;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":87}},{"path":"src/main/java/huke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * Represents an event task in the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * An event has a description, status (done or not), a start time, and an end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    private String taskForm \u003d \"E\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an Event with the specified description, start time, and end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @param startTimeString The start time of the event as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * @param endTimeString The end time of the event as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If there is an error parsing the date-time strings.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    public Event(String description, String startTimeString, String endTimeString) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"        super(description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"        setStartTime(startTimeString);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"        setEndTime(endTimeString);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an Event with the specified description, status, start time, and end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @param isDone The status of the event indicating whether it is done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * @param startTimeString The start time of the event as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * @param endTimeString The end time of the event as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If there is an error parsing the date-time strings.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    public Event(String description, boolean isDone, String startTimeString, String endTimeString) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"        super(description, isDone);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"        setStartTime(startTimeString);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"        setEndTime(endTimeString);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the start time of the event from a string representation.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * @param startTimeString The start time as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the start time string cannot be parsed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"    public void setStartTime(String startTimeString) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"            this.startTime \u003d LocalDateTime.parse(startTimeString, formatter);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.eventError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the end time of the event from a string representation.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     * @param endTimeString The end time as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the end time string cannot be parsed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"    public void setEndTime(String endTimeString) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"            this.endTime \u003d LocalDateTime.parse(endTimeString, formatter);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.eventError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"     * @return The start time of the event as a LocalDateTime object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"        return startTime;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"     * @return The end time of the event as a LocalDateTime object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"        return endTime;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a formatted string representation of the event for saving to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     * The format includes the task form, done status, description, start time, and end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     * @return The formatted string for saving to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"        String startTimeString \u003d startTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"        String endTimeString \u003d endTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"        return taskForm + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + startTimeString + \" | \" + endTimeString;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     * Includes the task\u0027s status icon, description, and formatted start and end times.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"        return \"[\" + taskForm + \"]\" + super.toString() + \" (from: \" + startTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HuaZhenting"},"content":"                \" to: \" + endTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":119}},{"path":"src/main/java/huke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":" * Represents a task in the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":" * A task has a description, a status indicating if it is done,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":" * and a task form that defines its type (default is \"T\" for Todo).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"public class Task {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"    protected String description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"    protected String taskForm \u003d \"T\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Task with the specified description and sets its status to undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Task with the specified description and status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * @param isDone The status of the task indicating if it is done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * Returns \"X\" if the task is done, or \" \" (a space) if the task is not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * @return The status icon representing the task\u0027s done status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     * @return The current task marked as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"    public Task markAsDone() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"        return this;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"     * @return The current task marked as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"    public Task markAsUndone() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"        return this;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a formatted string representation of the task for saving to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * The format includes the task\u0027s done status and description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     * @return The formatted string for saving to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"        return  \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"        return description;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"     * Includes the task\u0027s status icon and description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"    public String toString() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":92}},{"path":"src/main/java/huke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.task;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import java.util.List;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"import huke.Storage;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"import huke.Ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"import huke.exception.HukeException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * Represents a list of tasks in the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * Provides functionality to add, mark, unmark, delete, and find tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"public class TaskList {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an empty task list with the specified user interface.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The user interface used to display messages to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a task list with the given list of tasks and the specified user interface.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param tasks The list of tasks to initialize the task list with.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The user interface used to display messages to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"    public void listTasks() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"        ui.printList(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * Adds a task to the list and saves the updated task list to the storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the task is null or an unknown error occurs.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"    public void addTask(Task task) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.unknownError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"        ui.printAdd(task, tasks.size());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"        Storage.saveTask(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     * Marks a task as done based on the given index and saves the updated task list to the storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the index is invalid or the task is already marked as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"    public void markTask(int index) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.invalidIDError(tasks.size()));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"        if (tasks.get(index - 1).isDone) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.MarkedError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"        Task task \u003d tasks.get(index - 1).markAsDone();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"        ui.printMark(task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"        Storage.saveTask(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"     * Unmarks a task as undone based on the given index and saves the updated task list to the storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"     * @param index The index of the task to be unmarked as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the index is invalid or the task is already marked as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"    public void unmarkTask(int index) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.invalidIDError(tasks.size()));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"        if (!tasks.get(index - 1).isDone) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.UnmarkedError());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"        Task task \u003d tasks.get(index - 1).markAsUndone();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"        ui.printUnmark(task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"        Storage.saveTask(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     * Deletes a task from the list based on the given index and saves the updated task list to the storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"     * @throws HukeException If the index is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"    public void deleteTask(int index) throws HukeException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"            throw new HukeException(HukeException.invalidIDError(tasks.size()));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"        ui.printDelete(task, tasks.size());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"        Storage.saveTask(tasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HuaZhenting"},"content":"     * Finds tasks that contain the given keyword in their descriptions and displays them to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"        ui.showFindResult(matchingTasks);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":130}},{"path":"src/main/java/huke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package huke.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":" * Represents a to-do task in the Huke task management system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":" * A to-do task is a simple task that needs to be completed, with a description and a completion status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a new to-do task with the specified description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"        super(description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"        this.taskForm \u003d \"T\";  // Task identifier for a to-do task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a new to-do task with the specified description and completion status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param isDone The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"        super(description, isDone);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a string representation of the to-do task in a format suitable for saving to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * This method appends the task\u0027s form identifier (T) to the result of the {@link Task#toFileFormat()} method.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string representation of the to-do task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"        return this.taskForm + super.toFileFormat();  // Add \"T\" to the task\u0027s file format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a string representation of the to-do task in a human-readable format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * This method adds a \"[T]\" prefix to the result of the {@link Task#toString()} method.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string representation of the to-do task for display to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"        return \"[T]\" + super.toString();  // Add \"[T]\" to the task\u0027s string representation","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":51}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"[T][ ] 1","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"[T][ ] 2","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"java -classpath ..\\bin huke.huke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":1,"-":20}}]
