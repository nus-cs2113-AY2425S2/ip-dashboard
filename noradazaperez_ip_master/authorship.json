[{"path":"data/out.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"N|D|todo|2003-10-20 00:00","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"N|D|todo no se que|2003-02-02 00:00","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"N|D|assignment|2020-03-19 18:10","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"# Mimi User Guide","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"## 1. Introduction","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"Welcome to Mimi! This guide will help you get started with managing your tasks using our intelligent chatbot. Whether youâ€™re adding a new task, updating an existing one, or checking your task list, this guide has you covered.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"The main feature for Mimi is that she is bilingual! She is still learning English, because she is originally from Spain, so... be patient with her. ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"- **Purpose:** Provide a step-by-step guide to using the chatbot for task management. ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"- **Scope:** This guide includes instructions for task addition, deletion, updating, and searching.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"- **Audience:** Users looking for a simple and interactive way to manage tasks via chat.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"## 2. Quick Start","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"1. Ensure you have Java 17 or above installed in your Computer.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"- Mac users: Ensure you have the precise JDK version prescribed here.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"2. Download the latest `.jar` from [here](https://github.com/noradazaperez/ip/releases)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"3. Open a command terminal, cd into the folder you put the jar file in, and use the `java -jar Mimi.jar` command to run the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"![img.png](images/image1.png)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"4. Type the command you want to execute.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"## 3. Features","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"### 3.1 Add a task: `add`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"Add a task to the tasklist. It can be a toDo, deadline or event. ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"#### Deadline ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"Adds a deadline to the tasklist.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"Format: `deadline DESCRIPTION /by yyyy-MM-dd [mm:ss]`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"Examples: ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"- deadline software engineeering assignment /by 2025-03-20","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"- deadline exam /by 2003-06-10 18:00","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"#### Event","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"Adds an event to the tasklist from one date to another.   ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"Format: `event DESCRIPTION /from yyyy-MM-dd [mm:ss] /to yyyy-MM-dd [mm:ss]`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"Examples:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"- event interview /from 2010-10-10 17:00 /to 2010-10-10 18:00","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"#### To Do ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"Adds a todo task.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"Format: `todo DESCRIPTION`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"Examples:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"- todo assignment","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"- todo go for a run","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"### 3.2 Delete a task: `delete`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"It deletes a task from the list.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"Format: `delete INDEX_LIST`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"Examples:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"- delete 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"- delete 2","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"### 3.3. Find a task: `find`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"If you enter a keyword, it returns a list with all the tasks that have that keyword.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"Format: `find KEYWORD`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"Examples:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"- find todo","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"- find assignment","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"### 3.4. Show the list of tasks: `list`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"It shows all the current tasks.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"Format: `list`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"Examples:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"- list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"### 3.5. Mark task as done: `mark`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"It marks a task as done.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"Format: `mark INDEX_LIST`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"Examples:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"- mark 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"### 3.6. Mark task as undone: `unmark`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"It marks a task as undone.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"Format: `unmark INDEX_LIST`  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"Examples:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"- unmark 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"### 3.7. Exit chatbot: `exit`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"It exits the chatbot.  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"Format: `exit`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"## 4. FAQ","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":66,"-":14}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    Task task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"        return \"I just added the task\" + task.toString();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":23}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":" * Represents a command that can be executed within the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":" * Implementations of this interface encapsulate a specific action to be performed,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":" * Example commands might include adding a task, deleting a task, or marking a task as completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"public interface Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"     * Executes the command using the provided task list, UI, and storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"     * @param tasks   the task list on which the command will operate","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"     * @param ui      the user interface for interacting with the user","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"     * @param storage the storage mechanism for saving or retrieving data","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if an error occurs during the execution of the command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MimiException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"     * Determines whether this command signals that the application should exit.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"     * @return {@code true} if the command should cause the application to terminate;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"     *         {@code false} otherwise","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"     * Retrieves a string representation of this command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"     * @return a string that describes this command, useful for logging or debugging","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":36}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":" * This class extends {@code Task} by adding a deadline, which is stored as a {@code LocalDateTime}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":" * The deadline indicates the due date and time for the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"    // Formatter that accepts either \"yyyy-MM-dd\" or \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"            .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"            .optionalStart()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"            .appendLiteral(\u0027 \u0027)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"            .appendPattern(\"HH:mm\")","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"            .optionalEnd()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"            .toFormatter();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"    // Formatter for output with date and time","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"    private static final DateTimeFormatter DATE_TIME_OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"    // Formatter for output with date only","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"    private static final DateTimeFormatter DATE_ONLY_OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"    public Deadline(String description, boolean isDone, String deadlineStr) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"        super(description, isDone);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"            this.deadline \u003d LocalDateTime.parse(deadlineStr, INPUT_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"Invalid date format. Please use yyyy-MM-dd or yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"    public Deadline(String description, String deadlineStr) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"        this(description, false, deadlineStr);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"     * Returns a string representation of this task suitable for file storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"     * The format is: [done status]|D|[description]|[deadline]","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"     * where {@code Y} indicates that the task is completed, and {@code N} otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"     * @return a formatted string for file storage","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"    public String printFile() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"        String done \u003d isDone ? \"Y\" : \"N\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"        // Output using the input formatter so that the file retains the consistent date format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"        return done + \"|D|\" + description + \"|\" + deadline.format(INPUT_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"        // Choose the formatter based on whether the time is the default (midnight)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"        String formattedDeadline;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"        if (deadline.getHour() \u003d\u003d 0 \u0026\u0026 deadline.getMinute() \u003d\u003d 0) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"            formattedDeadline \u003d deadline.format(DATE_ONLY_OUTPUT_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"            formattedDeadline \u003d deadline.format(DATE_TIME_OUTPUT_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"        return this.description + \" (by: \" + formattedDeadline + \")\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":79}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    private int task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"    public DeleteCommand(int task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"        tasks.delete(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"        return \"We have just deleted task \" + task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":24}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"    // Create a formatter that accepts either \"yyyy-MM-dd\" or \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"            .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"            .optionalStart()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"            .appendLiteral(\u0027 \u0027)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"            .appendPattern(\"HH:mm\")","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"            .optionalEnd()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"            .toFormatter();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"    // Output formatter when time is provided","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"    // Output formatter when only date is provided (or time is default midnight)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_ONLY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"     * Constructs a new {@code Event} with the specified description, start time, and end time.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"     * Assumes the event is not yet completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"     * @param isDone      the completion status of the event","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"     * @param fromStr     the start time of the event as a string","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"     * @param toStr       the end time of the event as a string","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if the provided date format is invalid","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"    public Event(String description, boolean isDone, String fromStr, String toStr) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"            this.from \u003d LocalDateTime.parse(fromStr, INPUT_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"            this.to \u003d LocalDateTime.parse(toStr, INPUT_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"Invalid date format. Please use yyyy-MM-dd or yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"    public Event(String description, String fromStr, String toStr) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"        this(description, false, fromStr, toStr);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"     * Returns a string representation of this event formatted for file storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"     * The format is: [done status]|E|[description]|[from]|[to],","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"     * where {@code Y} indicates that the event is completed and {@code N} otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"     * @return a formatted string suitable for saving in a file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"    public String printFile() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"        String done \u003d isDone ? \"Y\" : \"N\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"        // Use the input formatter to preserve the original input format in the file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"        return done + \"|E|\" + description + \"|\" + from.format(INPUT_FORMATTER) + \"|\" + to.format(INPUT_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"     * Returns a string representation of the event\u0027s description including its start and end times.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"     * Uses a human-friendly format that conditionally includes the time.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"     * @return a string in the format \"[description] (from: [from] to: [to])\"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"        // Check if the time is default (midnight) to decide on the formatter.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"        String formattedFrom \u003d (from.getHour() \u003d\u003d 0 \u0026\u0026 from.getMinute() \u003d\u003d 0)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"                ? from.format(OUTPUT_DATE_ONLY_FORMATTER)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"                : from.format(OUTPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"        String formattedTo \u003d (to.getHour() \u003d\u003d 0 \u0026\u0026 to.getMinute() \u003d\u003d 0)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"noradazaperez"},"content":"                ? to.format(OUTPUT_DATE_ONLY_FORMATTER)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"noradazaperez"},"content":"                : to.format(OUTPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"noradazaperez"},"content":"        return description + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"noradazaperez"},"content":"     * Returns a string representation of the event for display purposes.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"noradazaperez"},"content":"     * The format is: [E][statusIcon] [description] (with the description including time details).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"noradazaperez"},"content":"     * @return a formatted string representing this event","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"noradazaperez"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"noradazaperez"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"noradazaperez":99}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"        return true;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"        return \"Adios!!! See you.....\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":18}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    private String keyword;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"        ui.showTasks(tasks.find(keyword));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"        return \"\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":21}},{"path":"src/main/java/IncorrectSyntax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class IncorrectSyntax extends MimiException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    public IncorrectSyntax(String message) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"        super(message);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    public String toString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"        return super.toString() + \"\\nIncorrect Syntax: \" + getMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"noradazaperez":11}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"    private final int task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"    public MarkCommand(int task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"        tasks.mark(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"        return \"I just marked the task \" + task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":22}},{"path":"src/main/java/Mimi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"import java.io.*;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":" * Represents the main application for the Mimi program.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":" * This class initializes the user interface, storage, and task list, and manages the","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":" * processing of user commands until the application exits.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"public class Mimi {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"     * Handles loading and saving the application\u0027s persistent data.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"     * Maintains the list of tasks for the application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"     * Manages interactions with the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"     * Constructs a new instance of the Mimi application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"     * The constructor initializes the UI and storage, then attempts to load","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"     * the task list from persistent storage. If loading fails, an empty task list is created.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"     * @param filePath the path to the file used for storing the application\u0027s data","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"    public Mimi(String filePath) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"        } catch (MimiException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"            ui.showError(e.toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"     * Runs the Mimi application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"     * This method greets the user and enters a command loop where it reads input, parses commands,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"     * executes them, and displays results until an exit command is received.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"    public void run() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"        ui.greet();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"            try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"                ui.showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"                ui.showCommand(c);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"                ui.showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"            } catch (MimiException me) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"                // handle invalid input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"                ui.showError(me.toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"     * The entry point of the Mimi application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"     * @param args command-line arguments (not used in this application)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"        new Mimi(\"data/out.txt\").run();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"noradazaperez":85}},{"path":"src/main/java/MimiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class MimiException extends Exception {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    public MimiException(String message) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"        super(message);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    public String toString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"        return \"Warning!! There has been a MIMI-ERROR: \" + super.getMessage();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"noradazaperez":11}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":" * Provides a utility method for parsing user input into corresponding {@code Command} objects.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":" * The {@code parse} method interprets the first word of the input as the command type and uses","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":" * the rest of the input as arguments or descriptions for that command. Depending on the command,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":" * it returns an appropriate {@code Command} implementation. If the input is invalid or cannot be parsed,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":" * a {@code MimiException} is thrown.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"public class Parser {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"     * Parses the user input string and returns the corresponding {@code Command} object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"     * The input is split into at most two parts: the command keyword and the remainder of the input.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"     * Based on the command keyword, the method creates and returns a corresponding command. For example:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"     *   \u003cli\u003e{@code \"list\"} returns a {@code ShowListCommand}.\u003c/li\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"     *   \u003cli\u003e{@code \"mark\"} and {@code \"unmark\"} return commands that require an index parsed from the input.\u003c/li\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"     *   \u003cli\u003e{@code \"todo\"}, {@code \"deadline\"}, and {@code \"event\"} create new tasks.\u003c/li\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"     *   \u003cli\u003e{@code \"delete\"} returns a {@code DeleteCommand}.\u003c/li\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"     *   \u003cli\u003e{@code \"exit\"} returns an {@code ExitCommand}.\u003c/li\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"     * @param input the full command string entered by the user","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"     * @return a {@code Command} object representing the parsed command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if no command is entered, if required arguments are missing,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"     *                       or if the input cannot be parsed correctly","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"    public static Command parse(String input) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"        // Split into at most 2 parts: [0] \u003d command, [1] \u003d rest of the input","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"        // parts[0] is the command; it must exist","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"        if (parts.length \u003d\u003d 0 || parts[0].isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"No command was entered.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"        String description \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"        switch (command) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"            case \"list\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"                return new ShowListCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"            case \"mark\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"                // Ensure description exists for mark command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the description.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"                try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"                    return new MarkCommand(Integer.parseInt(description));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the index number.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"            case \"unmark\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"                // Ensure description exists for unmark command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the description\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"                try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"                    return new UnmarkCommand(Integer.parseInt(description));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no.. There is  a PROBLEMA with the index number.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"            case \"todo\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"                // Ensure description exists for todo command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the description\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"                return new AddCommand(new Task(description));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"            case \"deadline\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"                // Ensure description exists for deadline command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the description\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"noradazaperez"},"content":"                int index \u003d description.indexOf(\"/by\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"noradazaperez"},"content":"                // TODO: Handle the case where \"/by\" is not present in the description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"noradazaperez"},"content":"                Deadline deadline \u003d new Deadline(description.substring(0, index).trim(),","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"noradazaperez"},"content":"                        description.substring(index + 4).trim());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"noradazaperez"},"content":"                return new AddCommand(deadline);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"noradazaperez"},"content":"            case \"event\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"noradazaperez"},"content":"                // Ensure description exists for event command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the description.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"noradazaperez"},"content":"                int indexFrom \u003d description.indexOf(\"/from\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"noradazaperez"},"content":"                int indexTo \u003d description.indexOf(\"/to\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"noradazaperez"},"content":"                Event event \u003d new Event(description.substring(0, indexFrom).trim(),","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"noradazaperez"},"content":"                        description.substring(indexFrom + 6, indexTo).trim(),","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"noradazaperez"},"content":"                        description.substring(indexTo + 4).trim());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"noradazaperez"},"content":"                return new AddCommand(event);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"noradazaperez"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"noradazaperez"},"content":"                // Ensure description exists for delete command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"No description was entered.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"noradazaperez"},"content":"                return new DeleteCommand(Integer.parseInt(description));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"noradazaperez"},"content":"            case \"find\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"No description was entered.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"noradazaperez"},"content":"                return new FindCommand(description);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"noradazaperez"},"content":"            case \"exit\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"noradazaperez"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"noradazaperez"},"content":"            default:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"noradazaperez"},"content":"                throw new MimiException(\"Perdona?? I think I don\u0027t know the command: \" + command);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":119}},{"path":"src/main/java/ShowListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class ShowListCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"        ui.showTasks(tasks.getTasks());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"        return \"\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":16}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"import java.io.File;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"public class Storage {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"    private File file;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"     * It loads the information of the given file and returns a list of tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"     * @return the list of tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if the specified file does not exist","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"    public ArrayList\u003cTask\u003e load() throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"        try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"                String line \u003d sc.nextLine().trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"                // Skip empty or whitespace-only lines if needed","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"                    continue;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"                // Split by \u0027|\u0027 (pipe)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"                // Basic validation","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the file\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"                // Convert \"Y\"/\"N\" to boolean","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"                boolean done \u003d parts[0].trim().equalsIgnoreCase(\"Y\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"                // The third field is always the description","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"                Task task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"                // The second field is the type (T/D/E)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"                String type \u003d parts[1].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"                if (type.equalsIgnoreCase(\"T\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"                    task \u003d new Task(description, done);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"                } else if (type.equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"                    // Validation","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"                        throw new MimiException(\"Oh no... There is a PROBLEMA with the file\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"                    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"                    task \u003d new Deadline(description, done, parts[3].trim());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"                } else if (type.equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"                    // Validation","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"                    if (parts.length \u003c 5) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"                        throw new MimiException(\"Oh no... There is a PROBLEMA with the file\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"                    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"                    task \u003d new Event(description, done, parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"                } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"                    // ERROR","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"                    throw new MimiException(\"Oh no... There is a PROBLEMA with the file\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"                tasks.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"Ay nooo, I don\u0027t know what happened. Error reading file: \" + file.getAbsolutePath());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"        return tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"     * It saves the information in the list of tasks to the specified file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"     * @param tasks array of tasks to be saved","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if the file does not exist","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"noradazaperez"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"noradazaperez"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"noradazaperez"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"noradazaperez"},"content":"                writer.write(task.printFile() + \"\\n\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"noradazaperez"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"noradazaperez"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"Ay noo, the file \" + file.getAbsolutePath() + \" could not be saved.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":94}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":" * This class provides basic functionality for marking a task as done or not done,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":" * retrieving its status, and generating string representations for both display and file storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"     * The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"     * Indicates whether the task has been completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"     * Constructs a new {@code Task} with the specified description and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"     * @param isDone      {@code true} if the task is completed, {@code false} otherwise","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"     * Constructs a new {@code Task} with the specified description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"        this(description, false);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"     * An \"X\" indicates the task is done, while a space indicates it is not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"     * @return a string representing the task\u0027s status icon","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"        return (isDone? \"X\":\" \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"     * Marks this task as completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"     * @return the task description","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"        return description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"     * Returns a string representation of the task formatted for file storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"     * The format is: [done status]|T|[description]","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"     * where \"Y\" indicates the task is done and \"N\" indicates it is not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"noradazaperez"},"content":"     * @return a formatted string suitable for saving in a file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"noradazaperez"},"content":"    public String printFile() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"noradazaperez"},"content":"        String done \u003d isDone ? \"Y\" : \"N\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"noradazaperez"},"content":"        return done + \"|T|\" + getDescription();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"noradazaperez"},"content":"     * Returns a string representation of the task for display purposes.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"noradazaperez"},"content":"     * The format is: [T][status icon] [description]","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"noradazaperez"},"content":"     * @return a formatted string representing the task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"noradazaperez"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"noradazaperez"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"noradazaperez":102}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":" * This class maintains a collection of {@code Task} objects and provides methods","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":" * for adding, deleting, marking, and unmarking tasks. The tasks are stored internally","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":" * using an {@code ArrayList}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"public class TaskList {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"     * The list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"     * Constructs a {@code TaskList} with the provided list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"     * @param tasks an {@code ArrayList} containing {@code Task} objects","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"     * @return the {@code ArrayList} of tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"        return tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"     * Deletes the task at the specified 1-based index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"     * The index provided should be in a 1-based numbering system, meaning that","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"     * the first task has an index of 1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"     * @param task the 1-based index of the task to be deleted","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"     * @return the {@code Task} object that was removed","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if the index is out of bounds","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"    public Task delete(int task) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"        if (task \u003e tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"Sorry! The task doesn\u0027t exist. Index out of bounds: \" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"        return tasks.remove(task - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"     * @param task the {@code Task} to be added","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"     * Marks the task at the specified 1-based index as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"     * The index provided should be in a 1-based numbering system.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"     * @param task the 1-based index of the task to mark as done","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if the index is out of bounds","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"    public void mark(int task) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"noradazaperez"},"content":"        if (task \u003e tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"Sorry! The task doesn\u0027t exist. Index out of bounds: \" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"noradazaperez"},"content":"        // Assuming the index is 1-based, you might consider adjusting it to 0-based.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"noradazaperez"},"content":"        tasks.get(task).markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"noradazaperez"},"content":"     * Marks the task at the specified 1-based index as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"noradazaperez"},"content":"     * The index provided should be in a 1-based numbering system.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"noradazaperez"},"content":"     * @param task the 1-based index of the task to mark as not done","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"noradazaperez"},"content":"     * @throws MimiException if the index is out of bounds","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"noradazaperez"},"content":"    public void unmark(int task) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"noradazaperez"},"content":"        if (task \u003e tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"noradazaperez"},"content":"            throw new MimiException(\"Sorry! The task doesn\u0027t exist. Index out of bounds: \" + task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"noradazaperez"},"content":"        // Assuming the index is 1-based, you might consider adjusting it to 0-based.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"noradazaperez"},"content":"        tasks.get(task).markAsNotDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"noradazaperez"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"noradazaperez"},"content":"        ArrayList\u003cTask\u003e taskKey \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"noradazaperez"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"noradazaperez"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"noradazaperez"},"content":"                taskKey.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"noradazaperez"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"noradazaperez"},"content":"        return taskKey;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":118}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":" * Handles user interaction and output for the Mimi application.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":" * This class is responsible for reading user input from the console, displaying messages,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":" * printing task lists, greeting the user with a logo, and showing errors.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"public class Ui {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"     * A separator line used to visually divide sections of output.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"    private String bar \u003d \"--------------------------------------------------\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"            System.out.println((i+1) + \": \" + tasks.get(i).toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"noradazaperez"},"content":"     * Reads a line of input from the user via the console.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"noradazaperez"},"content":"     * @return the input command entered by the user as a {@code String}","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"noradazaperez"},"content":"    public String readCommand(){","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"noradazaperez"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"noradazaperez"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"noradazaperez"},"content":"     * Greets the user by displaying an ASCII logo and introductory messages.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"noradazaperez"},"content":"    public void greet() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"noradazaperez"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"noradazaperez"},"content":"                 M   M  III  M   M  III\\s","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"noradazaperez"},"content":"                 MM MM   I   MM MM   I\\s","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"noradazaperez"},"content":"                 M M M   I   M M M   I\\s","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"noradazaperez"},"content":"                 M   M   I   M   M   I\\s","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"noradazaperez"},"content":"                 M   M  III  M   M  III\\s","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"noradazaperez"},"content":"                \"\"\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"noradazaperez"},"content":"        showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"noradazaperez"},"content":"        System.out.println(\"\\nHello from\\n\" + logo);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"noradazaperez"},"content":"        showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"noradazaperez"},"content":"        System.out.println(\"Hola!! I\u0027m Mimi. I\u0027m still learning English... Sorry if I make mistakes\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"noradazaperez"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"noradazaperez"},"content":"        showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"noradazaperez"},"content":"     * Displays a separator line to the console.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"noradazaperez"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"noradazaperez"},"content":"     * This helps to visually separate different sections of output.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"noradazaperez"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"noradazaperez"},"content":"    public void showLine() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"noradazaperez"},"content":"        System.out.println(bar);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"noradazaperez"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"noradazaperez"},"content":"     * @param error the error message to be displayed","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"noradazaperez"},"content":"    public void showError(String error) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"noradazaperez"},"content":"        System.out.println(error);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"noradazaperez"},"content":"        // TODO: Consider enhancing error display (e.g., logging or formatting)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"noradazaperez"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"noradazaperez"},"content":"     * Displays the output message corresponding to a command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"noradazaperez"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"noradazaperez"},"content":"     * @param command the {@code Command} whose output message is to be shown","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"noradazaperez"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"noradazaperez"},"content":"    public void showCommand(Command command){","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"noradazaperez"},"content":"        System.out.println(command.getCommand());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":81}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"noradazaperez"},"content":"    private final int task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"noradazaperez"},"content":"    public UnmarkCommand(int task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"noradazaperez"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"noradazaperez"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MimiException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"noradazaperez"},"content":"        tasks.unmark(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"noradazaperez"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"noradazaperez"},"content":"        return false;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"noradazaperez"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"noradazaperez"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"noradazaperez"},"content":"    public String getCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"noradazaperez"},"content":"        return \"I just unmarked \" + task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"noradazaperez"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"noradazaperez"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"noradazaperez":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"noradazaperez"},"content":"##!/usr/bin/env bash","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"noradazaperez":1,"-":37}}]
