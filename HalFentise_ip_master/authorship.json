[{"path":"src/main/java/Exceptions/InformationError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Exceptions;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"public class InformationError extends TaskException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"    public InformationError(String message) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"HalFentise":7}},{"path":"src/main/java/Exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Exceptions;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"public class TaskException extends Exception{","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"    public TaskException(String message) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"HalFentise":7}},{"path":"src/main/java/Exceptions/UnSupportCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Exceptions;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"public class UnSupportCommandException extends TaskException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"    public UnSupportCommandException(String message) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"HalFentise":7}},{"path":"src/main/java/Exceptions/UnSupportTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Exceptions;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"public class UnSupportTaskException extends TaskException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"    public UnSupportTaskException(String message){","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"HalFentise":7}},{"path":"src/main/java/HaHaHa.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"import Task.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"import java.io.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":" * The main class for the HaHaHa application.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":" * This application manages a list of tasks with functionalities such as adding, deleting, and marking tasks.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":" * It handles user input and interacts with the TaskList, Storage, and Ui components.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":"public class HaHaHa {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"     * Constructs a HaHaHa instance, initializing the user interface, task storage, and task list.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"     * If the task data file cannot be loaded, an empty task list is initialized instead.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"     * @param filePath the file path to load and store task data","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"    public HaHaHa(String filePath) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"            this.taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"     * Starts the main loop of the application.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"     * Displays a welcome message and continuously processes user input until the user decides to exit.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"    public void run() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"        ui.welcome();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"        while (isRunning) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"            String userInput \u003d ui.getUserInput(); // Get user input","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"            Parser.parse(userInput, taskList, ui, storage); // Handle input","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"     * Initializes and runs the HaHaHa application with a default file path for task data.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"        new HaHaHa(\"./data/list.txt\").run();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"-":2,"HalFentise":54}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"import Task.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"import Exceptions.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"import java.io.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":" * This class is responsible for parsing user input and executing the corresponding command.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":" * It interacts with the task list, UI, and storage to manage tasks.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":"public class Parser {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"     * Parses the given input command and performs the corresponding action.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"     * It handles commands for listing, adding, deleting, marking, unmarking tasks, find","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"     * and quitting the program.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"     * @param input the user input command as a string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"     * @param taskList the list of tasks to perform actions on","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"     * @param ui the user interface to show feedback","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"     * @param storage the storage to save the tasks after modification","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"    public static void parse(String input, TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"        // Command handling","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"            switch (command) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"                case \"list\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"                    ui.showTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"                case \"todo\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"                    Task todo \u003d new Todo(parts[1]);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"                    taskList.addTask(todo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"                    storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"                    ui.showTaskAdded(todo, taskList.getTasks().size());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"                case \"event\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"                    String[] eventString \u003d parts[1].split(\" /from \");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"                    if (eventString.length \u003d\u003d 2) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"                        String name \u003d eventString[0];","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"                        String[] time \u003d eventString[1].split(\" /to \");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"                        if (time.length \u003d\u003d 2) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"                            String startTime \u003d time[0];","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"                            String endTime \u003d time[1];","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"                            Task event \u003d new Event(name, startTime, endTime);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"                            taskList.addTask(event);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HalFentise"},"content":"                            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HalFentise"},"content":"                            ui.showTaskAdded(event, taskList.getTasks().size());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"                        } else {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"                            throw new TaskException(\"Invalid event format.\\n\" +","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HalFentise"},"content":"                                    \"Valid format: event description /from startTime /to endTime\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HalFentise"},"content":"                        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HalFentise"},"content":"                    } else {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"Invalid event format.\\n\" +","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HalFentise"},"content":"                                \"Valid format: event description /from startTime /to endTime\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HalFentise"},"content":"                case \"deadline\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HalFentise"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HalFentise"},"content":"                    String[] deadlineString \u003d parts[1].split(\" /by \");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HalFentise"},"content":"                    if (deadlineString.length \u003d\u003d 2) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HalFentise"},"content":"                        String taskName \u003d deadlineString[0];","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HalFentise"},"content":"                        String time \u003d deadlineString[1];","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HalFentise"},"content":"                        Task deadline \u003d new Deadline(taskName, time);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HalFentise"},"content":"                        taskList.addTask(deadline);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HalFentise"},"content":"                        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HalFentise"},"content":"                        ui.showTaskAdded(deadline, taskList.getTasks().size());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HalFentise"},"content":"                    } else {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"Invalid deadline format.\\n\" +","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HalFentise"},"content":"                                \"Valid format: deadline description /by time\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HalFentise"},"content":"                case \"delete\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HalFentise"},"content":"                    if (parts.length \u003c 2 || !parts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"Please specify a valid task number to delete.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HalFentise"},"content":"                    int deleteIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HalFentise"},"content":"                    Task removedTask \u003d taskList.getTask(deleteIndex);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HalFentise"},"content":"                    taskList.deleteTask(deleteIndex);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HalFentise"},"content":"                    storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HalFentise"},"content":"                    ui.showTaskDeleted(removedTask, taskList.getTasks().size());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HalFentise"},"content":"                case \"mark\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HalFentise"},"content":"                    if (parts.length \u003c 2 || !parts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"Please specify a valid task number to mark.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HalFentise"},"content":"                    int markIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HalFentise"},"content":"                    taskList.markTask(markIndex);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HalFentise"},"content":"                    storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HalFentise"},"content":"                    ui.showTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HalFentise"},"content":"                case \"unmark\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HalFentise"},"content":"                    if (parts.length \u003c 2 || !parts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"Please specify a valid task number to unmark.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HalFentise"},"content":"                    int unmarkIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HalFentise"},"content":"                    taskList.unmarkTask(unmarkIndex);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HalFentise"},"content":"                    storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HalFentise"},"content":"                    ui.showTasks(taskList.getTasks());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HalFentise"},"content":"                case \"bye\":","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HalFentise"},"content":"                    System.out.println(\"Goodbye! Hope to see you again!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HalFentise"},"content":"                    ui.showLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HalFentise"},"content":"                    System.exit(0);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HalFentise"},"content":"                case \"find\":","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HalFentise"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HalFentise"},"content":"                        throw new TaskException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HalFentise"},"content":"                    } else {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HalFentise"},"content":"                        ui.showTasks(taskList.findTask(parts[1]));","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HalFentise"},"content":"                    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HalFentise"},"content":"                    break;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HalFentise"},"content":"                default:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HalFentise"},"content":"                    throw new TaskException(\"Unknown command.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HalFentise"},"content":"        } catch (TaskException | IOException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HalFentise"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"HalFentise":129}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"import java.io.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"import Task.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":" * Handles storage and retrieval of tasks to and from a file.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":" * Provides methods to load tasks from a file and save tasks to a file.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":"public class Storage {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":"    private String filePath;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"     * @param filePath the path of the file where tasks are stored","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"     * Loads the list of tasks from the specified file.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"     * If the file does not exist, an empty task list is returned.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"     * @return an ArrayList of tasks loaded from the file","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"     * @throws IOException if an error occurs during file reading","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"            return tasks;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"            String line;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"                tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"        return tasks;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"     * Saves the list of tasks to the specified file.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"     * Creates the file and parent directories if they do not exist.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"     * @param tasks the list of tasks to be saved to the file","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"     * @throws IOException if an error occurs during file writing","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HalFentise"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HalFentise"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HalFentise"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HalFentise"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HalFentise"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HalFentise"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HalFentise"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"HalFentise":70}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":" * This class parses and stores a deadline, which can either be just a date or a date with a specific time.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"    private String deadlineTime;  // Stores the deadline time as a string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"    private LocalDate date \u003d null;  // Stores deadline as a LocalDate (only date, no time)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"    private LocalDateTime dateTime \u003d null;  // Stores deadline as a LocalDateTime (date + time)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"     * Constructor for creating a Deadline task.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"     * @param taskName the name of the task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"     * @param deadline the deadline string (either date or date + time)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"        super(taskName);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"        this.deadlineTime \u003d deadline;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"        parseInput(deadline);  // Parses the provided deadline string into a date or datetime","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"     * Attempts to parse the input string into either a date or date-time.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"     * This method checks multiple date-time formats and tries to match the string to one of them.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"     * @param string the string representation of the deadline","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"    private void parseInput(String string) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"        // Define possible date-time formats","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"        String[] dateTimeFormats \u003d {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"                \"d/M/yyyy HHmm\",  // Format with time","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"                \"d/M/yyyy\",       // Format without time","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"        };","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"        // Try each format and parse the string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"            try {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"                if (format.contains(\"HHmm\")) {  // If format contains time (HHmm)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"                    this.dateTime \u003d LocalDateTime.parse(string, formatter);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"                } else {  // If it only contains the date","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"                    this.date \u003d LocalDate.parse(string, formatter);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"                }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"                return;  // If parsing is successful, exit the method","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"                // Ignore exception and try the next format","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HalFentise"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HalFentise"},"content":"     * The string includes the task name and its deadline in a readable format.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HalFentise"},"content":"     * If the deadline includes time, it formats the time as well.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HalFentise"},"content":"     * @return a string representation of the Deadline task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HalFentise"},"content":"    @Override","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HalFentise"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HalFentise"},"content":"        // If the deadline has both date and time","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HalFentise"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HalFentise"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HalFentise"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(formatter) + \")\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HalFentise"},"content":"        // If the deadline only has a date","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HalFentise"},"content":"        else if (date !\u003d null) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HalFentise"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HalFentise"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + date.format(formatter) + \")\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HalFentise"},"content":"        // If the deadline is just a string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HalFentise"},"content":"        else {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HalFentise"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + deadlineTime + \")\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HalFentise"},"content":"     * Converts the Deadline task into a format suitable for saving to a file.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HalFentise"},"content":"     * @return a string representation of the Deadline task in file format","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HalFentise"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HalFentise"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HalFentise"},"content":"        return \"D | \" + (isDone ? \"  Done  \" : \"Not Done\") + \" | \" + getTaskName() + \" (by: \" + deadlineTime + \")\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HalFentise"},"content":"     * Creates a Deadline task from a file format string.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HalFentise"},"content":"     * The string is expected to be in the format \"D | status | taskName (by: deadline)\".","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HalFentise"},"content":"     * @param fileFormat the file format string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HalFentise"},"content":"     * @return a Deadline task created from the file format string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HalFentise"},"content":"    static public Task fromFileFormat(String fileFormat) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HalFentise"},"content":"        // Split the file format string to extract the task name and deadline","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HalFentise"},"content":"        String[] parts \u003d fileFormat.split(\" \\\\(by: \");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HalFentise"},"content":"        String time \u003d parts[1].substring(0, parts[1].length() - 1);  // Extract the deadline time","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HalFentise"},"content":"        return new Deadline(parts[0], time);  // Return a new Deadline task with the extracted information","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"HalFentise":103}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":" * Represents an event with a specific start and end time.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":" * This class extends the {@code Task} class and handles event-specific","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":" * parsing and formatting for both date and time.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"    private String startTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"    private String endTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"    private LocalDate startDate \u003d null;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"    private LocalDate endDate \u003d null;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"    private LocalDateTime startDateTime \u003d null;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"    private LocalDateTime endDateTime \u003d null;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"     * Constructs a new {@code Event} object with the specified task name, start time, and end time.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"     * The times are parsed and stored as either {@code LocalDate} or {@code LocalDateTime} objects.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"     * @param taskName the name or description of the event","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"     * @param startTime the start time of the event in string format","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"     * @param endTime the end time of the event in string format","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"        super(taskName);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"        parseStart(startTime);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"        parseEnd(endTime);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"     * Parses the start time of the event into either a {@code LocalDate} or {@code LocalDateTime}.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"     * Tries multiple date/time formats to successfully parse the string.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"     * @param string the start time as a string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"    private void parseStart(String string) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"        String[] dateTimeFormats \u003d {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"                \"d/M/yyyy HHmm\",","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"                \"d/M/yyyy\",","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"        };","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"            try {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"                if (format.contains(\"HHmm\")) { // if format contains time","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HalFentise"},"content":"                    this.startDateTime \u003d LocalDateTime.parse(string, formatter);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HalFentise"},"content":"                } else { // only contains date","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"                    this.startDate \u003d LocalDate.parse(string, formatter);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"                }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HalFentise"},"content":"                return;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HalFentise"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HalFentise"},"content":"                // ignore exception if the format does not match","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HalFentise"},"content":"     * Parses the end time of the event into either a {@code LocalDate} or {@code LocalDateTime}.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HalFentise"},"content":"     * Tries multiple date/time formats to successfully parse the string.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HalFentise"},"content":"     * @param string the end time as a string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HalFentise"},"content":"    private void parseEnd(String string) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HalFentise"},"content":"        String[] dateTimeFormats \u003d {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HalFentise"},"content":"                \"d/M/yyyy HHmm\",","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HalFentise"},"content":"                \"d/M/yyyy\",","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HalFentise"},"content":"        };","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HalFentise"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HalFentise"},"content":"            try {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HalFentise"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HalFentise"},"content":"                if (format.contains(\"HHmm\")) { // if format contains time","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HalFentise"},"content":"                    this.endDateTime \u003d LocalDateTime.parse(string, formatter);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HalFentise"},"content":"                } else { // only contains date","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HalFentise"},"content":"                    this.endDate \u003d LocalDate.parse(string, formatter);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HalFentise"},"content":"                }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HalFentise"},"content":"                return;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HalFentise"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HalFentise"},"content":"                // ignore exception if the format does not match","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HalFentise"},"content":"     * Returns the string representation of the event, including the formatted start and end times.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HalFentise"},"content":"     * If date and time are provided, they will be formatted accordingly.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HalFentise"},"content":"     * @return a formatted string representing the event","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HalFentise"},"content":"    @Override","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HalFentise"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HalFentise"},"content":"        String formattedStartTime \u003d (startDateTime !\u003d null)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HalFentise"},"content":"                ? startDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\"))","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HalFentise"},"content":"                : (startDate !\u003d null)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HalFentise"},"content":"                ? startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HalFentise"},"content":"                : startTime;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HalFentise"},"content":"        String formattedEndTime \u003d (endDateTime !\u003d null)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HalFentise"},"content":"                ? endDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\"))","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HalFentise"},"content":"                : (endDate !\u003d null)","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HalFentise"},"content":"                ? endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HalFentise"},"content":"                : endTime;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HalFentise"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedStartTime + \" to: \" + formattedEndTime + \")\";","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HalFentise"},"content":"     * Formats the event for file storage. This includes the event type, completion status,","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HalFentise"},"content":"     * task name, and the formatted start and end times.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HalFentise"},"content":"     * @return a string formatted for saving to a file","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HalFentise"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HalFentise"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HalFentise"},"content":"        return \"E | \" + (isDone ? \"  Done  \" : \"Not Done\") + \" | \" + getTaskName() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HalFentise"},"content":"     * Reconstructs an {@code Event} task from a formatted file string.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HalFentise"},"content":"     * The input string should be in the format: {@code \"E | \u003cstatus\u003e | \u003cname\u003e (from: \u003cstartTime\u003e to: \u003cendTime\u003e)\"}.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HalFentise"},"content":"     * @param fileFormat the string representation of the event task from a file","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HalFentise"},"content":"     * @return a new {@code Event} object parsed from the file string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HalFentise"},"content":"    static public Task fromFileFormat(String fileFormat) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HalFentise"},"content":"        String[] parts \u003d fileFormat.split(\" \\\\(from: \");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HalFentise"},"content":"        String name \u003d parts[0];","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HalFentise"},"content":"        String[] timeParts \u003d parts[1].split(\" to: \");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HalFentise"},"content":"        String startTime \u003d timeParts[0];","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HalFentise"},"content":"        String endTime \u003d timeParts[1].substring(0, timeParts[1].length() - 1);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HalFentise"},"content":"        return new Event(name, startTime, endTime);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"HalFentise":140}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":" * Represents a generic task with a name and completion status.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":" * Provides methods to mark, unmark, and format the task for storage or display.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"public class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":"    protected String taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"     * Constructs a new Task with the specified name.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"     * @param taskName the name of the task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"     * Includes the completion status and task name.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"     * @return a formatted string representing the task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"    @Override","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"        String state \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"        return state + \" \" + taskName;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"    public void mark() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"    public void unmark() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"     * Checks if the given task name matches this task\u0027s name.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"     * @param taskName the name to compare with this task\u0027s name","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"     * @return true if the names match, false otherwise","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HalFentise"},"content":"    boolean isSame(String taskName) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"        return this.taskName.equals(taskName);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HalFentise"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HalFentise"},"content":"     * @return the name of the task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HalFentise"},"content":"    String getTaskName() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HalFentise"},"content":"        return taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HalFentise"},"content":"     * Updates the name of the task.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HalFentise"},"content":"     * @param taskName the new name for the task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HalFentise"},"content":"    protected void setTaskName(String taskName) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HalFentise"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HalFentise"},"content":"     * Formats the task for file storage.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HalFentise"},"content":"     * Includes task type, completion status, and name.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HalFentise"},"content":"     * @return a string formatted for saving to a file","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HalFentise"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HalFentise"},"content":"        return \"Task\" + (isDone ? \"  Done  \" : \"Not Done\") + \" | \" + getTaskName();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HalFentise"},"content":"     * Creates a Task object from a formatted file string.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HalFentise"},"content":"     * @param fileFormat the string representing the task in file format","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HalFentise"},"content":"     * @return a Task object reconstructed from the file string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HalFentise"},"content":"    public static Task fromFileFormat(String fileFormat) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HalFentise"},"content":"        String[] parts \u003d fileFormat.split(\" \\\\| \", 3);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HalFentise"},"content":"        boolean done \u003d parts[1].equals(\"  Done  \");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HalFentise"},"content":"        Task task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HalFentise"},"content":"        System.out.println(parts[1]);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HalFentise"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HalFentise"},"content":"            case \"T\":","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HalFentise"},"content":"                task \u003d Todo.fromFileFormat(parts[2]);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HalFentise"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HalFentise"},"content":"            case \"D\":","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HalFentise"},"content":"                task \u003d Deadline.fromFileFormat(parts[2]);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HalFentise"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HalFentise"},"content":"            case \"E\":","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HalFentise"},"content":"                task \u003d Event.fromFileFormat(parts[2]);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HalFentise"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HalFentise"},"content":"            default:","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HalFentise"},"content":"                task \u003d new Task(parts[0]);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HalFentise"},"content":"        if (done) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HalFentise"},"content":"            task.mark();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HalFentise"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HalFentise"},"content":"            task.unmark();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HalFentise"},"content":"        return task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"HalFentise":120}},{"path":"src/main/java/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"import Exceptions.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":" * This class allows adding, removing, retrieving, and modifying tasks in a collection.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":"public class TaskList {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":"    private ArrayList\u003cTask\u003e tasks;  // List that stores the tasks","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"     * Default constructor initializes an empty task list.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"     * Constructor that initializes the task list with an existing list of tasks.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"     * @param tasks the list of tasks to initialize the TaskList with","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"     * @param task the task to add","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"     * Deletes a task at a specified index.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"     * @throws TaskException if the index is out of range","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"    public void deleteTask(int index) throws TaskException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"            throw new TaskException(\"Task index is out of range.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"     * Retrieves a task at a specified index.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"     * @param index the index of the task to retrieve","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"     * @throws TaskException if the index is out of range","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HalFentise"},"content":"    public Task getTask(int index) throws TaskException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"            throw new TaskException(\"Task index is out of range.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HalFentise"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HalFentise"},"content":"     * Returns the list of all tasks.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HalFentise"},"content":"     * @return the list of tasks","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HalFentise"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HalFentise"},"content":"        return tasks;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HalFentise"},"content":"     * Finds tasks whose names contain the specified keyword.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HalFentise"},"content":"     * @param keyword the keyword to search for in task names","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HalFentise"},"content":"     * @return a list of tasks that match the search criterion","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HalFentise"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HalFentise"},"content":"        ArrayList\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HalFentise"},"content":"        for (Task keyTask : tasks) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HalFentise"},"content":"            if (keyTask.getTaskName().contains(keyword)) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HalFentise"},"content":"                task.add(keyTask);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HalFentise"},"content":"        return task;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HalFentise"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HalFentise"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HalFentise"},"content":"     * @throws TaskException if the index is out of range","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HalFentise"},"content":"    public void markTask(int index) throws TaskException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HalFentise"},"content":"        getTask(index).mark();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HalFentise"},"content":"     * Unmarks the task at the specified index.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HalFentise"},"content":"     * @param index the index of the task to unmark","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HalFentise"},"content":"     * @throws TaskException if the index is out of range","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HalFentise"},"content":"    public void unmarkTask(int index) throws TaskException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HalFentise"},"content":"        getTask(index).unmark();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"HalFentise":100}},{"path":"src/main/java/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"package Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":" * Represents a basic task without a specific deadline or time.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":" * Extends the {@code Task} class to implement a simple \"To-Do\" task.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":"     * Constructs a new {@code Todo} task with the specified task name.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"     * @param taskName the name or description of the task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"        super(taskName);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"     * Returns the string representation of the to-do task.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"     * Includes the task type, completion status, and task name.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"     * @return a formatted string representing the to-do task","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"    @Override","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"        String state \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"        return \"[T]\" + state + \" \" + taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"     * Formats the to-do task for file storage.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"     * Includes task type, completion status, and task name.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"     * @return a string formatted for saving to a file","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"        return \"T | \" + (isDone ? \"  Done  \" : \"Not Done\") + \" | \" + getTaskName();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"     * Reconstructs a {@code Todo} task from a formatted file string.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"     * The input string should be in the format: {@code \"T | \u003cstatus\u003e | \u003cname\u003e\"}.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"     * @param fileFormat the string representation of the to-do task from a file","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"     * @return a new {@code Todo} object parsed from the file string","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"    static public Task fromFileFormat(String fileFormat) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"        return new Todo(fileFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"HalFentise":52}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"import Task.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HalFentise"},"content":"/**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HalFentise"},"content":" * Handles user interaction for the HaHaHa application.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HalFentise"},"content":" * Provides methods to display messages, retrieve user input, and show task-related information.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HalFentise"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HalFentise"},"content":"public class Ui {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HalFentise"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HalFentise"},"content":"     * Constructs a Ui instance and initializes the scanner for user input.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HalFentise"},"content":"    public Ui() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HalFentise"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HalFentise"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HalFentise"},"content":"    public void welcome() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"--------------------------------\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"please notice that\\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HalFentise"},"content":"                \"the input date format should be: d/m/yyyy\\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HalFentise"},"content":"                \"Sorry for bring any inconvenience to you.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"Hello, I am HaHaHa!\\nWhat can I do for you?\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"--------------------------------\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HalFentise"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HalFentise"},"content":"    public void bye() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"Bye, see you next time!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"--------------------------------\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HalFentise"},"content":"     * Displays a line separator for visual clarity.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HalFentise"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"--------------------------------\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HalFentise"},"content":"     * Prompts the user for input and returns the entered command as a string.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HalFentise"},"content":"     * @return the user\u0027s input command","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HalFentise"},"content":"    public String getUserInput() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HalFentise"},"content":"        System.out.print(\"Enter command: \");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HalFentise"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HalFentise"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HalFentise"},"content":"     * If the task list is empty, prompts the user to add tasks.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HalFentise"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HalFentise"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HalFentise"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HalFentise"},"content":"            System.out.println(\"No tasks in the list. Go and add something!\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HalFentise"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HalFentise"},"content":"            System.out.println(\"Here are your tasks:\\n\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HalFentise"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HalFentise"},"content":"                System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HalFentise"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HalFentise"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HalFentise"},"content":"        showLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HalFentise"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HalFentise"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HalFentise"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HalFentise"},"content":"        showLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HalFentise"},"content":"     * Displays a confirmation message when a task is added to the list.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HalFentise"},"content":"     * @param task       the task that was added","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HalFentise"},"content":"     * @param totalTasks the total number of tasks after the addition","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HalFentise"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HalFentise"},"content":"        System.out.println(task);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HalFentise"},"content":"        showLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HalFentise"},"content":"    /**","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HalFentise"},"content":"     * Displays a confirmation message when a task is removed from the list.","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HalFentise"},"content":"     *","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HalFentise"},"content":"     * @param task       the task that was removed","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HalFentise"},"content":"     * @param totalTasks the total number of tasks after the removal","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HalFentise"},"content":"     */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HalFentise"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HalFentise"},"content":"        System.out.println(task);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HalFentise"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HalFentise"},"content":"        showLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HalFentise"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HalFentise"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HalFentise"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"HalFentise":110}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HalFentise"},"content":"todo read book","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HalFentise"},"content":"list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HalFentise"},"content":"mark 1","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HalFentise"},"content":"bye","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"HalFentise":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HalFentise"},"content":"java -classpath ..\\bin HaHaHa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"HalFentise":1}}]
