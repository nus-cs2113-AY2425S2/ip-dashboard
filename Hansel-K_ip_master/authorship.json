[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"# Capy Task Manager User Guide","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"![Product Screenshot](data/CapyScreenshot.png)  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"*Insert a product screenshot here.*","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"## Description","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"Capy is a simple yet powerful task management application designed to help users organize and track their tasks ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"effectively. With its intuitive command-line interface, users can add, delete, search, and manage tasks like ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"ToDos, Deadlines, and Events. It also supports persistent storage, so your tasks are always saved.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"## Quick Start","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"1. **Install Java**: Ensure you have Java 17 or above installed on your computer.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"2. **Download the Application**: Download the latest `.jar` file from [here](#). *(Provide the actual link.)*","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"3. **Set Up**: Copy the `.jar` file to the folder you want to use as the home folder for Capy Task Manager.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"4. **Run the Application**:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"    - Open a command terminal.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    - Navigate (`cd`) into the folder where you placed the `.jar` file.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"    - Run the application with:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"      ```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"      java -jar capy.jar","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"      ```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"5. **Using the Application**: The application is now running, and you can start entering commands!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"## Key Features","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"- **ToDo**: Add a task without any time or due date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"- **Deadline**: Add a task with a specific due date or time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"- **Event**: Add a task with a defined start and end date/time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"- **View All Tasks**: Display the list of all tasks saved.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"- **Mark Task as Done**: Mark a task as completed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"- **Unmark Task as Not Done**: Unmark a task as incomplete.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"- **Delete Task**: Remove a task from the list of tasks saved.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"- **Find Tasks**: Find tasks by keywords and display a list of tasks with matching keywords.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"- **Exit Program**: Terminate the program.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"## Command Format","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"### Notes:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"- Words in **UPPER_CASE** are placeholders for user-supplied parameters.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"  Example: `todo TASK_A` means the `todo` command and `TASK_A` is the task description you provide, such as ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"  `todo CS2113 Quiz`.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"## Managing Tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Hansel-K"},"content":"### 1. Adding a ToDo Task: `todo`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Hansel-K"},"content":"Adds a task without any time or due date.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Hansel-K"},"content":"todo TASK","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Hansel-K"},"content":"todo CS2113 Quiz","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Hansel-K"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Hansel-K"},"content":"  [T][ ] Read a book","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Hansel-K"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Hansel-K"},"content":"### 2. Adding a Deadline Task : `deadline`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Hansel-K"},"content":"Add tasks with a specific due date or time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Hansel-K"},"content":"deadline TASK /by DUE_DATE","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Hansel-K"},"content":"deadline CS2113 Quiz /by Friday 1159","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Hansel-K"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Hansel-K"},"content":"  [D][ ] CS2113 Quiz (by: Friday 1159)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Hansel-K"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Hansel-K"},"content":"### 3. Adding an Event Task: `event`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Hansel-K"},"content":"Add tasks with a defined start and end date/time.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Hansel-K"},"content":"event TASK /from START /to END","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Hansel-K"},"content":"event CS2113 Tutorial /from Wed 12pm /to 1pm","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Hansel-K"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Hansel-K"},"content":"  [E][ ] CS2113 Tutorial (from: Wed 12pm to: 1pm)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Hansel-K"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Hansel-K"},"content":"### 4. View All Tasks: `list`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Hansel-K"},"content":"View all tasks in the list along with their types and statuses.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Hansel-K"},"content":"list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Hansel-K"},"content":"list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Hansel-K"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Hansel-K"},"content":"1. [T][ ] CS2113 Quiz","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Hansel-K"},"content":"2. [D][ ] CS2113 Quiz (by: Friday 1159)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Hansel-K"},"content":"3. [E][ ] CS2113 Tutorial (from: Wed 12pm to: 1pm)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Hansel-K"},"content":"### 5. Marking a Task as Done: `mark`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Hansel-K"},"content":"Marks the task at the specified index within the task list as completed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Hansel-K"},"content":"mark TASK_INDEX","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Hansel-K"},"content":"mark 1","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Hansel-K"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Hansel-K"},"content":"  [T][X] CS2113 Quiz","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Hansel-K"},"content":"### 6. Unmarking a Task as Not Done: `unmark`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Hansel-K"},"content":"Unmarks a task at the specified index within the task list as incomplete.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Hansel-K"},"content":"unmark TASK_INDEX","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Hansel-K"},"content":"unmark 1","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Hansel-K"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Hansel-K"},"content":"  [T][ ] CS2113 Quiz","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Hansel-K"},"content":"### 7. Deleting a Task: `delete`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Hansel-K"},"content":"Deletes a task at the specified index within the task list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Hansel-K"},"content":"delete TASK_INDEX","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Hansel-K"},"content":"delete 1","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Hansel-K"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Hansel-K"},"content":"  [T][ ] CS2113 Quiz","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Hansel-K"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Hansel-K"},"content":"### 8. Finding Tasks: `find`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Hansel-K"},"content":"Find tasks by keywords and display a list of tasks with matching keywords.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Hansel-K"},"content":"find KEYWORDS","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Hansel-K"},"content":"find CS2113 Quiz","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Hansel-K"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Hansel-K"},"content":"1. [D][ ] CS2113 Quiz (by: Friday 1159)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Hansel-K"},"content":"### 9. Exiting the Program: `bye`","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Hansel-K"},"content":"Terminate the program.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Hansel-K"},"content":"Format:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Hansel-K"},"content":"bye","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Hansel-K"},"content":"Example Input:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Hansel-K"},"content":"bye","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Hansel-K"},"content":"Expected Output:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Hansel-K"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Hansel-K"},"content":"## Error Handling","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Hansel-K"},"content":"### Invalid Commands","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Hansel-K"},"content":"If the program does not recognise a command, it will return the following error message:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Hansel-K"},"content":"Oops! Command not Recognised! Please try a valid command!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Hansel-K"},"content":"### Missing Arguments","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Hansel-K"},"content":"If a command is entered without some required arguments (e.g. `todo` without a task description), ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Hansel-K"},"content":"the system will notify you your command is missing some details:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Hansel-K"},"content":"Oops! Seems like the command is missing some details!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Hansel-K"},"content":"#### Notes:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Hansel-K"},"content":"There are also different error messages for specific cases when the missing argument can be identified.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Hansel-K"},"content":"- Missing Description:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Hansel-K"},"content":"Oops! Seems like the command is missing a description!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Hansel-K"},"content":"- Missing Task Number:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Hansel-K"},"content":"Oops! Seems like the command is missing a task number!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Hansel-K"},"content":"### Out-of-Range Task Indexes","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Hansel-K"},"content":"If you try to mark, unmark, or delete a task with an index that does not exist within the list of tasks ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Hansel-K"},"content":"(e.g. trying to delete task 5 when there are only 3 tasks), the program will inform you of your mistake:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Hansel-K"},"content":"Oops! Invalid task number!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Hansel-K"},"content":"### Invalid Data Format","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Hansel-K"},"content":"For the mark, unmark, and delete commands, if you input a string or decimal in place of an integer for the task index ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Hansel-K"},"content":"(e.g. trying to enter `mark XYZ` or `mark 3.14`), the program will inform you of your mistake:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Hansel-K"},"content":"```bash","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Hansel-K"},"content":"Oops! Please enter a valid integer as a task number!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Hansel-K"},"content":"```","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Hansel-K"},"content":"## Saving Data","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Hansel-K"},"content":"Have no fear! Capy Task Manager automatically saves your tasks to a files after any modification!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Hansel-K"},"content":"## Editing the Data File","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Hansel-K"},"content":"Task data is saved in a capy.txt file. This file can be dited directly, but do ensure that the format remains ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Hansel-K"},"content":"valid to avoid errors when loading the data!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Hansel-K"},"content":"### CAUTION:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Hansel-K"},"content":"If you make changes that corrupt the file format, *all your tasks may be discarded* by Capy Task Manager! ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Hansel-K"},"content":"Capy Task Manager would then start fresh with an empty list instead, so be careful when making edits to the data file!","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Hansel-K"},"content":"---","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Hansel-K"},"content":"## Command Summary","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Hansel-K"},"content":"| Action                    | Command Format                                      |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Hansel-K"},"content":"|---------------------------|-----------------------------------------------------|","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Hansel-K"},"content":"| Add a Todo Task           | `todo \u003cTASK_DESCRIPTION\u003e`                           |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Hansel-K"},"content":"| Add a Deadline Task       | `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDUE_DATE\u003e`        |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Hansel-K"},"content":"| Add an Event Task         | `event \u003cTASK_DESCRIPTION\u003e /from \u003cSTART\u003e /to \u003cEND\u003e`  |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Hansel-K"},"content":"| List All Saved Tasks      | `list`                                              |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Hansel-K"},"content":"| Mark a Task as Done       | `mark \u003cTASK_NUMBER\u003e`                                |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Hansel-K"},"content":"| Unmark a Task as Not Done | `unmark \u003cTASK_NUMBER\u003e`                              |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Hansel-K"},"content":"| Delete a Task             | `delete \u003cTASK_NUMBER\u003e`                              |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Hansel-K"},"content":"| Find Tasks                | `find \u003cKEYWORD\u003e`                                    |","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Hansel-K"},"content":"| Exit the Program          | `bye`                                               |","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":295,"-":23}},{"path":"src/main/java/capy/Capy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.command.Command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.parser.Parser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" * The main class of the application that initializes the components,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":" * processes user input, and executes commands to manage a task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"public class Capy {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"     * Constructs the Capy application by initializing the UI, storage, and task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"     * @param filePath the file path where tasks will be loaded from and saved to","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"    public Capy(String filePath) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"        } catch (CapyException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"            tasks \u003d new TaskList(); // Initialize with an empty task list if loading fails","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"     * Runs the main application loop, handling user commands until the exit command is issued","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"     * The loop reads user input, parses it into commands, executes the commands, and","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"     * displays appropriate output or error messages","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"    public void run() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"                String fullCommand \u003d ui.readCommand(); // Read user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"                ui.showLine(); // Print a separator line","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"                Command command \u003d Parser.parse(fullCommand); // Parse input into a Command","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"                command.execute(tasks, ui, storage); // Execute the parsed command","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"                isExit \u003d command.isExit(); // Check if this is the exit command","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Hansel-K"},"content":"            } catch (CapyException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Hansel-K"},"content":"                ui.showError(e.getMessage()); // Display error messages for invalid commands","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Hansel-K"},"content":"            } finally {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Hansel-K"},"content":"                ui.showLine(); // Always print a separator line at the end","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Hansel-K"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Hansel-K"},"content":"     * The main entry point of the application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Hansel-K"},"content":"     * @param args Command-line arguments","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Hansel-K"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Hansel-K"},"content":"        new Capy(\"./data/capy.txt\").run(); // Run the application with the specified data file path","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Hansel-K":66}},{"path":"src/main/java/capy/CapyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"public class CapyException extends  Exception {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"    public CapyException(String message) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"        super(message);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Hansel-K":7}},{"path":"src/main/java/capy/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" * Represents a command to add a new task to the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"    private final String fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * Constructs an AddCommand with the given user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"     * @param fullCommand the user\u0027s input, which includes the task type and details","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    public AddCommand(String fullCommand) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"     * Executes the add command by identifying the task type (ToDo, Deadline, or Event)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     * and adding the corresponding task to the task list. Displays a message and saves","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     * the updated task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks   the task list to which the task will be added","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"     * @param ui      the user interface to display messages","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"     * @param storage the storage system for saving tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task type is invalid","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"        if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"            tasks.addTodoTask(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"            tasks.addDeadlineTask(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"            tasks.addEventTask(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"        } else {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(\"Invalid task type for AddCommand.\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"        Task addedTask \u003d tasks.getTasks().get(tasks.size() - 1);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"        ui.showAddTaskMessage(addedTask, tasks.size());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":49}},{"path":"src/main/java/capy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":" * Executes certain functionalities based on user commands","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"        return false; // Default behavior: command does not exit the application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":17}},{"path":"src/main/java/capy/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" * Represents a command to delete a task from the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"    private final String fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a DeleteCommand with the given user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"     * @param fullCommand the user\u0027s input, which includes the \"delete\" command and the task number","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"     * Executes the delete command by removing the specified task from the task list,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     * displaying a message, and saving the updated task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks   the task list from which the task will be deleted","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     * @param ui      the user interface to display messages","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"     * @param storage the storage system for saving tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task number is invalid or out of bounds","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"        Task removedTask \u003d tasks.deleteTask(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"        ui.showDeleteTaskMessage(removedTask, tasks.size());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":39}},{"path":"src/main/java/capy/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":" * Represents a command to exit the application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"     * Executes the exit command by displaying a goodbye message","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks   the current task list (not used in this command)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * @param ui      the user interface to display the goodbye message","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     * @param storage the storage system (not used in this command)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"        ui.showLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     * Indicates whether the command is an exit command","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     * @return true, so that the command terminates the application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"        return true; // Indicates the program should terminate","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":34}},{"path":"src/main/java/capy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" * Finds and lists tasks that contain a specified keyword.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"    private final String keyword;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"    public FindCommand(String fullCommand) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_DESCRIPTION); // Ensure keyword is provided","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"        this.keyword \u003d parts[1].trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"        ui.showLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"        int matchCounter \u003d 1; // Counter for matching tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"            Task task \u003d tasks.getTask(i); // Use TaskList\u0027s getTask method","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"                System.out.println(matchCounter + \". \" + task); // Number matches correctly","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"                matchCounter++;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"                found \u003d true;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"        if (!found) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"            System.out.println(\"No tasks found matching the keyword: \" + keyword);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"        ui.showLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"        return false; // This command does not terminate the application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":51}},{"path":"src/main/java/capy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":" * Represents a command to list all tasks in the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"     * Executes the list command by displaying all tasks in the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks   the task list containing all the tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"     * @param ui      the user interface to display the tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * @param storage the storage system (not used in this command)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"        tasks.listTasks(ui);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":22}},{"path":"src/main/java/capy/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" * Represents a command to mark a task as completed in the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"    private final String fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a MarkCommand with the given user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"     * @param fullCommand the user\u0027s input, which includes the \"mark\" command and the task number","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"     * Executes the mark command by marking the specified task as completed,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     * displaying a message, and saving the updated task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks   the task list containing the task to be marked","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     * @param ui      the user interface to display messages","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"     * @param storage the storage system for saving tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task number is invalid or out of bounds","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"        tasks.markTask(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"        Task markedTask \u003d tasks.getTask(Integer.parseInt(fullCommand.split(\" \")[1]) - 1);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"        ui.showMarkTaskMessage(markedTask);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":40}},{"path":"src/main/java/capy/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.tasklist.TaskList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.storage.Storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" * Represents a command to mark a task as not completed in the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"    private final String fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * Constructs an UnmarkCommand with the given user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"     * @param fullCommand the user\u0027s input, which includes the \"unmark\" command and the task number","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    public UnmarkCommand(String fullCommand) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"     * Executes the unmark command by marking the specified task as not completed,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     * displaying a message, and saving the updated task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks   the task list containing the task to be unmarked","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     * @param ui      the user interface to display messages","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"     * @param storage the storage system for saving tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task number is invalid or out of bounds","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"        tasks.unmarkTask(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"        Task unmarkedTask \u003d tasks.getTask(Integer.parseInt(fullCommand.split(\" \")[1]) - 1);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"        ui.showUnmarkTaskMessage(unmarkedTask);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":40}},{"path":"src/main/java/capy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.parser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.CapyException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.command.*;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":" * Parses user input and identifies the command entered","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"public class Parser {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"     * Parses the user input string and returns the appropriate command object","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"     * @param fullCommand The full input string entered by the user.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * @return A Command object corresponding to the user input.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException If the command is unrecognized or invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"    public static Command parse(String fullCommand) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"            return new MarkCommand(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"            return new UnmarkCommand(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.startsWith(\"todo\") || fullCommand.startsWith(\"deadline\") || fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"            return new AddCommand(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"        } else {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.INVALID_COMMAND);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":38}},{"path":"src/main/java/capy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.storage;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.*;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Deadline;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Event;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.task.ToDo;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"import java.io.*;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":" * Manages the loading and saving of tasks to a persistent file storage","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":" * Handles the creation of directories and files as needed, and ensures tasks are","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":" * properly saved and loaded in a specified format","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"public class Storage {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"    private String filePath;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a Storage object for managing the given file path","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     * @param filePath the path to the file where tasks will be saved and loaded from","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"     * Loads tasks from the file specified in the file path","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"     * @return an ArrayList of tasks loaded from the file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the file contains corrupted data or cannot be accessed","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"            // Ensure the directory exists","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"            Files.createDirectories(Paths.get(\"./data\"));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"            // Read tasks if the file exists","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"            if (file.exists()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"                String line;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Hansel-K"},"content":"                    String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Hansel-K"},"content":"                    // Check for corrupted file format","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Hansel-K"},"content":"                    if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Hansel-K"},"content":"                        throw new CapyException(Ui.CORRUPTED_FILE);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Hansel-K"},"content":"                    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Hansel-K"},"content":"                    String type \u003d parts[0].trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Hansel-K"},"content":"                    boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Hansel-K"},"content":"                    // Parse tasks based on their type","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Hansel-K"},"content":"                    switch (type) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Hansel-K"},"content":"                        case \"T\":","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Hansel-K"},"content":"                            tasks.add(new ToDo(parts[2].trim(), isDone));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Hansel-K"},"content":"                            break;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Hansel-K"},"content":"                        case \"D\":","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Hansel-K"},"content":"                            tasks.add(new Deadline(parts[2].trim(), parts[3].trim(), isDone));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Hansel-K"},"content":"                            break;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Hansel-K"},"content":"                        case \"E\":","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Hansel-K"},"content":"                            tasks.add(new Event(parts[2].trim(), parts[3].trim(), parts[4].trim(), isDone));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Hansel-K"},"content":"                            break;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Hansel-K"},"content":"                        default:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Hansel-K"},"content":"                            throw new CapyException(Ui.CORRUPTED_FILE);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Hansel-K"},"content":"                    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Hansel-K"},"content":"                }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Hansel-K"},"content":"                reader.close();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Hansel-K"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Hansel-K"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Hansel-K"},"content":"        return tasks;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Hansel-K"},"content":"     * Saves the tasks to the file specified in the file path","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks the list of tasks to be saved to the file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if an I/O error occurs while saving the tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Hansel-K"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Hansel-K"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Hansel-K"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Hansel-K"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Hansel-K"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Hansel-K"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Hansel-K"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":99}},{"path":"src/main/java/capy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":" * Represents a Deadline task with a description and a due date","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"    protected String dueDate;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a Deadline task with the given description, due date, and completion status","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"     * @param dueDate     the due date of the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"     * @param isDone      whether the task is completed","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"    public Deadline(String description, String dueDate, boolean isDone) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"        super(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"     * Returns the string representation of the Deadline task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"     * @return a string in the format \"[D][status] description (by: dueDate)\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"    public String toString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"     * Converts the Deadline task to a format suitable for saving to a file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"     * @return a formatted string representing the Deadline task\u0027s data","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"    public String toFileFormat() { // Method to save to file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dueDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"Hansel-K":41}},{"path":"src/main/java/capy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":" * Represents an Event task with a description, start time, and end time","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"    protected String start;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"    protected String end;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"     * Constructs an Event task with the given description, start time, end time, and completion status","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"     * @param start       the start time of the event","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"     * @param end         the end time of the event","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"     * @param isDone      whether the event is completed","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"    public Event(String description, String start, String end, boolean isDone) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"        super(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"     * Returns the string representation of the Event task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     * @return a string in the format \"[E][status] description (from: start to: end)\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"    public String toString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" \" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"                                                    \"to: \" + end + \")\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"     * Converts the Event task to a format suitable for saving to a file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"     * @return a formatted string representing the Event task\u0027s data","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"    public String toFileFormat() { // Method to save to file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"Hansel-K":45}},{"path":"src/main/java/capy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":" * Represents a task with a description and its completion status","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":" * This is an abstract class to be extended by specific types of tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"public abstract class Task {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"    protected String description;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a new Task with the given description","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"        this.isDone \u003d false; // Set default as not done","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"     * Returns the status icon of the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"     * @return \"X\" if the task is done, else return a space character \" \"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"        return (isDone ? \"X\" : \" \"); // Mark done task with X","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"     * Marks the task as done","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    public void markDone() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"     * Marks the task as not done","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"     * Returns the string representation of the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"     * @return a string in the format \"[status] description\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"  ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Hansel-K"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Hansel-K"},"content":"        return this.description; // Return the description of the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Hansel-K"},"content":"    public String toString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Hansel-K"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Hansel-K"},"content":"     * Converts the task to a format suitable for saving to a file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Hansel-K"},"content":"     * @return a formatted string representing the task\u0027s data","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Hansel-K"},"content":"    public abstract String toFileFormat(); // Abstract method for saving tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"Hansel-K":65}},{"path":"src/main/java/capy/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":" * Represents a To-Do task with a description","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a ToDo task with the given description","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"        super(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a ToDo task with the given description and completion status","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"     * @param isDone      Whether the task is completed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    public ToDo(String description, boolean isDone) { // Constructor to load from file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"        super(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"     * @return a string in the format \"[T][status] description\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    public String toString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"     * Converts the ToDo task to a format suitable for saving to a file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"     * @return a formatted string representing the ToDo task\u0027s data","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"    public String toFileFormat() { // Method to save to file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"Hansel-K":48}},{"path":"src/main/java/capy/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.tasklist;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.*;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Deadline;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Event;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"import capy.task.ToDo;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":"import capy.ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":" * Manages the list of tasks and provides operations to modify and retrieve tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"public class TaskList {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"     * Constructor, constructs an empty task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a task list with the given tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"     * Returns the number of tasks in the list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"    public int size() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"     * Retrieves the entire list of tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"     * @return an ArrayList of Task objects","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Hansel-K"},"content":"        return tasks;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Hansel-K"},"content":"     * Retrieves a task at a specific index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Hansel-K"},"content":"     * @param index the index of the task to retrieve (0-based)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Hansel-K"},"content":"     * @return the Task object at the specified index.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the index is out of bounds","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Hansel-K"},"content":"    public Task getTask(int index) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Hansel-K"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.INVALID_TASK_NUMBER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Hansel-K"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Hansel-K"},"content":"     * Displays all tasks in the task list using the UI","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Hansel-K"},"content":"     * @param ui the user interface for displaying tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Hansel-K"},"content":"    public void listTasks(Ui ui) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Hansel-K"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Hansel-K"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Hansel-K"},"content":"     * Adds a ToDo task to the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Hansel-K"},"content":"     * @param userInput the user input containing the task description","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task description is missing","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Hansel-K"},"content":"    public void addTodoTask(String userInput) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Hansel-K"},"content":"        String description \u003d userInput.substring(4).trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Hansel-K"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_DESCRIPTION);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Hansel-K"},"content":"        tasks.add(new ToDo(description));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Hansel-K"},"content":"     * Adds a Deadline task to the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Hansel-K"},"content":"     * @param userInput the user input containing the task details","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task details are incomplete or missing","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Hansel-K"},"content":"    public void addDeadlineTask(String userInput) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Hansel-K"},"content":"        String[] parts \u003d userInput.split(\"/by\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Hansel-K"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_DETAILS);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Hansel-K"},"content":"        String description \u003d parts[0].substring(8).trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Hansel-K"},"content":"        String dueDate \u003d parts[1].trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Hansel-K"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_DESCRIPTION);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Hansel-K"},"content":"        tasks.add(new Deadline(description, dueDate, false));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Hansel-K"},"content":"     * Adds an Event task to the task list","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Hansel-K"},"content":"     * @param userInput the user input containing the task details","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task details are incomplete or missing","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Hansel-K"},"content":"    public void addEventTask(String userInput) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Hansel-K"},"content":"        String[] parts \u003d userInput.split(\"/from|/to\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Hansel-K"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_DETAILS);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Hansel-K"},"content":"        String description \u003d parts[0].substring(5).trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Hansel-K"},"content":"        String start \u003d parts[1].trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Hansel-K"},"content":"        String end \u003d parts[2].trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Hansel-K"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_DESCRIPTION);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Hansel-K"},"content":"        Event newEvent \u003d new Event(description, start, end, false);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Hansel-K"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Hansel-K"},"content":"     * Marks a task as done based on the task number provided in the user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Hansel-K"},"content":"     * @param userInput the user input containing the \"mark\" command and the task number","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task number is missing, in the wrong format,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Hansel-K"},"content":"     *                        not a valid integer, or out of bounds.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Hansel-K"},"content":"    public void markTask(String userInput) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Hansel-K"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Hansel-K"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_TASK_NUMBER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Hansel-K"},"content":"        } else if (parts.length \u003e 2) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.WRONG_FORMAT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Hansel-K"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Hansel-K"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Hansel-K"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Hansel-K"},"content":"                throw new CapyException(Ui.INVALID_TASK_NUMBER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Hansel-K"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Hansel-K"},"content":"            tasks.get(taskNumber).markDone();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Hansel-K"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.NOT_AN_INTEGER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Hansel-K"},"content":"     * Marks a task as not done based on the task number provided in the user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Hansel-K"},"content":"     * @param userInput the user input containing the \"unmark\" command and the task number","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task number is missing, in the wrong format,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Hansel-K"},"content":"     *                        not a valid integer, or out of bounds","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Hansel-K"},"content":"    public void unmarkTask(String userInput) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Hansel-K"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Hansel-K"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_TASK_NUMBER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Hansel-K"},"content":"        } else if (parts.length \u003e 2) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.WRONG_FORMAT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Hansel-K"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Hansel-K"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Hansel-K"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Hansel-K"},"content":"                throw new CapyException(Ui.INVALID_TASK_NUMBER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Hansel-K"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Hansel-K"},"content":"            tasks.get(taskNumber).unmarkDone();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Hansel-K"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.NOT_AN_INTEGER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Hansel-K"},"content":"     * Deletes a task from the task list based on the task number provided in the user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Hansel-K"},"content":"     * @param userInput the user input containing the \"delete\" command and the task number","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Hansel-K"},"content":"     * @return the deleted Task object.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Hansel-K"},"content":"     * @throws CapyException if the task number is missing, in the wrong format,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Hansel-K"},"content":"     *                        not a valid integer, or out of bounds","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Hansel-K"},"content":"    public Task deleteTask(String userInput) throws CapyException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Hansel-K"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Hansel-K"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.MISSING_TASK_NUMBER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Hansel-K"},"content":"        } else if (parts.length \u003e 2) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.WRONG_FORMAT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Hansel-K"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Hansel-K"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Hansel-K"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Hansel-K"},"content":"                throw new CapyException(Ui.INVALID_TASK_NUMBER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Hansel-K"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Hansel-K"},"content":"            return tasks.remove(taskNumber);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Hansel-K"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Hansel-K"},"content":"            throw new CapyException(Ui.NOT_AN_INTEGER);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Hansel-K"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":216}},{"path":"src/main/java/capy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hansel-K"},"content":"package capy.ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Hansel-K"},"content":"import capy.task.Task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Hansel-K"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Hansel-K"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Hansel-K"},"content":" * Handles user interaction, including input and output","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Hansel-K"},"content":" * Provides methods for displaying messages, reading user commands,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Hansel-K"},"content":" * and showing feedback or errors to the user","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Hansel-K"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Hansel-K"},"content":"public class Ui {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Hansel-K"},"content":"    private static final String LINE_SPACING \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Hansel-K"},"content":"    // Constants for common error messages","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Hansel-K"},"content":"    public static final String INVALID_COMMAND \u003d \"Oops! Command not Recognised! Please try a valid command!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Hansel-K"},"content":"    public static final String INVALID_TASK_NUMBER \u003d \"Oops! Invalid task number!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Hansel-K"},"content":"    public static final String MISSING_TASK_NUMBER \u003d \"Oops! Seems like the command is missing a task number!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Hansel-K"},"content":"    public static final String NOT_AN_INTEGER \u003d \"Oops! Please enter a valid integer as a task number!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Hansel-K"},"content":"    public static final String MISSING_DESCRIPTION \u003d \"Oops! Seems like the command is missing a description!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Hansel-K"},"content":"    public static final String MISSING_DETAILS \u003d \"Oops! Seems like the command is missing some details!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Hansel-K"},"content":"    public static final String WRONG_FORMAT \u003d \"Oops! Seems like the command is in the wrong format!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Hansel-K"},"content":"    public static final String CORRUPTED_FILE \u003d \"Oh no! Data file is corrupted!\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Hansel-K"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Hansel-K"},"content":"     * Constructs a new Ui object that handles user interaction","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Hansel-K"},"content":"     * Initializes the scanner for reading user input","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Hansel-K"},"content":"    public Ui() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Hansel-K"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Hansel-K"},"content":"     * Displays a welcome message to greet the user and start the application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Hansel-K"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Hansel-K"},"content":"        showLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Hello! I\u0027m Capy\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Hansel-K"},"content":"        showLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Hansel-K"},"content":"     * Reads and returns a command entered by the user","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Hansel-K"},"content":"     * @return The user command as a trimmed string","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Hansel-K"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Hansel-K"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Hansel-K"},"content":"     * Displays a generic error message","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Hansel-K"},"content":"     * @param errorMessage the error message to be displayed","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Hansel-K"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Hansel-K"},"content":"     * Displays an error message when tasks fail to load","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Hansel-K"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Error loading tasks.\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Hansel-K"},"content":"     * Displays a line separator for formatting the output","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Hansel-K"},"content":"    public void showLine() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(LINE_SPACING);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Hansel-K"},"content":"     * Displays a message when a task is successfully added","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Hansel-K"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Hansel-K"},"content":"     * @param size the total number of tasks in the task list after adding the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Hansel-K"},"content":"    public void showAddTaskMessage(Task task, int size) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Hansel-K"},"content":"     * Displays a message when a task is successfully deleted","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Hansel-K"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Hansel-K"},"content":"     * @param size the total number of tasks in the task list after deleting the task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Hansel-K"},"content":"    public void showDeleteTaskMessage(Task task, int size) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Hansel-K"},"content":"     * Displays a message when a task is successfully marked as done","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Hansel-K"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Hansel-K"},"content":"    public void showMarkTaskMessage(Task task) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Hansel-K"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Hansel-K"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Hansel-K"},"content":"     * Displays a message when a task is successfully marked as not done","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Hansel-K"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Hansel-K"},"content":"     * @param task the task that was marked as not done","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Hansel-K"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Hansel-K"},"content":"    public void showUnmarkTaskMessage(Task task) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Hansel-K"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Hansel-K"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Hansel-K"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Hansel-K":120}}]
