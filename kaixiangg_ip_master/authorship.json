[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"# Buzz User Guide","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"kaixiangg":1,"-":29}},{"path":"src/main/java/buzz/Buzz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"package buzz;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Deadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Event;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Todo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kaixiangg"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kaixiangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kaixiangg"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kaixiangg"},"content":"public class Buzz {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kaixiangg"},"content":"    //Declare Scanner as a class-level variable","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kaixiangg"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kaixiangg"},"content":"    public static final String NEW_LINE \u003d System.lineSeparator();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kaixiangg"},"content":"    public static final String SPACE \u003d \"      \";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kaixiangg"},"content":"    public static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kaixiangg"},"content":"    //Class-level variables","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kaixiangg"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kaixiangg"},"content":"    private static Task lastDeletedTask \u003d null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kaixiangg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kaixiangg"},"content":"        greet();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kaixiangg"},"content":"        loadTasksFromStorage(); //  Load tasks from file at start","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kaixiangg"},"content":"        while (true) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kaixiangg"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kaixiangg"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kaixiangg"},"content":"            try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kaixiangg"},"content":"                ProcessInput(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kaixiangg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kaixiangg"},"content":"                printLine();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kaixiangg"},"content":"                printLine();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kaixiangg"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kaixiangg"},"content":"    // Helper Methods","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kaixiangg"},"content":"    public static void loadTasksFromStorage() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kaixiangg"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kaixiangg"},"content":"            Storage.createStorage(); //  Ensure the file exists first","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kaixiangg"},"content":"            tasks.addAll(Storage.loadTasks()); //  Now load tasks safely","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Loaded \" + tasks.size() + \" tasks from storage.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kaixiangg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Could not load tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kaixiangg"},"content":"    public static void ProcessInput(String input) throws BuzzException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kaixiangg"},"content":"        // Split the input into command and argument","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kaixiangg"},"content":"        String[] parts \u003d input.split(\" \", 2);  // Split into 2 parts: command and the rest","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kaixiangg"},"content":"        String command \u003d parts[0].toLowerCase();  // Extract the command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kaixiangg"},"content":"        String argument;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kaixiangg"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kaixiangg"},"content":"            argument \u003d parts[1].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kaixiangg"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kaixiangg"},"content":"            argument \u003d \"\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kaixiangg"},"content":"        // Handle the command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kaixiangg"},"content":"        switch (command) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kaixiangg"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kaixiangg"},"content":"            if (argument.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kaixiangg"},"content":"                throw new BuzzException(\"The description of a todo cannot be empty. Try: todo [task]\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kaixiangg"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kaixiangg"},"content":"            addTask(new Todo(argument));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kaixiangg"},"content":"        case \"event\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kaixiangg"},"content":"            printLine(); // Prints a separator line","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kaixiangg"},"content":"            handleEvent(argument);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kaixiangg"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kaixiangg"},"content":"            handleDeadline(argument);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kaixiangg"},"content":"        case \"list\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kaixiangg"},"content":"            listTasks();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kaixiangg"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kaixiangg"},"content":"            markTaskAsDone(argument);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kaixiangg"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kaixiangg"},"content":"            markTaskAsNotDone(argument);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kaixiangg"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kaixiangg"},"content":"            bye();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kaixiangg"},"content":"            System.exit(0);  // Exit the method (and program)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kaixiangg"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kaixiangg"},"content":"            deleteTask(argument);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kaixiangg"},"content":"        case \"reset\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kaixiangg"},"content":"            resetTasks();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kaixiangg"},"content":"            printLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kaixiangg"},"content":"            break;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kaixiangg"},"content":"        default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"I don\u0027t recognize that command! Try \u0027list\u0027, \u0027todo [task]\u0027, \u0027event [task] from [start] to [end]\u0027, \u0027deadline [task] by [date]\u0027, or \u0027delete [task number]\u0027.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kaixiangg"},"content":"    public static void echo(String input) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kaixiangg"},"content":"        System.out.println(\"Buzz: \" + input);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kaixiangg"},"content":"    public static void greet() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kaixiangg"},"content":"        System.out.println(\"Buzz: Hey there! I\u0027m Buzz... not Buzz Lightyear, okay? I\u0027m the REAL Buzz from Brawl Stars! \\uD83D\\uDC1D\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kaixiangg"},"content":"        System.out.println(\"Buzz: I\u0027m here to chat, drop some knowledge, and maybe flex my brawler skills.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kaixiangg"},"content":"        System.out.println();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kaixiangg"},"content":"    public static void printLine() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kaixiangg"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kaixiangg"},"content":"    public static void bye() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kaixiangg"},"content":"        System.out.println(\"Buzz: Alright back to Brawl Stars :] byebye!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kaixiangg"},"content":"    //Using Polymorphism to add different types of tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kaixiangg"},"content":"    public static void addTask(Task task) throws BuzzException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kaixiangg"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"Invalid task! Something went wrong while adding it.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kaixiangg"},"content":"        tasks.add(task); //  Add to in-memory list","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kaixiangg"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kaixiangg"},"content":"            Storage.appendTaskToStorage(task); //  Save to file","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Added: \" + task + NEW_LINE + SPACE + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(SPACE + \"✅ Task saved successfully to storage!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kaixiangg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Couldn\u0027t save task! \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kaixiangg"},"content":"    /*Reworked listTasks method to use the toString method in the Task class","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kaixiangg"},"content":"    Just call tasks[i-1] instead of tasks[i-1].getDescription()","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kaixiangg"},"content":"    System.out.println() will implicitly invoke the toString method","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kaixiangg"},"content":"    If task and its subclasses have a toString method, it will be called, and the correctly formatted output will be printed*/","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kaixiangg"},"content":"    public static void listTasks() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kaixiangg"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: You have no tasks in your list.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kaixiangg"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Here are the tasks in your list:\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kaixiangg"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i +\u003d 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kaixiangg"},"content":"                System.out.println((i) + \". \" + tasks.get(i - INDEX_OFFSET));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kaixiangg"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kaixiangg"},"content":"    //Added Features","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kaixiangg"},"content":"    public static void markTaskAsDone(String taskNumberStr) throws BuzzException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kaixiangg"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kaixiangg"},"content":"            int taskNumber \u003d Integer.parseInt(taskNumberStr) - 1; // Convert to 0-based index","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kaixiangg"},"content":"            if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kaixiangg"},"content":"                tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kaixiangg"},"content":"                Storage.saveTasks(tasks); //  Directly call Storage to save all tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(\"Buzz: I\u0027ve marked this task as done, 1 less task to playing Brawl Stars!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(tasks.get(taskNumber)); //Reworked to use the toString method in the Task class, as well as overriding \"toString()\" of subclasses","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kaixiangg"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kaixiangg"},"content":"                throw new BuzzException(\"Invalid task number! Enter a number between 1 and \" + tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kaixiangg"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kaixiangg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kaixiangg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Couldn\u0027t save changes! \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kaixiangg"},"content":"    public static void markTaskAsNotDone(String taskNumberStr) throws BuzzException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kaixiangg"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kaixiangg"},"content":"            int taskNumber \u003d Integer.parseInt(taskNumberStr) - 1; // Convert to 0-based index","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kaixiangg"},"content":"            if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kaixiangg"},"content":"                tasks.get(taskNumber).markAsUndone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kaixiangg"},"content":"                Storage.saveTasks(tasks); //  Directly call Storage to save all tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(\"Buzz: OK, I\u0027ve unmarked this task, ugh I guess u better do it now.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(tasks.get(taskNumber)); //Reworked to use the toString method in the Task class, as well as overriding \"toString()\" of subclasses","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kaixiangg"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kaixiangg"},"content":"                throw new BuzzException(\"Invalid task number! Enter a number between 1 and \" + tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kaixiangg"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kaixiangg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kaixiangg"},"content":"            //Catch block to handle NumberFormatException","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kaixiangg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Couldn\u0027t save changes! \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kaixiangg"},"content":"    public static void handleEvent(String argument) throws BuzzException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kaixiangg"},"content":"        // Splitting the argument to extract the event description and time details","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kaixiangg"},"content":"        String[] eventDetails \u003d argument.split(\" from \", 2);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kaixiangg"},"content":"        if (eventDetails.length \u003c 2) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"Invalid event format! Use: event [description] from [start time] to [end time]\" + NEW_LINE);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kaixiangg"},"content":"        String[] eventTimeRange \u003d eventDetails[1].split(\" to \", 2);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kaixiangg"},"content":"        if (eventTimeRange.length \u003c 2) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"Invalid event format! Missing \u0027to [end time]\u0027. Example: event Meeting from 2PM to 4PM\" + NEW_LINE);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kaixiangg"},"content":"        String eventDescription \u003d eventDetails[0];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kaixiangg"},"content":"        String startTime \u003d eventTimeRange[0];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kaixiangg"},"content":"        String endTime \u003d eventTimeRange[1];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kaixiangg"},"content":"        addTask(new Event(eventDescription, startTime, endTime));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kaixiangg"},"content":"    public static void handleDeadline(String argument) throws BuzzException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"kaixiangg"},"content":"        // Splitting the argument to extract the task description and due date","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kaixiangg"},"content":"        String[] deadlineDetails \u003d argument.split(\" by \", 2);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kaixiangg"},"content":"        if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"Invalid deadline format! Use: deadline [description] by [due date]. Example: deadline Homework by Friday\" + NEW_LINE);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kaixiangg"},"content":"        String taskDescription \u003d deadlineDetails[0];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kaixiangg"},"content":"        String dueDate \u003d deadlineDetails[1];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kaixiangg"},"content":"        addTask(new Deadline(taskDescription, dueDate));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kaixiangg"},"content":"    public static void deleteTask(String taskNumberStr) throws BuzzException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kaixiangg"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kaixiangg"},"content":"            int taskNumber \u003d Integer.parseInt(taskNumberStr) - 1; // Convert to 0-based index","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kaixiangg"},"content":"            if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kaixiangg"},"content":"                Task removedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kaixiangg"},"content":"                Storage.saveTasks(tasks); //  Directly call Storage to save all tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(\"Buzz: Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(\"      \" + removedTask);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kaixiangg"},"content":"                System.out.println(\"      Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kaixiangg"},"content":"            } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kaixiangg"},"content":"                throw new BuzzException(\"Invalid task number! Enter a number between 1 and \" + tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kaixiangg"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"kaixiangg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"kaixiangg"},"content":"            throw new BuzzException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kaixiangg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Couldn\u0027t save changes! \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"kaixiangg"},"content":"    public static void resetTasks() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"kaixiangg"},"content":"        System.out.println(\"⚠️ WARNING: This will delete ALL your tasks permanently!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"kaixiangg"},"content":"        System.out.print(\"Type \u0027BUZZ\u0027 to proceed, or anything else to cancel: \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"kaixiangg"},"content":"        String confirmation \u003d scanner.nextLine().trim(); // Read user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"kaixiangg"},"content":"        if (!confirmation.equalsIgnoreCase(\"BUZZ\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Reset cancelled. Your tasks are safe. ✅\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"kaixiangg"},"content":"            return; // Exit method without resetting","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"kaixiangg"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"kaixiangg"},"content":"            tasks.clear(); //  Clear in-memory list","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"kaixiangg"},"content":"            Storage.clearStorage(); //  Directly call Storage to clear the file","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: All tasks have been reset. 🚀\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"kaixiangg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"kaixiangg"},"content":"            System.out.println(\"Buzz: Couldn\u0027t reset tasks! \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"kaixiangg"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"kaixiangg":296}},{"path":"src/main/java/buzz/BuzzException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"package buzz;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kaixiangg"},"content":"public class BuzzException extends Exception {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kaixiangg"},"content":"    public BuzzException(String message) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kaixiangg"},"content":"        super(\"Buzz: ZZZ... \" + message);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kaixiangg"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"kaixiangg":7}},{"path":"src/main/java/buzz/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"package buzz;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Todo;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Deadline;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kaixiangg"},"content":"import buzz.features.Event;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kaixiangg"},"content":"import java.io.*;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kaixiangg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kaixiangg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kaixiangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kaixiangg"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kaixiangg"},"content":"public class Storage {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kaixiangg"},"content":"    private static final String FILE_PATH \u003d \"./data/buzz.txt\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kaixiangg"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kaixiangg"},"content":"     * Ensures that the storage file and its parent directory exist.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kaixiangg"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kaixiangg"},"content":"    protected static void createStorage() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kaixiangg"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kaixiangg"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kaixiangg"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kaixiangg"},"content":"            parentDir.mkdirs(); // Create \"data\" directory if missing","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kaixiangg"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kaixiangg"},"content":"            file.createNewFile(); // Create \"duke.txt\" if missing","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kaixiangg"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kaixiangg"},"content":"     * Appends a single task to storage (without overwriting existing content).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kaixiangg"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kaixiangg"},"content":"    public static void appendTaskToStorage(Task task) throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kaixiangg"},"content":"        createStorage(); // Ensure storage exists before appending","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kaixiangg"},"content":"        FileWriter writer \u003d new FileWriter(FILE_PATH, true); // Append mode","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kaixiangg"},"content":"        writer.write(taskToFileFormat(task) + System.lineSeparator());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kaixiangg"},"content":"        writer.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kaixiangg"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kaixiangg"},"content":"     * Saves all tasks to storage (overwrites existing content).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kaixiangg"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kaixiangg"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kaixiangg"},"content":"//        createStorage(); // Ensure storage exists before writing","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kaixiangg"},"content":"        FileWriter writer \u003d new FileWriter(FILE_PATH); // Overwrite mode","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kaixiangg"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kaixiangg"},"content":"            writer.write(taskToFileFormat(task) + System.lineSeparator());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kaixiangg"},"content":"        writer.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kaixiangg"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kaixiangg"},"content":"     * Loads tasks from storage.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kaixiangg"},"content":"     * Returns an ArrayList of Task objects.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kaixiangg"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kaixiangg"},"content":"    //When the program starts, Storage.loadTasks() is called and read each line from the file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kaixiangg"},"content":"    //Then calls parseTask() to convert the line into a Task object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kaixiangg"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kaixiangg"},"content":"        createStorage(); // Ensure storage exists before reading","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kaixiangg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kaixiangg"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kaixiangg"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kaixiangg"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kaixiangg"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kaixiangg"},"content":"            Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kaixiangg"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kaixiangg"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kaixiangg"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kaixiangg"},"content":"        scanner.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kaixiangg"},"content":"        return tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kaixiangg"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kaixiangg"},"content":"     * Clears all tasks from storage, effectively restarting the to-do list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kaixiangg"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kaixiangg"},"content":"    public static void clearStorage() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kaixiangg"},"content":"        createStorage(); // Ensure storage exists before clearing","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kaixiangg"},"content":"        new FileWriter(FILE_PATH, false).close(); // Truncate file (erase contents)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kaixiangg"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kaixiangg"},"content":"     * Converts a Task object to a formatted string for file storage.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kaixiangg"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kaixiangg"},"content":"    private static String taskToFileFormat(Task task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kaixiangg"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kaixiangg"},"content":"            return \"T | \" + (task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kaixiangg"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kaixiangg"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kaixiangg"},"content":"            return \"D | \" + (d.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + d.getDescription() + \" | \" + d.by;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kaixiangg"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kaixiangg"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kaixiangg"},"content":"            return \"E | \" + (e.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + e.getDescription() + \" | \" + e.from + \" | \" + e.to;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kaixiangg"},"content":"        return \"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kaixiangg"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kaixiangg"},"content":"     * Parses a line from the file and converts it into a Task object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kaixiangg"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kaixiangg"},"content":"    private static Task parseTask(String line) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kaixiangg"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kaixiangg"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kaixiangg"},"content":"            return null; // Skip invalid lines","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kaixiangg"},"content":"        //Extracting Task Information","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kaixiangg"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kaixiangg"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kaixiangg"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kaixiangg"},"content":"        switch (type) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kaixiangg"},"content":"        case \"T\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kaixiangg"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kaixiangg"},"content":"            if (isDone) todo.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kaixiangg"},"content":"            return todo;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kaixiangg"},"content":"        case \"D\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kaixiangg"},"content":"            if (parts.length \u003c 4) return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kaixiangg"},"content":"            Deadline deadline \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kaixiangg"},"content":"            if (isDone) deadline.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kaixiangg"},"content":"            return deadline;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kaixiangg"},"content":"        case \"E\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kaixiangg"},"content":"            if (parts.length \u003c 5) return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kaixiangg"},"content":"            Event event \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kaixiangg"},"content":"            if (isDone) event.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kaixiangg"},"content":"            return event;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kaixiangg"},"content":"        default:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kaixiangg"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kaixiangg"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kaixiangg"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"kaixiangg":137}},{"path":"src/main/java/buzz/features/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"package buzz.features;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kaixiangg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kaixiangg"},"content":"    public String by;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kaixiangg"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kaixiangg"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kaixiangg"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kaixiangg"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kaixiangg"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kaixiangg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kaixiangg"},"content":"    //The super.toString() method will write whatever that is in the System.out.println in the listTasks() method in Buzz.java","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kaixiangg"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"kaixiangg":18}},{"path":"src/main/java/buzz/features/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"package buzz.features;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kaixiangg"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kaixiangg"},"content":"    public String from;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kaixiangg"},"content":"    public String to;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kaixiangg"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kaixiangg"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kaixiangg"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kaixiangg"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kaixiangg"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kaixiangg"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kaixiangg"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kaixiangg"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"kaixiangg":17}},{"path":"src/main/java/buzz/features/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"package buzz.features;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kaixiangg"},"content":"public class Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kaixiangg"},"content":"    protected String description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kaixiangg"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kaixiangg"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kaixiangg"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kaixiangg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kaixiangg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kaixiangg"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kaixiangg"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kaixiangg"},"content":"        return this.description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kaixiangg"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kaixiangg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kaixiangg"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kaixiangg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kaixiangg"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kaixiangg"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kaixiangg"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kaixiangg"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"kaixiangg":32}},{"path":"src/main/java/buzz/features/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangg"},"content":"package buzz.features;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kaixiangg"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kaixiangg"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kaixiangg"},"content":"        super(description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kaixiangg"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kaixiangg"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kaixiangg"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kaixiangg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kaixiangg"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kaixiangg"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"kaixiangg":12}}]
