[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"# Planit project template","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"1. After that, locate the `src/main/java/Planit.java` file, right-click it, and choose `Run Planit.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"   +------------------------------------------------------------+","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"   |       _______   __                      __    __           |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"   |      /       \\ /  |                    /  |  /  |          |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"   |      $$$$$$$  |$$ |  ______   _______  $$/  _$$ |_         |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"   |      $$ |__$$ |$$ | /      \\ /       \\ /  |/ $$   |        |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"   |      $$    $$/ $$ | $$$$$$  |$$$$$$$  |$$ |$$$$$$/         |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"   |      $$$$$$$/  $$ | /    $$ |$$ |  $$ |$$ |  $$ | __       |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"   |      $$ |      $$ |/$$$$$$$ |$$ |  $$ |$$ |  $$ |/  |      |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"   |      $$ |      $$ |$$    $$ |$$ |  $$ |$$ |  $$  $$/       |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"   |      $$/       $$/  $$$$$$$/ $$/   $$/ $$/    $$$$/        |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"   |                                                            |","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"   +------------------------------------------------------------+","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"          Welcome to Planit, task management system!","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":16,"-":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"# Planit User Guide","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":1,"-":29}},{"path":"src/main/java/planit/Planit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskManager;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Echo;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"public class Planit {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"     * Gets input from user regarding available choices.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"        Ui.showPlanitWelcomeMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"        boolean exitPlanit \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"        while (!exitPlanit) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showPlanitUserGuide();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"            String userChoice \u003d Ui.getUserInput();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"            if (userChoice.equalsIgnoreCase(\"planit\") || userChoice.equals(\"1\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"                taskManager.run();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"            } else if (userChoice.equalsIgnoreCase(\"play\") || userChoice.equals(\"2\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"                Echo.echo();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"            } else if (userChoice.equalsIgnoreCase(\"bye\") || userChoice.equals(\"3\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"                exitPlanit \u003d true;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"            } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showError(PlanitMessages.PLANIT_INVALID_OPTION);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"        Ui.exitProgram();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":36}},{"path":"src/main/java/planit/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Deadline;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":" * Handles addition of a deadline task to list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"            Format: deadline \u003ctask description\u003e /by \u003ctask deadline\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"            Example: deadline submit quiz /by Fri","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            This will add task [D][ ] submit quiz (by: Friday)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Adds a new deadline task to your list\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\", \"/by\"};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"     * Deadline task requires a description and a deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]) \u0026\u0026 parameters.containsKey(COMMAND_KEYWORDS[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"     * Adds a new deadline task to list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        String deadline \u003d parameters.get(COMMAND_KEYWORDS[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        tasks.addTask(\"deadline\", new Deadline(description, deadline));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":49}},{"path":"src/main/java/planit/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Event;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":" * Handles addition of an event task to list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"            Format: event \u003ctask description\u003e /from \u003ctask start time\u003e /to \u003ctask end time\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"            Example: event attend CS2113 lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            This will add task [E][ ] attend CS2113 lecture (from: Friday 4pm, to: 6pm)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Adds a new event task to your list\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\", \"/from\", \"/to\"};","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"     * Event task requires a description, a start time and an end time.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]) \u0026\u0026","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[1]) \u0026\u0026","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[2]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     * Adds a new event task to list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        String startTime \u003d parameters.get(COMMAND_KEYWORDS[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"        String endTime \u003d parameters.get(COMMAND_KEYWORDS[2]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"        tasks.addTask(\"event\", new Event(description, startTime, endTime));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":53}},{"path":"src/main/java/planit/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Todo;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":" * Handles addition of a todo task to list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"            Format: todo \u003ctask description\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"            Example: todo prepare for CS2113","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            This will add task [T][ ] prepare for CS2113 to your list of tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Adds a new todo task to your list\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\"};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"     * Todo task requires only one argument describing the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"     * Adds a new todo task to list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        tasks.addTask(\"todo\", new Todo(description));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":48}},{"path":"src/main/java/planit/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":" * Exits planit task management session.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            Format: bye","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"            NOTE: Exit command takes in no arguments","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            Example: bye","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Exits planit task management session\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     * To exit planit task management session, no arguments is required.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     * Exits planit task management session and saves tasks to file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"            tasks.saveTasks();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.TASK_SAVE_SUCCESS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.TASK_SAVE_FAILURE);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"        Ui.showTaskManagerExitMessage();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"        isExit \u003d true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":59}},{"path":"src/main/java/planit/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":" * Abstract class to store command properties.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    public boolean isExit \u003d false;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"     * Static data structure that relates command in string representation to","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     * its respective command class.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    public static HashMap\u003cString, Class\u003c? extends Command\u003e\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"    static {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"help\", HelpCommand.class);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"list\", ListCommand.class);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"find\", FindCommand.class);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"todo\", AddTodoCommand.class);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"deadline\", AddDeadlineCommand.class);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"event\", AddEventCommand.class);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"mark\", MarkCommand.class);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"unmark\", UnmarkCommand.class);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"delete\", DeleteCommand.class);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"date\", DateCommand.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"        commands.put(\"bye\", ByeCommand.class);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     * Returns Command object of input string command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"     * @param commandType String representation of command entered by user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"     * @return Command object of string representation.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"    public static Command getCommand(String commandType) throws Exception {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        Class\u003c? extends Command\u003e commandClass \u003d commands.get(commandType);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        if (commandClass !\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"            return commandClass.getDeclaredConstructor().newInstance();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"        return null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"    /** Key-value pairs of arguments entered by user. */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"    protected HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"    public void setParameters(HashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"    protected abstract boolean isValidParameters();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"     * Implementation varies according to the command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"    public abstract void execute(TaskList tasks) throws InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":74}},{"path":"src/main/java/planit/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"public enum CommandType {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"    HELP,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"    LIST, FIND,","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"    TODO, DEADLINE, EVENT,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"    MARK, UNMARK,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"    DELETE,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"    DATE,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"    BYE","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":11}},{"path":"src/main/java/planit/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.handler.DateParser;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":" * Handles displaying tasks on a specific date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"date\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            Format: date \u003cdate\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            Example: date 2025-11-02","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"            This will display all the tasks on the specified date","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Displays tasks on a specific date.\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d { \"/on\" };","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * Date command requires only one argument describing the date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     * Displays tasks on a specific date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        LocalDateTime date \u003d DateParser.parseDateTime(parameters.get(COMMAND_KEYWORDS[0]));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        String dateString \u003d DateParser.toFileFormat(date);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"        tasks.displayTasksOnDate(dateString);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":51}},{"path":"src/main/java/planit/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.EmptyCommandException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.handler.Parser;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":" * Deletes a task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            Format: delete \u003ctask type\u003e\u003ctask index\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            NOTE: task type can only be (t, d, e)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"            Example: delete td1 - deletes the first deadline task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Deletes the specified task\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\"};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * To delete a task, only the task type and index is required.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     * Deletes a task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"            String[] result \u003d Parser.validateIndex(description, tasks.taskCount);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"            String taskType \u003d result[0];","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"            int taskIndex \u003d Integer.parseInt(result[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"            tasks.deleteTask(taskType, taskIndex - 1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(String.format(PlanitMessages.DELETE_TASK_FAILURE, e.getMessage()));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":57}},{"path":"src/main/java/planit/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"            Format: find \u003ckeyword\u003e","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"            Example: find cs2113 - finds tasks that contain the keyword \u0027cs2113\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Finds tasks that contain the keyword\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\"};","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"     * To delete a task, only the task type and index is required.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"     * Finds tasks that contain the keyword.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"        String keyword \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"        tasks.displayTasksWithKeyword(keyword);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":43}},{"path":"src/main/java/planit/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Deadline;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":" * Displays command guide to user.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"            Format: help [command]","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            NOTE: command is an optional argument","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            Example: help - will display the guide for all commands","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"                     help todo - will display the guide only for todo command","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Displays guide for commands\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\"};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * Help command requires 0 or 1 argument.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.isEmpty() || (parameters.size() \u003d\u003d 1 \u0026\u0026 parameters.containsKey(COMMAND_KEYWORDS[0]));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     * Displays command guidelines.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"            for (Class\u003c? extends Command\u003e commandClass : commands.values()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"                try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"                    String[] commandMessage \u003d (String[]) commandClass.getDeclaredField(\"COMMAND_MESSAGE\").get(null);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"                    Ui.showToUser(commandMessage);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"                } catch (IllegalAccessException | NoSuchFieldException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"                    Ui.showToUser(\"Help information not available for: \" + commandClass.getSimpleName());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"            Class\u003c? extends Command\u003e commandClass \u003d commands.get(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"            if (commandClass \u003d\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"                throw new InvalidArgumentException(\"Unknown command: \" + description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"            try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"                String[] commandHelp \u003d (String[]) commandClass.getDeclaredField(\"COMMAND_MESSAGE\").get(null);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showToUser(commandHelp);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"            } catch (NoSuchFieldException | IllegalAccessException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showToUser(\"Help information not available for: \" + description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":69}},{"path":"src/main/java/planit/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":" * Displays the list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"            Format: list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"            NOTE: List takes in no arguments","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"            Example: list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Displays all tasks in the list\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     * To display list of all tasks, no arguments is required.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"     * Displays all tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"        tasks.displayAllTasks();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":45}},{"path":"src/main/java/planit/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.Planit;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.EmptyCommandException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.handler.Parser;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":" * Marks a task as done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"            Format: mark \u003ctask type\u003e\u003ctask index\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            NOTE: task type can only be (t, d, e)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"            Example: mark td1 - marks the first deadline task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Marks the specified task as done\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\"};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     * To mark a task, only the task type and index is required.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"            String[] result \u003d Parser.validateIndex(description, tasks.taskCount);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"            String taskType \u003d result[0];","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"            int taskIndex \u003d Integer.parseInt(result[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"            if (tasks.getTask(taskType, taskIndex).isDone()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showWarning(PlanitMessages.MARK_TASK_REPEAT);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"            } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showToUser(PlanitMessages.MARK_TASK_SUCCESS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"                tasks.setTaskStatus(taskType, taskIndex - 1, true);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":65}},{"path":"src/main/java/planit/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.EmptyCommandException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.handler.Parser;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":" * Marks a task as not done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            Format: unmark \u003ctask type\u003e\u003ctask index\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"            NOTE: task type can only be (t, d, e)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            Example: unmark td1 - unmarks the first deadline task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_DESC \u003d \"Marks the specified task as not done\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_KEYWORDS \u003d {\"description\"};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    public static final String[] COMMAND_MESSAGE \u003d {COMMAND_WORD + \": \" + COMMAND_DESC, COMMAND_FORMAT};","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if supplied arguments are valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     * To unmark a task, only the task type and index is required.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     * @return True if valid, False otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isValidParameters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"        return parameters.size() \u003d\u003d COMMAND_KEYWORDS.length \u0026\u0026","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"                parameters.containsKey(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If supplied arguments is not valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"    public void execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"        if (!isValidParameters()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(PlanitExceptionMessages.WRONG_ARGUMENTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parameters.get(COMMAND_KEYWORDS[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"            String[] result \u003d Parser.validateIndex(description, tasks.taskCount);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"            String taskType \u003d result[0];","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"            int taskIndex \u003d Integer.parseInt(result[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"            if (tasks.getTask(taskType, taskIndex).isDone()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showWarning(PlanitMessages.UNMARK_TASK_REPEAT);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"            } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showToUser(PlanitMessages.UNMARK_TASK_SUCCESS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"                tasks.setTaskStatus(taskType, taskIndex - 1, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":64}},{"path":"src/main/java/planit/exceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.exceptions;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":" * Thrown to indicate that a method has been passed an incomplete argument.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"public class EmptyCommandException extends Exception {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"     * Constructs an {@code EmptyCommandException} with the specified detail message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"     * @param message the detail message (which is saved for later retrieval","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"     * by the {@link Throwable#getMessage()} method).","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public EmptyCommandException(String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"        super(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":16}},{"path":"src/main/java/planit/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.exceptions;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":" * Thrown to indicate that user has entered invalid arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"     * Constructs an {@code InvalidArgumentException} with the specified detail message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"     * @param message the detail message (which is saved for later retrieval","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"     * by the {@link Throwable#getMessage()} method).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"        super(message);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":16}},{"path":"src/main/java/planit/handler/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.handler;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import java.util.List;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":" * Parses date and time from user input.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"public class DateParser {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    private static final DateTimeFormatter DATE_OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    private static final DateTimeFormatter DATE_TIME_OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy[ h:mm a]\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_TIME_INPUT_FORMATTER \u003d List.of(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy\"),","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d\"),","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy[ H:mm]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy[ h:mm a]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d[ H:mm]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d[ h:mm a]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d[ H:mm]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d[ h:mm a]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy[ H:mm]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy[ h:mm a]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy[ H:mm]\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy[ h:mm a]\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"    );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     * Parses date and time from user input.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"     * @param input User input.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"     * @return Parsed date and time.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"        LocalDateTime parsedDateTime \u003d null;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"        for (DateTimeFormatter formatter : DATE_TIME_INPUT_FORMATTER) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"            try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"                parsedDateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"                break;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"                try {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"                    LocalDate parsedDate \u003d LocalDate.parse(input, formatter);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"                    parsedDateTime \u003d parsedDate.atStartOfDay();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"                    break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"                } catch (Exception ignored) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"                    // Continue to next formatter","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"        return parsedDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"     * Converts date and time to a format that is suitable for storage.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"     * @param dateTime Date and time to be converted.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"     * @return Date and time in file format.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"    public static String toFileFormat(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0 \u0026\u0026 dateTime.getSecond() \u003d\u003d 0 \u0026\u0026 dateTime.getNano() \u003d\u003d 0) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"            return dateTime.format(DATE_OUTPUT_FORMATTER);  // Only format date","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"        } else {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"            return dateTime.format(DATE_TIME_OUTPUT_FORMATTER);  // Format date and time","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":73}},{"path":"src/main/java/planit/handler/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.handler;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.command.Command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.EmptyCommandException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":" * Parses uses input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"public class Parser {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"     * Parses user input string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"     * @param userInputString Input entered by user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"     * @return Command object of command entered by user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If arguments entered by user is invalid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    public Command parse(String userInputString) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"        String[] commandTypeAndParams \u003d Ui.splitCommandWordAndArgs(userInputString);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"        String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"        String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"        Command command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"            command \u003d Command.getCommand(commandType.toLowerCase());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(String.format(PlanitExceptionMessages.INVALID_COMMAND, commandType));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(String.format(PlanitExceptionMessages.INVALID_COMMAND, commandType));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"        parseKeyValuePairs(command, commandArgs);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"        return command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"     * Parses user input string and extract key value pairs from it.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"     * Keys are preceded using \"/\".","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"     * @param command Command object entered by user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"     * @param input User input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"     * @throws InvalidArgumentException If key-value pairs cannot be extracted.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"    private void parseKeyValuePairs(Command command, String input) throws InvalidArgumentException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"        HashMap\u003cString, String\u003e keyValueMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"            return;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"        String[] parts \u003d input.trim().split(\"/\", 2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"        if (!description.isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"            keyValueMap.put(\"description\", description);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"            command.setParameters(keyValueMap);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"            return;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"        String keyValuePart \u003d \"/\" + parts[1];","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"        String regex \u003d \"(/\\\\w+)\\\\s+(.*?)(?\u003d\\\\s+/|$)\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"        Matcher matcher \u003d pattern.matcher(keyValuePart);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"        while (matcher.find()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"            String key \u003d matcher.group(1).trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"            String value \u003d matcher.group(2).trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"roshnidaksha"},"content":"            if (value.contains(\"/\") \u0026\u0026 !key.equals(\"/by\") \u0026\u0026 !key.equals(\"/from\") \u0026\u0026 !key.equals(\"/to\")) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"roshnidaksha"},"content":"                throw new InvalidArgumentException(PlanitExceptionMessages.ILLEGAL_TASK_INPUT);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"roshnidaksha"},"content":"            keyValueMap.put(key, value);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"roshnidaksha"},"content":"        String unmatched \u003d matcher.replaceAll(\"\").trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"roshnidaksha"},"content":"        if (!unmatched.isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(String.format(PlanitExceptionMessages.MISSING_TASK_INPUT, unmatched));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"roshnidaksha"},"content":"        command.setParameters(keyValueMap);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"roshnidaksha"},"content":"     * Checks if index entered by user is valid and return the task type and index.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"roshnidaksha"},"content":"     * Index format is \u003ctask type\u003e\u003ctask index\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"roshnidaksha"},"content":"     * @param index Index of task entered by user.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"roshnidaksha"},"content":"     * @param taskCount Number of tasks currently stored.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"roshnidaksha"},"content":"     * @return Task type and task index as string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"roshnidaksha"},"content":"     * @throws EmptyCommandException If index of task is missing or invalid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"roshnidaksha"},"content":"    public static String[] validateIndex(String index, int taskCount) throws EmptyCommandException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"roshnidaksha"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"roshnidaksha"},"content":"            throw new EmptyCommandException(PlanitExceptionMessages.MISSING_TASK_INDEX);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"roshnidaksha"},"content":"            String taskType \u003d index.substring(0, 1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"roshnidaksha"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"roshnidaksha"},"content":"            case \"t\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"roshnidaksha"},"content":"                taskType \u003d \"todo\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"roshnidaksha"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"roshnidaksha"},"content":"            case \"d\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"roshnidaksha"},"content":"                taskType \u003d \"deadline\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"roshnidaksha"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"roshnidaksha"},"content":"            case \"e\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"roshnidaksha"},"content":"                taskType \u003d \"event\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"roshnidaksha"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"roshnidaksha"},"content":"            default:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"roshnidaksha"},"content":"                throw new IllegalArgumentException(PlanitExceptionMessages.MISSING_TASK_TYPE);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"roshnidaksha"},"content":"            int taskId \u003d Integer.parseInt(index.substring(1));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"roshnidaksha"},"content":"            if (taskId \u003c 1 || taskId \u003e taskCount) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"roshnidaksha"},"content":"                throw new IndexOutOfBoundsException(String.format(PlanitExceptionMessages.INDEX_OUT_OF_BOUNDS, index));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"roshnidaksha"},"content":"            return new String[] {taskType, String.valueOf(taskId)};","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"roshnidaksha"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"roshnidaksha"},"content":"            throw new IllegalArgumentException(PlanitExceptionMessages.INVALID_INDEX);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":127}},{"path":"src/main/java/planit/messages/PlanitExceptionMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.messages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"public class PlanitExceptionMessages {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"    public static final String INVALID_COMMAND \u003d \"\"\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"            Invalid command: %s","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"            Enter \"help\" to view the list of commands available.\"\"\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"    public static final String ILLEGAL_TASK_INPUT \u003d \"Illegal input: Unexpected \u0027/\u0027 found in value for key\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"    public static final String MISSING_TASK_INPUT \u003d \"Invalid input: key /%s found with no value.\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"    public static final String MISSING_TASK_INDEX \u003d \"Task index is required\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"    public static final String MISSING_TASK_TYPE \u003d \"\"\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"            Invalid or missing task type","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"            Please enter one of the following options:","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"            t (todo), d (deadline), e (event)\"\"\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String INDEX_OUT_OF_BOUNDS \u003d \"Index out of bounds: %s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public static final String INVALID_INDEX \u003d \"Index is not a valid number\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    public static final String WRONG_ARGUMENTS \u003d \"Please provide the correct number of arguments.\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    public static final String INVALID_DATE_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"            Invalid date/time format: %s","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"            Please enter in the format: dd/MM/yyyy HHmm\"\"\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":22}},{"path":"src/main/java/planit/messages/PlanitMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.messages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"public class PlanitMessages {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"    public static final String PLANIT_MESSAGE_WELCOME \u003d \"          Welcome to Planit, task management system!\\n\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"    public static final String PLANIT_MESSAGE_GOODBYE \u003d \"Bye. Have a nice day!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"    public static final String PLANIT_INVALID_OPTION \u003d \"Please enter a valid option!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"    public static final String TASK_MANAGER_MESSAGE_WELCOME \u003d \"Welcome, I am your task manager!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"    public static final String TASK_MANAGER_MESSAGE_GOODBYE \u003d \"Hope you took note of some important tasks! Bye!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_PLANIT_DESC \u003d \"1. Type \\\"planit\\\" or \\\"1\\\" to manage your tasks\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_PLAY_DESC \u003d \"2. Type \\\"play\\\" or \\\"2\\\" to have a break and play games\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    public static final String COMMAND_EXIT_DESC \u003d \"3. Type \\\"bye\\\" or \\\"3\\\" to quit the session\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    public static final String TASK_RETRIEVE_SUCCESS \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tasks retrieved successfully! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public static final String TASK_RETRIEVE_FAILURE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Could not retrieve tasks! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"    public static final String TASK_SAVE_SUCCESS \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tasks Saved successfully! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    public static final String TASK_SAVE_FAILURE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Could not save tasks! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"    public static final String DIVIDER \u003d \"-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e-\u003e\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public static final String ADD_TASK_SUCCESS \u003d \"Successfully added task: %s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    public static final String ADD_TASK_FAILURE \u003d \"Failed to add task: %s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    public static final String DELETE_TASK_SUCCESS \u003d \"Successfully deleted task: %s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"    public static final String DELETE_TASK_FAILURE \u003d \"Failed to delete task: %s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"    public static final String LIST_SUCCESS \u003d \"Here is a list of your tasks:\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"    public static final String LIST_EMPTY \u003d \"Great Job! You have no pending tasks /^v^\\\\\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"    public static final String MARK_TASK_SUCCESS \u003d \"Successfully marked task as done\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"    public static final String MARK_TASK_REPEAT \u003d \"Task already marked as done\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"    public static final String UNMARK_TASK_SUCCESS \u003d \"Successfully marked task as not done\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    public static final String UNMARK_TASK_REPEAT \u003d \"Task already marked as not done\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":32}},{"path":"src/main/java/planit/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.handler.DateParser;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":" * Represents tasks that need to be done before a specific data/time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"     * @param deadline Due date of the deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    public Deadline(String description, String deadline) throws InvalidArgumentException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"        super.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"        super.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"        LocalDateTime parsedDateTime \u003d DateParser.parseDateTime(deadline.trim());","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"        if (parsedDateTime \u003d\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(String.format(PlanitExceptionMessages.INVALID_DATE_FORMAT, deadline));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        this.deadline \u003d parsedDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     * @return Deadline task represented as a string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"                getTaskType(), getStatus(), getDescription(), DateParser.toFileFormat(deadline));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a string representation of the deadline task that","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"     * suitable to be stored in file storage.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"     * @return Deadline task represented in file format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"        return String.format(\"%s | %s | %s | %s\",","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"                getTaskType(), getStatus(), getDescription(), DateParser.toFileFormat(deadline));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"     * Parses a deadline task from string representation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"     * @param input String representation of task stored in file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"     * @return Deadline task object of string representation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"    public static Task parseTask(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"        Pattern pattern \u003d Pattern.compile(\"^D \\\\| (X| ) \\\\| (.+?) \\\\| (.+?)$\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"            return null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"        boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d matcher.group(2).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"        String deadline \u003d matcher.group(3).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"        Deadline deadlineTask;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"roshnidaksha"},"content":"            deadlineTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"roshnidaksha"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"roshnidaksha"},"content":"            return null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"roshnidaksha"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"roshnidaksha"},"content":"            deadlineTask.setDone(true);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"roshnidaksha"},"content":"        return deadlineTask;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"roshnidaksha"},"content":"     * Returns the task type in a single letter.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"roshnidaksha"},"content":"     * @return Type of task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"roshnidaksha"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"roshnidaksha"},"content":"        return \"D\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":97}},{"path":"src/main/java/planit/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.handler.DateParser;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitExceptionMessages;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":" * Represents tasks that start a specific date/time and","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":" * ends at a specific date/time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    private LocalDateTime start;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"    private LocalDateTime end;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"     * Constructs an event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     * @param from Start date/time of the event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"     * @param to End date/time of the event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"    public Event(String description, String from, String to) throws InvalidArgumentException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"        super.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"        super.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"        LocalDateTime parsedStart \u003d DateParser.parseDateTime(from);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        LocalDateTime parsedEnd \u003d DateParser.parseDateTime(to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"        if (parsedStart \u003d\u003d null) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(String.format(PlanitExceptionMessages.INVALID_DATE_FORMAT, from));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"        if (parsedEnd \u003d\u003d null) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"            throw new InvalidArgumentException(String.format(PlanitExceptionMessages.INVALID_DATE_FORMAT, to));","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"        this.start \u003d parsedStart;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"        this.end \u003d parsedEnd;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"     * @return Event task represented as a string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        return String.format(\"[%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"                getTaskType(), getStatus(), getDescription(), DateParser.toFileFormat(start), DateParser.toFileFormat(end));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a string representation of the event task that","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"     * suitable to be stored in file storage.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"     * @return Event task represented in file format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"        return String.format(\"%s | %s | %s | %s -\u003e %s\",","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"                getTaskType(), getStatus(), getDescription(), DateParser.toFileFormat(start), DateParser.toFileFormat(end));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"     * Parses an event task from string representation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"     * @param input String representation of task stored in file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"     * @return Event task object of string representation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"    public static Task parseTask(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"        Pattern pattern \u003d Pattern.compile(\"^E \\\\| (X| ) \\\\| (.+?) \\\\| (.+?) -\u003e (.+)$\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"roshnidaksha"},"content":"            return null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"roshnidaksha"},"content":"        boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d matcher.group(2).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"roshnidaksha"},"content":"        String start \u003d matcher.group(3).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"roshnidaksha"},"content":"        String end \u003d matcher.group(4).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"roshnidaksha"},"content":"        Event eventTask;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"roshnidaksha"},"content":"            eventTask \u003d new Event(description, start, end);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"roshnidaksha"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"roshnidaksha"},"content":"            return null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"roshnidaksha"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"roshnidaksha"},"content":"            eventTask.setDone(true);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"roshnidaksha"},"content":"        return eventTask;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"roshnidaksha"},"content":"     * Returns the task type in a single letter.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"roshnidaksha"},"content":"     * @return Type of task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"roshnidaksha"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"roshnidaksha"},"content":"        return \"E\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":106}},{"path":"src/main/java/planit/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":" * Represents a task in Planit task management system.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"    protected String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"     * @return Task converted to a string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public abstract String toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a string representation of the event task that","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"     * suitable to be stored in file storage.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a task object from a string.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     * @param input String representation of task stored in file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     * @return Task object of string representation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"    public static Task parseTask(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"        return null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"     * Returns the task type in a single letter.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"    public String getStatus() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        return description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        return isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":54}},{"path":"src/main/java/planit/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    private HashMap\u003cString, ArrayList\u003cTask\u003e\u003e tasksMap;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    private final Storage storage \u003d new Storage(Ui.FILE_PATH);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"     * Number of tasks added by user","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    public int taskCount \u003d 0;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"            loadTasks();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.TASK_RETRIEVE_FAILURE);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showError(e.getMessage() + \u0027\\n\u0027);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"            tasksMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"            tasksMap.put(\"todo\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"            tasksMap.put(\"deadline\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"            tasksMap.put(\"event\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"    public Task getTask(String taskType, int taskIndex) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"        return tasksMap.get(taskType).get(taskIndex);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"        storage.saveTaskList(tasksMap);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    public void loadTasks() throws IOException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d storage.loadTaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        taskCount \u003d allTasks.size();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        tasksMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        tasksMap.put(\"todo\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"        tasksMap.put(\"deadline\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"        tasksMap.put(\"event\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"            String taskType \u003d task.getTaskType();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"            case \"T\":","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"                tasksMap.get(\"todo\").add(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"                break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"            case \"D\":","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"                tasksMap.get(\"deadline\").add(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"                break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"            case \"E\":","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"                tasksMap.get(\"event\").add(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"                break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"     * Adds a task to task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"     * @param task Command entered by user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"    public void addTask(String taskType, Task task) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"        tasksMap.get(taskType).add(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"        taskCount++;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"roshnidaksha"},"content":"        Ui.showToUser(String.format(PlanitMessages.ADD_TASK_SUCCESS, task));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"roshnidaksha"},"content":"     * Deletes a task from task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"roshnidaksha"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"roshnidaksha"},"content":"    public void deleteTask(String taskType, int index) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"roshnidaksha"},"content":"        Ui.showToUser(String.format(PlanitMessages.DELETE_TASK_SUCCESS, tasksMap.get(taskType).get(index)));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"roshnidaksha"},"content":"        tasksMap.get(taskType).remove(index);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"roshnidaksha"},"content":"        taskCount--;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"roshnidaksha"},"content":"     * Displays all tasks in the order in which they were added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"roshnidaksha"},"content":"    public void displayAllTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"roshnidaksha"},"content":"        if (taskCount \u003e 0) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.LIST_SUCCESS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"roshnidaksha"},"content":"            for (String taskType : tasksMap.keySet()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showToUser(taskType + \":\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"roshnidaksha"},"content":"                int length \u003d tasksMap.get(taskType).size();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"roshnidaksha"},"content":"                for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"roshnidaksha"},"content":"                    Ui.showToUser(i + 1 + \". \" + tasksMap.get(taskType).get(i));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"roshnidaksha"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.LIST_EMPTY);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"roshnidaksha"},"content":"    public void displayTasksOnDate(String date) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"roshnidaksha"},"content":"        boolean hasTasks \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"roshnidaksha"},"content":"        for (String taskType : tasksMap.keySet()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"roshnidaksha"},"content":"            if (taskType.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"roshnidaksha"},"content":"                continue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"roshnidaksha"},"content":"            for (Task task : tasksMap.get(taskType)) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"roshnidaksha"},"content":"                if (task.toFileFormat().contains(date)) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"roshnidaksha"},"content":"                    if (!hasTasks) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"roshnidaksha"},"content":"                        Ui.showToUser(PlanitMessages.LIST_SUCCESS);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"roshnidaksha"},"content":"                    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"roshnidaksha"},"content":"                    hasTasks \u003d true;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"roshnidaksha"},"content":"                    Ui.showToUser(task.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"roshnidaksha"},"content":"        if (!hasTasks) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.LIST_EMPTY);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"roshnidaksha"},"content":"     * Displays all tasks that contain the keyword.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"roshnidaksha"},"content":"     * @param keyword Keyword to search for in tasks.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"roshnidaksha"},"content":"    public void displayTasksWithKeyword(String keyword) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"roshnidaksha"},"content":"        boolean hasTasks \u003d false;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"roshnidaksha"},"content":"        for (String taskType : tasksMap.keySet()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"roshnidaksha"},"content":"            for (Task task : tasksMap.get(taskType)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"roshnidaksha"},"content":"                if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"roshnidaksha"},"content":"                    if (!hasTasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"roshnidaksha"},"content":"                        Ui.showToUser(PlanitMessages.LIST_SUCCESS);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"roshnidaksha"},"content":"                        hasTasks \u003d true;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"roshnidaksha"},"content":"                    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"roshnidaksha"},"content":"                    Ui.showToUser(task.toString());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"roshnidaksha"},"content":"        if (!hasTasks) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.LIST_EMPTY);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"roshnidaksha"},"content":"     * Marks a task as done or not done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"roshnidaksha"},"content":"     * @param taskIndex Index of task in taskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"roshnidaksha"},"content":"    public void setTaskStatus(String taskType, int taskIndex, boolean status) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"roshnidaksha"},"content":"        tasksMap.get(taskType).get(taskIndex).setDone(status);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":159}},{"path":"src/main/java/planit/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.command.Command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.handler.Parser;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.util.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":" * Represents a collection of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":" * This class provides methods to manage tasks within a list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"     * Initializes task list of user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    public TaskManager() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"     * Takes in user input and act appropriately.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"    public void run() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"        Ui.showTaskManagerWelcomeMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"            taskList.loadTasks();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showToUser(PlanitMessages.TASK_RETRIEVE_SUCCESS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showError(PlanitMessages.TASK_RETRIEVE_FAILURE);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"            Ui.showError(e.getMessage() + \u0027\\n\u0027);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"        boolean exitTaskManager \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"        while (!exitTaskManager) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"            try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"                String userInputString \u003d Ui.getUserInput();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"                Command c \u003d parser.parse(userInputString);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"                c.execute(taskList);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"                exitTaskManager \u003d c.isExit;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"            } finally {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"                Ui.showToUser(PlanitMessages.DIVIDER);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":52}},{"path":"src/main/java/planit/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":" * Represents tasks without any date/time attached to it.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":" * These tasks need to be done some day.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"     * Constructs a todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"        super.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"        super.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"     * @return Todo task represented as a string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"        return String.format(\"[%s][%s] %s\", getTaskType(), getStatus(), getDescription());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"     * Returns a string representation of the todo task that","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"     * suitable to be stored in file storage.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"     * @return Todo task represented in file format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"        return String.format(\"%s | %s | %s\", getTaskType(), getStatus(), getDescription());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"     * Parses a todo task from string representation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"     * @param input String representation of task stored in file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"     * @return Todo task object of string representation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"    public static Task parseTask(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"        Pattern pattern \u003d Pattern.compile(\"^T \\\\| (X| ) \\\\| (.+?)$\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"            return null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"        boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"        String description \u003d matcher.group(2).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"        Todo todoTask;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"            todoTask \u003d new Todo(description);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"            return null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"            todoTask.setDone(true);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"        return todoTask;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"     * Returns the task type in a single letter.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"roshnidaksha"},"content":"     * @return Type of task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"roshnidaksha"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"roshnidaksha"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"roshnidaksha"},"content":"        return \"T\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":82}},{"path":"src/main/java/planit/util/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.util;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":" * Echoes commands entered by the user until user inputs \"bye\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"public class Echo {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"     * Prints a line for enhanced readability.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"    static void printSeperator() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(\"______________________________________________________________\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    public static void echo() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"        printSeperator();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"        String parrot \u003d \"\"\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"               \\\\\\\\","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"               (o\u003e","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"               //\\\\","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"              _V_/__","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"               ||","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"               ||","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"             \"\"\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(parrot);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(\"Fun choice!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(\"The parrot repeats anything you say (o\u003e ...\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(\"Say \\\"bye\\\" to stop playing\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(\"Have fun /^v^\\\\\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"        boolean exitEchoMode \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"        while (!exitEchoMode) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"                exitEchoMode \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"            System.out.print(\"\\\\\\\\\\n\" + \"(o\u003e \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"            System.out.println(input);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"        printSeperator();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":47}},{"path":"src/main/java/planit/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.util;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Deadline;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Event;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import planit.task.Todo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"import java.io.File;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"public class Storage {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"    private File file;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"     * Constructs a Storage object to save data.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"     * @param filename Name of file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"    public Storage(String filename) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"        file \u003d new File(filename);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"     * Creates a new file for storing tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"     * @throws IOException If unable to create file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"            if (file.getParentFile() !\u003d null \u0026\u0026 !file.getParentFile().exists()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"                if (!file.getParentFile().mkdirs()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"                    throw new IOException(\"Could not create directory: \" + file.getParent());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"                throw new RuntimeException(\"File already exists!\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"            throw new RuntimeException(\"Unable to create file: \" + e.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"     * Saves current list of tasks to a file in a human-readable format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"     * @param tasksMap List of tasks of user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"     * @throws IOException If an error occurs while writing to file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"    public void saveTaskList(HashMap\u003cString, ArrayList\u003cTask\u003e\u003e tasksMap) throws IOException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"            createFile();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"            for (String taskType : tasksMap.keySet()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"                for (Task task : tasksMap.get(taskType)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"                    fileWriter.write(task.toFileFormat());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"                    fileWriter.write(\"\\n\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"            fileWriter.close();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"            throw new IOException(\"Unable to write to file: \" + e.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"     * Reads contents of file and returns a list of Task objects.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"     * @return List of tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"roshnidaksha"},"content":"     * @throws IOException If unable to open or read file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"roshnidaksha"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws IOException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"roshnidaksha"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"roshnidaksha"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"roshnidaksha"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"roshnidaksha"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"roshnidaksha"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"roshnidaksha"},"content":"                Task task \u003d parseTaskString(line);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"roshnidaksha"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"roshnidaksha"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"roshnidaksha"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"roshnidaksha"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"roshnidaksha"},"content":"            scanner.close();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"roshnidaksha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"roshnidaksha"},"content":"            throw new IOException(\"File error: \" + e.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"roshnidaksha"},"content":"        return taskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"roshnidaksha"},"content":"     * Parse a string representation to a task object.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"roshnidaksha"},"content":"     * @param input String representation of task from file.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"roshnidaksha"},"content":"     * @return Task object.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"roshnidaksha"},"content":"    public Task parseTaskString(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"roshnidaksha"},"content":"        Task task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"roshnidaksha"},"content":"        switch (input.charAt(0)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"roshnidaksha"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"roshnidaksha"},"content":"            task \u003d Todo.parseTask(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"roshnidaksha"},"content":"            break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"roshnidaksha"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"roshnidaksha"},"content":"            task \u003d Deadline.parseTask(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"roshnidaksha"},"content":"            break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"roshnidaksha"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"roshnidaksha"},"content":"            task \u003d Event.parseTask(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"roshnidaksha"},"content":"            break;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"roshnidaksha"},"content":"        default:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"roshnidaksha"},"content":"            task \u003d null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"roshnidaksha"},"content":"        return task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":118}},{"path":"src/main/java/planit/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"package planit.util;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"import planit.messages.PlanitMessages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"    public static final String HOME \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"    public static final String FILE_PATH \u003d Paths.get(HOME, \"Planit\", \"data\", \"tasks.txt\").toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"    private static final String PLANIT_LOGO \u003d \"\"\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"            +------------------------------------------------------------+","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"            |       _______   __                      __    __           |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"            |      /       \\\\ /  |                    /  |  /  |          |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"            |      $$$$$$$  |$$ |  ______   _______  $$/  _$$ |_         |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"            |      $$ |__$$ |$$ | /      \\\\ /       \\\\ /  |/ $$   |        |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"roshnidaksha"},"content":"            |      $$    $$/ $$ | $$$$$$  |$$$$$$$  |$$ |$$$$$$/         |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"roshnidaksha"},"content":"            |      $$$$$$$/  $$ | /    $$ |$$ |  $$ |$$ |  $$ | __       |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"roshnidaksha"},"content":"            |      $$ |      $$ |/$$$$$$$ |$$ |  $$ |$$ |  $$ |/  |      |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"roshnidaksha"},"content":"            |      $$ |      $$ |$$    $$ |$$ |  $$ |$$ |  $$  $$/       |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"            |      $$/       $$/  $$$$$$$/ $$/   $$/ $$/    $$$$/        |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"roshnidaksha"},"content":"            |                                                            |","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"roshnidaksha"},"content":"            +------------------------------------------------------------+","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"roshnidaksha"},"content":"    private static final String TASK_MANAGER_LOGO \u003d \"\"\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"roshnidaksha"},"content":"                  ______ ______","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"roshnidaksha"},"content":"                _/      Y      \\\\_","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"roshnidaksha"},"content":"               // ~~ ~~ | ~~ ~  \\\\\\\\","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"roshnidaksha"},"content":"              // ~ ~ ~~ | ~~~ ~~ \\\\\\\\","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"roshnidaksha"},"content":"             //________.|.________\\\\\\\\","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"roshnidaksha"},"content":"            `----------`-\u0027----------\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"roshnidaksha"},"content":"            \"\"\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"roshnidaksha"},"content":"    private static final String ERROR_PREFIX \u003d \"[ERROR] \";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"roshnidaksha"},"content":"    private static final String WARNING_PREFIX \u003d \"[WARNING] \";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"roshnidaksha"},"content":"    public static void showPlanitWelcomeMessage() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(PLANIT_LOGO);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"roshnidaksha"},"content":"        showToUser(PlanitMessages.PLANIT_MESSAGE_WELCOME);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"roshnidaksha"},"content":"    public static void showTaskManagerWelcomeMessage() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(TASK_MANAGER_LOGO);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"roshnidaksha"},"content":"        showToUser(PlanitMessages.TASK_MANAGER_MESSAGE_WELCOME);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"roshnidaksha"},"content":"     * Lists all available commands in Planit.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"roshnidaksha"},"content":"    public static void showPlanitUserGuide() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"roshnidaksha"},"content":"        showToUser(PlanitMessages.DIVIDER,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"roshnidaksha"},"content":"                PlanitMessages.COMMAND_PLANIT_DESC,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"roshnidaksha"},"content":"                PlanitMessages.COMMAND_PLAY_DESC,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"roshnidaksha"},"content":"                PlanitMessages.COMMAND_EXIT_DESC,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"roshnidaksha"},"content":"                PlanitMessages.DIVIDER);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"roshnidaksha"},"content":"     * Displays exit message for task manager.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"roshnidaksha"},"content":"    public static void showTaskManagerExitMessage() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"roshnidaksha"},"content":"        showToUser(PlanitMessages.TASK_MANAGER_MESSAGE_GOODBYE);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"roshnidaksha"},"content":"     * Shows multiple messages to the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"roshnidaksha"},"content":"     * @param message Messages to be shown.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"roshnidaksha"},"content":"    public static void showToUser(String... message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"roshnidaksha"},"content":"        for (String m : message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"roshnidaksha"},"content":"            showToUser(m);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"roshnidaksha"},"content":"     * Shows a single message to user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"roshnidaksha"},"content":"     * @param message Message to be shown.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"roshnidaksha"},"content":"    public static void showToUser(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"roshnidaksha"},"content":"     * Shows an error message to user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"roshnidaksha"},"content":"     * @param message Error message to display.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"roshnidaksha"},"content":"    public static void showError(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(ERROR_PREFIX + message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"roshnidaksha"},"content":"     * Shows a warning message to user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"roshnidaksha"},"content":"     * @param message Warning message to display.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"roshnidaksha"},"content":"    public static void showWarning(String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"roshnidaksha"},"content":"        System.out.println(WARNING_PREFIX + message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"roshnidaksha"},"content":"     * Displays the goodbye message and exits the runtime.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"roshnidaksha"},"content":"    public static void exitProgram() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"roshnidaksha"},"content":"        showToUser(PlanitMessages.PLANIT_MESSAGE_GOODBYE,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"roshnidaksha"},"content":"                PlanitMessages.DIVIDER,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"roshnidaksha"},"content":"                PlanitMessages.DIVIDER);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"roshnidaksha"},"content":"        System.exit(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"roshnidaksha"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"roshnidaksha"},"content":"     * @return Full line entered by the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"roshnidaksha"},"content":"    public static String getUserInput() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"roshnidaksha"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"roshnidaksha"},"content":"        String inputLine \u003d SCANNER.nextLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"roshnidaksha"},"content":"        while (inputLine.trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"roshnidaksha"},"content":"            inputLine \u003d SCANNER.nextLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"roshnidaksha"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"roshnidaksha"},"content":"        return inputLine;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"roshnidaksha"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"roshnidaksha"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"roshnidaksha"},"content":"     * Splits raw user input into command word and command arguments string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"roshnidaksha"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"roshnidaksha"},"content":"     * @param rawUserInput Full line entered by the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"roshnidaksha"},"content":"     * @return size 2 array; first element is the command type and second element is the arguments string","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"roshnidaksha"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"roshnidaksha"},"content":"    public static String[] splitCommandWordAndArgs(String rawUserInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"roshnidaksha"},"content":"        String[] split \u003d rawUserInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"roshnidaksha"},"content":"        return split.length \u003d\u003d 2 ? split : new String[] { split[0], \"\" };","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"roshnidaksha"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"roshnidaksha"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":140}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"roshnidaksha"},"content":"1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"roshnidaksha"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"roshnidaksha"},"content":"todo read book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"roshnidaksha"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"roshnidaksha"},"content":"todo","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"roshnidaksha"},"content":"deadline return book /by Friday","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"roshnidaksha"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"roshnidaksha"},"content":"event study 2113 /from Monday 2pm /to 4pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"roshnidaksha"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"mark 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"roshnidaksha"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"roshnidaksha"},"content":"mark 1","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"roshnidaksha"},"content":"mark 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"roshnidaksha"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"roshnidaksha"},"content":"unmark 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"roshnidaksha"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"roshnidaksha"},"content":"bye","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"3","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"roshnidaksha"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\planit\\*.java ..\\src\\main\\java\\planit\\command\\*.java ..\\src\\main\\java\\planit\\exceptions\\*.java ..\\src\\main\\java\\planit\\handler\\*.java ..\\src\\main\\java\\planit\\messages\\*.java ..\\src\\main\\java\\planit\\task\\*.java ..\\src\\main\\java\\planit\\util\\*.java","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"roshnidaksha"},"content":"java -classpath ..\\bin planit.Planit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"roshnidaksha"},"content":"java -classpath ../bin Planit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"roshnidaksha":1,"-":37}}]
