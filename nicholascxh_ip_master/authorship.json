[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"# Dasani Task Manager","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"Dasani is a personal task management assistant written in Java. It allows users to manage tasks such as ToDos, Deadlines, and Events, mark tasks as done or undone, delete tasks, and save progress. The project follows Object-Oriented Programming principles and is designed for CLI (Command-Line Interface) interaction.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"1. After that, locate the `src/main/java/dasani/Dasani.java` file, right-click it, and choose `Run Dasani.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"nicholascxh":4,"-":15}},{"path":"src/main/java/dasani/Dasani.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Parser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"import dasani.command.Command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":" * Main class for the Dasani chatbot.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":" * Handles initialization, user interactions, and execution loop.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"public class Dasani {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"     * Constructs a Dasani instance.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"     * Initializes UI, storage, and loads tasks from the specified file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"    public Dasani(String filePath) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"        } catch (DasaniException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholascxh"},"content":"     * Runs the chatbot, processing user commands in a loop until exit command is given.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholascxh"},"content":"    public void run() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholascxh"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholascxh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholascxh"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholascxh"},"content":"            try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholascxh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholascxh"},"content":"                ui.showLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholascxh"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholascxh"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholascxh"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholascxh"},"content":"            } catch (DasaniException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholascxh"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholascxh"},"content":"            } finally {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholascxh"},"content":"                ui.showLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholascxh"},"content":"     * The main entry point of the program.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholascxh"},"content":"     * @param args Command line arguments (not used in this implementation).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholascxh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholascxh"},"content":"        new Dasani(\"data/tasks.txt\").run();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"nicholascxh":66}},{"path":"src/main/java/dasani/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Deadline;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Event;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Todo;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":" * Handles adding tasks to the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"    private String type;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    private String description;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"     * Constructs an AddCommand with a task type and description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"     * @param type Type of task (todo, deadline, event).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"     * @param description Task description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"    public AddCommand(String type, String description) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"        switch (type) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"            tasks.addTask(new Todo(description));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"            String[] deadlineParts \u003d description.split(\" /by \", 2);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"            if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholascxh"},"content":"                throw new DasaniException(\"Invalid deadline format. Use: deadline \u003ctask\u003e /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholascxh"},"content":"            tasks.addTask(new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholascxh"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholascxh"},"content":"        case \"event\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholascxh"},"content":"            String[] eventParts \u003d description.split(\" /from | /to \", 3);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholascxh"},"content":"            if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholascxh"},"content":"                throw new DasaniException(\"Invalid event format. Use: event \u003ctask\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholascxh"},"content":"            tasks.addTask(new Event(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim()));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholascxh"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholascxh"},"content":"        default:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"Unknown task type.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholascxh"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":53}},{"path":"src/main/java/dasani/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"        return false;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":13}},{"path":"src/main/java/dasani/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"    private String description;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"        tasks.deleteTask(description);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":20}},{"path":"src/main/java/dasani/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"[Dasani]: Bye! Hope to see you again soon!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"        return true;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":17}},{"path":"src/main/java/dasani/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":" * Handles the find command, which searches for tasks containing a keyword.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"    private String keyword;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"     * Constructs a FindCommand with a search keyword.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"        tasks.findTasks(keyword);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"nicholascxh":25}},{"path":"src/main/java/dasani/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"[Dasani]: Here are the available commands:\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"list\\\" - List all current tasks.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"todo \u003ctask\u003e\\\" - Add a todo task.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"deadline \u003ctask\u003e /by \u003ctime\u003e\\\" - Add a deadline task.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e\\\" - Add an event task.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"mark \u003ctask number\u003e\\\" - Mark a task as done.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"unmark \u003ctask number\u003e\\\" - Unmark a task.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"delete \u003ctask number\u003e\\\" - Delete a task.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"save\\\" - Save all current tasks.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"find\\\" - Find all tasks with specified keyword.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\\\"bye\\\" - Exit the program.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":22}},{"path":"src/main/java/dasani/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"        tasks.displayTasks();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":12}},{"path":"src/main/java/dasani/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"    private String description;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"    private boolean isMark;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"    public MarkCommand(String description, boolean isMark) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"        tasks.markTask(description, isMark);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":22}},{"path":"src/main/java/dasani/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.command;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"[Dasani]: Task list saved!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":13}},{"path":"src/main/java/dasani/exception/DasaniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.exception;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"public class DasaniException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"    public DasaniException(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"        super(message);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"nicholascxh":7}},{"path":"src/main/java/dasani/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.exception;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":" * Exception thrown when an invalid date format is provided for Deadline or Event tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"public class InvalidDateException extends DasaniException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"     * Constructs an InvalidDateException with a default error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"    public InvalidDateException() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"        super(\"Invalid date format! Use: yyyy-MM-dd HHmm (e.g., 2019-12-02 1800)\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"     * Constructs an InvalidDateException with a custom error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"     * @param message Custom error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"        super(message);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"nicholascxh":21}},{"path":"src/main/java/dasani/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"public class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"    protected final String description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"        return description;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"nicholascxh":36}},{"path":"src/main/java/dasani/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Deadline;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Event;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Todo;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"import dasani.util.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"import java.util.List;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":" * Manages a list of tasks, including adding, deleting, marking, and searching tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"public class TaskList {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"    private final Ui ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"     * Constructs a TaskList with pre-loaded tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"     * @param loadedTasks List of tasks loaded from storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"    public TaskList(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(loadedTasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholascxh"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholascxh"},"content":"     * @return List of tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholascxh"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholascxh"},"content":"        return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholascxh"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholascxh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholascxh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholascxh"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"[Dasani]: Added: \\\"\" + task + \"\\\"\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholascxh"},"content":"     * Adds a task based on user input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholascxh"},"content":"     * @param type Type of task (todo, deadline, event).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholascxh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholascxh"},"content":"     * @throws DasaniException If the input format is incorrect.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholascxh"},"content":"    public void addTaskFromCommand(String type, String description) throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholascxh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Task description cannot be empty.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholascxh"},"content":"        switch (type) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholascxh"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholascxh"},"content":"            addTask(new Todo(description));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholascxh"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholascxh"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholascxh"},"content":"            String[] splitDeadline \u003d description.split(\"/by\", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholascxh"},"content":"            if (splitDeadline.length \u003c 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholascxh"},"content":"                throw new DasaniException(\"[Dasani]: Invalid deadline format. Use: deadline \u003ctask\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholascxh"},"content":"            addTask(new Deadline(splitDeadline[0].trim(), splitDeadline[1].trim()));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholascxh"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholascxh"},"content":"        case \"event\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholascxh"},"content":"            String[] splitEvent \u003d description.split(\"/from\", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholascxh"},"content":"            if (splitEvent.length \u003c 2 || !splitEvent[1].contains(\"/to\")) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholascxh"},"content":"                throw new DasaniException(\"[Dasani]: Invalid event format. Use: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholascxh"},"content":"            String[] eventPeriod \u003d splitEvent[1].split(\"/to\", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholascxh"},"content":"            addTask(new Event(splitEvent[0].trim(), eventPeriod[0].trim(), eventPeriod[1].trim()));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholascxh"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholascxh"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Unknown task type.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholascxh"},"content":"     * Deletes a task based on its task number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholascxh"},"content":"     * @param description The task number as a string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholascxh"},"content":"     * @throws DasaniException If the task number is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholascxh"},"content":"    public void deleteTask(String description) throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholascxh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Please provide a task number after \u0027delete\u0027\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholascxh"},"content":"        int taskNumber;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholascxh"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholascxh"},"content":"            taskNumber \u003d Integer.parseInt(description);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholascxh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Please enter a valid task number.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholascxh"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Task number needs to be between 1 and \" + tasks.size());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholascxh"},"content":"        Task removedTask \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"[Dasani]: Deleted: \\\"\" + removedTask + \"\\\"\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholascxh"},"content":"     * Marks or unmarks a task as done.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholascxh"},"content":"     * @param description The task number as a string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholascxh"},"content":"     * @param markAsDone True to mark, false to unmark.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholascxh"},"content":"     * @throws DasaniException If the task number is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholascxh"},"content":"    public void markTask(String description, boolean markAsDone) throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholascxh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Please provide a task number after \u0027mark\u0027.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholascxh"},"content":"        int taskNumber;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholascxh"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholascxh"},"content":"            taskNumber \u003d Integer.parseInt(description);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholascxh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Please enter a valid task number.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholascxh"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"[Dasani]: Task number needs to be between 1 and \" + tasks.size());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholascxh"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholascxh"},"content":"        if (markAsDone) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholascxh"},"content":"            if (task.isDone()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholascxh"},"content":"                System.out.println(\"[Dasani]: Task \" + taskNumber + \" is already marked as done!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholascxh"},"content":"                return;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholascxh"},"content":"            task.markAsDone();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: Marked task as done: \" + task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nicholascxh"},"content":"        } else {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nicholascxh"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nicholascxh"},"content":"                System.out.println(\"[Dasani]: Task \" + taskNumber + \" is already unmarked!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nicholascxh"},"content":"                return;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nicholascxh"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: Unmarked task: \" + task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nicholascxh"},"content":"     * Searches for tasks containing the given keyword and prints matching results.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nicholascxh"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nicholascxh"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nicholascxh"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nicholascxh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nicholascxh"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nicholascxh"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nicholascxh"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: No matching tasks found.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nicholascxh"},"content":"        } else {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nicholascxh"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nicholascxh"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nicholascxh"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nicholascxh"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nicholascxh"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nicholascxh"},"content":"    public void displayTasks() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nicholascxh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: Your task list is empty. Add some tasks!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nicholascxh"},"content":"        } else {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: The list is:\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nicholascxh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nicholascxh"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":194}},{"path":"src/main/java/dasani/task/type/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.task.type;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.InvalidDateException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":" * Stores the deadline as a LocalDateTime object.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"     * Constructs a Deadline task with a description and a deadline date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"     * @param by Deadline in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"     * @throws InvalidDateException If the date format is incorrect.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"    public Deadline(String description, String by) throws InvalidDateException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"    private LocalDateTime parseDateTime(String dateTime) throws InvalidDateException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"            return LocalDateTime.parse(dateTime.trim(), INPUT_FORMAT);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholascxh"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholascxh"},"content":"        return by;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholascxh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholascxh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) + \")\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nicholascxh":45}},{"path":"src/main/java/dasani/task/type/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.task.type;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.InvalidDateException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"     * @param from Start time in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"     * @param to End time in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"     * @throws InvalidDateException If the date format is incorrect.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"    public Event(String description, String from, String to) throws InvalidDateException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"    private LocalDateTime parseDateTime(String dateTime) throws InvalidDateException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"            return LocalDateTime.parse(dateTime.trim(), INPUT_FORMAT);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholascxh"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholascxh"},"content":"        return from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholascxh"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholascxh"},"content":"        return to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholascxh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholascxh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\"))","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholascxh"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) + \")\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nicholascxh":52}},{"path":"src/main/java/dasani/task/type/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.task.type;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nicholascxh":14}},{"path":"src/main/java/dasani/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.util;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.command.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.InvalidDateException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":" * The Parser class handles user input parsing and converts commands into executable objects.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":" * Parses user input into corresponding commands.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"public class Parser {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"     * @param userInput The full user command as a string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"     * @throws DasaniException If the command is invalid or unrecognized.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"    public static Command parse(String userInput) throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"        String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"        String keyword \u003d words[0].toLowerCase();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"        String description \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"        switch (keyword) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"        case \"help\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"            return new HelpCommand();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"        case \"list\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"            return new MarkCommand(description, true);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"            return new MarkCommand(description, false);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholascxh"},"content":"            return new AddCommand(\"todo\", description);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholascxh"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholascxh"},"content":"            return parseDeadline(description);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholascxh"},"content":"        case \"event\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholascxh"},"content":"            return parseEvent(description);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholascxh"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholascxh"},"content":"            return new DeleteCommand(description);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholascxh"},"content":"        case \"find\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholascxh"},"content":"            return new FindCommand(description);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholascxh"},"content":"        case \"save\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholascxh"},"content":"            return new SaveCommand();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholascxh"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"Invalid command. Type \u0027help\u0027 to see the list of commands.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholascxh"},"content":"    private static AddCommand parseDeadline(String description) throws DasaniException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholascxh"},"content":"        String[] splitDeadline \u003d description.split(\"/by\", 2);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholascxh"},"content":"        if (splitDeadline.length \u003c 2) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"Invalid deadline format. Use: deadline \u003ctask\u003e /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholascxh"},"content":"        return new AddCommand(\"deadline\", splitDeadline[0].trim() + \" /by \" + splitDeadline[1].trim());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholascxh"},"content":"    private static AddCommand parseEvent(String description) throws DasaniException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholascxh"},"content":"        String[] splitEvent \u003d description.split(\"/from\", 2);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholascxh"},"content":"        if (splitEvent.length \u003c 2 || !splitEvent[1].contains(\"/to\")) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"Invalid event format. Use: event \u003ctask\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholascxh"},"content":"        return new AddCommand(\"event\", description);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":68}},{"path":"src/main/java/dasani/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.util;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.Task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Deadline;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Event;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"import dasani.task.type.Todo;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.DasaniException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"import dasani.exception.InvalidDateException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"import java.io.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"import java.util.List;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":" * Handles file operations for saving and loading tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"public class Storage {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"    private String filePath;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"    private static final DateTimeFormatter SAVE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"    public List\u003cTask\u003e load() throws DasaniException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"            return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"            String line;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholascxh"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholascxh"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholascxh"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholascxh"},"content":"                }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholascxh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholascxh"},"content":"            throw new DasaniException(\"Error loading tasks from file.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholascxh"},"content":"        return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholascxh"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholascxh"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholascxh"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholascxh"},"content":"                writer.write(taskToFileFormat(task) + \"\\n\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholascxh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: Error saving tasks.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholascxh"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholascxh"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholascxh"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholascxh"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholascxh"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholascxh"},"content":"        Task task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholascxh"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholascxh"},"content":"            switch (type) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholascxh"},"content":"            case \"T\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholascxh"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholascxh"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholascxh"},"content":"            case \"D\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholascxh"},"content":"                task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholascxh"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholascxh"},"content":"            case \"E\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholascxh"},"content":"                task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholascxh"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholascxh"},"content":"            default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholascxh"},"content":"                return null;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholascxh"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholascxh"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholascxh"},"content":"            System.out.println(\"[Dasani]: Skipping task due to invalid date format: \" + line);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholascxh"},"content":"            return null;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholascxh"},"content":"        if (isDone) task.markAsDone();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholascxh"},"content":"        return task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholascxh"},"content":"    private String taskToFileFormat(Task task) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholascxh"},"content":"        String type \u003d task instanceof Todo ? \"T\" : task instanceof Deadline ? \"D\" : \"E\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholascxh"},"content":"        String status \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholascxh"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholascxh"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholascxh"},"content":"            return type + \" | \" + status + \" | \" + description + \" | \" + ((Deadline) task).getBy().format(SAVE_FORMAT);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholascxh"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholascxh"},"content":"            return type + \" | \" + status + \" | \" + description + \" | \"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholascxh"},"content":"                    + ((Event) task).getFrom().format(SAVE_FORMAT) + \" | \"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholascxh"},"content":"                    + ((Event) task).getTo().format(SAVE_FORMAT);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholascxh"},"content":"        } else {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholascxh"},"content":"            return type + \" | \" + status + \" | \" + description;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholascxh"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":102}},{"path":"src/main/java/dasani/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"package dasani.util;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"public class Ui {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"    public Ui() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholascxh"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"        showLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"Hello! I\u0027m Dasani, your personal assistant.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholascxh"},"content":"        showLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholascxh"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholascxh"},"content":"    public void showLine() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholascxh"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"[Dasani]: \" + message);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholascxh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholascxh"},"content":"        System.out.println(\"[Dasani]: Error loading tasks from file.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholascxh"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholascxh"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"nicholascxh":35}},{"path":"text-ui-test/data/Dasani.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"T | 0 | buy milk","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"D | 0 | submit report | Monday","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"E | 0 | team meeting | Wed 10am | 12pm","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"nicholascxh":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholascxh"},"content":"todo buy milk","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"deadline submit report /by Monday","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholascxh"},"content":"event team meeting /from Wed 10am /to 12pm","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholascxh"},"content":"mark 2","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholascxh"},"content":"unmark 2","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"delete 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"delete 5","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"mark abc","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholascxh"},"content":"bye","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nicholascxh":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholascxh"},"content":"chcp 65001 \u003e nul","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholascxh"},"content":"REM Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholascxh"},"content":"REM Delete old saved tasks to start fresh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholascxh"},"content":"if exist ..\\text-ui-test\\data\\Dasani.txt del ..\\text-ui-test\\data\\Dasani.txt","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholascxh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholascxh"},"content":"REM Delete output from previous run","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholascxh"},"content":"REM Compile the Java files with UTF-8 encoding","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholascxh"},"content":"javac -encoding UTF-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\dasani\\*.java ..\\src\\main\\java\\dasani\\exception\\*.java ..\\src\\main\\java\\dasani\\task\\*.java ..\\src\\main\\java\\dasani\\task\\type\\*.java","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholascxh"},"content":"REM Run the program with test input, store output in ACTUAL.TXT","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholascxh"},"content":"java -classpath ..\\bin dasani.Dasani \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholascxh"},"content":"REM Compare ACTUAL.TXT with EXPECTED.TXT","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nicholascxh":11,"-":13}}]
