[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"# Atom User Guide","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"## Introduction","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"Welcome to **Atom**, your intelligent chatbot assistant! ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"Atom is designed to help users manage their tasks efficiently using simple text-based commands. ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"With Atom, you can add, remove, mark, unmark, and search for tasks with ease.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"## Features","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"### 1. Adding a To-Do Task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"Create a simple to-do task without deadlines or time constraints.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"todo iP Level-0 CS2113","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"    Nice! I\u0027ve added this task:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"    [T][ ] iP Level-0 CS2113","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"    Now you have 1 task in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"### 2. Adding a Deadline Task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"Create a task with a specified deadline.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"deadline TASK_DESCRIPTION /by dd-MM-yyyy (HH:mm)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"deadline Weekly Java Quiz /by 07-02-2025 (16:00)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"    Nice! I\u0027ve added this task:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"    [D][ ] Weekly Java Quiz (by: 07-02-2025 (16:00))","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"### 3. Adding an Event Task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"Create an event task that includes a start and end time.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"event TASK_DESCRIPTION /from dd-MM-yyyy (HH:mm) /to dd-MM-yyyy (HH:mm)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"event tP Team meeting /from 12-03-2025 (10:00) /to 12-03-2025 (11:00)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"    Nice! I\u0027ve added this task:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"    [E][ ] tP Team meeting (from: 12-03-2025 10:00 to: 12-03-2025 11:00)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"### 4. Listing All Tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"Display all tasks currently stored in the chatbot.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"    Below are the tasks in your list:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"    1. [T][ ] iP Level-0 CS2113","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"    2. [D][ ] Weekly Java Quiz (by: 07-02-2025 (16:00))","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"    3. [E][ ] Team meeting (from: 12-03-2025 10:00 to: 12-03-2025 11:00)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"### 5. Marking a Task as Done","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"Mark a specific task as completed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JudHoka"},"content":"mark 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"    Awesome! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"    [T][X] iP Level-0 CS2113","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"### 6. Unmarking a Task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"Unmark a previously marked task as incomplete.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"unmark 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"    Alright, this task has been unmarked:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"    [T][ ] iP Level-0 CS2113","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JudHoka"},"content":"### 7. Removing a Task","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JudHoka"},"content":"Delete a specific task from the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JudHoka"},"content":"remove TASK_NUMBER","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"remove 2","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JudHoka"},"content":"    Got it. I have removed this task:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JudHoka"},"content":"    [D][ ] Weekly Java Quiz (by: 07-02-2025 (16:00))","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JudHoka"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JudHoka"},"content":"### 8. Finding Tasks by Keyword","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JudHoka"},"content":"Search for tasks that contain a specific keyword.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JudHoka"},"content":"find SEARCH_KEYWORD","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JudHoka"},"content":"find meeting","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JudHoka"},"content":"    Here are the task(s) that match your search \"meeting\":","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JudHoka"},"content":"    2. [E][ ] Team meeting (from: 12-03-2025 10:00 to: 12-03-2025 11:00)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JudHoka"},"content":"    There is 1 task that matches your search.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JudHoka"},"content":"### 9. Exiting the Chatbot","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JudHoka"},"content":"End the chatbot session.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JudHoka"},"content":"bye","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JudHoka"},"content":"    Alright, I\u0027ll catch ya next time. Have a nice day!","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JudHoka"},"content":"## Conclusion","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JudHoka"},"content":"This User Guide provides everything needed to efficiently use **Atom**. If you encounter issues, refer to the **error messages** displayed by the chatbot for guidance. Happy task managing! 🎯","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"JudHoka":191,"-":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"# Atom User Guide","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"## Introduction","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"Welcome to **Atom**, your intelligent chatbot assistant! ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"Atom is designed to help users manage their tasks efficiently using simple text-based commands. ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"With Atom, you can add, remove, mark, unmark, and search for tasks with ease.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"## Features","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"### 1. Adding a To-Do Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"Create a simple to-do task without deadlines or time constraints.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"todo iP Level-0 CS2113","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"    Nice! I\u0027ve added this task:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"    [T][ ] iP Level-0 CS2113","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"    Now you have 1 task in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"### 2. Adding a Deadline Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"Create a task with a specified deadline.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"deadline TASK_DESCRIPTION /by dd-MM-yyyy (HH:mm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"deadline Weekly Java Quiz /by 07-02-2025 (16:00)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"    Nice! I\u0027ve added this task:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"    [D][ ] Weekly Java Quiz (by: 07-02-2025 (16:00))","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"### 3. Adding an Event Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"Create an event task that includes a start and end time.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"event TASK_DESCRIPTION /from dd-MM-yyyy (HH:mm) /to dd-MM-yyyy (HH:mm)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"event tP Team meeting /from 12-03-2025 (10:00) /to 12-03-2025 (11:00)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"    Nice! I\u0027ve added this task:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"    [E][ ] tP Team meeting (from: 12-03-2025 10:00 to: 12-03-2025 11:00)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"### 4. Listing All Tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"Display all tasks currently stored in the chatbot.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"    Below are the tasks in your list:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"    1. [T][ ] iP Level-0 CS2113","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"    2. [D][ ] Weekly Java Quiz (by: 07-02-2025 (16:00))","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"    3. [E][ ] Team meeting (from: 12-03-2025 10:00 to: 12-03-2025 11:00)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"### 5. Marking a Task as Done","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"Mark a specific task as completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JudHoka"},"content":"mark 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"    Awesome! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"    [T][X] iP Level-0 CS2113","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"### 6. Unmarking a Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"Unmark a previously marked task as incomplete.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"unmark 1","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"    Alright, this task has been unmarked:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"    [T][ ] iP Level-0 CS2113","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JudHoka"},"content":"### 7. Removing a Task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JudHoka"},"content":"Delete a specific task from the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JudHoka"},"content":"remove TASK_NUMBER","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"remove 2","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JudHoka"},"content":"    Got it. I have removed this task:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JudHoka"},"content":"    [D][ ] Weekly Java Quiz (by: 07-02-2025 (16:00))","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JudHoka"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JudHoka"},"content":"### 8. Finding Tasks by Keyword","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JudHoka"},"content":"Search for tasks that contain a specific keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JudHoka"},"content":"find SEARCH_KEYWORD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JudHoka"},"content":"**Example:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JudHoka"},"content":"find meeting","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JudHoka"},"content":"    Here are the task(s) that match your search \"meeting\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JudHoka"},"content":"    2. [E][ ] Team meeting (from: 12-03-2025 10:00 to: 12-03-2025 11:00)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JudHoka"},"content":"    There is 1 task that matches your search.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JudHoka"},"content":"### 9. Exiting the Chatbot","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JudHoka"},"content":"End the chatbot session.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JudHoka"},"content":"**Usage:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JudHoka"},"content":"bye","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JudHoka"},"content":"**Expected Output:**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JudHoka"},"content":"    Alright, I\u0027ll catch ya next time. Have a nice day!","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JudHoka"},"content":"```","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JudHoka"},"content":"## Conclusion","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JudHoka"},"content":"This User Guide provides everything needed to efficiently use **Atom**. If you encounter issues, refer to the **error messages** displayed by the chatbot for guidance. Happy task managing! 🎯","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"JudHoka":183,"-":16}},{"path":"src/main/java/Atom.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"import ui.Commands;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import misc.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":" * The {@code Atom} class represents the main entry point for Atom.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":" * It initializes storage and loads tasks from a save file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":" * The chatbot reads user input, processes commands, and executes tasks accordingly.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"public class Atom {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"     * Constructs an {@code Atom} instance, initializing the storage system,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     * @param filePath The file path where task data is stored and loaded.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"    public Atom(String filePath) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"        new TaskList(storage.loadTasks());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"     * Runs the chatbot application, displaying an introduction message,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"     * processing user input, and passing the commands to be processed until termination.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"    public void run() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"        Others.intro(); // Display welcome message","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"        Storage.loadTasks(); // Load saved tasks from storage","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"        while (isContinue) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"            String line \u003d Others.receiveInput(); // Read user input","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"                isContinue \u003d false; // Exit the chatbot when \"bye\" is entered","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"            } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"                Commands.processCommand(line); // Process user command","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"        Others.end(); // Display exit message","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"     * The main entry point for Atom.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"     * It initializes an {@code Atom} instance and starts the chatbot.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"        new Atom(\"src/main/java/data\").run();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":57}},{"path":"src/main/java/exceptions/AtomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package exceptions;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import misc.Others;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":" * The {@code AtomException} class handles custom exceptions for Atom.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":" * It extends {@code Exception} to provide meaningful error messages and ensures","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":" * structured handling of task-related, storage-related, and other errors.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"public class AtomException extends Exception {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"     * Displays a message when an unrecognized command is entered.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"    public static void notImplemented() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"        Others.printMessageWithLineSeperator(\"Sorry, I don\u0027t understand what you\u0027re trying to say...\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"     * Displays an error when trying to access an empty task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"    public static void taskEmpty() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"        Others.printMessageWithLineSeperator(\"Task list is empty! Please create one first.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"     * Displays an error when a task description is missing.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     * @param task The type of task that is missing a description (todo, deadline, or event).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"    public static void taskMissingDesc(String task) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"        switch (task) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"        case \"t\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    Sorry! The description of a \u0027todo\u0027 cannot be empty.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"            break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"        case \"d\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    Sorry! The description of a \u0027deadline\u0027 cannot be empty.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"            break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        case \"e\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    Sorry! The description of an \u0027event\u0027 cannot be empty.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"            break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"        default:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    Sorry! I don\u0027t understand what you meant.....\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"     * Displays an error message when a task is incomplete (e.g., missing date or time).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"     * @param task The type of task that is incomplete (deadline or event).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"    public static void taskIncomplete(String task) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"        if (task.equals(\"d\")) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    Sorry, I don\u0027t understand what you\u0027re trying to say, please specify more... \\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"                    \"    (deadline \u0027activity\u0027 \u0027/by\u0027 \u0027deadline time\u0027)\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"        } else if (task.equals(\"e\")) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    Sorry, I don\u0027t understand what you\u0027re trying to say, please specify more... \\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"                    \"    (event \u0027activity\u0027 \u0027/from\u0027 \u0027start time\u0027 \u0027/to\u0027 \u0027end time\u0027)\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"     * Displays an error message for invalid task numbers.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"     * @param error The type of number error (e.g., no number, out of bounds).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"    public static void numError(String error) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"        switch (error) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"        case \"no number\" -\u003e Others.printMessageWithLineSeperator(\"Command must be followed by a valid task number.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"        case \"empty task list\" -\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"                Others.printMessageWithLineSeperator(\"The list is empty, please create a task first...\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"        case \"out of bounds\" -\u003e Others.printMessageWithLineSeperator(\"Task number too large, please try again...\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"        case \"invalid number format\" -\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"                Others.printMessageWithLineSeperator(\"Invalid task number, please try again...\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"     * Displays a storage-related error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"     * @param message The specific storage error encountered.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"    public static void storageError(String message) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"        Others.printMessageWithLineSeperator(\"Storage Error: \" + message);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"     * Displays an error message when the date or time format is invalid or incomplete.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"     * @param dateTime The invalid date/time string provided by the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"    public static void dateParseError(String dateTime) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    Sorry, the date/time format is invalid or incomplete : \" + dateTime + \"\\n\" +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"                \"    Please ensure the format is: dd-MM-yyyy (HH:mm)\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"JudHoka":96}},{"path":"src/main/java/misc/Others.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package misc;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":" * The {@code Others} class provides utility methods for displaying messages, handling input,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":" * and managing introductory and exit sequences for the chatbot.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"public class Others {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"     * A constant for the line separator used in output formatting.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"    public static final String LINE_SEPARATOR \u003d \"  ____________________________________________________________\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     * The logo for the chatbot displayed at startup.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"    public static final String LOGO \u003d \"\"\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"                ____     _                        /\\\\   \\s","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"               / __ \\\\   | |__   ____   __  __  \\\\ /  \\\\ / \\s","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"              / /__\\\\ \\\\  |  __| / __ \\\\ |  \\\\/  | \u003c      \u003e\\s","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"             / /    \\\\ \\\\ | |___| |__| || |\\\\/| | / \\\\  / \\\\ \\s","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"            /_/      \\\\_\\\\ \\\\____|\\\\____/ |_|  |_|    \\\\/   \\s","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"            \"\"\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     * Prints a message enclosed within line separators for better readability.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"    public static void printMessageWithLineSeperator(String message) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    \" + message);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"     * Displays Atom\u0027s introduction, including the logo and a welcome message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"    public static void intro() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"        printMessageWithLineSeperator(\"Hey hey there! Its your favourite chatbot assistant, Atom! :D\\n\" +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"                \"    Is there anything I can help you with? Just let me know.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"     * Reads and returns user input from the console.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"     * @return The input string entered by the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"    public static String receiveInput() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"        System.out.println();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"        return in.nextLine();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"     * Displays the chatbot exit message before termination.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"    public static void end() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"        printMessageWithLineSeperator(\"Alright, I\u0027ll catch ya next time, Have a nice day!\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":64}},{"path":"src/main/java/misc/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package misc;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exceptions.AtomException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"import task.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":" * The {@code Parser} class handles parsing user input and stored task data.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":" * It converts raw input into task-related commands and parses task entries from storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"public class Parser {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     * Parses an integer from a given user command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"     * The method checks if the input contains a valid task number and returns the parsed integer.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"     * If the number is invalid or out of bounds, it returns -1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"     * @param line The user command containing a task number.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"     * @return The parsed task number if valid, otherwise returns -1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    public static int parseInt(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"                AtomException.numError(\"no number\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"            if (!words[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"                AtomException.numError(\"invalid number format\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"            int taskNum \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"            if (TaskList.taskList.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"                AtomException.numError(\"empty task list\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"                throw new IllegalStateException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"            if (taskNum \u003e TaskList.taskList.size() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"                AtomException.numError(\"out of bounds\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"            return taskNum;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException | IllegalStateException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"            return -1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"     * The expected format is {@code dd-MM-yyyy (HH:mm)}, where the date and time are","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"     * separated, and the time is enclosed in parentheses.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"     * @param dateTime The input date-time string to be parsed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"     * @return A {@code LocalDateTime} object if parsing is successful, or {@code null} if the format is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"    public static LocalDateTime parseTime(String dateTime) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"            // Extract date and time parts","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"            String datePart \u003d dateTime.split(\" \")[0];","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"            String timePart \u003d dateTime.substring(dateTime.indexOf(\"(\") + 1, dateTime.indexOf(\")\"));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"            // Define the expected format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"            // Parse and return the LocalDateTime object","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"            return LocalDateTime.parse(datePart + \" \" + timePart, formatter);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"        } catch (DateTimeParseException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"            // Handle invalid or incomplete date-time input","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"            AtomException.dateParseError(dateTime);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"     * Parses a stored task entry from a file and reconstructs the corresponding task object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"     * It supports different types of tasks: {@code Todo}, {@code Deadlines}, and {@code Events}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"     * If the format is invalid or missing required data, an error is printed, and the task is skipped.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"     * @param line A line from the storage file representing a task in the format:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"     *             {@code Type | Status | Description | Date \u0026 Time (except Todo)}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"     * @return The parsed {@code Tasks} object, or {@code null} if the line is corrupted.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"    public static Tasks parseTask(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"            AtomException.storageError(\"Skipping corrupted line: \" + line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"            boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JudHoka"},"content":"            switch (type) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JudHoka"},"content":"            case \"T\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JudHoka"},"content":"            case \"D\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"                    AtomException.storageError(\"Skipping corrupted deadline: \" + line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"                    return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"                LocalDateTime by \u003d parseTime(parts[3].trim());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"                if (by \u003d\u003d null) return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"                return new Deadlines(description, by, isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"            case \"E\":","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"                    AtomException.storageError(\"Skipping corrupted event: \" + line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"                    return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"                }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"                LocalDateTime from \u003d parseTime(parts[3].trim());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"                LocalDateTime to \u003d parseTime(parts[4].trim());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"                if (from \u003d\u003d null || to \u003d\u003d null) return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"                return new Events(description, from, to, isDone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"            default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"                AtomException.storageError(\"Unknown task type: \" + type);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"                return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JudHoka"},"content":"            AtomException.storageError(\"Skipping corrupted line: \" + line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":137}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exceptions.AtomException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import task.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import misc.Parser;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import java.io.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":" * The {@code Storage} class handles reading and writing task data to a file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":" * It ensures that tasks persist between program executions by saving and loading data.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"public class Storage {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"    private static String directoryPath; // The directory where task data is stored","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"    private static String filePath;      // The file path for saving and loading tasks","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"     * Constructs a {@code Storage} instance with the specified directory.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"     * The task data is stored in a file named \"atom.txt\" inside the given directory.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"     * @param directory The directory where the task file is stored.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"    public Storage(String directory) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"        directoryPath \u003d directory;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"        filePath \u003d directory + File.separator + \"atom.txt\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"     * Saves the list of tasks to a file. If the directory does not exist, it creates one.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"    public static void saveTasks(ArrayList\u003cTasks\u003e taskList) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"            Path directory \u003d Paths.get(directoryPath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"            if (!Files.exists(directory)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"                Files.createDirectories(directory);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"            for (Tasks task : taskList) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"                    writer.write(task.toFileFormat());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"                    writer.newLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"            writer.close();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"            AtomException.storageError(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"     * Loads tasks from a file and returns them as an {@code ArrayList\u003cTasks\u003e}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"     * If the file does not exist, it returns an empty task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"    public static ArrayList\u003cTasks\u003e loadTasks() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"        ArrayList\u003cTasks\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"                return list;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"                Tasks task \u003d Parser.parseTask(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"                    list.add(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"            scanner.close();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"            AtomException.storageError(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"        return list;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"JudHoka":88}},{"path":"src/main/java/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":" * The {@code Deadlines} class represents a task with a specific due date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":" * It extends the {@code Tasks} class and is categorized as a \"D\" (Deadline) task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"public class Deadlines extends Tasks {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"    private LocalDateTime by; // The deadline date/time for the task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"     * Constructs a {@code Deadlines} task with a description, deadline, and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"     * @param task     The description of the deadline task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     * @param deadline The due date/time of the task as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     * @param mark     {@code true} if the task is marked as completed, {@code false} otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"    public Deadlines(String task, LocalDateTime deadline, boolean mark) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"        super(task, \"D\", mark);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"        this.by \u003d deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"     * Retrieves the deadline of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     * @return The deadline as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy (HH:mm)\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"        return by.format(formatter);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"     * Converts the {@code Deadlines} task into a formatted LocalDateTime suitable for storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"     * @return A string representation of the task in the format: {@code D | 1/0 | task description | deadline}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy (HH:mm)\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"        return \"D | \" + (mark ? \"1\" : \"0\") + \" | \" + task + \" | \" + by.format(formatter);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"JudHoka":45}},{"path":"src/main/java/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":" * The {@code Events} class represents a task that occurs within a specific time range.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":" * It extends the {@code Tasks} class and is categorized as an \"E\" (Event) task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"public class Events extends Tasks {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"    private LocalDateTime from; // The starting time of the event","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"    private LocalDateTime to;   // The ending time of the event","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"     * Constructs an {@code Events} task with a description, start time, end time, and completion status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     * @param from The start time of the event as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"     * @param to   The end time of the event as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"     * @param mark {@code true} if the task is marked as completed, {@code false} otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"    public Events(String task, LocalDateTime from, LocalDateTime to, boolean mark) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"        super(task, \"E\", mark);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"     * @return The start time as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy (HH:mm)\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"        return from.format(formatter);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"     * @return The end time as a LocalDateTime.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy (HH:mm)\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"        return to.format(formatter);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"     * Converts the {@code Events} task into a formatted LocalDateTime suitable for storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"     * @return A string representation of the task in the format:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"     * {@code E | 1/0 | task description | from | to}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy (HH:mm)\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"        return \"E | \" + (mark ? \"1\" : \"0\") + \" | \" + task + \" | \" + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"JudHoka":59}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exceptions.AtomException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import misc.*;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":" * The {@code TaskList} class manages a collection of tasks, including adding, removing,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":" * marking tasks as completed, and displaying task details. It also interacts with storage","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":" * to persist tasks and provides utility methods for handling different task types.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"public class TaskList {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"    public static ArrayList\u003cTasks\u003e taskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"     * Constructs a {@code TaskList} object and initializes the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"     * @param list The list of tasks to be managed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"    public TaskList(ArrayList\u003cTasks\u003e list) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"        taskList \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     * Adds a task to the task list and saves the updated list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"    public static void addTaskToList(Tasks task) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"        taskList.add(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    Nice! I\u0027ve added this task:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"        printTask(taskList.size());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"        Storage.saveTasks(taskList);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"     * Removes a task from the task list based on the given input number.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"     * @param words The input string containing the task number to be removed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"    public static void removeTaskFromList(String words) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"        int taskNum \u003d Parser.parseInt(words);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"        if (taskNum \u003d\u003d -1) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"            return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    Got it. I have removed this task:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"        printTask(taskNum);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"        taskList.remove(taskNum - 1);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"        Storage.saveTasks(taskList);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"     * Creates a new task and chooses between the three categories based on the given user input.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"     * @param line The command entered by the user to create a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"    public static void createTask(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"        if (line.startsWith(\"todo \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"            createTodo(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"        } else if (line.startsWith(\"deadline \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"            createDeadline(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"        } else if (line.startsWith(\"event \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"            createEvent(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"     * Creates a new Todo task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"     * @param line The command containing the todo task details.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"    public static void createTodo(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"        String taskDescription \u003d line.substring(5).trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"            AtomException.taskMissingDesc(\"t\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"            Todo newTask \u003d new Todo(taskDescription, false);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"            addTaskToList(newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"     * Creates a new Deadline task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"     * @param line The command containing the deadline task details.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"    public static void createDeadline(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"        String trimmedLine \u003d line.substring(9).trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"        if (trimmedLine.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"            AtomException.taskMissingDesc(\"d\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JudHoka"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JudHoka"},"content":"            String[] parts \u003d trimmedLine.split(\" /by \", 2);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"                AtomException.taskIncomplete(\"d\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JudHoka"},"content":"            } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"                String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"                LocalDateTime deadline \u003d Parser.parseTime(parts[1].trim());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"                if (deadline \u003d\u003d null) return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"                Deadlines newTask \u003d new Deadlines(taskDescription, deadline, false);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"                addTaskToList(newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"     * Creates a new Event task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"     * @param line The command containing the event task details.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"    public static void createEvent(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"        String trimmedLine \u003d line.substring(6).trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"        if (trimmedLine.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"            AtomException.taskMissingDesc(\"e\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JudHoka"},"content":"            String[] parts \u003d trimmedLine.split(\" /from | /to \", 3);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"            if (parts.length \u003c 3 || parts[1].trim().isEmpty() || parts[2].trim().isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JudHoka"},"content":"                AtomException.taskIncomplete(\"e\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JudHoka"},"content":"            } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JudHoka"},"content":"                String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JudHoka"},"content":"                LocalDateTime from \u003d Parser.parseTime(parts[1]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JudHoka"},"content":"                LocalDateTime to \u003d Parser.parseTime(parts[2]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JudHoka"},"content":"                if (from \u003d\u003d null || to \u003d\u003d null) return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JudHoka"},"content":"                Events newTask \u003d new Events(taskDescription, from, to, false);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JudHoka"},"content":"                addTaskToList(newTask);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JudHoka"},"content":"     * Marks or unmarks a task as completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JudHoka"},"content":"     * @param line       The command containing the task number.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JudHoka"},"content":"     * @param markStatus {@code true} to mark the task as done, {@code false} to unmark it.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JudHoka"},"content":"    public static void markTask(String line, boolean markStatus) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JudHoka"},"content":"        int taskNum \u003d Parser.parseInt(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JudHoka"},"content":"        if (taskNum \u003d\u003d -1) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JudHoka"},"content":"            return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JudHoka"},"content":"        taskList.get(taskNum - 1).setMark(markStatus);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JudHoka"},"content":"        Storage.saveTasks(taskList);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    \" + (markStatus ? \"Awesome! I\u0027ve marked this task as done\" : \"Alright, this task has been unmarked\") + \":\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JudHoka"},"content":"        printTask(taskNum);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JudHoka"},"content":"        Storage.saveTasks(taskList);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JudHoka"},"content":"     * Prints the details of a specific task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JudHoka"},"content":"     * @param taskNum The task number to be printed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JudHoka"},"content":"    public static void printTask(int taskNum) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JudHoka"},"content":"        System.out.print(\"    \" + taskNum + \".[\" + taskList.get(taskNum - 1).category + \"][\" + taskList.get(taskNum - 1).marked() + \"] \" + taskList.get(taskNum - 1).getName());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JudHoka"},"content":"        if (taskList.get(taskNum - 1).getCategory().equals(\"D\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\" (by: \" + ((Deadlines) taskList.get(taskNum - 1)).getBy() + \")\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JudHoka"},"content":"        } else if (taskList.get(taskNum - 1).getCategory().equals(\"E\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\" (from: \" + ((Events) taskList.get(taskNum - 1)).getFrom() + \" to: \" + ((Events) taskList.get(taskNum - 1)).getTo() + \")\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JudHoka"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JudHoka"},"content":"            System.out.println();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JudHoka"},"content":"     * Prints the entire list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JudHoka"},"content":"     * If the task list is empty, an error message is displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JudHoka"},"content":"    public static void printList() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JudHoka"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JudHoka"},"content":"            AtomException.taskEmpty();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JudHoka"},"content":"            return;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"    Below will be the tasks in your list:\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JudHoka"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JudHoka"},"content":"            printTask(i);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JudHoka"},"content":"     * Checks if a given task contains the search keyword and prints it if found.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JudHoka"},"content":"     * If a match is found, it increments the count and prints the task at the given index.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JudHoka"},"content":"     * @param task   The task being checked.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JudHoka"},"content":"     * @param search The keyword to search for in the task name.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JudHoka"},"content":"     * @param count  The current count of matched tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JudHoka"},"content":"     * @param index  The position of the task in the task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JudHoka"},"content":"     * @return The updated count of matched tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JudHoka"},"content":"    public static int checkTask(Tasks task, String search, int count, int index) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JudHoka"},"content":"        if (task.getName().contains(search)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JudHoka"},"content":"            if (count \u003d\u003d 0)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JudHoka"},"content":"                System.out.println(\"    Here are the task(s) that matches your search \\\"\" + search + \"\\\" :\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JudHoka"},"content":"            printTask(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JudHoka"},"content":"            return count + 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JudHoka"},"content":"        return count;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JudHoka"},"content":"     * Searches for tasks that contain a specified keyword and displays the results.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JudHoka"},"content":"     * If no tasks match the keyword, an appropriate message is displayed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JudHoka"},"content":"     * @param line The user input containing the search command and keyword.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JudHoka"},"content":"    public static void findTask(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JudHoka"},"content":"        String search \u003d line.substring(5).trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JudHoka"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"JudHoka"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JudHoka"},"content":"        for (Tasks task : taskList) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JudHoka"},"content":"            count \u003d checkTask(task, search, count, index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JudHoka"},"content":"            index++;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JudHoka"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    Sorry, there are no tasks that matches your search......\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"JudHoka"},"content":"        } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"    There are \" + count + \" task(s) that matches your search\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"JudHoka"},"content":"        System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":249}},{"path":"src/main/java/task/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":" * The {@code Tasks} class serves as an abstract base class for different types of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":" * It provides common attributes such as task description, mark status, and category.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":" * Subclasses must implement the {@code toFileFormat()} method to define how tasks are stored.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"public abstract class Tasks {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"    public String task; // Task description","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"    public boolean mark; // Mark status (true \u003d completed, false \u003d not completed)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"    public String category; // Task category (e.g., \"T\" for Todo, \"D\" for Deadline, \"E\" for Event)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"     * Converts the task into a formatted string for storage purposes","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"     * This method must be implemented by subclasses","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     * @return A string representation of the task for saving to a file.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"     * Returns a completed status of a task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"     * @return \"X\" if completed, \" \" if not completed.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"    public String marked() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"        return (mark) ? \"X\" : \" \";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"     * Constructs a {@code Tasks} object with a name, category, and mark status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"     * @param name     The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"     * @param category The category of the task (T \u003d Todo, D \u003d Deadline, E \u003d Event).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"     * @param mark     {@code true} if the task is marked completed, {@code false} otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"    public Tasks(String name, String category, boolean mark","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"    ) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        this.task \u003d name;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"        this.category \u003d category;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"     * Sets the mark status of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"     * @param mark {@code true} to mark as completed, {@code false} to unmark.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"    public void setMark(boolean mark) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"     * Retrieves the name (description) of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"     * @return The task description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"    public String getName() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"        return task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"     * Retrieves the category of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"     * @return The task category (e.g., \"T\" for Todo, \"D\" for Deadline, \"E\" for Event).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"    public String getCategory() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"        return category;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"JudHoka":70}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":" * The {@code Todo} class represents a basic task without any specific deadline or event duration.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":" * It extends the {@code Tasks} class and is categorized as a \"T\" (Todo) task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"public class Todo extends Tasks {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"     * Constructs a {@code Todo} task with the given task description and mark status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"     * @param task The description of the todo task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"     * @param mark {@code true} if the task is marked as completed, {@code false} otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"    public Todo(String task, boolean mark) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"        super(task, \"T\", mark);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"     * Converts the {@code Todo} task into a formatted string suitable for storage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"     * @return A string representation of the task in the format: {@code T | 1/0 | task description}.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"        return \"T | \" + (mark ? \"1\" : \"0\") + \" | \" + task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"JudHoka":28}},{"path":"src/main/java/ui/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exceptions.AtomException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import misc.Others;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":" * The {@code Commands} class is responsible for processing user input","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":" * and delegating task-related operations to the {@code TaskList} class.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":" * It determines the type of command and executes the corresponding action.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"public class Commands {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"     * Checks whether the given input line corresponds to a valid task creation command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     * @param line The task input command entered by the user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     * @return {@code true} if the command is a valid task creation command (todo, deadline, event),","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"     * {@code false} otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"    private static boolean isValidCreateTaskCommand(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"        return line.startsWith(\"todo \") || line.startsWith(\"deadline \") || line.startsWith(\"event \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"     * Processes a user command and performs the corresponding task operation.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"     * Supports listing tasks, marking/unmarking tasks, removing tasks,","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     * and creating new tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     * @param line The user command to process.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"    public static void processCommand(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"        if (line.equals(\"list\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"            TaskList.printList();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"        } else if (line.startsWith(\"mark \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"            TaskList.markTask(line, true);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"        } else if (line.startsWith(\"unmark \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"            TaskList.markTask(line, false);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        } else if (line.startsWith(\"remove \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"            TaskList.removeTaskFromList(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"        } else if (line.startsWith(\"find \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"            TaskList.findTask(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"        } else if (isValidCreateTaskCommand(line)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"            System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"            TaskList.createTask(line);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"            System.out.println(Others.LINE_SEPARATOR);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"        } else {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"            AtomException.notImplemented();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":51}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"java -classpath ..\\bin Atom \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JudHoka":1,"-":20}}]
