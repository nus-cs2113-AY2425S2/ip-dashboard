[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"# Kohli project template","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot Kohli. Given below are instructions on how to use it.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"Rishi7830":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"# Kohli.Kohli User Guide","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Rishi7830":1,"-":29}},{"path":"src/main/java/Kohli/Kohli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.commands.Command;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"public class Kohli {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    // Initializes chatbot, setting up the UI, storage, and task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    public Kohli(String filePath) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"            tasks \u003d new TaskList(storage.load()); // Load tasks from the file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"        } catch (KohliException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"            ui.showLoadingError(); // Show an error if loading fails.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"            tasks \u003d new TaskList(); // Start with an empty task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"    // Runs the chatbot, processing user commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"    public void run() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"        ui.showWelcome(); // Display welcome message.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"        showPossibleErrors(); // Show possible user errors.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"            try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"                String fullCommand \u003d ui.readCommand(); // Read user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"                ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"                Command c \u003d Parser.parse(fullCommand); // Parse input into appropriate command.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"                c.execute(tasks, ui, storage); // Executes the command.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"                isExit \u003d c.isExit(); // Check if the command is an exit command.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"            } catch (KohliException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"                ui.showError(e.getMessage()); // Handle invalid input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"            } finally {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"                ui.showLine(); // Print a line for clarity.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"    // Displays common user input errors for guidance (user-friendly).","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"    private void showPossibleErrors() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Possible Errors \");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  Possible Errors \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\" Possible Errors \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Possible Errors \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  Possible Errors \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\" Possible Errors \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\" Missing task description (e.g., \u0027todo\u0027 alone is invalid)\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\" Incorrect command format (e.g., missing /by for deadlines)\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\" Task number out of range for mark/unmark/delete\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\" Unrecognized command entered\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rishi7830"},"content":"    // Entry point of the program. Initializes the chatbot with the file path.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rishi7830"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rishi7830"},"content":"        new Kohli(\"C:\\\\Users\\\\Rishi Moorthy\\\\Desktop\\\\ip\\\\src\\\\main\\\\java\\\\Kohli\\\\data\\\\kohli.txt\").run();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"Rishi7830":72}},{"path":"src/main/java/Kohli/KohliException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"// Exception class for handling errors in the chatbot.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"public class KohliException extends Exception {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"    public KohliException(String message) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"        super(message);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":11}},{"path":"src/main/java/Kohli/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.commands.*;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"// Handles parsing of user input and converts it into executable commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"public class Parser {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"    public static Command parse(String userInput) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"        String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"        String command \u003d inputParts[0];","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"        // Matches the user command to the corresponding Command class.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        switch (command) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"            case \"bye\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"            case \"list\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"                return new ListCommand();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"                return new MarkCommand(inputParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"                return new UnmarkCommand(inputParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"            case \"delete\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"                return new DeleteCommand(inputParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"            case \"todo\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"                return new AddTodoCommand(inputParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"                return new AddDeadlineCommand(inputParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"            case \"event\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"                return new AddEventCommand(inputParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"            case \"find\":","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"                if (inputParts.length \u003c 2) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"                    throw new KohliException(\"Please specify a keyword to search.\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"                }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"                return new FindCommand(inputParts[1]);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"            default:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"                throw new KohliException(\"Invalid command.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"Rishi7830":38}},{"path":"src/main/java/Kohli/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import java.io.*;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"// Handles loading and saving of tasks to file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"public class Storage {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"    private String filePath;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    // Constructs a Storage with the file path.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"     * Loads tasks from the storage file and returns them as list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If an error occurs while reading the file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"    public ArrayList\u003cTask\u003e load() throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"        // Creates the directories if the file does not exist.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"        // Reads the file by each line and converts each line into a Task object.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"            String line;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"                Task task \u003d Task.fromFileString(line);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"                }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Error reading file.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"        return tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"     * @param tasks Makes the list of tasks to be saved.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If an error occurs.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"                bw.write(task.toFileString());","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"                bw.newLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rishi7830"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rishi7830"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Error saving file.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":62}},{"path":"src/main/java/Kohli/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"// Manages the list of tasks, like adding, deleting, retrieving, and saving tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"public class TaskList {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    // Constructs an empty task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"    // Constructs an initialized task list with existing tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the index is invalid, an error occurs.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"    public void deleteTask(int index) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Invalid task number.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"     * @return The current list of tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"        return tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"     * Saves the task list to storage.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"     * @param storage The storage handler for saving the tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If an error occurs.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"    public void save(Storage storage) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rishi7830"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rishi7830"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rishi7830"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rishi7830"},"content":"            if (task.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rishi7830"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rishi7830"},"content":"            }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rishi7830"},"content":"        return matchingTasks;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rishi7830"},"content":"     * Fix: Properly prints tasks using toString()","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rishi7830"},"content":"    public void printTasks() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rishi7830"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rishi7830"},"content":"            System.out.println(\"Your to-do list is empty!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rishi7830"},"content":"        } else {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rishi7830"},"content":"            System.out.println(\"Here are the tasks in your to-do list:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rishi7830"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rishi7830"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i).toString()); // Ensures toString() is used","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rishi7830"},"content":"            }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"Rishi7830":91}},{"path":"src/main/java/Kohli/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"// Handles user interactions like displaying messages and reading user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"public class Ui {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"    private Scanner scanner; // Scanner to read user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"    // Initializes the UI and sets up the scanner to read commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    public Ui() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"    // Displays the welcome message, logo, and commands menu.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"        String logo \u003d \"  _  ___   ____  _      ___ \\n\"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"                + \" | |/ (_) |  _ \\\\| |    |_ _|\\n\"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"                + \" | \u0027 / _  | | | | |     | | \\n\"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"                + \" | . \\\\| | | |_| | |___  | | \\n\"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"                + \" |_|\\\\_\\\\_| |____/|_____| |___|\\n\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        String man \u003d \"  O  \\n\"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"                + \" /|\\\\ \\n\"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"                + \" / \\\\ \\n\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(logo);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(man);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"        showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Hello! I\u0027m Kohli.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"        showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"        showMenu();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"    // Displays the commands menu that the chatbot can execute.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"    public void showMenu() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Here are the Available Commands Kohli bot can do for you :)\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"1. todo \u003ctask\u003e                - Adds a To-Do task\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"2. deadline \u003ctask\u003e /by \u003ctime\u003e - Adds a Deadline task\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"3. event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e - Adds an Event task\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"4. list                        - Shows all tasks\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"5. mark \u003ctask number\u003e          - Marks a task as done\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"6. unmark \u003ctask number\u003e        - Unmarks a task\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"7. delete \u003ctask number\u003e        - Deletes a task\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"8. bye                         - Exits the chatbot\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"        showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"    // Prints a horizontal line.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"    // Reads and returns the next user command from the console.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rishi7830"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rishi7830"},"content":"    // Displays an error message.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rishi7830"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"⚠ \" + message);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rishi7830"},"content":"    // Displays an error message when the task loading fails.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rishi7830"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Error loading tasks. Starting with an empty task list.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rishi7830"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":73}},{"path":"src/main/java/Kohli/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.*;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Deadline;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"deadline\" command to add a new Deadline task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"    private String description;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    private String by;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"     * Constructs an AddDeadlineCommand by parsing user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"     * @param input The user input containing the task description and deadline.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the input format is incorrect.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"    public AddDeadlineCommand(String input) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Invalid format! Use: deadline \u003ctask\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        this.description \u003d parts[0];","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"        this.by \u003d parts[1];","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Oops! The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"     * Executes the command to add a new Deadline task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"     * @param tasks   The task list where the deadline will be added.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If an error occurs while saving tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"        // Display message for confirmation.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  \" + newTask);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"        tasks.save(storage);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":54}},{"path":"src/main/java/Kohli/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.*;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Event;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"event\" command to add a new Event task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"    private String description;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    private String from;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    private String to;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"     * Constructs an AddEventCommand by parsing user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"     * @param input The user input containing the task description, start time, and end time.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the input format is incorrect or the description is empty.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    public AddEventCommand(String input) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        String[] eventParts \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        // Ensures input contains both \"from\" and \"to\" segments.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"        if (eventParts.length \u003c 2 || !eventParts[1].contains(\" /to \")) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Invalid format! Use: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"        String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"        this.description \u003d eventParts[0];","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"        this.from \u003d timeParts[0];","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"        this.to \u003d timeParts[1];","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"        // Ensures the event has a valid description.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Oops! The description of an event cannot be empty.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"     * Executes the command to add a new Event task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"     * @param tasks   The task list where the event will be added.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If an error occurs while saving tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"        Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"        // Display message confirmation.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  \" + newTask);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rishi7830"},"content":"        tasks.save(storage);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":60}},{"path":"src/main/java/Kohli/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.*;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Todo;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"todo\" command to add a new Todo task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"    private String description;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"     * Constructs an AddTodoCommand with the given task description.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"     * @param description The description of the To-Do task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the description is null or empty.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"    public AddTodoCommand(String description) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Oops! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"     * Executes the command to add a new To-Do task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"     * @param tasks   The task list where the To-Do will be added.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If an error occurs while saving tasks.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"        // Display message confirmation.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  \" + newTask);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"        tasks.save(storage);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":46}},{"path":"src/main/java/Kohli/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.KohliException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"// Represents an abstract command that can be executed in the chatbot.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws KohliException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        return false;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":17}},{"path":"src/main/java/Kohli/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.KohliException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"delete\" command to remove a task from the task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"     * Constructs a DeleteCommand by parsing the task index from user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"     * @param taskIndex The task number to be deleted.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the task number is not a valid integer.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    public DeleteCommand(String taskIndex) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"            this.taskIndex \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Invalid task number format.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"     * Executes the delete command, removing the specified task from the list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"     * @param tasks   The task list where the task will be removed.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the task index is out of range.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"        // Ensure the task index is within valid range.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTasks().size()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Task number out of range.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        // Remove the task from the list and store it in a variable.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        Task removedTask \u003d tasks.getTasks().remove(taskIndex);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"        // Display message confirmation.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  \" + removedTask);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"        tasks.save(storage);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":54}},{"path":"src/main/java/Kohli/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"bye\" command to exit the chatbot.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    // Executes the exit command by displaying bye message.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        ui.showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"    // Indicates that this command should terminate the chatbot.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        return true;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":23}},{"path":"src/main/java/Kohli/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Storage;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.TaskList;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Ui;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    private String keyword;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        this.keyword \u003d keyword.toLowerCase(); // Convert to lowercase for case-insensitive search","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        } else {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"            }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-28","isFullCredit":false}],"authorContributionMap":{"Rishi7830":31}},{"path":"src/main/java/Kohli/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"list\" command to display all tasks in the task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    // Executes the list command by listing out all tasks with their index.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Here are the tasks in your to-do list:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"            System.out.println(index + \". \" + task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"            index++;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":27}},{"path":"src/main/java/Kohli/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.KohliException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"mark\" command to mark a task as completed.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"     * Constructs a MarkCommand by parsing the task index from user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"     * @param taskIndex The task number to be marked as done.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the task number is not a valid integer.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    public MarkCommand(String taskIndex) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"            this.taskIndex \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Invalid task number format.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"     * Executes the mark command, marking the specified task as completed.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"     * @param tasks   The task list where the task will be marked.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the task index is out of range.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"        // Ensure the task index is within valid range.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTasks().size()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Task number out of range.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        // Gets the task from the list and mark it as done.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        Task task \u003d tasks.getTasks().get(taskIndex);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"        // Display message confirmation.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"        tasks.save(storage);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"Rishi7830":53}},{"path":"src/main/java/Kohli/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.commands;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.KohliException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import Kohli.TaskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"import Kohli.Ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"import Kohli.tasks.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"// Handles the \"unmark\" command to mark a task as not completed.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"     * Constructs an UnmarkCommand by parsing the task index from user input.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"     * @param taskIndex The task number to be unmarked.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the task number is not a valid integer.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    public UnmarkCommand(String taskIndex) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"            this.taskIndex \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Invalid task number format.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"     * Executes the unmark command, marking the specified task as incomplete.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"     * @param tasks   The task list where the task will be unmarked.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"     * @throws KohliException If the task index is out of range.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws KohliException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"        // Ensure the task index is within a valid range.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTasks().size()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"            throw new KohliException(\"Task number out of range.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        // Gets the task from the list and mark it as not done.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        Task task \u003d tasks.getTasks().get(taskIndex);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"        // Display message confirmation.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"        ui.showLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"        tasks.save(storage);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":54}},{"path":"src/main/java/Kohli/data/kohli.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"D | 0 | return book | 2019-12-02 18:00","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"D | 0 | Rishi Birthday | 2004-04-07 12:00","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"T | 0 | buy bread","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"T | 0 | buy gift for mummy","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"D | 0 | buy gift for mummy | 2025-06-02 07:00","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"T | 0 | buy gift for mummy","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"D | 0 | buy gift for mummy | 2025-06-02 07:00","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"T | 0 | go for tutorial","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"T | 0 | buy coffee","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"T | 0 | to worry my brain","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"E | 0 | rishi attend CS2113 lecture Friday 21 Feb 2025 | 4pm | 6pm","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"T | 0 | buy choco","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"T | 1 | buy sonali a gift","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"T | 1 | buy sonali a gift","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Rishi7830":23}},{"path":"src/main/java/Kohli/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.util.DateTimeParser;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"    // Constructs a Deadline with description and date.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"        super(description);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        this.by \u003d DateTimeParser.parse(by);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.format(by) + \")\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DateTimeParser.formatForFile(by);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"        // Returns the string representation of Deadline with its type [D].","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Rishi7830":48}},{"path":"src/main/java/Kohli/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.util.DateTimeParser;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    // Constructs an Event with description, start time, and end time.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        super(description);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        this.from \u003d DateTimeParser.parse(from);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"        this.to \u003d DateTimeParser.parse(to);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateTimeParser.format(from) + \" to: \" + DateTimeParser.format(to) + \")\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"        // Returns the string representation of Event with its type [E].","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DateTimeParser.formatForFile(from) + \" | \" + DateTimeParser.formatForFile(to);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        // Returns the string representation of Event with its type [E].","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Rishi7830":50}},{"path":"src/main/java/Kohli/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import Kohli.util.DateTimeParser;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"public class Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"    protected String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    // Constructs a new task with the given description. By default, the task is not marked as done.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"    // Returns \"X\" if done, \" \" if not done.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"    // Marks the task as done.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"    // Unmarks the task, setting it back to incomplete task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rishi7830"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rishi7830"},"content":"    // Converts the task into a formatted string suitable for file storage so the user can save it in text file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rishi7830"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rishi7830"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rishi7830"},"content":"            return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rishi7830"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rishi7830"},"content":"            return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DateTimeParser.formatForFile(((Deadline) this).by);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rishi7830"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rishi7830"},"content":"            return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DateTimeParser.formatForFile(((Event) this).from) + \" | \" + DateTimeParser.formatForFile(((Event) this).to);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rishi7830"},"content":"        return \"\"; // Should never happen","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rishi7830"},"content":"        return (this instanceof Todo ? \"T\" : this instanceof Deadline ? \"D\" : \"E\") + \" | \"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rishi7830"},"content":"                + (isDone ? \"1\" : \"0\") + \" | \" + description","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rishi7830"},"content":"                + (this instanceof Deadline ? \" | \" + ((Deadline) this).by : \"\")","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rishi7830"},"content":"                + (this instanceof Event ? \" | \" + ((Event) this).from + \" | \" + ((Event) this).to : \"\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rishi7830"},"content":"    // Parses a task from a formatted string from the saved file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rishi7830"},"content":"    public static Task fromFileString(String line) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rishi7830"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rishi7830"},"content":"        if (parts.length \u003c 3) return null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rishi7830"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rishi7830"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rishi7830"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rishi7830"},"content":"        Task task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rishi7830"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rishi7830"},"content":"            switch (type) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rishi7830"},"content":"                case \"T\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rishi7830"},"content":"                    task \u003d new Todo(description); // ✅ Todo tasks don\u0027t have dates","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rishi7830"},"content":"                    break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rishi7830"},"content":"                case \"D\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rishi7830"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rishi7830"},"content":"                        System.out.println(\"Warning: Invalid Deadline format in file. Skipping entry.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rishi7830"},"content":"                        return null;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rishi7830"},"content":"                    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rishi7830"},"content":"                    task \u003d new Deadline(description, DateTimeParser.parseFromFile(parts[3]));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rishi7830"},"content":"                    break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rishi7830"},"content":"                case \"E\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rishi7830"},"content":"                    if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rishi7830"},"content":"                        System.out.println(\"Warning: Invalid Event format in file. Skipping entry.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rishi7830"},"content":"                        return null;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rishi7830"},"content":"                    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rishi7830"},"content":"                    task \u003d new Event(description, DateTimeParser.parseFromFile(parts[3]), DateTimeParser.parseFromFile(parts[4]));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rishi7830"},"content":"                    break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rishi7830"},"content":"                default:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rishi7830"},"content":"                    System.out.println(\"Warning: Unknown task type found in file. Skipping entry.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rishi7830"},"content":"                    return null;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rishi7830"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rishi7830"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rishi7830"},"content":"            System.out.println(\"Warning: Invalid date format in file. Skipping entry.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rishi7830"},"content":"            return null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rishi7830"},"content":"        // Creates the appropriate task type based on the first character in the file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rishi7830"},"content":"        switch (type) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rishi7830"},"content":"            case \"T\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rishi7830"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rishi7830"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rishi7830"},"content":"            case \"D\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rishi7830"},"content":"                if (parts.length \u003c 4) return null; // Ensures deadlines have valid dates.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rishi7830"},"content":"                task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Rishi7830"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Rishi7830"},"content":"            case \"E\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Rishi7830"},"content":"                if (parts.length \u003c 5) return null; // Ensures events have start and end dates.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Rishi7830"},"content":"                task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Rishi7830"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Rishi7830"},"content":"            default:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Rishi7830"},"content":"                return null; // Returns null if it\u0027s an unknown task type.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Rishi7830"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Rishi7830"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Rishi7830"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 397cfaf78f906e487f1c206b5aeabf340d66e883","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Rishi7830"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Rishi7830"},"content":"        if (isDone) task.markAsDone(); // Restores the task\u0027s completion status.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Rishi7830"},"content":"        return task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Rishi7830"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Rishi7830"},"content":"        return description;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Rishi7830"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Rishi7830"},"content":"        // Returns a string representation of the task.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Rishi7830"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":136}},{"path":"src/main/java/Kohli/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.tasks;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"    // Constructor for todo task which requires only description.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"        // Returns the string todo task with its type [T].","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Rishi7830":17}},{"path":"src/main/java/Kohli/util/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rishi7830"},"content":"package Kohli.util;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rishi7830"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rishi7830"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rishi7830"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rishi7830"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rishi7830"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rishi7830"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rishi7830"},"content":"    private static final DateTimeFormatter FILE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rishi7830"},"content":"    public static LocalDateTime parse(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rishi7830"},"content":"        return LocalDateTime.parse(dateTime, INPUT_FORMATTER);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rishi7830"},"content":"    public static String format(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rishi7830"},"content":"        return dateTime.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rishi7830"},"content":"    public static LocalDateTime parseFromFile(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rishi7830"},"content":"        return LocalDateTime.parse(dateTime, FILE_FORMATTER);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rishi7830"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rishi7830"},"content":"    public static String formatForFile(LocalDateTime dateTime) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rishi7830"},"content":"        return dateTime.format(FILE_FORMATTER);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rishi7830"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rishi7830"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"Rishi7830":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rishi7830"},"content":"java -classpath ..\\bin Kohli.Kohli \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Rishi7830":1,"-":20}}]
