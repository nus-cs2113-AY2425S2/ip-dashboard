[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"# Finnbot User Guide","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"Finnbot User Guide","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"Finnbot is a Personal Assistant Chatbot that helps a person to keep track of various tasks, events and deadlines.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"Finnbot is named after my beloved 7 year old Ragdoll cat. ","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"samstt":4,"-":27}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"public class Deadlines extends Tasks {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"    protected String by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"    public String toFileString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"        return \"D | \" + (getIsDone() ? \"1\" : \"0\") + \" |  \" + description + \" | \" + by;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"samstt":18}},{"path":"src/main/java/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"public class EmptyInputException extends Exception {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"    public EmptyInputException(String message) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"        super(message);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"samstt":5}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"public class Events extends Tasks {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"    protected String startTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"    protected String endTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"    public Events(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"        return \"[E]\" + getStatusIcon() + description +\"(from:\" + startTime + \", to:\" + endTime + \")\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"    public String toFileString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"        return \"E | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + description + \" | \" + startTime + \"to\" + endTime;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"samstt":21}},{"path":"src/main/java/Finnbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"import java.io.File;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"public class Finnbot {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"    private static final String line \u003d \"_*\".repeat(60);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"    private static List\u003cTasks\u003e tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"    public static void greetUser() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"        String greeting \u003d \"Meow! I\u0027m Finnbot!\" + System.lineSeparator() + \"How can I help you?\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"        System.out.println(line);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"        System.out.println(greeting);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"        System.out.println(line);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"    public static void goodbye() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"        String goodbye \u003d \"Purr.. Hope to see you again soon :3\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"        System.out.println(line);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"    public static void addToDos(String task) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"        tasks.add(new ToDos(task));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"    public static void addDeadline(String task, String by) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"        tasks.add(new Deadlines(task, by));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"    public static void addEvents(String task, String startTime, String endTime) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"        tasks.add(new Events(task, startTime, endTime));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"    //task index is 1 more than array","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"    public static void deleteTask(int taskIndex) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"    public static void listTasks() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"            System.out.println(i+1 + \". \" + tasks.get(i).toString());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"    public static void taskMarker(String responses, boolean isMarked) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"            int taskIndex \u003d Integer.parseInt(responses.split(\" \")[1]) - 1;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"            if (isMarked) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"                tasks.get(taskIndex).setDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"                System.out.println(\"Meow! I marked this task as done:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"            } else {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"                tasks.get(taskIndex).isDone \u003d false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"                System.out.println(\"Meow! You unmarked this task:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"            System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"            Storage.saveFile(tasks, new File(Storage.FILEPATH));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Uh oh! The task number you have given me isn\u0027t in the list!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Uh oh! The task number you have given is invalid!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samstt"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samstt"},"content":"            System.out.println(\"There are no tasks in your list yet.. Why don\u0027t you add some first\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samstt"},"content":"    public static void todoHandler(String response) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samstt"},"content":"            String description \u003d response.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samstt"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samstt"},"content":"                throw new IllegalArgumentException(\"Todo description is empty, why don\u0027t you add something :3\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samstt"},"content":"            Tasks todo \u003d new ToDos(description);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samstt"},"content":"            addToDos(todo.description);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samstt"},"content":"            Storage.saveFile(tasks, new File(Storage.FILEPATH));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samstt"},"content":"            System.out.println(todo);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samstt"},"content":"            System.out.println(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samstt"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Uh oh! The description you have given is invalid!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samstt"},"content":"    public static void deadlineHandler(String response) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samstt"},"content":"            String description \u003d response.replaceFirst(\"deadline\", \"\").trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samstt"},"content":"            String[] deadlineParts \u003d description.split(\"/by\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samstt"},"content":"            String deadlineDescription \u003d deadlineParts[0];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samstt"},"content":"            String by \u003d deadlineParts[1];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samstt"},"content":"            Tasks deadline \u003d new Deadlines(deadlineDescription, by);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samstt"},"content":"            addDeadline(deadline.description, by);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samstt"},"content":"            Storage.saveFile(tasks, new File(Storage.FILEPATH));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samstt"},"content":"            System.out.println(deadline);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samstt"},"content":"            System.out.println(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samstt"},"content":"        } catch (IllegalArgumentException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Deadline format should be: deadline [description] /by [date], why don\u0027t you try it again?\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samstt"},"content":"    public static void eventHandler(String response) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samstt"},"content":"            response \u003d response.replaceFirst(\"event\", \"\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samstt"},"content":"            String[] parts \u003d response.split(\"/from|/to\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samstt"},"content":"            String eventDescription \u003d parts[0];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samstt"},"content":"            String start \u003d parts[1];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samstt"},"content":"            String end \u003d parts[2];","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samstt"},"content":"            Tasks events \u003d new Events(eventDescription, start, end);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samstt"},"content":"            addEvents(events.description, start, end);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samstt"},"content":"            Storage.saveFile(tasks, new File(Storage.FILEPATH));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samstt"},"content":"            System.out.println(events);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samstt"},"content":"            System.out.println(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samstt"},"content":"        } catch (IllegalArgumentException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Event format should be: event [description] /from [start] /to [end] , why don\u0027t you try again? :3\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samstt"},"content":"    public static void deleteHandler(String response) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samstt"},"content":"            int taskIndex \u003d Integer.parseInt(response.split(\" \")[1]) - 1 ;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Noted! I\u0027ve removed this task for you:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samstt"},"content":"            System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samstt"},"content":"            deleteTask(taskIndex);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samstt"},"content":"            Storage.saveFile(tasks, new File(Storage.FILEPATH));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in your list!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samstt"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Uh oh! The task number you have given is invalid!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samstt"},"content":"    public static void inputValidator (String response) throws EmptyInputException, InvalidCommandException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samstt"},"content":"        if (response.trim().isEmpty()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samstt"},"content":"            throw new EmptyInputException(\"Uh oh, you didn\u0027t type anything in so why don\u0027t you add something!\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samstt"},"content":"        String[] validCommands \u003d {\"todo\", \"deadline\", \"event\", \"list\", \"mark\", \"unmark\", \"bye\"};","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samstt"},"content":"        String command \u003d response.split(\" \")[0].toLowerCase();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samstt"},"content":"        boolean isValidCommand \u003d false;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samstt"},"content":"        for (String validCommand : validCommands) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samstt"},"content":"            if (validCommand.equals(command)) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samstt"},"content":"                isValidCommand \u003d true;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samstt"},"content":"            } else {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samstt"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samstt"},"content":"            throw new InvalidCommandException(\"Meooow :( I don\u0027t think I understand what you mean, input a valid command instead\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"samstt"},"content":"    public static void defaultHandler(String response) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"samstt"},"content":"            inputValidator(response);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"samstt"},"content":"        } catch (EmptyInputException | InvalidCommandException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"samstt"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"samstt"},"content":"    public static void fileToTaskLoader() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"samstt"},"content":"       tasks \u003d Storage.loadFile(\"./data.txt\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"samstt"},"content":"    public static void botRespond() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"samstt"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"samstt"},"content":"        String response;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"samstt"},"content":"        while (true) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"samstt"},"content":"            response \u003d in.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"samstt"},"content":"            System.out.println(line);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"samstt"},"content":"            String[] splitResponses \u003d response.split(\" \");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"samstt"},"content":"            String command \u003d splitResponses[0].toLowerCase();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"samstt"},"content":"            switch (command) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"samstt"},"content":"            case \"bye\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"samstt"},"content":"                return;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"samstt"},"content":"            case \"list\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"samstt"},"content":"                System.out.println(\"here is your to-do list meow\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"samstt"},"content":"                listTasks();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"samstt"},"content":"                System.out.println(line);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"samstt"},"content":"            case \"mark\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"samstt"},"content":"                taskMarker(response, true);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"samstt"},"content":"            case \"unmark\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"samstt"},"content":"               taskMarker(response, false);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"samstt"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"samstt"},"content":"                deleteHandler(response);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"samstt"},"content":"            case \"todo\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"samstt"},"content":"                todoHandler(response);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"samstt"},"content":"            case \"deadline\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"samstt"},"content":"                deadlineHandler(response);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"samstt"},"content":"            case \"event\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"samstt"},"content":"                eventHandler(response);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"samstt"},"content":"                break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"samstt"},"content":"                default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"samstt"},"content":"                    defaultHandler(response);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"samstt"},"content":"                    break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"samstt"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"samstt"},"content":"        Storage.createFile();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"samstt"},"content":"        fileToTaskLoader();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"samstt"},"content":"        greetUser();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"samstt"},"content":"        botRespond();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"samstt"},"content":"        goodbye();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"samstt":228}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"        super(message);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"samstt":5}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"import java.io.*;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"public class Storage {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"    public static final String FILEPATH \u003d \"./data.txt\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"    public static void createFile() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"            File f \u003d new File(FILEPATH);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"                System.out.println(\"File created: \" + f.getAbsolutePath());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"            } else {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"                System.out.println(\"File already exists: \" + f.getAbsolutePath());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Error creating file: \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"    public static void saveFile(List\u003cTasks\u003e tasks, File file) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"        try {BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"            for (Tasks task : tasks) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"                    bw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"            bw.flush();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Error saving file: \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"    public static List\u003cTasks\u003e loadFile(String filename) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"        File file \u003d new File(filename);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"        List\u003cTasks\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"            System.out.println(\"No save file found! We\u0027ll start with a new list!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"            return tasksList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(FILEPATH))) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"            String line;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"                tasksList.add(parseTask(line));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Error loading file...\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"        return tasksList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"    private static Tasks parseTask(String line) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"        if (parts.length \u003c\u003d 2 ) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"            throw new IllegalArgumentException(\"Invalid task format: \" + line);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samstt"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samstt"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samstt"},"content":"        Tasks task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samstt"},"content":"        switch (taskType) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samstt"},"content":"        case \"T\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samstt"},"content":"            task \u003d new ToDos(description);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samstt"},"content":"            break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samstt"},"content":"        case \"D\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samstt"},"content":"            task \u003d new Deadlines(description, parts[3]);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samstt"},"content":"            break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samstt"},"content":"        case \"E\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samstt"},"content":"            task \u003d new Events(description, parts[2], parts[3]);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samstt"},"content":"            break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samstt"},"content":"        default:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samstt"},"content":"            throw new IllegalArgumentException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samstt"},"content":"        if(isDone) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samstt"},"content":"            task.setDone();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samstt"},"content":"        return task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"samstt":95}},{"path":"src/main/java/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"public class Tasks {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"    protected String description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"    public Tasks(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"    public void setDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"        return this.isDone;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"    public String toFileString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"        return \"\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"samstt":38}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"public class ToDos extends Tasks {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"    //constructor for ToDos class","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"    public ToDos(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"        super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"    public String toString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"    public String toFileString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"        return \"T | \" + (getIsDone() ? \"1\" : \"0\") + \" |  \" + description;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"samstt":15}}]
