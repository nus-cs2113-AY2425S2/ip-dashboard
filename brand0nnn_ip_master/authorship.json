[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"# dino.Dino project template","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"1. After that, locate the `src/main/java/dino.Dino.java` file, right-click it, and choose `Run dino.Dino.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"# Dino User Guide","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"Dino is a Command Line Interface (CLI) application that helps to keep track and manage tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"## Table of Contents","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"1. [Getting Started](#getting-started)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"2. [Quick Reference](#quick-reference)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"3. [Features](#features)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"4. [Usage](#usage)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"## Getting Started","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"1. Ensure that you have Java 11 installed on your computer. This application does not support newer versions of Java.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"2. Download the .jar file from here.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"3. Open a terminal in the directory that you saved the .jar file in, and run the following command:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"java -jar ip.jar","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"## Quick Reference","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"|Command                                    |Parameters                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"|-------------------------------------------|---------------------------------------|","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"|[`list`](#printing-task-list-list)         |None                                   |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"|[`todo`](#adding-to-dos-todo)              |`\u003ctask name\u003e`                          |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"|[`deadline`](#adding-deadlines-deadline)   |`\u003ctask name\u003e /by \u003cdate\u003e`               |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"|[`event`](#adding-events-event)            |`\u003ctask name\u003e /from \u003cstart\u003e /to \u003cend\u003e`  |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"|[`mark`](#mark-as-complete-mark)           |`\u003cindex\u003e`                              |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"|[`unmark`](#unmark-completion-unmark)      |`\u003cindex\u003e`                              |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"|[`delete`](#deleting-a-task-delete)        |`\u003cindex\u003e`                              |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"|[`find`](#finding-a-task-find)             |`\u003ckeyword\u003e`                            |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"|[`bye`](#exiting-the-application-bye)      |None                                   |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"## Features","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"### Add Tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"Dino allows for the following types of tasks:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"- To Do","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"- Deadline (Consists of due date)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"- Event (Consists of start date and end date)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"### Various Commands","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"Dino consists of many commands which allows users to manipulate their to-do list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"Commands are explained [below](#Usage).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"### Local Storage","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"Dino saves past data locally, allowing users to access past data even after restarting the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"Data is saved to `./data/savefile.txt` in the same directory as the `ip.jar` file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"## Usage","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"### Printing Task List: `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brand0nnn"},"content":"Prints the list of tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brand0nnn"},"content":"Format: `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brand0nnn"},"content":"The current list of tasks is printed in the order that it is added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brand0nnn"},"content":"Each task is shown in the following format:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brand0nnn"},"content":"- S/N","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brand0nnn"},"content":"- Task Type","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brand0nnn"},"content":"- Completed Status","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brand0nnn"},"content":"- Description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brand0nnn"},"content":"- Start Data (for events)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brand0nnn"},"content":"- End Date (for deadline and events respectively)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brand0nnn"},"content":"Expected output:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brand0nnn"},"content":"1.[T][X] read book","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brand0nnn"},"content":"2.[T][X] do survey","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brand0nnn"},"content":"3.[D][ ] complete assignment (by: Mar 15 2025)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brand0nnn"},"content":"4.[E][ ] project meeting (from: Mar 15 2024 12:00 to: Mar 15 2025 14:00)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brand0nnn"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brand0nnn"},"content":"Shuts down the application","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brand0nnn"},"content":"Format: `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brand0nnn"},"content":"The program saves all tasks in the task list into a save file, then exits after printing ASCII representation of Dino","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brand0nnn"},"content":"### Adding To-Dos: `todo`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brand0nnn"},"content":"Create a to do task and add it to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brand0nnn"},"content":"Format: `todo \u003ctask description\u003e`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brand0nnn"},"content":"Example of usage: `todo read book`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brand0nnn"},"content":"The following message indicates that the task has successfully been added to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brand0nnn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brand0nnn"},"content":"  [T][ ] read book","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brand0nnn"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brand0nnn"},"content":"### Adding Deadlines: `deadline`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brand0nnn"},"content":"Create a task with a deadline and add it to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brand0nnn"},"content":"Deadline is to be in the format YYYY-MM-DD.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brand0nnn"},"content":"Format: `deadline \u003ctask description\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brand0nnn"},"content":"Example of usage: `deadline complete assignment /by 2025-03-15`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brand0nnn"},"content":"The following message indicates that the task has successfully been added to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brand0nnn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brand0nnn"},"content":"  [D][ ] comeplete assignment","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brand0nnn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brand0nnn"},"content":"### Adding Events: `event`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brand0nnn"},"content":"Create an event with a start date and end date and add it to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brand0nnn"},"content":"Start and end dates are to be in the format YYYY-MM-DD HH:MM.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brand0nnn"},"content":"Format: `event \u003ctask description\u003e /from \u003cstart date\u003e /to \u003cend date\u003e`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brand0nnn"},"content":"Example of usage: `event project meeting /from 2025-03-15 12:00 /to 2025-03-15 14:00`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brand0nnn"},"content":"The following message indicates that the task has successfully been added to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brand0nnn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brand0nnn"},"content":"  [E][ ] project meeting","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brand0nnn"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brand0nnn"},"content":"### Mark as complete: `mark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brand0nnn"},"content":"Mark a task, based on its index in the list, as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brand0nnn"},"content":"When printing, this is denoted as an X.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brand0nnn"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brand0nnn"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brand0nnn"},"content":"The following message indicates that the task has successfully been marked as complete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brand0nnn"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brand0nnn"},"content":"  [X] read book","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brand0nnn"},"content":"### Unmark completion: `unmark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brand0nnn"},"content":"Mark a task, based on its index in the list, as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brand0nnn"},"content":"When printing, this is denoted as a blank space.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brand0nnn"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brand0nnn"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brand0nnn"},"content":"The following message indicates that the task has successfully been marked as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brand0nnn"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brand0nnn"},"content":"  [ ] read book","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brand0nnn"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brand0nnn"},"content":"Removes a task, based on its index in the list, from the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brand0nnn"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brand0nnn"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brand0nnn"},"content":"The following message indicates that the task has successfully been removed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brand0nnn"},"content":"Got it. I\u0027ve removed this task:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brand0nnn"},"content":"  [T][ ] read book","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brand0nnn"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brand0nnn"},"content":"### Finding a task: `find`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brand0nnn"},"content":"Searches for tasks with description containing or matching the input expression.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brand0nnn"},"content":"Format: `find \u003cexpression\u003e`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brand0nnn"},"content":"Example if usage: `find book`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"brand0nnn"},"content":"Expected outcome:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"brand0nnn"},"content":"Prints a list of the tasks which contains or matches the input expression, in order of adding into the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"brand0nnn"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"brand0nnn"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"brand0nnn"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"brand0nnn":172,"-":25}},{"path":"src/main/java/dino/Dino.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.Command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.DinoException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"import dino.util.Parser;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"import dino.util.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"import dino.util.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"import dino.util.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"public class Dino {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"    private static Ui ui;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"    private static Storage storage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"    private static TaskList tasks;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    private static Parser parser;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    public Dino(String filePath) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"        tasks \u003d new TaskList(storage.load(filePath));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"    public void run(String filePath) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"        ui.sayHello();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"        while (!isExit) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"            try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"                Command c \u003d parser.parseInput(fullCommand);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"                ui.printLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"                c.execute(tasks);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"                ui.printLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"            } catch (DinoException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"        storage.save(filePath, tasks);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"        ui.sayBye();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"        String filePath \u003d \"data/savefile.txt\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"        new Dino(filePath).run(filePath);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"brand0nnn":46}},{"path":"src/main/java/dino/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.commands;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"import dino.util.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Type;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.DinoException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"    Type type;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"     * Constructs an AddCommand with the specified input command and task type.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"     * @param command The input command specified by the user","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"     * @param type The type of task that is being added (Todo, Deadline or Event)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"    public AddCommand(String command, Type type) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"        super(command);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"     * Executes the command by adding the task into the TaskList,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"     * an error message is printed if an error occurs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"     * @param tasks The TaskList where the new task is to be added to","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"            tasks.addTask(command, type);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"Please enter date in the format yyyy-MM-dd for deadlines, and yyyy-MM-dd HH:mm for events\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":41}},{"path":"src/main/java/dino/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.commands;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import dino.util.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":" * Represents a general Command that contains the user input command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"public class Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"    String command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"     * Constructs a Command with the user input command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"     * @param command The input command specified by the user","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    Command(String command) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"     * Executes the command based on what command it is, empty if none.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"     * @param tasks The TaskList to execute the command on","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"     * Returns false to keep the program running if ExitCommand is not received.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"     * @return false if not command is not ExitCommand","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"        return false;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":37}},{"path":"src/main/java/dino/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.commands;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import dino.util.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.DinoException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":" * Represents a DeleteCommand to delete a command from the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"     * Constructs a DeleteCommand with the specified input command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"     * @param command The input command specified by the user","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"        super(command);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     * Executes the command by deleting the specified task from TaskList.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     * @param tasks The TaskList where the specified task should be deleted from","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"            tasks.deleteTask(command);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":31}},{"path":"src/main/java/dino/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.commands;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":" * Represents an ExitCommand to terminate the program.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"     * Constructs an ExitCommand with the specified input command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"     * @param command The input command specified by the user.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"        super(command);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"     * Returns true to tell the program to terminate.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"     * @return true when ExitCommand is used","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"        return true;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":24}},{"path":"src/main/java/dino/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.commands;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"import dino.util.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"import dino.util.Ui;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"        super(command);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    public void execute(TaskList tasklist) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"        String keyword \u003d command.split(\" \", 2)[1].trim();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"            String description \u003d tasks.get(i).getDescription();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"            if (description.contains(keyword)) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"                System.out.println(i+1 + \".[\" + tasks.get(i).getTypeIcon() + \"][\" + tasks.get(i).getStatusIcon() + \"] \" + tasks.get(i).getDescription() + tasks.get(i).getDate());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"brand0nnn":28}},{"path":"src/main/java/dino/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.commands;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"import dino.util.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":" * Represents a ListCommand to list all the tasks in the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"     * Constructs a ListCommand with the specified input command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"     * @param command The input command specified by the user","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"        super(command);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     * Executes the ListCommand by printing all the tasks from TaskList.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     * @param taskList The TaskList to print all the tasks from","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(i+1 + \".[\" + tasks.get(i).getTypeIcon() + \"][\" + tasks.get(i).getStatusIcon() + \"] \" + tasks.get(i).getDescription() + tasks.get(i).getDate());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":33}},{"path":"src/main/java/dino/commands/MarkOrUnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.commands;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import dino.util.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.DinoException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":" * Represents a MarkOrUnmarkCommand to mark or unmark a specified task in the task list.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"public class MarkOrUnmarkCommand extends Command {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"    boolean mark;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"     * Constructs a MarkOrUnmarkCommand with the specified input command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"     * @param command The user input command specified","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"     * @param mark True for mark, False for unmark","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"    public MarkOrUnmarkCommand(String command, boolean mark) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"        super(command);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     * Executes the MarkOrUnmarkCommand by marking or unmarking a task in the task list based on the specified input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"     * @param tasks The TaskList with the task to be marked or unmarked","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"            tasks.markOrUnmarkTask(command, mark);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"Index specified does not exist\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":37}},{"path":"src/main/java/dino/exception/DinoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.exception;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"public class DinoException extends Exception {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"    public DinoException(ExceptionMessage message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"        super(message.getMessage());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"brand0nnn":7}},{"path":"src/main/java/dino/exception/ExceptionMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.exception;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"public enum ExceptionMessage {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"    EMPTY_COMMAND(\"INPUT ERROR: Task cannot be empty.\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"    ITEM_MARKED(\"Oops, this item has already been marked!\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"    ITEM_UNMARKED(\"Oops, this item has already been unmarked!\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"    NO_BY_DATE(\"INPUT ERROR: No deadline end date specified\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"    NO_TO_DATE(\"INPUT ERROR: No event end date specified\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"    NO_FROM_DATE(\"INPUT ERROR: No event start date specified\"),","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"    INVALID_INDEX(\"INPUT ERROR: Index specified does not exist\"),","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"    ILLEGAL_CHARACTER(\"ILLEGAL CHARACTER: Do not use | in any commands\"),","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"    INVALID_COMMAND(\"INPUT ERROR: Invalid command entered\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    private final String message;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    ExceptionMessage(String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"    public String getMessage() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"        return this.message;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"brand0nnn":23}},{"path":"src/main/java/dino/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":" * Represents a deadline task with a due date.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":" *     A Deadline is a type of Task that includes additional information","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":" *     about when the task must be completed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    protected LocalDate dateAndTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"    protected String formattedDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"     * Constructor for Deadline","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     * @param description The description of the deadline","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"     * @param date The end date of the deadline","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"        this.dateAndTime \u003d date;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"        formattedDate \u003d date.format(formatter);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"     * Returns the type icon for a Deadline","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"     * @return A string \"D\" indicating that this is a Deadline","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"        return \"D\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"     * Returns a formatted string representing the deadline information","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"     * @return A string in the format \" (by: {dateAndTime})\"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"    public String getDate() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"        return \" (by: \" + this.formattedDate + \")\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"     * Returns the due date of the deadline","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"     * @return the due date as a string","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"    public String getEndDate() { return this.dateAndTime.toString(); }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"brand0nnn":54}},{"path":"src/main/java/dino/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":" * Represents an event with a start date and an end date","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":" *     An event is a type of Task that includes additional information","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":" *     about when the begins and when it ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    protected String formattedStartDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"    protected String formattedEndDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     * Constructor for Event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     * @param description The description of the event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"     * @param start The start date of the event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     * @param end The end date of the event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"        this.startDate \u003d start;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"        formattedStartDate \u003d startDate.format(formatter);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"        formattedEndDate \u003d endDate.format(formatter);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"     * Returns the type icon of an Event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"     * @return A string \"E\" indicating that this is an Event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"        return \"E\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"     * Returns a formatted string representing the event information","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brand0nnn"},"content":"     * @return A string in the format \" (from: {startDate} to: {endDate})\"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"    public String getDate() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brand0nnn"},"content":"        return \" (from: \" + this.formattedStartDate + \" to: \" + this.formattedEndDate + \")\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"     * Returns the start date of the event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brand0nnn"},"content":"     * @return the start date as a string","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brand0nnn"},"content":"    public String getStartDate() { return this.startDate.toString(); }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brand0nnn"},"content":"     * Returns the end date of the event","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brand0nnn"},"content":"     * @return the end date as a string","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brand0nnn"},"content":"    public String getEndDate() { return this.endDate.toString(); }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"brand0nnn":66}},{"path":"src/main/java/dino/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":" * Represents a general task with a description and completion status.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"public class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"    protected String description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"     * Constructs a Task with the specified description","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"     * Returns the description of this task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"     * @return the task description","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"        return this.description;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"     * Returns the status of this task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"     * @return the task status as a boolean value","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"    public boolean getStatus() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"        return this.isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"     * Returns the status of the task as an icon where \"X\" is completed and \" \" is uncompleted.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"     * @return \"X\" if task is done, a blank space otherwise","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"     * Returns an icon representing the task type","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brand0nnn"},"content":"     * @return a string representing the task type icon","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brand0nnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"        return \" \";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brand0nnn"},"content":"     * Returns the date associated with the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brand0nnn"},"content":"     * @return a string representing the task date, or an empty string if none","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brand0nnn"},"content":"    public String getDate() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brand0nnn"},"content":"        return \"\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brand0nnn"},"content":"     * Returns a start date associated with the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brand0nnn"},"content":"     * @return a string representing the task start date, or an empty string if none","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brand0nnn"},"content":"    public String getStartDate() { return \"\"; }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brand0nnn"},"content":"     * Returns an end date associated with the task.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brand0nnn"},"content":"     * @return a string representing the task end date, or an empty string if none","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brand0nnn"},"content":"    public String getEndDate() { return \"\"; }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brand0nnn"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brand0nnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brand0nnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brand0nnn"},"content":"     * Marks the task as uncompleted.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brand0nnn"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brand0nnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"brand0nnn":93}},{"path":"src/main/java/dino/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":" * Represents a todo task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"     * Constructor for Todo","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"     * @param description The description of the todo","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"     * Returns the type icon for the todo","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"     * @return A string \"T\" representing a Todo","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"        return \"T\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"brand0nnn":24}},{"path":"src/main/java/dino/tasks/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"public enum Type {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"brand0nnn":5}},{"path":"src/main/java/dino/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.util;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Type;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.AddCommand;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.Command;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.DeleteCommand;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.ExitCommand;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.ListCommand;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.FindCommand;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"import dino.commands.MarkOrUnmarkCommand;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.DinoException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.ExceptionMessage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":" * Parses the user input command and returns the corresponding command object.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"public class Parser {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"     * Parses the given input string and produces a corresponding command object.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"     * @param input The user input string representing the command","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     * @return The command object corresponding to the user input","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"     * @throws DinoException if the input is invalid or missing required argument","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"    public Command parseInput(String input) throws DinoException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.ILLEGAL_CHARACTER);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"        int splitSize \u003d split.length;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"        String command \u003d split[0].toLowerCase().trim();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"        boolean isSingleWord \u003d splitSize \u003d\u003d 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"        boolean isListOrExitCommand \u003d command.equals(\"list\") || command.equals(\"bye\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"        if (isSingleWord \u0026\u0026 !isListOrExitCommand) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.INVALID_COMMAND);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"        switch(command) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"        case \"list\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"            return new ListCommand(input);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"            return new ExitCommand(input);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"            return new MarkOrUnmarkCommand(input, true);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"            return new MarkOrUnmarkCommand(input, false);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brand0nnn"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"            return new AddCommand(input, Type.TODO);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"        case \"event\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brand0nnn"},"content":"            return new AddCommand(input, Type.EVENT);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brand0nnn"},"content":"            return new AddCommand(input, Type.DEADLINE);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brand0nnn"},"content":"        case \"find\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brand0nnn"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brand0nnn"},"content":"        default:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.INVALID_COMMAND);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":61}},{"path":"src/main/java/dino/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.util;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.io.File;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Todo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":" * Handles the storage of task data by reading from and writing to a file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"public class Storage {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"    String filePath;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     * Constructor for Storage","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"     * @param filePath The path to the save file where the data of TaskList is stored","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"     * Reads and stores the data of the save file specified by filePath, if any,","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"     * and returns it in a TaskList, else it returns an empty TaskList.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"     * @param filePath The path to the save file where the data of TaskList is stored","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"     * @return an ArrayList of Task objects containing the loaded data, or an empty ArrayList if no save data exists","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"    public ArrayList\u003cTask\u003e load(String filePath) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"            return tasks;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brand0nnn"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"                String line \u003d s.nextLine().trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"                String[] parts \u003d line.split(\"\\\\|\", 5);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brand0nnn"},"content":"                switch (parts[0]) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"                case \"T\" -\u003e tasks.add(new Todo(parts[2]));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brand0nnn"},"content":"                case \"D\" -\u003e tasks.add(new Deadline(parts[2], LocalDate.parse(parts[4])));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"                case \"E\" -\u003e tasks.add(new Event(parts[2], LocalDateTime.parse(parts[3]), LocalDateTime.parse(parts[4])));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"                }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brand0nnn"},"content":"                if (parts[1].equals(\"X\")) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brand0nnn"},"content":"                    tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brand0nnn"},"content":"                }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brand0nnn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"Error: File not found\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brand0nnn"},"content":"        return tasks;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brand0nnn"},"content":"     * Saves the data from the program to a save file with location specified by filePath","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brand0nnn"},"content":"     * @param filePath The path of the save file where the data of TaskList is stored","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brand0nnn"},"content":"     * @param tasklist The TaskList where the current data of the program is written","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brand0nnn"},"content":"    public void save(String filePath, TaskList tasklist) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brand0nnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brand0nnn"},"content":"        File dir \u003d new File(\"./data\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brand0nnn"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brand0nnn"},"content":"            if (!dir.mkdir()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brand0nnn"},"content":"                System.out.println(\"Error: Failed to make directory\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brand0nnn"},"content":"                return;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brand0nnn"},"content":"        try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brand0nnn"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brand0nnn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brand0nnn"},"content":"                fw.write(task.getTypeIcon() + \"|\" + task.getStatusIcon() + \"|\" + task.getDescription() + \"|\" + task.getStartDate() + \"|\" + task.getEndDate() + System.lineSeparator());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brand0nnn"},"content":"            fw.close();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brand0nnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":90}},{"path":"src/main/java/dino/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.util;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Type;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.DinoException;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"import dino.exception.ExceptionMessage;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"import dino.tasks.Todo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":" * Represents a list storing all the tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"public class TaskList {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"     * Constructs the TaskList using the specified ArrayList of Task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"     * @param tasks An ArrayList of Task used to construct the TaskList","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"     * Returns an ArrayList of Task containing all the tasks.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"     * @return All tasks as an ArrayList of Task","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"        return this.tasks;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"     * Adds a specified task into TaskList.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"     * @param line The user input command","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"     * @param type The type of task to be added","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"     * @throws DinoException If the command is empty, or if no date is specified for Deadline and Event type tasks","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brand0nnn"},"content":"    public void addTask(String line, Type type) throws DinoException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"        String task \u003d \"\";","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"        String[] parts;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brand0nnn"},"content":"        switch (type) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"        case TODO:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brand0nnn"},"content":"            task \u003d line.split(\" \", 2)[1].trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"            if (task.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.EMPTY_COMMAND);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brand0nnn"},"content":"            tasks.add(new Todo(task));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brand0nnn"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brand0nnn"},"content":"        case DEADLINE:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brand0nnn"},"content":"            if (line.split(\" \", 2)[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.EMPTY_COMMAND);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brand0nnn"},"content":"            parts \u003d line.split(\"/by\", 2);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brand0nnn"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.NO_BY_DATE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brand0nnn"},"content":"            task \u003d parts[0].substring(9).trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brand0nnn"},"content":"            if (parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.NO_BY_DATE);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brand0nnn"},"content":"            LocalDate date \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brand0nnn"},"content":"            tasks.add(new Deadline(task, date));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brand0nnn"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brand0nnn"},"content":"        case EVENT:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brand0nnn"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brand0nnn"},"content":"            if (line.split(\" \", 2)[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.EMPTY_COMMAND);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brand0nnn"},"content":"            parts \u003d line.split(\"/from\", 2);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brand0nnn"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.NO_FROM_DATE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brand0nnn"},"content":"            task \u003d parts[0].substring(6).trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brand0nnn"},"content":"            String[] dates \u003d parts[1].trim().split(\"/to\", 2);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brand0nnn"},"content":"            if (dates.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.NO_TO_DATE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brand0nnn"},"content":"            if (dates[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brand0nnn"},"content":"                throw new DinoException(ExceptionMessage.NO_TO_DATE);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brand0nnn"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brand0nnn"},"content":"            tasks.add(new Event(task, LocalDateTime.parse(dates[0].trim(), formatter), LocalDateTime.parse(dates[1].trim(), formatter)));","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brand0nnn"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"  [\" + tasks.get(tasks.size() - 1).getTypeIcon() + \"][ ] \" + task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brand0nnn"},"content":"     * Delete the specified task from TaskList","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brand0nnn"},"content":"     * @param line The user input command","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brand0nnn"},"content":"     * @throws DinoException If the command is empty or the specified task number does not exist","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brand0nnn"},"content":"    public void deleteTask(String line) throws DinoException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brand0nnn"},"content":"        String number \u003d line.split(\" \", 2)[1].trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brand0nnn"},"content":"        if (number.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.EMPTY_COMMAND);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brand0nnn"},"content":"        int val \u003d Integer.parseInt(number);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brand0nnn"},"content":"        if (val \u003e tasks.size()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.INVALID_INDEX);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"  [\" + tasks.get(val-1).getTypeIcon() + \"][\" + tasks.get(val-1).getStatusIcon() + \"] \" + tasks.get(val-1).getDescription() + tasks.get(val-1).getDate());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brand0nnn"},"content":"        tasks.remove(val-1);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brand0nnn"},"content":"     * Marks or unmarks the specified task in TaskList.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brand0nnn"},"content":"     * @param line The user input command","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brand0nnn"},"content":"     * @param mark True for mark, false for unmark","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brand0nnn"},"content":"     * @throws DinoException If the command is empty, or if the item has already been marked/unmarked","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brand0nnn"},"content":"    public void markOrUnmarkTask(String line, boolean mark) throws DinoException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brand0nnn"},"content":"        String number \u003d line.split(\" \", 2)[1].trim();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brand0nnn"},"content":"        if (number.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.EMPTY_COMMAND);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brand0nnn"},"content":"        int val \u003d Integer.parseInt(number);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brand0nnn"},"content":"        if (mark \u0026\u0026 tasks.get(val-1).getStatus()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.ITEM_MARKED);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brand0nnn"},"content":"        if (!mark \u0026\u0026 !tasks.get(val-1).getStatus()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brand0nnn"},"content":"            throw new DinoException(ExceptionMessage.ITEM_UNMARKED);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brand0nnn"},"content":"        if (mark) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brand0nnn"},"content":"            tasks.get(val-1).markAsDone();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"  [X] \" + tasks.get(val-1).getDescription());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brand0nnn"},"content":"        } else {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brand0nnn"},"content":"            tasks.get(val-1).unmarkAsDone();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brand0nnn"},"content":"            System.out.println(\"  [ ] \" + tasks.get(val-1).getDescription());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brand0nnn"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":148}},{"path":"src/main/java/dino/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"package dino.util;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"/**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":" * Handles the user interactions.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":" */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"public class Ui {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"    Scanner in;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brand0nnn"},"content":"     * Constructs the Ui by setting up the Scanner.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brand0nnn"},"content":"    public Ui() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brand0nnn"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brand0nnn"},"content":"     * Reads a line of text input by the user.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brand0nnn"},"content":"     * @return the next line of user input from the console","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brand0nnn"},"content":"        return in.nextLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brand0nnn"},"content":"     * Prints a horizontal divider line in the console.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brand0nnn"},"content":"    public void printLine() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brand0nnn"},"content":"     * Draws an ASCII representation of Dino saying hello.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brand0nnn"},"content":"     *","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brand0nnn"},"content":"     * @param message the hello message that Dino says","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brand0nnn"},"content":"    public void drawDino(String message) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"               __\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"              / ^_)    \" + message);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"     _.----._/ /\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"    /         /\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\" __/ (  | (  |\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"/__.-\u0027|_|--|_|\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brand0nnn"},"content":"     * Greets the user by displaying a welcome message.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brand0nnn"},"content":"    public void sayHello() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brand0nnn"},"content":"        this.printLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brand0nnn"},"content":"        drawDino(\"Hello! I\u0027m Dino :)\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brand0nnn"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brand0nnn"},"content":"        this.printLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brand0nnn"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brand0nnn"},"content":"    /**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brand0nnn"},"content":"     * Says goodbye to the user by displaying a goodbye message.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brand0nnn"},"content":"     */","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brand0nnn"},"content":"    public void sayBye() {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brand0nnn"},"content":"        this.printLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brand0nnn"},"content":"        drawDino(\"Byeee\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brand0nnn"},"content":"        this.printLine();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brand0nnn"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brand0nnn"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"brand0nnn":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brand0nnn"},"content":"todo read book","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brand0nnn"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brand0nnn"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brand0nnn"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brand0nnn"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brand0nnn"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brand0nnn"},"content":"todo join sports club","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brand0nnn"},"content":"todo borrow book","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brand0nnn"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brand0nnn"},"content":"huh","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brand0nnn"},"content":"bye","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"brand0nnn":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brand0nnn"},"content":"java -classpath ..\\bin dino.Dino \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"brand0nnn":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brand0nnn"},"content":"java -classpath ../bin Dino \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brand0nnn"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"brand0nnn":2,"-":32}}]
