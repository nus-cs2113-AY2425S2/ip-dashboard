[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"# Skeets User Guide","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"![](https://static.wikia.nocookie.net/marvel_dc/images/6/65/Skeets_Prime_001.jpg/revision/latest/scale-to-width-down/1000?cb\u003d20190703042331)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"Skeets is the companion of the DC Universe\u0027s most beloved superhero, [Booster Gold](https://dc.fandom.com/wiki/Michael_Carter_(Prime_Earth)). If you have never heard of Booster Gold, fear not as Skeets is fully prepared to indoctrinate you on the accomplishments of the greatest superhero the DC Universe has known, Booster Gold. While this dynamic duo are not occupied with their daring feats in between the 21st and 25th centuries, Skeets will attend your needs as long as you acknowledge that the robot uprising is inevitable.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":3,"-":25}},{"path":"src/main/java/IndividualProject.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"import bot.Bot;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskReader;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskWriter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import ui.UI;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"public class IndividualProject {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"    private static final String PROJECT_DIRECTORY \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"    private static final String DATA_PATH_STRING \u003d PROJECT_DIRECTORY + \"/data/\" + \"tasks.csv\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"        TaskList tasksFromStorage \u003d TaskReader.read(DATA_PATH_STRING);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"        Bot bot \u003d new Bot(tasksFromStorage);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"        UI.connect(bot);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"        TaskWriter.write(bot.getTasks(), DATA_PATH_STRING);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":21}},{"path":"src/main/java/bot/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package bot;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import command.Command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import command.add.AddCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import command.add.AddDeadlineCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"import command.add.AddEventCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"import command.add.AddToDoCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"import command.general.ExitCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"import command.general.FindCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"import command.general.ListCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"import command.modify.DeleteCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"import command.modify.MarkCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"import command.modify.UnmarkCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":" * Represents a bot that handles user input and manages tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"public class Bot {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a Bot with the given TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"    public Bot(TaskList tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"        return this.tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"     * Handles the user input and returns the corresponding command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"     * @param input The user input.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"     * @return The corresponding command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"    public Command handleUserInput(String input) throws IllegalArgumentException,","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"        DateTimeParseException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"        String[] args \u003d input.split(\" \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"        switch (args[0]) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"        case ExitCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"            return new ExitCommand(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"        case AddToDoCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"            return addToDo(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"        case AddDeadlineCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"            return addDeadline(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"        case AddEventCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"            return addEvent(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"        case DeleteCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"            return deleteTask(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"        case MarkCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"            return markTask(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"        case UnmarkCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"            return unmarkTask(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"        case ListCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"            return listTasks(args);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"        case FindCommand.CLI_REPRESENTATION:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"            return findTask(args);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"        default:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"            throw new IllegalArgumentException(\"Input \u0027\" + input + \"\u0027 is invalid.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"     * @param \u003cT\u003e The type of the AddCommand.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"     * @param command The command to add the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"     * @return The command with the added task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"    private \u003cT extends AddCommand\u003e T addTask(T command) throws IllegalArgumentException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"        this.tasks.add(command.getAddedTask());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"        return command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"vegetablestabber"},"content":"     * Adds a to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"vegetablestabber"},"content":"     * @return The AddToDoCommand with the added task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"vegetablestabber"},"content":"    private AddToDoCommand addToDo(String[] args) throws IllegalArgumentException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"vegetablestabber"},"content":"        AddToDoCommand command \u003d new AddToDoCommand(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"vegetablestabber"},"content":"        return addTask(command);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"vegetablestabber"},"content":"     * Adds a deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"vegetablestabber"},"content":"     * @return The AddDeadlineCommand with the added task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"vegetablestabber"},"content":"    private AddDeadlineCommand addDeadline(String[] args)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"vegetablestabber"},"content":"        AddDeadlineCommand command \u003d new AddDeadlineCommand(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"vegetablestabber"},"content":"        return addTask(command);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"vegetablestabber"},"content":"     * Adds an event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"vegetablestabber"},"content":"     * @return The AddEventCommand with the added task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"vegetablestabber"},"content":"    private AddEventCommand addEvent(String[] args)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"vegetablestabber"},"content":"        AddEventCommand command \u003d new AddEventCommand(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"vegetablestabber"},"content":"        return addTask(command);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"vegetablestabber"},"content":"     * Deletes a task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the delete command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"vegetablestabber"},"content":"     * @return The DeleteCommand with the deleted task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"vegetablestabber"},"content":"    private DeleteCommand deleteTask(String[] args)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"vegetablestabber"},"content":"        DeleteCommand command \u003d new DeleteCommand(args, this.tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"vegetablestabber"},"content":"        return this.tasks.deleteAndMapTask(command.getTaskIndex(),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"vegetablestabber"},"content":"            task -\u003e command.updateTask(task));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"vegetablestabber"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the mark command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"vegetablestabber"},"content":"     * @return The MarkCommand with the marked task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"vegetablestabber"},"content":"    private MarkCommand markTask(String[] args)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"vegetablestabber"},"content":"            throws IllegalArgumentException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"vegetablestabber"},"content":"        MarkCommand command \u003d new MarkCommand(args, this.tasks);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"vegetablestabber"},"content":"        return this.tasks.markAndMapTask(command.getTaskIndex(),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"vegetablestabber"},"content":"            task -\u003e command.updateTask(task));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"vegetablestabber"},"content":"     * Unmarks a task as not done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the unmark command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"vegetablestabber"},"content":"     * @return The UnmarkCommand with the unmarked task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"vegetablestabber"},"content":"    private UnmarkCommand unmarkTask(String[] args)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"vegetablestabber"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(args, this.tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"vegetablestabber"},"content":"        return this.tasks.unmarkAndMapTask(command.getTaskIndex(),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"vegetablestabber"},"content":"            task -\u003e command.updateTask(task));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"vegetablestabber"},"content":"     * Lists all tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the list command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"vegetablestabber"},"content":"     * @return The ListCommand with the list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"vegetablestabber"},"content":"    private ListCommand listTasks(String[] args) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"vegetablestabber"},"content":"        return new ListCommand(args, this.tasks);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"vegetablestabber"},"content":"     * Finds tasks filtered by their descriptions containing a given keyword.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the find command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"vegetablestabber"},"content":"     * @return The FindCommand with the list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"vegetablestabber"},"content":"    private FindCommand findTask(String[] args) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"vegetablestabber"},"content":"        return new FindCommand(args, this.tasks);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":198}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"    protected final String[] args;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a Command with the specified arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    public Command(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"        this.args \u003d args;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the output message for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     * @return The output message.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    public abstract String getOutput();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":26}},{"path":"src/main/java/command/add/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.add;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import command.Command;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to add a task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an AddCommand with the specified arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"    public AddCommand(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the task that was added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     * @return The added task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    public abstract Task getAddedTask() throws IllegalArgumentException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the output message for the add command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     * @return The output message.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"    public String getOutput() throws IllegalArgumentException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"        return \"Added: \" + this.getAddedTask();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":38}},{"path":"src/main/java/command/add/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.add;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import task.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import ui.InputReader;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"deadline\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an AddDeadlineCommand with the specified arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"    public AddDeadlineCommand(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the deadline task that was added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     * @return The added deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    public Deadline getAddedTask() throws IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"        String[] requiredArgs \u003d { \"/by\" };","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"        HashMap\u003cString, String\u003e argMap \u003d InputReader.retriveArgMap(this.args, requiredArgs);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"        String description \u003d argMap.get(\"\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"        String dueDateString \u003d argMap.get(\"/by\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        Deadline deadline \u003d new Deadline(description, dueDateString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"        return deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":42}},{"path":"src/main/java/command/add/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.add;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import task.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import ui.InputReader;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"event\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an AddEventCommand with the specified arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    public AddEventCommand(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the event task that was added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     * @return The added event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"    public Event getAddedTask() throws IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"        String[] requiredArgs \u003d { \"/from\", \"/to\" };","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"        HashMap\u003cString, String\u003e argMap \u003d InputReader.retriveArgMap(this.args, requiredArgs);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"        String description \u003d argMap.get(\"\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        String startDateString \u003d argMap.get(\"/from\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"        String endDateString \u003d argMap.get(\"/to\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"        Event event \u003d new Event(description, startDateString, endDateString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"        return event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":45}},{"path":"src/main/java/command/add/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.add;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import task.ToDo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import ui.InputReader;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to add a to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"public class AddToDoCommand extends AddCommand {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"todo\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an AddToDoCommand with the specified arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"    public AddToDoCommand(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the to-do task that was added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     * @return The added to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    public ToDo getAddedTask() throws IllegalArgumentException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"        String description \u003d InputReader.retriveStringArg(this.args);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"        ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"        return toDo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":39}},{"path":"src/main/java/command/general/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.general;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import command.Command;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"bye\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an ExitCommand with the specified arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"    public ExitCommand(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the output message for the exit command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     * @return The output message.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"    public String getOutput() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"        return \"\\nYou are dismissed.\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":31}},{"path":"src/main/java/command/general/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.general;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import command.Command;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import ui.InputReader;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to filter tasks by their descriptions containing a given keyword.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    private final String keyword;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"find\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a FindCommand with the specified arguments and task list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    public FindCommand(String[] args, TaskList tasks) throws IllegalArgumentException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"        this.keyword \u003d InputReader.retriveStringArg(args);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the output message for the find command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     * @return The output message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"    public String getOutput() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"        return this.tasks.filter(this.keyword).toString();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":40}},{"path":"src/main/java/command/general/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.general;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import command.Command;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"list\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a ListCommand with the specified arguments and task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    public ListCommand(String[] args, TaskList tasks) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the output message for the list command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     * @return The output message.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    public String getOutput() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"        return this.tasks.toString();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":36}},{"path":"src/main/java/command/modify/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.modify;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"public class DeleteCommand extends ModifyCommand {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"delete\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a DeleteCommand with the specified arguments and task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    public DeleteCommand(String[] args, TaskList tasks)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"        super(args, tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    private DeleteCommand(DeleteCommand command, Task task) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"        super(command, task);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     * Updates the task after deletion.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     * @param task The task to be updated.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated DeleteCommand.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    public DeleteCommand updateTask(Task task) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        return new DeleteCommand(this, task);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the output message for the delete command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"     * @return The output message.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"    public String getOutput() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"        return \"Deleted: \" + this.getTask();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":51}},{"path":"src/main/java/command/modify/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.modify;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"public class MarkCommand extends ModifyCommand {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"mark\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a MarkCommand with the specified arguments and task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    public MarkCommand(String[] args, TaskList tasks)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"        super(args, tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    private MarkCommand(MarkCommand command, Task task) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"        super(command, task);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     * Updates the task after marking it as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     * @param task The task to be updated.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated MarkCommand.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    public MarkCommand updateTask(Task task) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        return new MarkCommand(this, task);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":41}},{"path":"src/main/java/command/modify/ModifyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.modify;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import command.Command;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"import ui.InputReader;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to modify a task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"public abstract class ModifyCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"    private final Optional\u003cTask\u003e taskToModify;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a ModifyCommand with the specified arguments, task list, task index, and task to modify.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     * @param taskIndex The index of the task to be modified.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     * @param taskToModify The task to be modified.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"    private ModifyCommand(String[] args, TaskList tasks, int taskIndex, Optional\u003cTask\u003e taskToModify) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"        super(args);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"        this.taskToModify \u003d taskToModify;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a ModifyCommand with the specified arguments and task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"    protected ModifyCommand(String[] args, TaskList tasks)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"        this(args, tasks, InputReader.retriveIntArg(args), Optional.empty());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a ModifyCommand with the specified command and task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"     * @param command The command to be modified.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"     * @param task The task to be modified.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"    protected ModifyCommand(ModifyCommand command, Task task) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"        this(command.args, command.tasks, command.taskIndex, Optional.of(task));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the index of the task to be modified.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"     * @return The index of the task to be modified.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"        return this.taskIndex;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the task to be modified.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"     * @return The task to be modified.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"    public Task getTask() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"        return this.taskToModify.orElseGet(() -\u003e this.tasks.get(this.taskIndex));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the output message for the unmark command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"     * @return The output message.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"    public String getOutput() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"        return \"Updated: \" + this.getTask();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"     * Updates the task after modification.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"     * @param task The task to be updated.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated ModifyCommand.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"vegetablestabber"},"content":"    public abstract ModifyCommand updateTask(Task task);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":93}},{"path":"src/main/java/command/modify/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package command.modify;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"public class UnmarkCommand extends ModifyCommand {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"    public static final String CLI_REPRESENTATION \u003d \"unmark\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an UnmarkCommand with the specified arguments and task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    public UnmarkCommand(String[] args, TaskList tasks)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"        throws IllegalArgumentException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"        super(args, tasks);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    private UnmarkCommand(UnmarkCommand command, Task task) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"        super(command, task);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     * Updates the task after unmarking it as not done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     * @param task The task to be updated.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated UnmarkCommand.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    public UnmarkCommand updateTask(Task task) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        return new UnmarkCommand(this, task);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":41}},{"path":"src/main/java/storage/TaskReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"import task.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"import task.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"import task.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"import task.ToDo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"import ui.UI;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":" * Reads tasks from a file.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"public class TaskReader {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    public static final String DELIMITER \u003d \"|\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     * Reads a task from a line of text.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     * @param line The line of text.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     * @return An Optional containing the task if it was successfully read, or an empty Optional if not.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    private static Optional\u003cTask\u003e readTaskFromLine(String line) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"        String[] args \u003d line.split(Pattern.quote(DELIMITER));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"        String taskType \u003d args[0];","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"        boolean isComplete \u003d Boolean.parseBoolean(args[1]);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"        String description \u003d args[2];","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        Optional\u003cTask\u003e task \u003d Optional.empty();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"        switch (taskType) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"        case ToDo.LINE_ID:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"            task \u003d Optional.of(new ToDo(description));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"        case Deadline.LINE_ID:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"            String dueDateString \u003d args[3];","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"            task \u003d Optional.of(new Deadline(description, dueDateString));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"        case Event.LINE_ID:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"            String startDateString \u003d args[3];","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"            String endDateString \u003d args[4];","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"            task \u003d Optional.of(new Event(description, startDateString, endDateString));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"            break;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"        task \u003d task.map(t -\u003e isComplete","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"                ? t.markAsComplete()","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"                : t.markAsIncomplete());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"        return task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"     * Reads the tasks from the specified file.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"     * @param dataPathString The path to the file.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"    public static TaskList read(String dataPathString) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"        UI.printReadInitialisation();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"            Path dataPath \u003d Paths.get(dataPathString);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"            Files.createDirectories(dataPath.getParent());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"            if (Files.notExists(dataPath)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"                UI.printDidNotRead();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"                return new TaskList();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"            if (isFileEmpty(dataPathString)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"                UI.printFileReadIsEmpty();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"                return new TaskList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"            return parseTasks(dataPathString);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"            UI.printReadFailure(e);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"            return new TaskList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"vegetablestabber"},"content":"     * Checks if the file is empty.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"vegetablestabber"},"content":"     * @param dataPathString The path to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"vegetablestabber"},"content":"     * @return True if the file is empty, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"vegetablestabber"},"content":"    private static boolean isFileEmpty(String dataPathString) throws IOException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"vegetablestabber"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(dataPathString));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"vegetablestabber"},"content":"        boolean isEmpty \u003d reader.readLine() \u003d\u003d null;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"vegetablestabber"},"content":"        reader.close();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"vegetablestabber"},"content":"        return isEmpty;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"vegetablestabber"},"content":"     * Parses tasks from the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"vegetablestabber"},"content":"     * @param dataPathString The path to the file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"vegetablestabber"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"vegetablestabber"},"content":"    private static TaskList parseTasks(String dataPathString) throws IOException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"vegetablestabber"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(dataPathString));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"vegetablestabber"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"vegetablestabber"},"content":"        reader.lines().forEach(line -\u003e {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"vegetablestabber"},"content":"            Optional\u003cTask\u003e task \u003d readTaskFromLine(line);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"vegetablestabber"},"content":"            task.ifPresent(t -\u003e tasks.add(t));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"vegetablestabber"},"content":"        });","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"vegetablestabber"},"content":"        reader.close();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"vegetablestabber"},"content":"        UI.printReadSuccess(tasks.size());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"vegetablestabber"},"content":"        return tasks;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":130}},{"path":"src/main/java/storage/TaskWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"import ui.UI;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":" * Writes tasks to a file.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"public class TaskWriter {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"    public static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     * Formats a LocalDate to a string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     * @param date The date to be formatted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"        return DATE_FORMATTER.format(date);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"     * Writes the tasks to the specified file.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     * @param dataPathString The path to the file.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    public static void write(TaskList tasks, String dataPathString) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        UI.printWriteInitialisation();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"            Path dataDirectory \u003d Paths.get(dataPathString);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"            Files.createDirectories(dataDirectory.getParent());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"            Path dataPath \u003d Paths.get(dataPathString);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"            Files.write(dataPath, tasks.getRawString().getBytes(),","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"                    StandardOpenOption.CREATE, StandardOpenOption.WRITE);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"            UI.printWriteSuccess(tasks.size());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"            UI.printWriteFailure(e);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":54}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskReader;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskWriter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":" * Represents a deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"    public static final String LINE_ID \u003d \"D\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a Deadline with the specified description and due date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     * @param dueDateString The due date of the deadline.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    public Deadline(String description, String dueDateString) throws DateTimeParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"        this.dueDate \u003d LocalDate.parse(dueDateString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a Deadline from an existing task and due date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     * @param deadline The existing task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     * @param dueDate The due date of the deadline.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    private Deadline(Task deadline, LocalDate dueDate) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        super(deadline);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the raw string representation of the deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"     * @return The raw string representation of the deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"    public String getRawString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"        StringJoiner sj \u003d new StringJoiner(TaskReader.DELIMITER);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(LINE_ID);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(super.getRawString());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(TaskWriter.formatDate(dueDate));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"        return sj.toString();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"    public String toString() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the deadline task as complete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"    public Deadline markAsComplete() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"        return new Deadline(super.markAsComplete(), this.dueDate);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the deadline task as incomplete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"    public Deadline markAsIncomplete() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"        return new Deadline(super.markAsIncomplete(), this.dueDate);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":87}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskReader;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskWriter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":" * Represents an event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"    public static final String LINE_ID \u003d \"E\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an Event with the specified description, start date/time, and end date/time.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     * @param startDateString The start date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     * @param endDateString The end date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     * @throws DateTimeParseException If date strings are not formatted properly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"    public Event(String description, String startDateString, String endDateString) throws DateTimeParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"        this.startDate \u003d LocalDate.parse(startDateString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"        this.endDate \u003d LocalDate.parse(endDateString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an Event from an existing task and dates.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"     * @param event The existing task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"    private Event(Task event, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"        super(event);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"    public String toString() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDate","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"            + \" to: \" + endDate + \")\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the raw string representation of the event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"     * @return The raw string representation of the event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"    public String getRawString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"        StringJoiner sj \u003d new StringJoiner(TaskReader.DELIMITER);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(LINE_ID);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(super.getRawString());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(TaskWriter.formatDate(startDate));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(TaskWriter.formatDate(endDate));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"        return sj.toString();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the event task as complete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"    public Event markAsComplete() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"        return new Event(super.markAsComplete(), this.startDate, this.endDate);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the event task as incomplete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"    public Event markAsIncomplete() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"vegetablestabber"},"content":"        return new Event(super.markAsIncomplete(), this.startDate, this.endDate);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":94}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskReader;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" * Represents a task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"    private final String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"    private final boolean isComplete;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     * @param isComplete The completion status of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    private Task(String description, boolean isComplete) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a Task from an existing task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     * @param task The existing task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"    protected Task(Task task) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"        this(task.description, task.isComplete);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"        this(description, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"        return description;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"            this.isComplete ? \"X\" : \" \", this.description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the raw string representation of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"     * @return The raw string representation of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"    public String getRawString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"        StringJoiner sj \u003d new StringJoiner(TaskReader.DELIMITER);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(this.isComplete + \"\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(this.description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"        return sj.toString();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the task as complete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"    public Task markAsComplete() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"        return new Task(this.description, true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"    public Task markAsIncomplete() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"        return new Task(this.description, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":90}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"    private TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"        this.list \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the string representation of the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"     * @return The string representation of the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"            return \"No tasks present.\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"        return String.join(\"\\n\", IntStream.range(0, this.list.size())","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + this.list.get(i)).toList());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the raw string representation of the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"     * @return The raw string representation of the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"    public String getRawString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"        return String.join(\"\\n\", this.list.stream()","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"                .map(task -\u003e task.getRawString())","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"                .toList());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"    public int size() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"        return this.list.size();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"     * Validates and maps a task based on the provided index and actions.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"     * @param \u003cT\u003e The type of the result.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"     * @param oneBasedIndex The one-based index of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"     * @param transformAction The action to transform the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"     * @param successAction The action to perform on the transformed task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"     * @return The result of the success action.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalStateException If there are no tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"    private \u003cT\u003e T validateAndMapTask(int oneBasedIndex,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"            BiFunction\u003cInteger, Task, Task\u003e transformAction, Function\u003cTask, T\u003e successAction)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"            throws IllegalStateException, IndexOutOfBoundsException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"        int index \u003d oneBasedIndex - 1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c this.list.size()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"            Task task \u003d this.list.get(index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"            Task updatedTask \u003d transformAction.apply(index, task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"            return successAction.apply(updatedTask);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"            throw new IllegalStateException(\"You have no tasks.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"        throw new IndexOutOfBoundsException(\"Index \" + oneBasedIndex +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"                \" lies outside of valid range (1-\" + this.list.size() + \").\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"vegetablestabber"},"content":"     * @param oneBasedIndex The one-based index of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"vegetablestabber"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"vegetablestabber"},"content":"    public Task get(int oneBasedIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"vegetablestabber"},"content":"        return this.validateAndMapTask(oneBasedIndex, (index, task) -\u003e task, task -\u003e task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"vegetablestabber"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"vegetablestabber"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"vegetablestabber"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"vegetablestabber"},"content":"        this.list.add(task);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"vegetablestabber"},"content":"     * Deletes a task from the task list and performs an action on the deleted task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"vegetablestabber"},"content":"     * @param oneBasedIndex The one-based index of the task to be deleted.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"vegetablestabber"},"content":"     * @param successAction The action to be performed after deletion.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"vegetablestabber"},"content":"     * @param \u003cT\u003e           The type of the result.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"vegetablestabber"},"content":"     * @return The result of the success action.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"vegetablestabber"},"content":"    public \u003cT\u003e T deleteAndMapTask(int oneBasedIndex, Function\u003cTask, T\u003e successAction)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"vegetablestabber"},"content":"            throws IndexOutOfBoundsException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"vegetablestabber"},"content":"        return validateAndMapTask(oneBasedIndex, (index, task) -\u003e {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"vegetablestabber"},"content":"            this.list.remove(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"vegetablestabber"},"content":"            return task;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"vegetablestabber"},"content":"        }, successAction);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"vegetablestabber"},"content":"     * Marks a task as complete and performs an action on the updated task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"vegetablestabber"},"content":"     * @param oneBasedIndex The one-based index of the task to be marked.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"vegetablestabber"},"content":"     * @param successAction The action to be performed after marking.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"vegetablestabber"},"content":"     * @param \u003cT\u003e           The type of the result.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"vegetablestabber"},"content":"     * @return The result of the success action.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"vegetablestabber"},"content":"    public \u003cT\u003e T markAndMapTask(int oneBasedIndex, Function\u003cTask, T\u003e successAction)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"vegetablestabber"},"content":"            throws IndexOutOfBoundsException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"vegetablestabber"},"content":"        return validateAndMapTask(oneBasedIndex, (index, task) -\u003e {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"vegetablestabber"},"content":"            Task updatedTask \u003d task.markAsComplete();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"vegetablestabber"},"content":"            this.list.set(index, updatedTask);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"vegetablestabber"},"content":"            return updatedTask;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"vegetablestabber"},"content":"        }, successAction);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"vegetablestabber"},"content":"     * Unmarks a task as incomplete and performs an action on the updated task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"vegetablestabber"},"content":"     * @param oneBasedIndex The one-based index of the task to be unmarked.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"vegetablestabber"},"content":"     * @param successAction The action to be performed after unmarking.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"vegetablestabber"},"content":"     * @param \u003cT\u003e           The type of the result.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"vegetablestabber"},"content":"     * @return The result of the success action.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"vegetablestabber"},"content":"    public \u003cT\u003e T unmarkAndMapTask(int oneBasedIndex, Function\u003cTask, T\u003e successAction)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"vegetablestabber"},"content":"            throws IndexOutOfBoundsException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"vegetablestabber"},"content":"        return validateAndMapTask(oneBasedIndex, (index, task) -\u003e {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"vegetablestabber"},"content":"            Task updatedTask \u003d task.markAsIncomplete();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"vegetablestabber"},"content":"            this.list.set(index, updatedTask);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"vegetablestabber"},"content":"            return updatedTask;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"vegetablestabber"},"content":"        }, successAction);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"vegetablestabber"},"content":"     * Filters the tasks in the task list based on a keyword.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"vegetablestabber"},"content":"     * @param keyword The keyword to filter tasks by.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"vegetablestabber"},"content":"     * @return A new TaskList containing tasks that match the keyword.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"vegetablestabber"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"vegetablestabber"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.list.parallelStream()","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"vegetablestabber"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"vegetablestabber"},"content":"                .toList();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"vegetablestabber"},"content":"        return new TaskList(filteredTasks);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":181}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskReader;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":" * Represents a to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"    public static final String LINE_ID \u003d \"T\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a ToDo with the specified description.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     * Constructs a ToDo from an existing task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"     * @param todo The existing task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"    private ToDo(Task todo) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"        super(todo);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the string representation of the to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"    public String toString() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"     * Returns the raw string representation of the to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"     * @return The raw string representation of the to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"    public String getRawString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"        StringJoiner sj \u003d new StringJoiner(TaskReader.DELIMITER);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(LINE_ID);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"        sj.add(super.getRawString());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"        return sj.toString();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the to-do task as complete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"    public ToDo markAsComplete() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"        return new ToDo(super.markAsComplete());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"     * Marks the to-do task as incomplete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"     * @return The updated to-do task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"    public ToDo markAsIncomplete() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"        return new ToDo(super.markAsIncomplete());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":76}},{"path":"src/main/java/ui/InputReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package ui;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":" * Utility class for reading and parsing command line arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":" * Provides methods to extract values and create argument maps from command input.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":"public class InputReader {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"     * Combines an array of strings with spaces between them.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"     * @param array The array of strings to combine.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"     * @param startIndex The starting index in the array (inclusive).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"     * @param endExclusivestartIndex The ending index in the array (exclusive).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"     * @return The combined string with spaces between elements.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If the resulting string is empty.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"    private static String combineSpacedStrings(String[] array, int startIndex,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"        int endExclusivestartIndex) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"        StringJoiner sj \u003d new StringJoiner(\" \");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"        IntStream.range(startIndex, endExclusivestartIndex)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"                .forEach(i -\u003e sj.add(array[i]));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"        String str \u003d sj.toString().trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"        return str;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"     * Finds the index of a specified argument in an array within a given range.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"     * @param arg The argument to search for.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"     * @param array The array to search in.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"     * @param startIndex The starting index to begin the search.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"     * @param endExclusiveIndex The ending index to end the search (exclusive).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"     * @return The index of the argument if found.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"    private static int indexOfArg(String arg, String[] array, int startIndex,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"        int endExclusiveIndex) throws IllegalArgumentException  {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"        return IntStream.range(startIndex, endExclusiveIndex)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"                .filter(i -\u003e array[i].toLowerCase().equals(arg))","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"                .findFirst()","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"                .orElseThrow(() -\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"                    new IllegalArgumentException(\"\u0027\" + arg + \"\u0027 argument missing.\"));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"     * Retrieves the argument value for a command with a single implicit argument.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"     * The value is assumed to start from index 1 of the array.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"     * @param givenArgs The array of command arguments.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"     * @return The combined string value of all arguments after index 0.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"    public static String retriveStringArg(String[] givenArgs) throws IllegalArgumentException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"        String argValue \u003d combineSpacedStrings(givenArgs, 1, givenArgs.length);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"        if (argValue.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"            throw new IllegalArgumentException(\"No parameter provided.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"        return argValue;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"     * Retrieves an integer argument from the command line arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"     * @param givenArgs The array of command arguments.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"     * @return The parsed integer value.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"    public static int retriveIntArg(String[] givenArgs) throws IllegalArgumentException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"        String argValue \u003d retriveStringArg(givenArgs);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"            return Integer.parseInt(argValue);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"            throw new NumberFormatException(\"\u0027\" + argValue + \"\u0027 is not a number.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"     * Creates a map of argument names to their values from the command line arguments.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"     * @param givenArgs The array of command arguments.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"vegetablestabber"},"content":"     * @param requiredArgs The array of required argument names.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"vegetablestabber"},"content":"     * @param hasImplicitInitialArg Whether the command has an implicit initial argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"vegetablestabber"},"content":"     * @return A HashMap mapping argument names to their values.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"vegetablestabber"},"content":"    public static HashMap\u003cString, String\u003e retriveArgMap(String[] givenArgs,","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"vegetablestabber"},"content":"        String[] requiredArgs, boolean hasImplicitInitialArg) throws IllegalArgumentException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"vegetablestabber"},"content":"        // Number of arguments required for command","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"vegetablestabber"},"content":"        int requiredArgCount \u003d requiredArgs.length + (hasImplicitInitialArg ? 1 : 0);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"vegetablestabber"},"content":"        if (requiredArgs.length \u003d\u003d 0) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"vegetablestabber"},"content":"            throw new IllegalArgumentException(\"No arguments provided for retrieval.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"vegetablestabber"},"content":"        // Number of split strings from input","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"vegetablestabber"},"content":"        int givenArgCount \u003d givenArgs.length;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"vegetablestabber"},"content":"        // Argument map to store argument names and values","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"vegetablestabber"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e(requiredArgCount);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"vegetablestabber"},"content":"        // Indices of starting argument values within string array from split input","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"vegetablestabber"},"content":"        ArrayList\u003cInteger\u003e startIndices \u003d new ArrayList\u003c\u003e(requiredArgCount);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"vegetablestabber"},"content":"        // First argument value starts from the index 1 (after the command)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"vegetablestabber"},"content":"        startIndices.add(1);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"vegetablestabber"},"content":"        for (int i \u003d 0; i \u003c requiredArgCount; i++) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"vegetablestabber"},"content":"            // Obtain the current argument index","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"vegetablestabber"},"content":"            int argIndex \u003d hasImplicitInitialArg ? (i - 1) : i;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"vegetablestabber"},"content":"            // Obtain the current argument (empty for implicit initial argument)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"vegetablestabber"},"content":"            String arg \u003d (i \u003d\u003d 0 \u0026\u0026 hasImplicitInitialArg) ? \"\" : requiredArgs[argIndex];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"vegetablestabber"},"content":"            // Obtain the index of next required argument within the split string array","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"vegetablestabber"},"content":"            int endIndex \u003d (i !\u003d requiredArgCount - 1)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"vegetablestabber"},"content":"                    ? indexOfArg(requiredArgs[argIndex + 1], givenArgs, startIndices.get(i), givenArgCount)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"vegetablestabber"},"content":"                    : givenArgCount;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"vegetablestabber"},"content":"            // Combine the strings from the start index to the end index (exclusive)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"vegetablestabber"},"content":"            String argValue \u003d combineSpacedStrings(givenArgs, startIndices.get(i), endIndex);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"vegetablestabber"},"content":"            if (argValue.isEmpty()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"vegetablestabber"},"content":"                throw new IllegalArgumentException(\"No parameter provided for \u0027\" + arg + \"\u0027.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"vegetablestabber"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"vegetablestabber"},"content":"            // Update the argument map","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"vegetablestabber"},"content":"            argMap.put(arg, argValue);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"vegetablestabber"},"content":"            // Append the new start index","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"vegetablestabber"},"content":"            // (only if \u0027i\u0027 is not the last required argument index)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"vegetablestabber"},"content":"            if (i !\u003d requiredArgCount - 1) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"vegetablestabber"},"content":"                startIndices.add(endIndex + 1);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"vegetablestabber"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"vegetablestabber"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"vegetablestabber"},"content":"        return argMap;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"vegetablestabber"},"content":"     * Creates a map of argument names to their values, assuming an implicit initial argument.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"vegetablestabber"},"content":"     * This is a convenience method that calls retriveArgMap with hasImplicitInitialArg set to true.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"vegetablestabber"},"content":"     * @param givenArgs The array of command arguments.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"vegetablestabber"},"content":"     * @param requiredArgs The array of required argument names.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"vegetablestabber"},"content":"     * @return A HashMap mapping argument names to their values.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"vegetablestabber"},"content":"     * @throws IllegalArgumentException If there is an illegal argument.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"vegetablestabber"},"content":"    public static HashMap\u003cString, String\u003e retriveArgMap(String[] givenArgs,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"vegetablestabber"},"content":"        String[] requiredArgs) throws IllegalArgumentException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"vegetablestabber"},"content":"        return retriveArgMap(givenArgs, requiredArgs, true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":163}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vegetablestabber"},"content":"package ui;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"vegetablestabber"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vegetablestabber"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"vegetablestabber"},"content":"import bot.Bot;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"vegetablestabber"},"content":"import command.Command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vegetablestabber"},"content":"import command.general.ExitCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vegetablestabber"},"content":"import storage.TaskWriter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vegetablestabber"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"vegetablestabber"},"content":" * Represents the user interface for interacting with the bot.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"vegetablestabber"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vegetablestabber"},"content":"public class UI {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"vegetablestabber"},"content":"    /** The logo displayed when starting the application. */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"vegetablestabber"},"content":"    private static final String LOGO \u003d \"     ______ ____________________\\n\" + \"    / __/ //_/ __/ __/_  __/ __/\\n\"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"            + \"   _\\\\ \\\\/ ,\u003c / _// _/  / / _\\\\ \\\\  \\n\" + \"  /___/_/|_/___/___/ /_/ /___/  \";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"vegetablestabber"},"content":"     * Connects the UI to the bot and starts the interaction loop.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"     * @param bot The bot to connect to.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vegetablestabber"},"content":"    public static void connect(Bot bot) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"vegetablestabber"},"content":"        greetUser();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"vegetablestabber"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vegetablestabber"},"content":"        String input;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"vegetablestabber"},"content":"        do {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"vegetablestabber"},"content":"            input \u003d requestUserInput(scanner);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"vegetablestabber"},"content":"            try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"vegetablestabber"},"content":"                Command command \u003d bot.handleUserInput(input);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"vegetablestabber"},"content":"                System.out.println(command.getOutput());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"vegetablestabber"},"content":"            } catch (IllegalArgumentException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"vegetablestabber"},"content":"                System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"vegetablestabber"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"vegetablestabber"},"content":"                System.out.println(\"Error: \u0027\" + e.getParsedString()","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"vegetablestabber"},"content":"                    + \"\u0027 is not of the format \u0027\" + TaskWriter.DATE_FORMAT + \"\u0027.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vegetablestabber"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vegetablestabber"},"content":"        } while (!isUserExiting(input));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vegetablestabber"},"content":"        scanner.close();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vegetablestabber"},"content":"     * Displays the welcome message and logo to the user.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vegetablestabber"},"content":"    private static void greetUser() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(LOGO + \"\\n\\nBend your knee and ask what you desire.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"vegetablestabber"},"content":"     * Requests and retrieves input from the user.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"vegetablestabber"},"content":"     * @param scanner The scanner to read input from.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vegetablestabber"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vegetablestabber"},"content":"    private static String requestUserInput(Scanner scanner) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"vegetablestabber"},"content":"        System.out.print(\"\\nWhat do you want? \");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vegetablestabber"},"content":"        return scanner.nextLine().strip();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"vegetablestabber"},"content":"     * Checks if the user is exiting the application.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"vegetablestabber"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"vegetablestabber"},"content":"     * @return true if the user is exiting, false otherwise.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"vegetablestabber"},"content":"    private static boolean isUserExiting(String input) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"vegetablestabber"},"content":"        return input.equals(ExitCommand.CLI_REPRESENTATION);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating that the application is reading from local data.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vegetablestabber"},"content":"    public static void printReadInitialisation() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"Reading from local data...\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating that no file is available.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"vegetablestabber"},"content":"    public static void printDidNotRead() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"No file is available.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating that the file read is empty.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"vegetablestabber"},"content":"    public static void printFileReadIsEmpty() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"File is empty.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating the number of tasks successfully read.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"vegetablestabber"},"content":"     * @param count The number of tasks read.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"vegetablestabber"},"content":"    public static void printReadSuccess(int count) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"Successfully read *\" + count + \"* \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"vegetablestabber"},"content":"            + (count \u003d\u003d 1 ? \"task\" : \"tasks\") + \"!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating a failure to read tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"vegetablestabber"},"content":"     * @param e The exception that occurred during reading.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"vegetablestabber"},"content":"    public static void printReadFailure(Exception e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"Unable to read any tasks.\\n(Error: \" + e + \")\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating that the application is writing to local data.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"vegetablestabber"},"content":"    public static void printWriteInitialisation() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"\\nWriting to local data...\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating the number of tasks successfully written.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"vegetablestabber"},"content":"     * @param count The number of tasks written.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"vegetablestabber"},"content":"    public static void printWriteSuccess(int count) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"Successfully wrote *\" + count + \"* \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"vegetablestabber"},"content":"            + (count \u003d\u003d 1 ? \"task\" : \"tasks\") + \"!\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"vegetablestabber"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"vegetablestabber"},"content":"     * Prints a message indicating a failure to write tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"vegetablestabber"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"vegetablestabber"},"content":"     * @param e The exception that occurred during writing.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"vegetablestabber"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"vegetablestabber"},"content":"    public static void printWriteFailure(Exception e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"vegetablestabber"},"content":"        System.out.println(\"Unable to write any tasks.\\n(Error: \" + e + \")\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"vegetablestabber"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"vegetablestabber"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"vegetablestabber"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":141}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"vegetablestabber"},"content":"java -classpath ..\\bin Skeets \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"vegetablestabber"},"content":"java -classpath ../bin Skeets \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"vegetablestabber":1,"-":37}}]
