[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"# Keesma","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"Welcome to Keesma, a chatbot designed to help you keep track of tasks. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"1. After that, locate the `src/main/java/Keesma.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"   Helloooo I\u0027m Keesma, what can I do for you today babyboo","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":4,"-":17}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"E | 0 | 2113 class | 1pm | 2pm","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"D | 0 | 2027 assignment | Saturday 11.59pm","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"# Keesma User Guide","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":"## Introduction","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":"Keesma is a quirky and personality-filled task management application that runs on the command line. With its distinctive style and conversational interface, Keesma helps you keep track of your tasks, deadlines, and events with a uniquely entertaining approach.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"## Quick Start","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"1. Ensure you have Java 17 installed","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"2. Download the latest `ip.jar` from the [releases page](https://github.com/Xavierleejrui/ip/releases)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"3. Run the application using: `java -jar ip.jar`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"## Features","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"### 1. Adding a Todo Task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"Quickly add simple todo tasks to your list.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `todo DESCRIPTION`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"**Example:** `todo finish CS2113 homework`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"Yes bro I have added:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"\t[T] [ ] finish CS2113 homework","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"Now there are 1 tasks in the list","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"### 2. Adding a Deadline","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"Add tasks with specific deadlines to ensure you never miss a due date.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `deadline DESCRIPTION /by DATE_TIME`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"**Example:** `deadline submit report /by 15/3/2025 1430`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"Yes bro I have added:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"\t[D] [ ] submit report (by: Mar 15 2025, 02:30PM)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"Now there are 2 tasks in the list","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"### 3. Adding an Event","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"Schedule events with start and end times.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `event DESCRIPTION /from START_TIME /to END_TIME`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"**Example:** `event team meeting /from 16/3/2025 1000 /to 16/3/2025 1200`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"Yes bro I have added:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"\t[E] [ ] team meeting (from: Mar 16 2025, 10:00AM to: Mar 16 2025, 12:00PM)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"Now there are 3 tasks in the list","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"### 4. Listing All Tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"View all your current tasks in a numbered list.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `list`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"You have 3 tasks:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"\t1. [T] [ ] finish CS2113 homework","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"\t2. [D] [ ] submit report (by: Mar 15 2025, 02:30PM)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"\t3. [E] [ ] team meeting (from: Mar 16 2025, 10:00AM to: Mar 16 2025, 12:00PM)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"### 5. Marking a Task as Done","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"Mark tasks as completed when you\u0027ve finished them.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `mark TASK_NUMBER`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"**Example:** `mark 1`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"Your task has been marked as done babyboo","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"\t[T] [X] finish CS2113 homework","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"### 6. Unmarking a Task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"Change a completed task back to incomplete if needed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `unmark TASK_NUMBER`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"**Example:** `unmark 1`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"Your task has been unmarked gugu","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xavierleejrui"},"content":"\t[T] [ ] finish CS2113 homework","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xavierleejrui"},"content":"### 7. Deleting a Task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xavierleejrui"},"content":"Remove tasks you no longer need to track.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `delete TASK_NUMBER`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xavierleejrui"},"content":"**Example:** `delete 2`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xavierleejrui"},"content":"Yes boss I have removed this task for you.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xavierleejrui"},"content":"\t[D] [ ] submit report (by: Mar 15 2025, 02:30PM)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xavierleejrui"},"content":"Now there are 2 tasks in the list","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xavierleejrui"},"content":"### 8. Finding Tasks by Keyword","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xavierleejrui"},"content":"Search for specific tasks using keywords.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `find KEYWORD`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xavierleejrui"},"content":"**Example:** `find meeting`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xavierleejrui"},"content":"Here are the matching tasks in your list for \"meeting\":","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xavierleejrui"},"content":"\t1. [E] [ ] team meeting (from: Mar 16 2025, 10:00AM to: Mar 16 2025, 12:00PM)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xavierleejrui"},"content":"### 9. Exiting the Application","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xavierleejrui"},"content":"Close the application when you\u0027re done.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xavierleejrui"},"content":"**Format:** `bye`","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xavierleejrui"},"content":"Bye, Hope to see you again soon, you smell great by the way, although you did smell better last night hehe ^ W ^ ","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xavierleejrui"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Xavierleejrui"},"content":"```","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xavierleejrui"},"content":"## Date and Time Format","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xavierleejrui"},"content":"For deadlines and events, Keesma accepts dates and times in the following format:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Xavierleejrui"},"content":"- `d/M/yyyy HHmm` (e.g., `15/3/2025 1430` for March 15, 2025, 2:30 PM)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xavierleejrui"},"content":"Keesma will display dates in a more friendly format: `MMM d yyyy, hh:mma` (e.g., `Mar 15 2025, 02:30PM`)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xavierleejrui"},"content":"## Command Summary","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Xavierleejrui"},"content":"| Command | Format | Example |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Xavierleejrui"},"content":"|---------|--------|---------|","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Xavierleejrui"},"content":"| **Add Todo** | `todo DESCRIPTION` | `todo finish CS2113 homework` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Xavierleejrui"},"content":"| **Add Deadline** | `deadline DESCRIPTION /by DATE_TIME` | `deadline submit report /by 15/3/2025 1430` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Xavierleejrui"},"content":"| **Add Event** | `event DESCRIPTION /from START_TIME /to END_TIME` | `event team meeting /from 16/3/2025 1000 /to 16/3/2025 1200` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xavierleejrui"},"content":"| **List Tasks** | `list` | `list` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Xavierleejrui"},"content":"| **Mark as Done** | `mark TASK_NUMBER` | `mark 1` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Xavierleejrui"},"content":"| **Unmark** | `unmark TASK_NUMBER` | `unmark 1` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Xavierleejrui"},"content":"| **Delete** | `delete TASK_NUMBER` | `delete 2` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Xavierleejrui"},"content":"| **Find** | `find KEYWORD` | `find meeting` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Xavierleejrui"},"content":"| **Exit** | `bye` | `bye` |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Xavierleejrui"},"content":"## Error Messages","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Xavierleejrui"},"content":"Keesma will let you know when something goes wrong with its unique style:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Xavierleejrui"},"content":"- **Invalid Command**: \"Eh bro can put a proper command anot smh\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Xavierleejrui"},"content":"- **Empty Todo**: \"Can you type something lol thanks bro\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Xavierleejrui"},"content":"- **Invalid Deadline Format**: \"Can you type the format properly lol thanks bro make sure you add description and date.\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Xavierleejrui"},"content":"- **Invalid Event Format**: \"Can you type the format properly lol thanks bro\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Xavierleejrui"},"content":"- **Invalid Task Number**: \"Can type your task number properly :\u0027)\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Xavierleejrui"},"content":"- **Invalid Number**: \"Bruh can you type a valid number? Thanks bro.\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Xavierleejrui"},"content":"- **Empty Find Keyword**: \"Bruh what you want me to find? Give keyword lah.\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Xavierleejrui"},"content":"## Data Storage","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Xavierleejrui"},"content":"Keesma automatically saves your tasks to a file at `data/tasks.txt`. This ensures your tasks persist between application runs.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Xavierleejrui"},"content":"---","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Xavierleejrui"},"content":"*Made with ❤️ by Xavier Lee Jingrui","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":175,"-":16}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":" * A Deadline is a task that needs to be completed by a specific date and time.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":" * It extends the basic Task class with deadline functionality.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"    protected String byString; // Original string input for file storage","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mma\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a new Deadline task with the given description, completion status, and due date.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"     * Attempts to parse the due date string into a LocalDateTime object.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"     * @param isDone Whether the task is initially marked as done","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"     * @param by The due date of the deadline task (in format d/M/yyyy HHmm)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"        super(description, isDone);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"        this.byString \u003d by;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"        try {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"            this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"            // If parsing fails, keep the original string only","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"            this.by \u003d null;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a new Deadline task with a pre-parsed LocalDateTime object.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"     * Used when the date has already been parsed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"     * @param isDone Whether the task is initially marked as done","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"     * @param by The parsed LocalDateTime object representing the due date","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"     * @param byString The original string representation of the due date","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by, String byString) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"        this.byString \u003d byString;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the original string representation of the due date.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The due date as a string, exactly as it was input","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"    public String getDueDate() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"        return byString;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the parsed LocalDateTime object representing the due date.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"     * May be null if parsing failed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The parsed LocalDateTime object or null","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"    public LocalDateTime getDueDateTime() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"        return by;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the type identifier for this task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"     * A deadline task is represented by [D].","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The string \"[D]\" representing a deadline task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"        return \"[D]\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"     * Returns a string representation of this deadline task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"     * Includes the task status, description, and formatted due date.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The string representation of this deadline task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"            return super.toString() + \" (by: \" + by.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"        } else {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"            return super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"     * Returns a string representation of this deadline task for storage in a file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"     * The format is: \"D | isDone | description | byString\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + byString;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":104}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":" * Represents an event task with start and end times.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":" * An Event is a task that occurs during a specific time period.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":" * It extends the basic Task class with time period functionality.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"    private String fromString; // Original string input","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"    private String toString; // Original string input","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mma\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a new Event task with the given description, completion status, start time, and end time.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"     * Attempts to parse the time strings into LocalDateTime objects.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the event","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"     * @param isDone Whether the task is initially marked as done","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"     * @param from The start time of the event (in format d/M/yyyy HHmm)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"     * @param to The end time of the event (in format d/M/yyyy HHmm)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"        this.fromString \u003d from;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"        this.toString \u003d to;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"        try {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"            this.from \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"            this.from \u003d null;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"        try {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"            this.to \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"            this.to \u003d null;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the original string representation of the start time.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The start time as a string, exactly as it was input","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"        return fromString;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the original string representation of the end time.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The end time as a string, exactly as it was input","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"        return toString;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the type identifier for this task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"     * An event task is represented by [E].","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The string \"[E]\" representing an event task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"        return \"[E]\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"     * Returns a string representation of this event task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"     * Includes the task status, description, and formatted start and end times.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"     * Falls back to original string representations if parsing failed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The string representation of this event task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"        StringBuilder result \u003d new StringBuilder(super.toString());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"        result.append(\" (from: \");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"        if (from !\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"            result.append(from.format(OUTPUT_FORMAT));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"        } else {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"            result.append(fromString);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"        result.append(\" to: \");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"        if (to !\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"            result.append(to.format(OUTPUT_FORMAT));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"        } else {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"            result.append(toString);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"        result.append(\")\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"        return result.toString();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"     * Returns a string representation of this event task for storage in a file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xavierleejrui"},"content":"     * The format is: \"E | isDone | description | fromString | toString\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xavierleejrui"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xavierleejrui"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + fromString + \" | \" + toString;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":113}},{"path":"src/main/java/Keesma.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.List;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":" * Main class for the Keesma task management application.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":" * Coordinates the interactions between various components like","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":" * Parser, TaskList, UI, and Storage.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"public class Keesma {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"    private Parser parser;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a new Keesma application with the given file path for storage.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"     * Initializes UI, Storage, Parser, and TaskList components.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"     * @param filePath The file path for storage of tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"    public Keesma(String filePath) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (KeesmaException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"     * Runs the Keesma application.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays welcome message, processes user commands in a loop","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"     * until exit command is given, and handles any exceptions.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"    public void run() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"        ui.sayHello();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"        while (isRunning) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"                ui.promptCommand();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"                String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"                // Parse the user input into command and arguments","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"                String[] parsedInput \u003d parser.parseInput(userInput);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"                String command \u003d parsedInput[0];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"                String arguments \u003d parsedInput[1];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"                switch (command) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"                case \"list\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printTaskList(tasks.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"                case \"todo\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"                    // Validate the todo description","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"                    parser.validateTodoDescription(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"                    Task newTask \u003d tasks.addTodo(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printTaskAdded(newTask, tasks.size());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"                    storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"                case \"deadline\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"                    // Parse deadline arguments","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"                    String[] deadlineParts \u003d parser.parseDeadline(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"                    String description \u003d deadlineParts[0];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"                    String by \u003d deadlineParts[1];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"                    // Create the deadline","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"                    Task newDeadline \u003d tasks.addDeadline(description, by);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printTaskAdded(newDeadline, tasks.size());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"                    storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"                case \"event\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"                    // Parse event arguments","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"                    String[] eventParts \u003d parser.parseEvent(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"                    String eventDescription \u003d eventParts[0];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"                    String from \u003d eventParts[1];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"                    String to \u003d eventParts[2];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"                    // Create the event","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"                    Task newEvent \u003d tasks.addEvent(eventDescription, from, to);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printTaskAdded(newEvent, tasks.size());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"                    storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"                case \"mark\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"                    // Parse and validate the task number","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"                    int markTaskId \u003d parser.parseNumber(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"                    parser.validateTaskIndex(markTaskId, tasks.size());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"                    // Mark the task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"                    Task markedTask \u003d tasks.markTaskAsDone(markTaskId);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printTaskMarked(markedTask);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"                    storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"                case \"unmark\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"                    // Parse and validate the task number","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"                    int unmarkTaskId \u003d parser.parseNumber(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xavierleejrui"},"content":"                    parser.validateTaskIndex(unmarkTaskId, tasks.size());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xavierleejrui"},"content":"                    // Unmark the task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xavierleejrui"},"content":"                    Task unmarkedTask \u003d tasks.markTaskAsNotDone(unmarkTaskId);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printTaskUnmarked(unmarkedTask);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xavierleejrui"},"content":"                    storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xavierleejrui"},"content":"                case \"delete\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xavierleejrui"},"content":"                    // Parse and validate the task number","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xavierleejrui"},"content":"                    int deleteTaskId \u003d parser.parseNumber(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xavierleejrui"},"content":"                    parser.validateTaskIndex(deleteTaskId, tasks.size());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xavierleejrui"},"content":"                    // Delete the task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xavierleejrui"},"content":"                    Task deletedTask \u003d tasks.deleteTask(deleteTaskId);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printTaskDeleted(deletedTask, tasks.size());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xavierleejrui"},"content":"                    storage.saveTasks(tasks.getTaskList());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xavierleejrui"},"content":"                case \"find\":","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xavierleejrui"},"content":"                    if (arguments.isBlank()) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xavierleejrui"},"content":"                        throw new KeesmaException(\"Bruh what you want me to find? Give keyword lah.\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xavierleejrui"},"content":"                    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xavierleejrui"},"content":"                    List\u003cTask\u003e foundTasks \u003d tasks.findTasks(arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.printFoundTasks(foundTasks, arguments);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xavierleejrui"},"content":"                case \"bye\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xavierleejrui"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.sayBye();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xavierleejrui"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xavierleejrui"},"content":"                default:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xavierleejrui"},"content":"                    ui.handleBadCommand();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xavierleejrui"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xavierleejrui"},"content":"            } catch (KeesmaException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xavierleejrui"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xavierleejrui"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xavierleejrui"},"content":"        scanner.close();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xavierleejrui"},"content":"     * Main entry point for the application.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Xavierleejrui"},"content":"     * Creates and runs a new Keesma instance with the default storage path.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xavierleejrui"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xavierleejrui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Xavierleejrui"},"content":"        new Keesma(\"data/tasks.txt\").run();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":157}},{"path":"src/main/java/KeesmaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":" * Custom exception class for Keesma-specific errors.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":" * Used for conveying user-friendly error messages.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":"public class KeesmaException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a new KeesmaException with the specified message.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"     * @param message The error message","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"    public KeesmaException(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"        super(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"public class Parser {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"     * Parses the user input and extracts the command type and arguments.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":"     * @param userInput The user\u0027s input string","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A String array where the first element is the command type and the second element is the arguments","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If the input cannot be parsed","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"    public String[] parseInput(String userInput) throws KeesmaException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"        String trimmedInput \u003d userInput.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"        if (trimmedInput.isEmpty()) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(\"Empty commands are not allowed lah.\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"        String[] parts \u003d trimmedInput.split(\" \", 2);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"        String arguments \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"        return new String[] { commandType, arguments };","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"     * Validates a todo task description.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description to validate","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If the description is blank","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"    public void validateTodoDescription(String description) throws KeesmaException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(\"Can you type something lol thanks bro\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"     * Validates and parses a command argument with a specific delimiter.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"     * @param args The arguments for the command","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"     * @param delimiter The delimiter to split on (e.g., \" /by \")","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"     * @param errorMessage The error message to show if validation fails","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A String array containing the parts split by the delimiter","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If the command format is invalid","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"    public String[] parseWithDelimiter(String args, String delimiter, String errorMessage) throws KeesmaException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"        if (!args.contains(delimiter)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(errorMessage);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"        String[] parts \u003d args.split(delimiter, 2);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"        String firstPart \u003d parts[0];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"        String secondPart \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"        if (firstPart.isBlank() || secondPart.isBlank()) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(errorMessage);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"        return new String[] { firstPart, secondPart };","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"     * Validates and parses deadline command arguments.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"     * @param args The arguments for the deadline command","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A String array containing the description and due date","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If the deadline command format is invalid","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"    public String[] parseDeadline(String args) throws KeesmaException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"        String errorMsg \u003d \"Can you type the format properly lol thanks bro make sure you add description and date.\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"        return parseWithDelimiter(args, \" /by \", errorMsg);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"     * Validates and parses event command arguments.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"     * @param args The arguments for the event command","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A String array containing the description, start time, and end time","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If the event command format is invalid","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"    public String[] parseEvent(String args) throws KeesmaException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"        String formatError \u003d \"Can you type the format properly lol thanks bro\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"        if (!args.contains(\" /from \") || !args.contains(\" /to \")) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(formatError);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"        // Parse the description and the remaining part with from/to","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"        String[] firstParts \u003d parseWithDelimiter(args, \" /from \", formatError);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"        String description \u003d firstParts[0];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"        // Parse the from and to parts","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"        String[] timeParts \u003d parseWithDelimiter(firstParts[1], \" /to \", formatError);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"        String from \u003d timeParts[0];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"        String to \u003d timeParts[1];","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"        return new String[] { description, from, to };","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"     * Parses a number from the input string.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"     * @param args The string containing the number","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The parsed integer","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If the input cannot be parsed as a number","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"    public int parseNumber(String args) throws KeesmaException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xavierleejrui"},"content":"        try {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xavierleejrui"},"content":"            return Integer.parseInt(args.trim());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(\"Bruh can you type a valid number? Thanks bro.\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xavierleejrui"},"content":"     * Validates a task index.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xavierleejrui"},"content":"     * @param taskId The task index to validate","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xavierleejrui"},"content":"     * @param size The size of the task list","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If the task index is invalid","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xavierleejrui"},"content":"    public void validateTaskIndex(int taskId, int size) throws KeesmaException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xavierleejrui"},"content":"        if (taskId \u003c\u003d 0 || taskId \u003e size) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(\"Can type your task number properly :\u0027) \");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":124}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"import java.io.File;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.List;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":" * Storage class to handle file operations.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":" * Responsible for saving and loading tasks from persistent storage.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":" * This class manages the serialization and deserialization of Task objects","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":" * to and from a text file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"public class Storage {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"     * Creates any necessary parent directories if they don\u0027t exist.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"     * @param filePath The path to the storage file","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"        // Create directories if they don\u0027t exist","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"     * Reads each line from the file and parses it into a Task object.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A list of tasks loaded from the file","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If there\u0027s an error reading the file or parsing its contents","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"    public List\u003cTask\u003e loadTasks() throws KeesmaException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"                return tasks; // Return empty list if file doesn\u0027t exist yet","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"                Task task \u003d parseTaskFromStorage(line);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"            scanner.close();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(\"Cannot find file at: \" + filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"        return tasks;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"     * Saves the list of tasks to the storage file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"     * Each task is converted to a string representation and written to the file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"     * @param tasks The list of tasks to save","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"     * @throws KeesmaException If there\u0027s an error writing to the file","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws KeesmaException {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"                writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"            writer.close();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"            throw new KeesmaException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"     * Parses a line from the storage file into a Task object.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"     * The format of each line is determined by the task type:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"     * - Todo: \"T | isDone | description\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"     * - Deadline: \"D | isDone | description | by\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"     * - Event: \"E | isDone | description | from | to\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"     * @param line The line to parse from the storage file","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The parsed Task object, or null if the line couldn\u0027t be parsed","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"    private Task parseTaskFromStorage(String line) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"            return null;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"        boolean isDone \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xavierleejrui"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xavierleejrui"},"content":"        switch (type) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xavierleejrui"},"content":"        case \"T\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xavierleejrui"},"content":"            return new TodoTask(description, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xavierleejrui"},"content":"        case \"D\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xavierleejrui"},"content":"            String by \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xavierleejrui"},"content":"            return new Deadline(description, isDone, by);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xavierleejrui"},"content":"        case \"E\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xavierleejrui"},"content":"            String from \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xavierleejrui"},"content":"            String to \u003d parts.length \u003e 4 ? parts[4] : \"\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xavierleejrui"},"content":"            return new Event(description, isDone, from, to);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xavierleejrui"},"content":"        default:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xavierleejrui"},"content":"            return null;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":121}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":" * Abstract base class for all task types.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":" * Defines common properties and behaviors for tasks.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":"    protected String description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a task with the given description and completion status.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"     * @param isDone Whether the task is initially marked as done","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"     * Returns a string representation of this task for storage in a file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"    public abstract String toFileString(); // Each subclass will implement this","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"     * Returns the type identifier of this task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A string representing the task type","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"    public abstract String getTaskType(); // Each subclass should return its type","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"        return (isDone ? \"X\" : \" \"); // \"X\" for done, \" \" for not done","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"        return description;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"        return isDone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"    public void printTaskAddition() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Yes bro! I\u0027ve added this for you hehe: \");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"\\t\" + getTaskType() + \" \" + this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":67}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.List;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":" * TaskList class to manage the collection of tasks.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":" * Handles adding, modifying, and retrieving tasks.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"public class TaskList {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a new empty TaskList.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a TaskList with the given tasks.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"     * @param tasks The initial list of tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"        this.tasks \u003d tasks !\u003d null ? tasks : new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The list of tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"        return tasks;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The number of tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"    public int size() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"     * Adds a new todo task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The newly created task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"    public Task addTodo(String description) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"        Task newTask \u003d new TodoTask(description, false);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"        return newTask;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"     * Adds a new deadline task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the deadline","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"     * @param by The due date of the deadline","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The newly created deadline task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"    public Task addDeadline(String description, String by) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"        Deadline newDeadline \u003d new Deadline(description, false, by);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"        return newDeadline;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"     * Adds a new event task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the event","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"     * @param from The start time of the event","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"     * @param to The end time of the event","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The newly created event task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"    public Task addEvent(String description, String from, String to) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"        Event newEvent \u003d new Event(description, false, from, to);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"        return newEvent;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"     * Deletes a task by its index.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"     * @param taskId The index of the task to delete (1-based)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The deleted task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"    public Task deleteTask(int taskId) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"        return tasks.remove(taskId - 1);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"     * Marks a task as done by its index.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"     * @param taskId The index of the task to mark as done (1-based)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The marked task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"    public Task markTaskAsDone(int taskId) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"        Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"        task.markAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"        return task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xavierleejrui"},"content":"     * Marks a task as not done by its index.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xavierleejrui"},"content":"     * @param taskId The index of the task to mark as not done (1-based)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The unmarked task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xavierleejrui"},"content":"    public Task markTaskAsNotDone(int taskId) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xavierleejrui"},"content":"        Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xavierleejrui"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xavierleejrui"},"content":"        return task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xavierleejrui"},"content":"     * Finds tasks containing the given keyword in their description.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xavierleejrui"},"content":"     * @param keyword The keyword to search for","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A list of matching tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xavierleejrui"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xavierleejrui"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xavierleejrui"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xavierleejrui"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xavierleejrui"},"content":"                result.add(task);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xavierleejrui"},"content":"            }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xavierleejrui"},"content":"        return result;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":133}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":" * Represents a simple to-do task without a deadline or timeframe.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":" * A TodoTask is the most basic type of task in the system,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":" * requiring only a description without any time constraints.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":" * It extends the abstract Task class.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"     * Constructs a new TodoTask with the given description and completion status.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"     * @param description The description of the to-do task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"     * @param isDone Whether the task is initially marked as done","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"    public TodoTask(String description, boolean isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"     * Gets the type identifier for this task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"     * A todo task is represented by [T].","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"     * @return The string \"[T]\" representing a todo task","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"        return \"[T]\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"     * Returns a string representation of this todo task for storage in a file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"     * The format is: \"T | isDone | description\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"    public String toFileString() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":40}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xavierleejrui"},"content":"import java.util.List;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xavierleejrui"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xavierleejrui"},"content":" * UI class to handle user interface interactions.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xavierleejrui"},"content":" * Manages displaying information to the user and provides","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xavierleejrui"},"content":" * a consistent text-based interface for the Keesma application.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xavierleejrui"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xavierleejrui"},"content":"public class Ui {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xavierleejrui"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xavierleejrui"},"content":"     * This is shown when the application starts.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xavierleejrui"},"content":"    public void sayHello() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Helloooo I\u0027m Keesma, what can I do for you today babyboo\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xavierleejrui"},"content":"     * This is shown when the application exits.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xavierleejrui"},"content":"    public void sayBye() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Bye, Hope to see you again soon, you smell great by the way, although you did smell better last night hehe ^ W ^ \");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays an error message for invalid commands.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xavierleejrui"},"content":"     * This is shown when the user enters a command that isn\u0027t recognized.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xavierleejrui"},"content":"    public void handleBadCommand() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Eh bro can put a proper command anot smh\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays the list of all tasks.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xavierleejrui"},"content":"     * This formats the tasks with numbering and appropriate formatting.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xavierleejrui"},"content":"     * @param taskList The list of tasks to display","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xavierleejrui"},"content":"    public void printTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"You have \" + taskList.size() + \" tasks:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xavierleejrui"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xavierleejrui"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xavierleejrui"},"content":"            System.out.println(\"\\t\" + (i + 1) + \". \" + task.getTaskType() + \" \" + task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays a confirmation message after adding a task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xavierleejrui"},"content":"     * Shows the added task and the updated task count.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xavierleejrui"},"content":"     * @param task The task that was added","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xavierleejrui"},"content":"     * @param taskCount The new total number of tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xavierleejrui"},"content":"    public void printTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Yes bro I have added:\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Now there are \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays a confirmation message after deleting a task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xavierleejrui"},"content":"     * Shows the deleted task and the updated task count.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xavierleejrui"},"content":"     * @param task The task that was deleted","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xavierleejrui"},"content":"     * @param taskCount The new total number of tasks","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xavierleejrui"},"content":"    public void printTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Yes boss I have removed this task for you.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Now there are \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays a confirmation message after marking a task as done.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xavierleejrui"},"content":"     * Shows the marked task with its updated status.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xavierleejrui"},"content":"     * @param task The task that was marked as done","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xavierleejrui"},"content":"    public void printTaskMarked(Task task) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Your task has been marked as done babyboo\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays a confirmation message after unmarking a task.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xavierleejrui"},"content":"     * Shows the unmarked task with its updated status.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xavierleejrui"},"content":"     * @param task The task that was unmarked","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xavierleejrui"},"content":"    public void printTaskUnmarked(Task task) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Your task has been unmarked gugu\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xavierleejrui"},"content":"     * Prompts the user to enter a command.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xavierleejrui"},"content":"     * Displayed before waiting for user input.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xavierleejrui"},"content":"    public void promptCommand() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Please enter a command\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xavierleejrui"},"content":"     * Used for showing exception messages in a consistent format.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xavierleejrui"},"content":"     * @param message The error message to display","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xavierleejrui"},"content":"    public void printError(String message) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays an error message when there\u0027s a problem loading the tasks file.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xavierleejrui"},"content":"     * Informs the user that a new task list is being created.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xavierleejrui"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Problem loading tasks file! Creating new task list.\");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xavierleejrui"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xavierleejrui"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xavierleejrui"},"content":"     * Displays the results of a search for tasks by keyword.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xavierleejrui"},"content":"     * Shows all tasks that match the search criteria or a message if none are found.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xavierleejrui"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xavierleejrui"},"content":"     * @param foundTasks The list of tasks matching the search criteria","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xavierleejrui"},"content":"     * @param keyword The keyword that was searched for","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xavierleejrui"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Xavierleejrui"},"content":"    public void printFoundTasks(List\u003cTask\u003e foundTasks, String keyword) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(\"Here are the matching tasks in your list for \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xavierleejrui"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xavierleejrui"},"content":"            System.out.println(\"No matching tasks found :(\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Xavierleejrui"},"content":"        } else {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xavierleejrui"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xavierleejrui"},"content":"                Task task \u003d foundTasks.get(i);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Xavierleejrui"},"content":"                System.out.println(\"\\t\" + (i + 1) + \". \" + task.getTaskType() + \" \" + task.toString());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xavierleejrui"},"content":"            }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Xavierleejrui"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Xavierleejrui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Xavierleejrui"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Xavierleejrui"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Xavierleejrui":163}}]
