[{"path":"src/main/java/BSS.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuu4"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shuu4"},"content":"public class BSS {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shuu4"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shuu4"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shuu4"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shuu4"},"content":"        int taskCounter \u003d 0;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" 행복은 성적순이 아니라 부석순! I\u0027m BSS!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shuu4"},"content":"        while (true) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shuu4"},"content":"            String command \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shuu4"},"content":"            try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shuu4"},"content":"                if (command.equals(\"byeMessage\")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shuu4"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shuu4"},"content":"                    System.out.println(\" Bye! Fighting 해야지!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shuu4"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shuu4"},"content":"                    break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shuu4"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shuu4"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shuu4"},"content":"                    if (taskCounter \u003d\u003d 0) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shuu4"},"content":"                        System.out.println(\" Gimme a task!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shuu4"},"content":"                    } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shuu4"},"content":"                        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shuu4"},"content":"                        for (int i \u003d 0; i \u003c taskCounter; i++) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shuu4"},"content":"                            System.out.println(\" \" + (i + 1) + \".\" + tasks[i]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shuu4"},"content":"                        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shuu4"},"content":"                    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shuu4"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shuu4"},"content":"                } else if (command.equals(\"todo\") || command.equals(\"todo \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shuu4"},"content":"                    throw new DukeException(\" Oops! You should give your todo a description.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shuu4"},"content":"                } else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shuu4"},"content":"                    handleTodoCommand(command, tasks, taskCounter);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shuu4"},"content":"                    taskCounter++;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shuu4"},"content":"                } else if (command.equals(\"deadline\") || command.equals(\"deadline \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shuu4"},"content":"                    throw new DukeException(\" Oops! A deadline must have a task description and a due date: deadline \u003ctask\u003e /by \u003cdate\u003e.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shuu4"},"content":"                } else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shuu4"},"content":"                    handleDeadlineCommand(command, tasks, taskCounter);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shuu4"},"content":"                    taskCounter++;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shuu4"},"content":"                } else if (command.equals(\"event\") || command.equals(\"event \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shuu4"},"content":"                    throw new DukeException(\" Oops! An event must have a description, a start time, and an end time: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shuu4"},"content":"                } else if (command.startsWith(\"event \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shuu4"},"content":"                    handleEventCommand(command, tasks, taskCounter);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shuu4"},"content":"                    taskCounter++;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shuu4"},"content":"                } else if (command.equals(\"mark\") || command.equals(\"mark \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shuu4"},"content":"                    throw new DukeException(\" Oops! You should specify which task number to mark as done.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shuu4"},"content":"                } else if (command.startsWith(\"mark \")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shuu4"},"content":"                    handleMarkCommand(command, tasks, taskCounter);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shuu4"},"content":"                } else if (command.equals(\"unmark\") || command.equals(\"unmark \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shuu4"},"content":"                    throw new DukeException(\" Oops! You should specify which task number to unmark.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shuu4"},"content":"                } else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shuu4"},"content":"                    handleUnmarkCommand(command, tasks, taskCounter);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shuu4"},"content":"                } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shuu4"},"content":"                    throw new DukeException(\" Sorry that I don\u0027t get your command, any specific tasks I can do for you? ^^ \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shuu4"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shuu4"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shuu4"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shuu4"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shuu4"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shuu4"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shuu4"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shuu4"},"content":"                System.out.println(\" Unexpected error: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shuu4"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shuu4"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shuu4"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shuu4"},"content":"        scanner.close();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shuu4"},"content":"    private static void handleMarkCommand(String command, Task[] tasks, int taskCounter) throws DukeException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shuu4"},"content":"        int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shuu4"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCounter) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shuu4"},"content":"            tasks[taskIndex].markAsDone();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shuu4"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shuu4"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shuu4"},"content":"            System.out.println(\"   \" + tasks[taskIndex]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shuu4"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shuu4"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shuu4"},"content":"            throw new DukeException(\" Invalid task number! Please enter a valid number.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shuu4"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shuu4"},"content":"    private static void handleUnmarkCommand(String command, Task[] tasks, int taskCounter) throws DukeException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shuu4"},"content":"        int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shuu4"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCounter) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shuu4"},"content":"            tasks[taskIndex].unmarkAsDone();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shuu4"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shuu4"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shuu4"},"content":"            System.out.println(\"   \" + tasks[taskIndex]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shuu4"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shuu4"},"content":"        } else {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shuu4"},"content":"            throw new DukeException(\" Invalid task number! Please enter a valid number.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shuu4"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shuu4"},"content":"    private static void handleTodoCommand(String command, Task[] tasks, int taskCounter) throws DukeException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shuu4"},"content":"        String description \u003d command.substring(5).trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shuu4"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shuu4"},"content":"            throw new DukeException(\" Oops! You should give your todo a description.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shuu4"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shuu4"},"content":"        tasks[taskCounter] \u003d new Todo(description);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"   \" + tasks[taskCounter]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" Now you have \" + (taskCounter + 1) + \" tasks in the list.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shuu4"},"content":"    private static void handleDeadlineCommand(String command, Task[] tasks, int taskCounter) throws DukeException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shuu4"},"content":"        String[] parts \u003d command.substring(9).split(\" /by \", 2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shuu4"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shuu4"},"content":"            throw new DukeException(\" Oops! A deadline must have a task description and a due date: deadline \u003ctask\u003e /by \u003cdate\u003e.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shuu4"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shuu4"},"content":"        tasks[taskCounter] \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"   \" + tasks[taskCounter]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" Now you have \" + (taskCounter + 1) + \" tasks in the list.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shuu4"},"content":"    private static void handleEventCommand(String command, Task[] tasks, int taskCounter) throws DukeException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shuu4"},"content":"        String[] parts \u003d command.substring(6).split(\" /from | /to \", 3);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shuu4"},"content":"        if (parts.length \u003c 3 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty() || parts[2].trim().isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shuu4"},"content":"            throw new DukeException(\" Oops! An event must have a description, a start time, and an end time: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shuu4"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shuu4"},"content":"        tasks[taskCounter] \u003d new Event(parts[0].trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"   \" + tasks[taskCounter]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shuu4"},"content":"        System.out.println(\" Now you have \" + (taskCounter + 1) + \" tasks in the list.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shuu4"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shuu4"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"shuu4":138}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuu4"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shuu4"},"content":"    protected String by;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shuu4"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shuu4"},"content":"        super(description);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shuu4"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shuu4"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shuu4"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shuu4"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shuu4"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"shuu4":13}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuu4"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shuu4"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shuu4"},"content":"        super(message);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shuu4"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"shuu4":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuu4"},"content":"public class Event extends Task {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shuu4"},"content":"    protected String from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shuu4"},"content":"    protected String to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shuu4"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shuu4"},"content":"        super(description);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shuu4"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shuu4"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shuu4"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shuu4"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shuu4"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shuu4"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"shuu4":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuu4"},"content":"//public class Task {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shuu4"},"content":"//    protected String description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shuu4"},"content":"//    protected boolean isDone;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shuu4"},"content":"//","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shuu4"},"content":"//    public Task(String description) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shuu4"},"content":"//        this.description \u003d description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shuu4"},"content":"//        this.isDone \u003d false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shuu4"},"content":"//    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shuu4"},"content":"//","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shuu4"},"content":"//    public String getStatusIcon() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shuu4"},"content":"//        return (isDone ? \"X\" : \" \"); // Explicitly mark done task with X","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shuu4"},"content":"//    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shuu4"},"content":"//","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shuu4"},"content":"//    public void markAsDone() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shuu4"},"content":"//        this.isDone \u003d true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shuu4"},"content":"//    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shuu4"},"content":"//","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shuu4"},"content":"//    public void unmarkAsDone() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shuu4"},"content":"//        this.isDone \u003d false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shuu4"},"content":"//    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shuu4"},"content":"//}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shuu4"},"content":"public class Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shuu4"},"content":"    protected String description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shuu4"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shuu4"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shuu4"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shuu4"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shuu4"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shuu4"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shuu4"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shuu4"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shuu4"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shuu4"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shuu4"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shuu4"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shuu4"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shuu4"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"shuu4":48}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuu4"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shuu4"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shuu4"},"content":"        super(description);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shuu4"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shuu4"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shuu4"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shuu4"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shuu4"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shuu4"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"shuu4":10}}]
