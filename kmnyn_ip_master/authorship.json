[{"path":"data/kate.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"T | 1 | B","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"T | 0 | D","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":2}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import task.Event;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import task.Todo;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    private final Task task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"            taskList.addTask(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"       \" + task); // Correctly print the added task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"        } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"            taskList.addTask(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"       \" + task); // Correctly print the added task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"        } else if (task instanceof Event event) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"            taskList.addTask(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"       \" + task); // Correctly print the added task","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"kmnyn":42}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"public interface Command {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"    void execute(TaskList taskList, Ui ui);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"kmnyn":8}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import kate.KateException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"            Task removedTask \u003d taskList.getTasks().get(taskIndex - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"            // Delete the task using the deleteTask method in TaskList","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"            taskList.deleteTask(taskIndex - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"            // Display confirmation","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"       \" + removedTask);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"        } catch (KateException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Error: \" + e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"kmnyn":36}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"kmnyn":10}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"    private final String keyword;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"        // Find tasks that match the keyword","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"        var matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"            ui.showError(\"No tasks found matching the keyword: \" + keyword);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"            // Directly pass the matching tasks to the UI","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"            ui.showTasks(matchingTasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":25}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"        ui.showTasks(taskList.getTasks());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"kmnyn":11}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import kate.KateException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"            // Mark the task as done","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"            taskList.markTask(taskIndex - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"       \" + taskList.getTasks().get(taskIndex - 1));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        } catch (KateException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Error: \" + e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"kmnyn":30}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import kate.KateException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import kate.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import kate.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"            // Unmark the task as not done","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"            taskList.unmarkTask(taskIndex - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Nice! I\u0027ve unmarked this task as not done:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"       \" + taskList.getTasks().get(taskIndex - 1));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        } catch (KateException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Error: \" + e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":31}},{"path":"src/main/java/kate/Kate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package kate;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"// Importing commands","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import command.Command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import command.ExitCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":" * The main application class that runs the task management program.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":" * It handles user input, processes commands, and displays outputs.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"public class Kate {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"    private final Ui ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"     * Constructs a Kate instance that initializes the user interface and task list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    public Kate() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        this.taskList \u003d new TaskList(Storage.loadTasks());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"     * Runs the main application loop, reading commands from the user and executing them.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"     * The loop continues until the exit command is given.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"    public void run() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"        while (isRunning) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"            try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"                ui.showLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"                command.execute(taskList, ui);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"                if (command instanceof ExitCommand) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"            } catch (KateException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"        new Kate().run();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"kmnyn":50}},{"path":"src/main/java/kate/KateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package kate;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"public class KateException extends Exception{","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"    public KateException(String message) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"kmnyn":7}},{"path":"src/main/java/kate/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package kate;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"// Importing commands","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import command.Command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import command.AddCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import command.ExitCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"import command.ListCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import command.MarkCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"import command.DeleteCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"import command.FindCommand;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"// Importing tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"import task.Todo;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"import task.Event;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":" * The Parser class processes user input and converts it into the corresponding command.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"public class Parser {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"     * Parses a user input string and returns the corresponding Command object.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"     * @return The Command object corresponding to the user input.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"     * @throws KateException If the input is invalid or unrecognized.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"    public static Command parse(String input) throws KateException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"        String[] words \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"        String command \u003d words[0];","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        return switch (command) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"            case \"todo\" -\u003e parseTodo(words);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"            case \"deadline\" -\u003e parseDeadline(words);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"            case \"event\" -\u003e parseEvent(words);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"            case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"            case \"mark\" -\u003e parseMark(words);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"            case \"unmark\" -\u003e parseUnmark(words);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"            case \"delete\" -\u003e parseDelete(words);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"            case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"            case \"find\" -\u003e parseFind(words);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"            default -\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"                    throw new KateException(\"Oops! I\u0027m sorry, but I don\u0027t recognize that command. Please try again.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"        };","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"    private static Command parseTodo(String[] words) throws KateException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"        if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please type in a description for the todo.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"        return new AddCommand(new Todo(words[1]));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"    private static Command parseDeadline(String[] words) throws KateException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"        if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please type in a description for the deadline.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"        String[] deadlineParts \u003d words[1].split(\" /by \", 2);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please include a due date for the deadline.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kmnyn"},"content":"        return new AddCommand(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kmnyn"},"content":"    private static Command parseEvent(String[] words) throws KateException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kmnyn"},"content":"        if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please type in a description for the event.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kmnyn"},"content":"        String[] eventParts \u003d words[1].split(\" /from \", 2);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kmnyn"},"content":"        if (eventParts.length \u003c 2) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please include a start time for the event.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kmnyn"},"content":"        String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kmnyn"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please include an end time for the event.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kmnyn"},"content":"        return new AddCommand(new Event(eventParts[0], timeParts[0], timeParts[1]));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kmnyn"},"content":"    private static Command parseMark(String[] words) throws KateException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kmnyn"},"content":"        if (words.length \u003c 2 || !words[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please provide a valid task number to mark.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kmnyn"},"content":"        return new MarkCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kmnyn"},"content":"    private static Command parseUnmark(String[] words) throws KateException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kmnyn"},"content":"        if (words.length \u003c 2 || !words[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please provide a valid task number to unmark.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kmnyn"},"content":"        return new UnmarkCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kmnyn"},"content":"    private static Command parseDelete(String[] words) throws KateException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kmnyn"},"content":"        if (words.length \u003c 2 || !words[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Oops! Please provide a valid task number to delete.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kmnyn"},"content":"        // Convert to 1-based index for user-friendliness","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kmnyn"},"content":"        int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kmnyn"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kmnyn"},"content":"    private static Command parseFind(String[] words) throws KateException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kmnyn"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Please provide a keyword to search for.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kmnyn"},"content":"        String keyword \u003d words[1].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kmnyn"},"content":"        return new FindCommand(keyword);  // Return FindCommand with the keyword","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"kmnyn":116}},{"path":"src/main/java/kate/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package kate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import task.Todo;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import task.Event;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import java.io.*;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"import java.util.List;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"public class Storage {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    private static final String FILE_PATH \u003d \"./data/kate.txt\";  // Path to the file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    // Load tasks from file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"    public static List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"        // Check if the file exists, if not, create necessary directories","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"            file.getParentFile().mkdirs(); // Create ./data directory if not exists","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"            return tasks; // Return an empty list since no tasks are saved yet","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"            String line;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"                String[] parts \u003d line.split(\" \\\\| \");  // Split by \" | \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"                String type \u003d parts[0];  // Task type (T, D, E)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");  // Task status (1 \u003d done, 0 \u003d not done)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"                String description \u003d parts[2];  // Task description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"                // Parse based on task type","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"                switch (type) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"                case \"T\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"                    Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"                    if (isDone) todo.markAsDone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"                    tasks.add(todo);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"                case \"D\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"                    String by \u003d parts[3];  // Due date for the deadline","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"                    Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"                    if (isDone) deadline.markAsDone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"                case \"E\" -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"                    String from \u003d parts[3];  // Start time for the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"                    String to \u003d parts.length \u003e 4 ? parts[4] : \"\";  // End time for the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"                    Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"                    if (isDone) event.markAsDone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"                    tasks.add(event);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"⚠ ERROR: Unable to read the file. Starting with an empty task list.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"        return tasks;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kmnyn"},"content":"    // Save tasks to file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kmnyn"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kmnyn"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kmnyn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kmnyn"},"content":"                writer.write(taskToFileString(task));  // Convert task to file format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kmnyn"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kmnyn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"⚠ ERROR: Unable to save tasks to file.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kmnyn"},"content":"    // Convert task to file string format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kmnyn"},"content":"    private static String taskToFileString(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kmnyn"},"content":"        String status \u003d task.isDone() ? \"1\" : \"0\";  // Convert task status to 1/0","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kmnyn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kmnyn"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kmnyn"},"content":"            return String.format(\"T | %s | %s\", status, task.getDescription());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kmnyn"},"content":"        } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kmnyn"},"content":"            String deadlineFormatted \u003d deadline.getBy().format(formatter);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kmnyn"},"content":"            return String.format(\"D | %s | %s | %s\", status, task.getDescription(), deadlineFormatted);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kmnyn"},"content":"        } else if (task instanceof Event event) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kmnyn"},"content":"            String fromFormatted \u003d event.getFrom().format(formatter);  // Use getter here","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kmnyn"},"content":"            String toFormatted \u003d event.getTo().format(formatter);      // Use getter here","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kmnyn"},"content":"            return String.format(\"E | %s | %s | %s | %s\", status, task.getDescription(), fromFormatted, toFormatted);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kmnyn"},"content":"        return \"\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"kmnyn":94}},{"path":"src/main/java/kate/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package kate;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import java.util.List;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"public class TaskList {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    public TaskList(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"        this.tasks \u003d (loadedTasks !\u003d null) ? loadedTasks : new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"    public void deleteTask(int index) throws KateException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Invalid task index.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"    public void markTask(int index) throws KateException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Invalid task index.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"    public void unmarkTask(int index) throws KateException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"            throw new KateException(\"Invalid task index.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"        return tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"        return tasks.stream()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":53}},{"path":"src/main/java/kate/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package kate;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import java.util.List;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"public class Ui {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"    public Ui() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"Hello! I\u0027m Kate. How can I assist you today?\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"Bye! Have a nice day!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"    public void showLine() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"----------------------------\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"⚠ ERROR: \" + message);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"    public void showTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"No tasks in your list.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"            return;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"    public void showMatchingTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     No matching tasks found.\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"                System.out.println(\"     \" + (i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":56}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":" * It extends the Task class.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"     * Constructs a Deadline task with the given description and deadline time.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"     * @param by The deadline date-time as a string.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"        this.deadline \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"        return deadline;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"        // Format the deadline in \"MMM dd yyyy HH:mm\" format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":38}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":" * The Event class represents a task with a specific time range (from-to).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":" * It extends the Task class.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"     * Constructs an Event task with the given description and time range.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"     * @param from The start time of the event as a string.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"     * @param to The end time of the event as a string.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"     * @return The start time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        return from;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"     * @return The end time of the event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"        return to;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"        // Format the \u0027from\u0027 and \u0027to\u0027 times in the desired format","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"        String fromFormatted \u003d getFrom().format(formatter);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"        String toFormatted \u003d getTo().format(formatter);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromFormatted + \" to: \" + toFormatted + \")\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":56}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":" * The abstract Task class represents a task with a description and a done status.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":" * Subclasses of Task will implement specific task types like Todo, Deadline, and Event.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"public class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"    public String description;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"        this.isDone \u003d false; // Tasks are not done by default","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"     * Returns whether the task is marked as done.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"        return description;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"        return (isDone ? \"[X]\" : \"[ ]\") + \" \" + description;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":62}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":" * The Todo class represents a task that does not have a due date or time.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":" * It extends the Task class.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"todo 5","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"kmnyn":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"javac  -cp ..\\src\\main\\java -lint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERROR LEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, error level \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"java -classpath ..\\bin kate.Kate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"kmnyn":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"java -classpath ../bin kate.Kate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"kmnyn":1,"-":37}}]
