[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"xubin0":1,"-":41}},{"path":"data/Xb.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"T,false,c,","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"D,false,c,now","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"T,false,n,","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"E,false,x,now,tmr","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"E,false,1,a,b","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xubin0":10}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"# User Guide for Xb","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"## Introduction","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" Welcome to Xb, your task management application! This program helps you to manage your tasks efficiently. Xb supports various commands such as adding tasks, deleting tasks, marking tasks as done, and more. You can interact with Xb through a simple command-line interface (CLI).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"## Setting Up the Application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"### Prerequisites","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    •    JDK 17 (required for compiling and running the project)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    •    IntelliJ IDEA (or another Java IDE of your choice)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"### Steps to Set Up the Project in IntelliJ IDEA:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    1.    Install JDK 17: Ensure that you have JDK 17 installed. If not, you can download it from here.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    2.    Open the Project in IntelliJ IDEA:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    •    Open IntelliJ IDEA and click File \u003e Close Project if you have an existing project open.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    •    Select Open, navigate to your project directory, and select it.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    •    Accept the default settings when prompted.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    3.    Set JDK to 17:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    •    Go to File \u003e Project Structure.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    •    Under Project Settings \u003e Project, set the Project SDK to JDK 17.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    •    Set the Project language level to SDK default.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    4.    Run the Application:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    •    Open the src/main/java/Xb.java file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    •    Right-click and select Run Xb.main().","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    •    If everything is set up correctly, you should see the following output:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"Created directory: ./data","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"Created file: ./data/Xb.txt","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"Hello, I am xb!","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"What is your name?","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"## Features","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"### 1. Adding Tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"Xb allows you to add three types of tasks: Todo, Deadline, and Event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"    •    Todo Task:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"Command format: TODO \u003ctask_description\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"Example: TODO Read a book","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"This adds a new task of type Todo with the description Read a book.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"    •    Deadline Task:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"Command format: DEADLINE \u003ctask_description\u003e /by \u003cdeadline_date\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"Example: DEADLINE Submit report /by 2022-12-31","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"This adds a new task of type Deadline with the description Submit report and a deadline on 2022-12-31.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"    •    Event Task:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"Command format: EVENT \u003ctask_description\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"Example: EVENT Team meeting /from 2022-11-01 10:00 /to 2022-11-01 12:00","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"This adds a new task of type Event with the description Team meeting and a duration from 10:00 to 12:00 on 2022-11-01.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"### 2. Listing Tasks","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"Command format: LIST","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"This command will display all tasks currently in the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"### 3. Marking a Task as Done","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"Command format: MARK \u003ctask_number\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"This command marks the task with the specified task number as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"### 4. Unmarking a Task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"Command format: UNMARK \u003ctask_number\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"This command marks the task with the specified task number as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"### 5. Deleting a Task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"Command format: DELETE \u003ctask_number\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"This command deletes the task with the specified task number from the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"### 6. Renaming a Task","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"Command format: RENAME \u003ctask_number\u003e \u003cnew_task_name\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"This command renames the task with the specified task number to the new name.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"### 7. Finding Tasks by Keyword","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"Command format: FIND \u003ckeyword\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"This command will search for tasks containing the word report in their description and display them.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"### 8. Exiting the Application","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"Command format: BYE","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"This command will exit the application with a farewell message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"⸻","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"## Application Structure","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"Here’s a brief overview of the main classes and their responsibilities in the project:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"### 1. Xb.java","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"    •    The main entry point of the program.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"    •    Initializes the application, handles user inputs, and runs the application loop.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xubin0"},"content":"### 2. Command Classes","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"The commands (MarkCommand, UnmarkCommand, TodoCommand, etc.) are responsible for processing specific user commands like marking tasks as done, renaming tasks, or adding tasks to the task list. Each command implements the Command interface, which has an execute method.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"### 3. Task Classes","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"    •    Task: Abstract class representing a task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xubin0"},"content":"    •    Todo, Deadline, Event: Classes representing specific types of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xubin0"},"content":"### 4. TaskList","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xubin0"},"content":"Handles all tasks. It allows adding, removing, marking tasks, and searching tasks based on keywords.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xubin0"},"content":"### 5. XbException","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xubin0"},"content":"Custom exception class used to handle invalid commands and provide appropriate error messages.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xubin0"},"content":"### 6. FileHandler","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xubin0"},"content":"Handles file operations like loading tasks from a file and saving them back. This ensures tasks are persistent even after the program is closed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xubin0"},"content":"⸻","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xubin0"},"content":"## Troubleshooting","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xubin0"},"content":"### Common Issues","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xubin0"},"content":"    1.    JDK Not Found: Make sure JDK 17 is installed correctly and set as the project SDK.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xubin0"},"content":"    2.    File Not Found: If the program can’t find the data file (Xb.txt), make sure the directory is created (./data) and the file is initialized correctly.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xubin0"},"content":"    3.    Invalid Command Format: Ensure that the correct command format is used, e.g., TODO \u003ctask_description\u003e or DEADLINE \u003ctask_description\u003e /by \u003cdeadline_date\u003e.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xubin0"},"content":"⸻","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xubin0"},"content":"## Conclusion","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xubin0"},"content":"This user guide should help you get started with Xb and use its features for managing tasks. If you encounter any issues or need further help, feel free to check the source code or refer to the documentation for additional information.","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":116,"-":15}},{"path":"javadoc/legal/jquery.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"## jQuery v3.7.1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"### jQuery License","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"jQuery v 3.7.1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"Copyright OpenJS Foundation and other contributors, https://openjsf.org/","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"the following conditions:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":26}},{"path":"javadoc/legal/jqueryUI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"## jQuery UI v1.13.2","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"### jQuery UI License","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"Copyright jQuery Foundation and other contributors, https://jquery.org/","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"This software consists of voluntary contributions made by many","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"individuals. For exact contribution history, see the revision history","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"available at https://github.com/jquery/jquery-ui","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"The following license applies to all parts of this software except as","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"documented below:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"the following conditions:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"Copyright and related rights for sample code are waived via CC0. Sample","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"code is defined as all source code contained within the demos directory.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"CC0: http://creativecommons.org/publicdomain/zero/1.0/","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"All files located in the node_modules and external directories are","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"externally maintained libraries used by this software which have their","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"own licenses; we recommend you read them, as their terms may differ from","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"the terms above.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":49}},{"path":"src/main/java/FileHandler/FileCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandler;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.io.File;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Utility class for creating files and directories if they don\u0027t already exist.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * This class ensures that a given file path and its corresponding directory are created before accessing or writing to them.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class FileCreator {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Creates a directory and file if they don\u0027t already exist.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param filePath The path to the file that needs to be created.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param directoryPath The path to the directory where the file will be created.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    public static void createFileIfNotExists(String filePath, String directoryPath) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"                if (!directory.exists()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                    boolean dirCreated \u003d directory.mkdirs();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"                    if (dirCreated) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                        System.out.println(\"Created directory: \" + directoryPath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"                if (!file.exists()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                    boolean fileCreated \u003d file.createNewFile(); // Creates file if missing","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"                    if (fileCreated) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"                        System.out.println(\"Created file: \" + filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"                } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"                    System.out.println(\"File already exists: \" + filePath);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xubin0":40}},{"path":"src/main/java/FileHandler/FileLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandler;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import task.*;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.io.File;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":" * Utility class for loading tasks from a file into a TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":" * This class reads data from a file, parses it, and creates tasks that are added to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"public class FileLoader {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    private static final String FILE_PATH \u003d \"./data/Xb.txt\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     * Loads tasks from a file into a TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"     * It parses the file content to recreate the tasks and add them to the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"     * @return A TaskList containing all the tasks loaded from the file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    public static TaskList loadTasks() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"            String[] parts \u003d line.split(\",\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"            if (parts.length \u003c 3) continue; // Ignore malformed lines","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"            boolean isDone \u003d parts[1].equals(\"true\"); // Convert \"1\"/\"0\" to boolean","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            switch (type) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"            case \"T\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"                tasks.add(new Todo(description, isDone));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"            case \"D\":","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"                if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"                    String deadline \u003d parts[3];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"                    tasks.add(new Deadline(description, isDone, deadline));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"            case \"E\": // Event","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"                if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"                    String eventStart \u003d parts[3];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"                    String eventEnd \u003d parts[4];","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"                    tasks.add(new Event(description, isDone, eventStart, eventEnd));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"                break;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"        }catch(FileNotFoundException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no existing data file found, new file will be created!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"            return new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"xubin0":66}},{"path":"src/main/java/FileHandler/FileSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandler;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import task.Task;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" * Utility class for saving tasks to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" * This class converts tasks into a specific file format and writes them to a file for persistence.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"public class FileSaver","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"{","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    private static final String FILE_PATH \u003d \"./data/Xb.txt\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * Saves the tasks in the TaskList to a file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * The tasks are written in a specific format to the file for later retrieval.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     * @param tasks The TaskList containing the tasks to be saved.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    public static void saveTasks(TaskList tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        try (FileWriter writer \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(tasks.getTasks());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            for (int i \u003d 0; i \u003c taskList.toArray().length; i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                writer.write(taskList.get(i).toFileFormat() + \"\\n\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Tasks saved successfully!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xubin0":33}},{"path":"src/main/java/Xb.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import util.UI;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import FileHandler.FileCreator;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import static FileHandler.FileLoader.loadTasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" * Main class to run the Xb application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" * This class initializes the task list, sets up necessary files, and starts the user interface (UI).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"public class Xb {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    private static final String FILE_PATH \u003d \"./data/Xb.txt\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * Main method to run the Xb application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * It creates necessary directories and files, loads tasks from a file, and starts the user interface.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     * @param args Command-line arguments (not used in this case).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        FileCreator.createFileIfNotExists(FILE_PATH, DIRECTORY_PATH);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        TaskList taskList \u003d loadTasks();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        UI ui \u003d new UI(taskList);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"xubin0":32}},{"path":"src/main/java/commandHandler/CommandFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commandHandler;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import commands.*;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import util.CommandListPrinter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * The CommandFactory class is responsible for creating the appropriate Command object based on the","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * command string passed to it. This class is used to instantiate the correct command type for a given user input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" * Example:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" * If the input is \"TODO\", the factory will create a TodoCommand.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":" * The factory method ensures that the correct command is created, so that it can be executed in the CommandHandler.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"public class CommandFactory {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * Creates the appropriate Command object based on the provided command string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     * This method matches the command string with a predefined set of valid commands","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     * and returns the corresponding Command object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"     * @param commandString The command string to match and create the corresponding Command object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"     * @return A Command object corresponding to the provided command string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"     * Returns null if the command is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    public static Command createCommand(String commandString) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        switch (commandString.toUpperCase()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        case \"MARK\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"            return new MarkCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        case \"UNMARK\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        case \"TODO\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"            return new TodoCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"            return new DeadlineCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        case \"EVENT\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            return new EventCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        case \"LIST\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"        case \"BYE\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        case \"DELETE\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"            return new DeleteCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        case \"FIND\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"            return new FindCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"        case\"RENAME\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"            return new RenameCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"        default:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Sorry, Xb does not know what \\\"\" + commandString + \"\\\" means\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Valid Commands:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"            CommandListPrinter.printCommands();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"        return null;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":56}},{"path":"src/main/java/commandHandler/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commandHandler;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import commands.ByeCommand;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import commands.Command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The CommandHandler class is responsible for executing commands by interacting with the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" * It uses the Command object created by the CommandFactory to execute specific tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" * Example:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":" * Given a command like \"TODO Read book\", it will find the appropriate command (e.g., TodoCommand)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":" * and call the execute method with the necessary parts.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"public class CommandHandler {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    private Command command;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    private String parts;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     * Constructs a CommandHandler instance with the TaskList and command parts.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"     * The constructor takes in an array of command strings, where the first element is the command name","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"     * (which is used to create the Command object), and the second element is the associated data.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"     * @param taskList The TaskList object that the command will operate on.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"     * @param commands An array containing the command name and its associated data.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public CommandHandler(TaskList taskList, String[] commands) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        command \u003d CommandFactory.createCommand(commands[0]);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        parts \u003d commands[1];","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"     * Executes the current command. If the command is valid, it will invoke its execute method.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"     * If the command is of type ByeCommand, it returns false to indicate the termination of the program.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"     * @return true if the command is not of type ByeCommand; false otherwise.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"    public boolean runCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"            command.execute(parts, taskList);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"        return !(command instanceof ByeCommand);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":48}},{"path":"src/main/java/commandHandler/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commandHandler;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * The CommandParser class is responsible for parsing a command string into parts.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * It splits the input command into two parts: the command name and the associated data.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Example:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * For the input \"TODO Read book\", it will split it into [\"TODO\", \"Read book\"].","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class CommandParser {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private String[] parts;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * Constructs a CommandParser instance.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * The constructor splits the input command string into two parts:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * the command name and the associated data (if any).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * If the command does not contain any spaces, the second part is set to an empty string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     * @param command The command string to be parsed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    public CommandParser(String command) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        parts \u003d command.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            parts \u003d new String[]{parts[0], \"\"};","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"     * Returns the parsed command parts.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"     * @return An array of two elements: the command name and its associated data (if any).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    public String[] getParts() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        return parts;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"xubin0":38}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Represents the \"Bye\" command that exits the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * When this command is executed, it prints a goodbye message to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Executes the \"Bye\" command by printing a farewell message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param parts    Unused. This parameter is ignored as no additional data is needed for this command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list that the command operates on (not used for this command).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":22}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * Represents a generic command that can be executed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Any command class must implement this interface and provide the execution logic.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"public interface Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"     * Executes the command with the provided parameters.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * @param parts The string parts that contain the necessary data for the command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param taskList The list of tasks that the command may manipulate.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    void execute(String parts, TaskList taskList);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":16}},{"path":"src/main/java/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":" * An enumeration that contains all valid commands for the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * Each command in this enum implements a method to print its usage and description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"public enum CommandList {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"    MARK {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"MARK: Marks a task as done. Usage: MARK \u003ctask_number\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    UNMARK {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"UNMARK: Marks a task as undone. Usage: UNMARK \u003ctask_number\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    TODO {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"TODO: Creates a new todo task. Usage: TODO \u003ctask_description\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    DEADLINE {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"DEADLINE: Creates a task with a deadline. Usage: DEADLINE \u003ctask_description\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    EVENT {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"EVENT: Creates a task with an event. Usage: EVENT \u003ctask_description\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    LIST {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"LIST: Displays all tasks.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    BYE {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"BYE: Exits the application.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"    DELETE {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"DELETE: Deletes a task. Usage: DELETE \u003ctask_number\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"    FIND {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"FIND: Finds a task based on the keyword given. Usage: DELETE \u003ckeyword\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"    },","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"    RENAME {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"RENAME: Renames a task based on the task number give . Usage: DELETE \u003ctask_number\u003e\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"    };","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"    public abstract void printCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":70}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.Deadline;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"DEADLINE\" command that creates a task with a deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects the description of the task and a \"/by\" tag for the deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"DEADLINE\" command by parsing the task description and deadline,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * and adding the deadline task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The command parts containing the task description and deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the new deadline task will be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            if (parts.contains(\"/by\")) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                String[] deadlineParts \u003d parts.split(\"/by\", 2);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"                String taskName \u003d deadlineParts[0].trim();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                String deadline \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                Deadline dl \u003d new Deadline(taskName, false, deadline);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                taskList.addTask(dl);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"                throw XbException.invalidDeadlineCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        } catch (XbException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":37}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import util.IntegerChecker;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"DELETE\" command that deletes a task from the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects a task number to delete the corresponding task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"DELETE\" command by checking if the input is a valid task number,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * and deleting the corresponding task from the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The task number to be deleted.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the task will be removed from.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try{","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        if (IntegerChecker.isInteger(parts)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            taskList.deleteTask(Integer.parseInt(parts));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"            throw XbException.invalidDeleteCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        }}catch (Exception e){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":31}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.Event;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"EVENT\" command that creates a task with event timings.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects the description of the event and \"/from\" and \"/to\" tags for start and end times.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"EVENT\" command by parsing the task description, start time, and end time,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * and adding the event task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The command parts containing the task description and event timings.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the new event task will be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            if (parts.contains(\"/from\") \u0026\u0026 parts.contains(\"/to\")) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                String[] eventParts \u003d parts.split(\"/from|/to\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"                String taskName \u003d eventParts[0].trim();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                String from \u003d eventParts[1].trim();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                String to \u003d eventParts[2].trim();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                Event event \u003d new Event(taskName, false, from, to);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"                taskList.addTask(event);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                throw XbException.invalidEventCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        } catch (XbException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":37}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"FIND\" command that searches for tasks containing a specified keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command displays the tasks that match the keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private TaskList tasksWithKeyWord;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * Executes the \"FIND\" command by searching for tasks that match the given keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * It prints the matching tasks to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param parts The keyword used to search for tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            if (!parts.isEmpty()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"                tasksWithKeyWord \u003d taskList.getTaskListWithKeyWord(parts);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                if (tasksWithKeyWord.getTaskCount() \u003e 0) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                    tasksWithKeyWord.printTaskList();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                throw XbException.invalidFindCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        } catch (XbException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":36}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * Represents the \"LIST\" command that displays all tasks in the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * If there are no tasks, it prints a message indicating that no tasks are available.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"     * Executes the \"LIST\" command by printing all tasks in the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * If no tasks exist, it prints a message indicating that no tasks are available.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param parts Unused. This parameter is ignored for this command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list whose tasks will be printed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        if (taskList.getTaskCount() \u003e 0) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            taskList.printTaskList();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            return;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"nothing to do yet\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":24}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import util.IntegerChecker;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"MARK\" command that marks a task as completed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects a task number to mark the corresponding task as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"MARK\" command by marking the specified task as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * It verifies that the provided task number is valid before marking the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The task number to mark as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the task will be marked as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            if (IntegerChecker.isInteger(parts)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                taskList.markTaskAsDone(Integer.parseInt(parts));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                throw XbException.invalidMarkCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        } catch (XbException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":31}},{"path":"src/main/java/commands/RenameCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.Event;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import util.IntegerChecker;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"public class RenameCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"            String[] partsArray \u003d parts.split(\" \", 2);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"            if (partsArray.length \u003e 1) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"                int taskNumber \u003d Integer.parseInt(partsArray[0].trim());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"                String newTaskName \u003d partsArray[1].trim();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"                taskList.renameTask(taskNumber, newTaskName);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"                throw XbException.invalidRenameCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        } catch (XbException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Invalid task number format. Please provide a valid task number.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":28}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import task.Todo;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"TODO\" command that creates a new todo task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects a description for the todo task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"TODO\" command by creating a new todo task with the provided description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * The new todo task is added to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The description of the todo task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the new todo task will be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            if (!parts.isEmpty()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            Todo todo \u003d new Todo(parts, false);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"            throw XbException.invalidTodoCommand();}","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        }catch (Exception e){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":32}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.XbException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import util.IntegerChecker;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"UNMARK\" command that marks a task as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects a task number to unmark the corresponding task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"UNMARK\" command by marking the specified task as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * It verifies that the provided task number is valid before unmarking the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The task number to unmark as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the task will be unmarked.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try{","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        if (IntegerChecker.isInteger(parts)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            taskList.markTaskAsUndone(Integer.parseInt(parts));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        throw XbException.invalidUnmarkCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        }catch (Exception e){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":32}},{"path":"src/main/java/exception/XbException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package exception;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":" * Custom exception class for handling various invalid command inputs in the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * This class provides specific methods for each type of invalid command that may be thrown during user input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"public class XbException extends Exception {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"    public XbException(String message) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"        super(message);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidMarkCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid mark command, please specify which task to mark with an integer.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidUnmarkCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid unmark command, please specify which task to unmark with an integer.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidDeadlineCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid deadline command, please specify when deadline is in the future. with \\\"/by\\\".\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidEventCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid event command, please specify duration of event with \\\"/from\\\" and \\\"/to\\\".\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidTodoCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid Todo command, please name of Task to be done.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidDeleteCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid delete command, please specify which task to delete with an integer.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidFindCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid Find command, please specify Keyword to Find tasks.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    public static XbException invalidRenameCommand() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        return new XbException(\"Invalid event command, please key command in the format: rename \u003ctask number\u003e \u003cnew Name\u003e.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"xubin0":39}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import util.DateTimeFormatTool;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * This class extends the Task class and includes additional functionality for managing deadlines.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    private String deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param done The status of the task (completed or not).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param deadline The deadline for the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    public Deadline(String taskName, boolean done, String deadline) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        super(taskName, done);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        setTaskType(TaskType.DEADLINE);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        return deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"     * Prints the deadline of the task in a user-friendly format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    public void printDue() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        if(DateTimeFormatTool.isValidDateTimeFormat(deadline)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            System.out.println(\" (by: \" + DateTimeFormatTool.parseDateTime(deadline) + \")\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        }else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            System.out.println(\" (by: \" + deadline + \")\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the task in a file-friendly format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"        return \"D,\" + getIsDone() + \",\" + getTaskName() + \",\" + getDeadline() +\"\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"xubin0":52}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"import util.DateTimeFormatTool;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * Represents a task with an event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * This class extends the Task class and includes additional functionality for managing events with start and end times.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    private String eventStart;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    private String eventEnd;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Constructs an Event task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param done The status of the event (completed or not).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param eventStart The start time of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param eventEnd The end time of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    public Event(String taskName, boolean done, String eventStart, String eventEnd) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        super(taskName, done);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        setTaskType(TaskType.EVENT);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    public String getEventEnd() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        return eventEnd;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public String getEventStart() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        return eventStart;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    public void printDue() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        // If both eventStart and eventEnd are invalid, print raw values","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        if (!DateTimeFormatTool.isValidDateTimeFormat(eventStart) \u0026\u0026 !DateTimeFormatTool.isValidDateTimeFormat(eventEnd)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            System.out.println(\" (from: \" + eventStart + \" to: \" + eventEnd + \")\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        // If eventStart is valid but eventEnd is invalid, format eventStart, leave eventEnd raw","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"        else if (DateTimeFormatTool.isValidDateTimeFormat(eventStart) \u0026\u0026 !DateTimeFormatTool.isValidDateTimeFormat(eventEnd)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            System.out.println(\" (from: \" + DateTimeFormatTool.parseDateTime(eventStart) + \" to: \" + eventEnd + \")\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        // If both eventStart and eventEnd are valid, format both","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"            System.out.println(\" (from: \" + DateTimeFormatTool.parseDateTime(eventStart) + \" to: \" + DateTimeFormatTool.parseDateTime(eventEnd) + \")\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the event task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the event task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"        return \"E,\" + getIsDone() + \",\" + getTaskName() + \",\" + getEventStart() +\",\" +getEventEnd()+\"\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"xubin0":59}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * Abstract class representing a task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * This class defines the common properties and methods for all types of tasks (e.g., Todo, Deadline, Event).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    private TaskType taskType;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    private String taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * Constructs a Task with the given task name and completion status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param done     The status of the task (completed or not).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    public Task(String taskName, boolean done) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        return taskType;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    public void setTaskType(TaskType taskType) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        return taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"        return isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"     * Prints the task\u0027s completion status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"    public void printIsDone() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[X]\"); //task done, print with X","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[ ]\"); //task not done print without X","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"     * Prints the task\u0027s type (e.g., Todo, Deadline, Event).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"    public void printTaskType() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"        switch (this.getTaskType()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"        case EVENT:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[E]\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"            break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[D]\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"            break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"        case TODO:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[T]\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"            break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"     * Prints the task details.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"    public void printTask() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"        printTaskType();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"        printIsDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"        System.out.print(\" \" + taskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"     * Prints the due date or duration of the task (if applicable).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"    public void printDue() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"        System.out.println();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"xubin0":105}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * This class provides methods for managing tasks (e.g., adding, marking, deleting, and searching tasks).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class TaskList {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * Constructs a TaskList with a specified list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"     * @return The list of tasks in the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        return tasks;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"     * Filters tasks based on a keyword and returns a new TaskList containing matching tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"     * @param keyword The keyword to search for in task names.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"     * @return A TaskList containing tasks that match the keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"    public TaskList getTaskListWithKeyWord(String keyword) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"        TaskList tasksWithKeyWord \u003d new TaskList(new ArrayList\u003c\u003e(tasks));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        Iterator\u003cTask\u003e iterator \u003d tasksWithKeyWord.tasks.iterator();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"            Task task \u003d iterator.next();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"            if (!task.getTaskName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"                iterator.remove();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"        return tasksWithKeyWord;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"     * Adds a Todo task to the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"     * @param todo The Todo task to be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"    public void addTask(Todo todo) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"task added:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"        todo.printTask();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"        todo.printDue();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Now you have \" + tasks.toArray().length + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"     * Adds a Deadline task to the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"     * @param deadline The Deadline task to be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"    public void addTask(Deadline deadline) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"task added:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"        deadline.printTask();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"        deadline.printDue();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Now you have \" + tasks.toArray().length + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"     * Adds an Event task to the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"     * @param event The Event task to be added.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"    public void addTask(Event event) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"        tasks.add(event);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"task added:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"        event.printTask();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"        event.printDue();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Now you have \" + tasks.toArray().length + \" tasks in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"     * Returns the total number of tasks in the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xubin0"},"content":"        return tasks.toArray().length;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"     * Marks a task as completed based on its task ID.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to mark as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xubin0"},"content":"    public void markTaskAsDone(int taskId) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId\u003e0) { //check if taskId is valid","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xubin0"},"content":"            if (tasks.get(taskId - 1).getIsDone()) { //check if task is already unmarked","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" was already marked as done\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xubin0"},"content":"                tasks.get(taskId - 1).setIsDone(true); //valid and not done, mark as done","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" is marked\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\"); //not valid print error","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xubin0"},"content":"     * Marks a task as undone based on its task ID.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to mark as undone.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xubin0"},"content":"    public void markTaskAsUndone(int taskId) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId\u003e0) { //check if taskId is valid","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xubin0"},"content":"            if (!tasks.get(taskId - 1).getIsDone()) { //check if task is already unmarked","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" was already unmarked\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xubin0"},"content":"                tasks.get(taskId - 1).setIsDone(false); //if valid and marked, unmark it","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" is unmarked\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\"); //not valid print error","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xubin0"},"content":"     * Deletes a task based on its task ID.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to delete.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xubin0"},"content":"    public void deleteTask(int taskId) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId \u003e 0) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xubin0"},"content":"            Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xubin0"},"content":"            tasks.remove(taskId - 1);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"deleted task: \");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xubin0"},"content":"            task.printTask();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xubin0"},"content":"            System.out.println();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xubin0"},"content":"     * Renames a task based on its task ID.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to rename.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xubin0"},"content":"     * @param newTaskName The new name for the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xubin0"},"content":"    public void renameTask(int taskId, String newTaskName) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId\u003e0) { //check if taskId valid","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xubin0"},"content":"            if (tasks.get(taskId - 1).getTaskName().equals(newTaskName)) { //check if name is same","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"please use a new name\"); //if no change in name then print error","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" renamed to \" + newTaskName);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"xubin0"},"content":"                tasks.get(taskId - 1).setTaskName(newTaskName);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"xubin0"},"content":"     * Prints the list of tasks in the TaskList.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"xubin0"},"content":"    public void printTaskList() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"xubin0"},"content":"        for (int i \u003d 0; i \u003c tasks.toArray().length; i++) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"xubin0"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"xubin0"},"content":"            tasks.get(i).printTaskType();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"xubin0"},"content":"            tasks.get(i).printIsDone();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"xubin0"},"content":"            System.out.print(\" \" + tasks.get(i).getTaskName());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"xubin0"},"content":"            tasks.get(i).printDue();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"xubin0":180}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":" * Enum representing the different types of tasks: Todo, Deadline, and Event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"public enum TaskType {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"    TODO,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"    DEADLINE,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    EVENT;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":11}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * Represents a simple \"Todo\" task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * This class extends Task and defines the specific properties and methods for a Todo task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"     * Constructs a Todo task with the specified task name and completion status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * @param done The status of the task (completed or not).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    public Todo(String taskName, boolean done) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        super(taskName, done);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        super.setTaskType(TaskType.TODO);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the Todo task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the Todo task for file storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        return \"T,\" + getIsDone() + \",\" + getTaskName() + \",\"+\"\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"xubin0":29}},{"path":"src/main/java/util/CommandListPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package util;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import commands.CommandList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Utility class for printing all available commands.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * This class iterates through the `CommandList` enum and prints descriptions for each command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class CommandListPrinter {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Prints all available commands by calling the `printCommand` method for each command in the CommandList enum.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    public static void printCommands() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        // Loop through each enum constant in CommandList and call printCommand()","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        for (CommandList command : CommandList.values()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            command.printCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":20}},{"path":"src/main/java/util/DateTimeFormatTool.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package util;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Utility class for parsing and formatting date-time strings.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * This class helps convert input date formats into a readable format and validates the format of date-time strings.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class DateTimeFormatTool{","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    private static final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * Parses a date-time string into a formatted string.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * If the input is \"now\", it returns the current date in the format \"dd MMM yyyy\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * @param dateTimeStr The date-time string to be parsed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * @return The formatted date string in the format \"dd MMM yyyy\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    public static String parseDateTime(String dateTimeStr) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        if (\"now\".equalsIgnoreCase(dateTimeStr)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            return currentDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeStr, inputFormatter);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"     * Checks if the provided date-time string has a valid format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"     * @param dateTimeStr The date-time string to be validated.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"     * @return true if the date-time string is valid; false otherwise.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    public static boolean isValidDateTimeFormat(String dateTimeStr) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"            parseDateTime(dateTimeStr);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            return true;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            return false;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"xubin0":44}},{"path":"src/main/java/util/IntegerChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package util;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":" * Utility class for checking whether a given string is a valid integer.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * This class contains a method to verify if a string can be converted into an integer.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"public class IntegerChecker {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"     * Checks if the provided input is a valid integer.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"     * @param input The string to check.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * @return true if the input is a valid integer; false otherwise.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    public static boolean isInteger(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"            Integer.parseInt(input);  // Try converting to an integer","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"            return true;  // If successful, return true","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            return false; // If an exception occurs, it\u0027s not an integer","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"xubin0":21}},{"path":"src/main/java/util/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package util;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import commandHandler.CommandHandler;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import commandHandler.CommandParser;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import static FileHandler.FileSaver.saveTasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" * User Interface (UI) class for interacting with the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":" * This class handles user input, processes commands, and interacts with the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"public class UI {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * Constructs a UI instance and initializes the interaction with the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * It prompts for the user\u0027s name and allows them to enter commands to manipulate the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list that the UI will interact with.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    public UI(TaskList taskList) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Hello, I am xb!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        String name \u003d s.nextLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        System.out.print(name);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        System.out.println(\", Here are the available Commands:\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        CommandListPrinter.printCommands();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        String command;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        boolean run \u003d true;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        while (run) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"            command \u003d s.nextLine().trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"            CommandParser cp \u003d new CommandParser(command);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            CommandHandler c \u003d new CommandHandler(taskList, cp.getParts());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"                run \u003d c.runCommand();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"        saveTasks(taskList);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"        s.close();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"xubin0":45}}]
