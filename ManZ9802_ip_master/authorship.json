[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"# Jerry Chatbot","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"## Using the chatbot","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"Prerequisites: JDK 17 installed, jar file downloaded","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"1. Run \"java -jar Jerry.jar\" in your terminal, ensure you are in the directory where you stored Jerry.jar","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"2. Enter a command from the list below","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"## Command list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"1. **list** - print the list of tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"2. **mark x** - mark task number \u0027x\u0027 as done","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"3. **unmark x** - mark task number \u0027x\u0027 as not done","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"4. **todo string** - create a todo with the description \"string\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"5. **deadline string /by date** -  create a deadline with description \"string\" and deadline \"date\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"6. **event string /from start /to end** - create an event with description \"string\", start time \"start\" and end time \"end\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"7. **delete x** - remove task number \u0027x\u0027 from the list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"8. **find string** - display tasks which description contains \"string\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"9. **bye** - exits the program","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"ManZ9802":17,"-":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"# Jerry Chatbot","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"## Using the chatbot","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"Prerequisites: JDK 17 installed, jar file downloaded","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"1. Run \"java -jar Jerry.jar\" in your terminal, ensure you are in the directory where you stored Jerry.jar","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"2. Enter a command from the list below","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"## Command list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"1. **list** - print the list of tasks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"2. **mark x** - mark task number \u0027x\u0027 as done","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"3. **unmark x** - mark task number \u0027x\u0027 as not done","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"4. **todo string** - create a todo with the description \"string\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"5. **deadline string /by date** -  create a deadline with description \"string\" and deadline \"date\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"6. **event string /from start /to end** - create an event with description \"string\", start time \"start\" and end time \"end\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"7. **delete x** - remove task number \u0027x\u0027 from the list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"8. **find string** - display tasks which description contains \"string\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"9. **bye** - exits the program","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"ManZ9802":17,"-":7}},{"path":"src/main/java/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":" * Handles processing of user input.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"public class CommandManager {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"     * Handles all possible commands and returns a specific output based on the command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"     * @param list Task list to be processed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"     * @param text String that command is extracted from by checking the first word of the string","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"     * @return True unless user enters \"bye\"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"     * @throws NumberFormatException if user marks a non-numeric task in the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"     * @throws NullPointerException if user specifies a task that does not exist","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"     * @throws ArrayIndexOutOfBoundsException if user refers to a task that exceeds the number of tasks in the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"     * @throws IllegalArgumentException if user enters a wrong argument for the task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"     * @throws IllegalDeadlineException if user enters wrong argument for deadline task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"     * @throws IllegalEventException if user enters wrong argument for event task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    public static boolean processCommand(ArrayList\u003cTask\u003e list, String text) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"        String command \u003d text.split(\"\\\\s+\")[0];// Extract first word (command)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"            switch (command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"            case \"list\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"                TaskList.printList(list);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"                break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"                TaskList.markTask(list, text, true);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"                break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"                TaskList.markTask(list, text, false);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"                break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"            case \"todo\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"            case \"event\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"                TaskList.createAndAddTask(list, text, command);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"                break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"            case \"delete\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"                TaskList.deleteTask(list, text);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ManZ9802"},"content":"            case \"find\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ManZ9802"},"content":"                TaskList.findTask(list, text);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ManZ9802"},"content":"                break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ManZ9802"},"content":"            case \"bye\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ManZ9802"},"content":"                Ui.exitProcess(list);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ManZ9802"},"content":"                return false;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ManZ9802"},"content":"            default:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ManZ9802"},"content":"                Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ManZ9802"},"content":"                Ui.indentMessage(\"please define task: \" + text);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ManZ9802"},"content":"                Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ManZ9802"},"content":"                break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ManZ9802"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"can\u0027t mark a non-numeric task\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ManZ9802"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"task does not exist\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ManZ9802"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"list is not that long\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ManZ9802"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"Task Name cannot be empty\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ManZ9802"},"content":"        } catch (IllegalDeadlineException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"Task entered incorrectly, please enter \u003cTask Name\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ManZ9802"},"content":"        } catch (IllegalEventException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"Task entered incorrectly, please enter \u003cTask Name\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ManZ9802"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ManZ9802"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ManZ9802"},"content":"        return true;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"ManZ9802":93}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * Deadline is part of the Task class with an extra /by to show when it needs to be completed","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" * @see Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"    protected String by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"        return by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"    public void setBy(String by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * Event is part of the Task class that has a start and end time","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" * @see Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"    protected String startTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"    protected String endTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"        return startTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"        return endTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"    public void setEndTime(String endTime) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \", to: \" + endTime + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":35}},{"path":"src/main/java/IllegalDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * @see java.lang.Exception","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"public class IllegalDeadlineException extends Exception {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"ManZ9802":5}},{"path":"src/main/java/IllegalEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * @see java.lang.Exception","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"public class IllegalEventException extends Exception {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"ManZ9802":5}},{"path":"src/main/java/Jerry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * \u003ch1\u003e Jerry Chatbot\u003c/h1\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":" * The Jerry chatbot implements a task tracker that tracks three types of","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":" * tasks: Todo, Event, Deadline. \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":" *     It takes in different commands as argument and returns an output","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":" *     based on those commands.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":" *     When loading in, Jerry will read from ./data/Jerry.txt file for any pre-existing list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":" *     and will save to the same file when exiting to preserve the list when the program is closed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":" * @author Man Zhong","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":" * @version 1.0","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":" * @since AY24/25 Semester 2","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"public class Jerry {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"        Ui.run();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ManZ9802":23}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * handles parsing of task from Jerry.txt file to list when starting the program","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"public class Parser {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"     * Goes through each line in the Jerry.txt file and creates a task to be added to the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"     * based on information in the line","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"     * @param line string of text inside the .txt file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"     * @return Task that is to be added into the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"    static Task parseTask(String line) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"        char taskType \u003d line.charAt(1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"        boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"        switch (taskType) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"            String tDescription \u003d line.substring(7).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"            Task todo \u003d new Todo(tDescription);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"            if (isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"                todo.markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"            return todo;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"            int byIndex \u003d line.indexOf(\"(by:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"            String dDescription \u003d line.substring(7, byIndex).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"            String deadline \u003d line.substring(byIndex + 4, line.length() - 1).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"            Task deadlineTask \u003d new Deadline(dDescription, deadline);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"            if (isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"                deadlineTask.markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"            return deadlineTask;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"            int fromIndex \u003d line.indexOf(\"(from:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"            int toIndex \u003d line.indexOf(\", to:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"            String eDescription \u003d line.substring(7, fromIndex).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"            String startTime \u003d line.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"            String endTime \u003d line.substring(toIndex + 5, line.length() - 1).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"            Task eventTask \u003d new Event(eDescription, startTime, endTime);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"            if (isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"                eventTask.markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"            return eventTask;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"        default:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"            return null;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":46}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"import java.io.File;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":" * Represents storage class.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":" * Handles all methods related to storing and retrieving from Jerry.txt file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"public class Storage {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"     * Saves the list to path ./data/Jerry.txt.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"     * Creates this path if it does not exist","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"     * @param list list to be saved","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"     * @throws IOException if there is issues saving the file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"    static void saveList(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"        File f \u003d new File(\"./data/Jerry.txt\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"        FileWriter fw \u003d new FileWriter(\"./data/Jerry.txt\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"            fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"        fw.close();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"     * Retrieves the list from path ./data/Jerry.txt.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"     * List is empty if path does not exist","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"     * @param list list that Jerry.txt will copy to","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"    static void loadTask(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"        File file \u003d new File(\"./data/Jerry.txt\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"                file.getParentFile().mkdirs(); // Ensure the directory exists","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"                file.createNewFile(); // Create an empty file","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"                return; // No tasks to load","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ManZ9802"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ManZ9802"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ManZ9802"},"content":"            return;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ManZ9802"},"content":"        Scanner s;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ManZ9802"},"content":"            s \u003d new Scanner(file);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ManZ9802"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ManZ9802"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ManZ9802"},"content":"            return;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ManZ9802"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ManZ9802"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ManZ9802"},"content":"            Task task \u003d Parser.parseTask(line);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ManZ9802"},"content":"            list.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ManZ9802"},"content":"        s.close();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":66}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * Generic Task class with just a simple description and boolean on whether it is done","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"public class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"    protected String description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"ManZ9802":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":" * Handles all methods that manipulate the list of tasks","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"public class TaskList {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"     * marks the specific task in the list as done or not","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"     * @param list Task list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"     * @param text Task number in the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"     * @param done True if task is to be marked as done","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"    static void markTask(ArrayList\u003cTask\u003e list, String text, boolean done) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"        String number \u003d text.replaceAll(\"\\\\D+\", \"\"); // Remove all non-digits","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"        int i \u003d Integer.parseInt(number);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"        if (done) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"            list.get(i - 1).markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"Marked task \" + i + \" as done\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"            list.get(i - 1).markAsNotDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"Marked task \" + i + \" as not done\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(list.get(i - 1).toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"     * Creates a new task and adds it to the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"     * @param list Task list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"     * @param text Task description, deadline and/or dates","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"     * @param type Determines what type of task to be created","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"     * @throws IllegalDeadlineException if user enters wrong argument for deadline task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"     * @throws IllegalEventException if user enters wrong argument for event task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"    static void createAndAddTask(ArrayList\u003cTask\u003e list, String text, String type) throws IllegalDeadlineException, IllegalEventException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"        String taskName \u003d text.substring(type.length()).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"        Task newTask;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"        switch (type) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"            newTask \u003d new Todo(text.substring(4).trim());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ManZ9802"},"content":"            break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ManZ9802"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ManZ9802"},"content":"            int byIndex \u003d text.indexOf(\"/by\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ManZ9802"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ManZ9802"},"content":"                throw new IllegalDeadlineException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ManZ9802"},"content":"            String description \u003d text.substring(9, text.indexOf(\u0027/\u0027)).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ManZ9802"},"content":"            String by \u003d text.substring(text.indexOf(\u0027/\u0027) + 4).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ManZ9802"},"content":"            if (by.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ManZ9802"},"content":"                throw new IllegalDeadlineException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ManZ9802"},"content":"            newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ManZ9802"},"content":"            break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ManZ9802"},"content":"        case \"event\":","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ManZ9802"},"content":"            int fromIndex \u003d text.indexOf(\"/from\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ManZ9802"},"content":"            int toIndex \u003d text.indexOf(\"/to\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ManZ9802"},"content":"            if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || toIndex \u003c\u003d fromIndex) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ManZ9802"},"content":"                throw new IllegalEventException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ManZ9802"},"content":"            String eventDescription \u003d text.substring(6, text.indexOf(\u0027/\u0027)).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ManZ9802"},"content":"            String start \u003d text.substring(text.indexOf(\u0027/\u0027) + 6, text.lastIndexOf(\u0027/\u0027)).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ManZ9802"},"content":"            String end \u003d text.substring(text.lastIndexOf(\u0027/\u0027) + 4).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ManZ9802"},"content":"            if (start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ManZ9802"},"content":"                throw new IllegalEventException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ManZ9802"},"content":"            newTask \u003d new Event(eventDescription, start, end);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ManZ9802"},"content":"            break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ManZ9802"},"content":"        default:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ManZ9802"},"content":"            newTask \u003d null;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ManZ9802"},"content":"            break;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ManZ9802"},"content":"        list.add(newTask);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ManZ9802"},"content":"        printNewEntry(list, Objects.requireNonNull(newTask));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ManZ9802"},"content":"     * Deletes a task and removes it from the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ManZ9802"},"content":"     * @param list Task list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ManZ9802"},"content":"     * @param text task number in the list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ManZ9802"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e list, String text) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ManZ9802"},"content":"        String number \u003d text.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ManZ9802"},"content":"        int i \u003d Integer.parseInt(number);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(\"Noted, deleted task \" + i + \": \");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(list.get(i - 1).toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(\"Now you have \" + (list.size() - 1) + \" task(s)\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ManZ9802"},"content":"        list.remove(i - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ManZ9802"},"content":"     * prints the list out","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ManZ9802"},"content":"     * @param list Task list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ManZ9802"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ManZ9802"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"No tasks found!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ManZ9802"},"content":"        } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ManZ9802"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ManZ9802"},"content":"                Ui.indentMessage((i + 1) + \": \" + list.get(i).toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ManZ9802"},"content":"     * Informs user that task has been created and how many tasks there are in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ManZ9802"},"content":"     * @param list Task list","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ManZ9802"},"content":"     * @param key Task to be printed out","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ManZ9802"},"content":"    public static void printNewEntry(ArrayList\u003cTask\u003e list, Task key) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(\"Added task to list:\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(key.toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(\"Now you have \" + list.size() + \" task(s)\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ManZ9802"},"content":"    public static void findTask(ArrayList\u003cTask\u003e list, String text) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ManZ9802"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ManZ9802"},"content":"        String description \u003d text.substring(5).trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ManZ9802"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ManZ9802"},"content":"            if (task.toString().contains(description)) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ManZ9802"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ManZ9802"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ManZ9802"},"content":"            Ui.indentMessage(\"No tasks found!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ManZ9802"},"content":"            Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ManZ9802"},"content":"            return;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ManZ9802"},"content":"        Ui.printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ManZ9802"},"content":"        Ui.indentMessage(\"Found \" + matchingTasks.size() + \" task(s)\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ManZ9802"},"content":"        printList(matchingTasks);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":148}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":" * Todo is part of the Task class with only a description and boolean on whether it is done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":" * @see Task","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":14}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":" * Represents Ui class","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":" * Handles all the Ui related methods","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"public class Ui {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"     * Prints exit message and saves the task list to the Jerry.txt file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"     * @param list task list to be saved","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"     * @throws IOException if issues occur when saving the list to the Jerry.txt file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"    public static void exitProcess(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"        printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"        indentMessage(\"Bye have a great time!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"        printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"        Storage.saveList(list);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"     * Prints entry message when the program is started up and retrieves task list from the Jerry.txt filr","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"     * @param list task list retrieved from the file","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"    public static void enterText(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"        printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"        indentMessage(\"Hello! I\u0027m Jerry\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"        indentMessage(\"What can I do for you?\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"        printHoriLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"        Storage.loadTask(list);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"    public static void indentMessage(String message) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"        System.out.println(\"\\t\" + message);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"    public static void printHoriLine() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"        System.out.println(\"__________________________________________________\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"     * Main method that runs while program is active. User will input a string as argument and","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"     * processCommand will return true to loop back in order to get the next command, until user inputs \"bye\"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"     * to exit the loop.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ManZ9802"},"content":"    public static void run() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ManZ9802"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ManZ9802"},"content":"        enterText(list);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ManZ9802"},"content":"        String text;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ManZ9802"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ManZ9802"},"content":"        do {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ManZ9802"},"content":"            text \u003d input.nextLine();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ManZ9802"},"content":"        } while (CommandManager.processCommand(list, text));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"todo borrow book","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"bye","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"ManZ9802":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"java -classpath ../bin Jerry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ManZ9802":1,"-":37}}]
