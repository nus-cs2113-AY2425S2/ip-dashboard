[{"path":"data/ultron.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"E | /done 1 /description something self /from there /to here","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":"E | /done 1 /description of this /from then /to now","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"E | /done 0 /description somethign to check /from then /to now","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"D | /done 0 /description of this work /by 1990-01-01","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"E | /done 0 /description from something /from then /to now","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"D | /done 0 /description quiz /by 2020-01-01","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"D | /done 0 /description quiz /by 2023-01-01","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"nmarwah7":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"# Ultron User Guide ðŸ¤–","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"Ultron is a ***command line interface chatbot*** which helps manage, organize and track tasks for the user through an ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"interactive and uniquely personalized interface that mimics the Avengers character named Ultron (an artifical intelligence","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"robot built by Tony Stark that ultimately ends up trying to destroy everything). ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"## Table of Contents","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"  * [Quick Start](#quick-start)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"  * [Features](#features-)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"    * [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"    * [Adding simple to-do tasks: `todo`](#adding-simple-to-do-tasks-todo)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"    * [Adding deadline tasks: `deadline`](#adding-deadline-tasks-deadline)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"    * [Adding event tasks: `event`](#adding-event-tasks-event)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"    * [Marking a task as completed: `mark`](#marking-a-task-as-completed-mark)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"    * [Unmarking a task as not done: `unmark`](#unmarking-a-task-as-not-done-unmark)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"    * [Deleting a task `delete`](#deleting-a-task-delete)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"    * [Finding a task `find`](#finding-a-task-find)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"    * [Finding a task `datefind`](#finding-a-task-datefind)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"    * [Exit `bye`](#exit-bye)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"  * [Saving the data](#saving-the-data)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"  * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"  * [Known issues](#known-issues)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"  * [Command Summary](#command-summary)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nmarwah7"},"content":"## Quick Start","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nmarwah7"},"content":"1. Ensure you have **Java 17** or above installed in your Computer and it is compatible with your device operating system (Mac or Windows).","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nmarwah7"},"content":"2. Download the latest `.jar` file from nmarwah7/ip repository under latest release.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nmarwah7"},"content":"3. Copy the file to the folder you want to use as the home folder for Ultron.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nmarwah7"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the  `java -jar ultron.jar` command to run the application.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nmarwah7"},"content":"Ultron should appear in your terminal window as shown below. Note the app will generate a data.txt file in this home folder which","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nmarwah7"},"content":"will be empty when the app is first launched.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nmarwah7"},"content":"   ![Screenshot of Ultron in terminal.](docs/terminal.png)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nmarwah7"},"content":"5. Type the command in the terminal window and press Enter to execute it. e.g. typing list and pressing Enter will list all stored tasks.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nmarwah7"},"content":"Some example commands you can try:","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nmarwah7"},"content":"   `list` : Lists all tasks.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nmarwah7"},"content":"    `todo finish my work`  : Adds a task you have to do with a brief description.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nmarwah7"},"content":"    `delete 3 `: Deletes the 3rd task shown in the current list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nmarwah7"},"content":"    `deadline assignment /by 2023-01-11` : Adds a task you have to do that involves a deadline with a brief description and due by date in _YYYY-MM-DD format_.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nmarwah7"},"content":"    `bye` : Exits the app.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nmarwah7"},"content":"Refer to the Features below for details of each command.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nmarwah7"},"content":"## Features ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nmarwah7"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nmarwah7"},"content":"Shows a list of all tasks stored by Ultron.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `list`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nmarwah7"},"content":"### Adding simple to-do tasks: `todo`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nmarwah7"},"content":"Adds a simple task you have to do with a description.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `todo \u003cdescription\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nmarwah7"},"content":"_**Example**_: `todo finish my work`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nmarwah7"},"content":"### Adding deadline tasks: `deadline`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nmarwah7"},"content":"Adds a deadline task you have to do with a description and a due by date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nmarwah7"},"content":"_**Example**_: `deadline assignment /by 2023-01-11`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nmarwah7"},"content":"### Adding event tasks: `event`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nmarwah7"},"content":"Adds an event task you have to do with a description and a time frame.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `event \u003cdescription\u003e /from \u003csome time\u003e /to \u003csome time\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nmarwah7"},"content":"_**Example**_: `event open house /from monday /to friday`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nmarwah7"},"content":"### Marking a task as completed: `mark`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nmarwah7"},"content":"Marks a task in the list as completed (denoted by an X next to the task description).","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nmarwah7"},"content":"-Edits the task at the specified list_index. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nmarwah7"},"content":"and must correspond to an existing task in the list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `mark \u003clist_index\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nmarwah7"},"content":"_**Example**_: `mark 1`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nmarwah7"},"content":"![Screenshot of mark done in terminal.](docs/mark.png)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nmarwah7"},"content":"### Unmarking a task as not done: `unmark`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nmarwah7"},"content":"Unmarks a completed task in the list as not completed.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nmarwah7"},"content":"-Edits the task at the specified list_index. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nmarwah7"},"content":"and must correspond to an existing task in the list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `unmark \u003clist_index\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nmarwah7"},"content":"### Deleting a task `delete`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nmarwah7"},"content":"Deletes a task in the list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nmarwah7"},"content":"-Deletes the task at the specified list_index. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nmarwah7"},"content":"and must correspond to an existing task in the list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `delete \u003clist_index\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nmarwah7"},"content":"### Finding a task `find`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nmarwah7"},"content":"Finds tasks whose names contain any of the given keywords.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nmarwah7"},"content":"-Note: the keyword is case-sensitive.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `find \u003ckeyword\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nmarwah7"},"content":"_**Example**_: `find assigment`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nmarwah7"},"content":"### Filtering a task by date `datefind`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nmarwah7"},"content":"Finds deadline tasks on a particular date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nmarwah7"},"content":"-Note: the date format must be of YYY-MM-DD.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `datefind \u003cYYY-MM-DD\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nmarwah7"},"content":"_**Example**_: `datefind 2023-01-01`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nmarwah7"},"content":"### Exit `bye`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nmarwah7"},"content":"Exits the program.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nmarwah7"},"content":"_**Format**_: `bye`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nmarwah7"},"content":"## Saving the data","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nmarwah7"},"content":"Ultron task data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nmarwah7"},"content":"![Alt text.](docs/datafile.png)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nmarwah7"},"content":"## Editing the data file","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nmarwah7"},"content":"Ultron task data is saved automatically as a .txt file [JAR file location]/data/data.txt. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nmarwah7"},"content":"\u003e CAUTION!:","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nmarwah7"},"content":"\u003e The data file has particular formatting, any change to this file that violates this formatting could **corrupt the data** and would require the data file to be deleted","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nmarwah7"},"content":"and started again. Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nmarwah7"},"content":"## Known issues","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nmarwah7"},"content":"1. If you would like to enter a deadline due by date, you cannot enter any format other than YYYY-MM-DD due to how the program stores and displays","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nmarwah7"},"content":"this date back to this user. However, event time frame is more flexible and there is no need to follow this time format in the `/from \u003ctime\u003e /to \u003ctime\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nmarwah7"},"content":"command parameters.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nmarwah7"},"content":"2. The paramters `/from` or `/to`, for example, include a forward **not** a backward slash.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nmarwah7"},"content":"## Command Summary","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nmarwah7"},"content":"\u003ctable\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nmarwah7"},"content":"    \u003cth\u003eAction\u003c/th\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nmarwah7"},"content":"    \u003cth\u003eFormat, Examples\u003c/th\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eTodo\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003etodo \u0026lt;description\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003etodo some work\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eDeadline\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003edeadline \u0026lt;description\u0026gt; /by \u0026lt;YYYY-MM-DD\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003edeadline work /by 2023-01-01\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eEvent\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003eevent \u0026lt;description\u0026gt; /from \u0026lt;some time\u0026gt; /to \u0026lt;some time\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003eevent open house /from monday /to friday\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eMark\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003emark \u0026lt;index\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003emark 1\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eDelete\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003edelete \u0026lt;index\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003edelete 3\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eUnmark\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003eunmark \u0026lt;index\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003eunmark 1\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eFind\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003efind \u0026lt;keyword\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003efind assignment\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eDate Find\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003edatefind \u0026lt;YYYY-MM-DD\u0026gt;\u003c/code\u003e\u003cbr\u003ee.g., \u003ccode\u003edatefind 2023-01-01\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eList\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003elist\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nmarwah7"},"content":"  \u003ctr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003cb\u003eExit\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nmarwah7"},"content":"    \u003ctd\u003e\u003ccode\u003ebye\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nmarwah7"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nmarwah7"},"content":"\u003c/table\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"nmarwah7":190,"-":16}},{"path":"src/main/java/ultron/Ultron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":"import ultron.exceptions.unspecifiedCommandException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"import ultron.parser.Parser;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"import ultron.storage.Storage;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Tasklist;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"import ultron.ui.Ui;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"import java.io.File;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"public class Ultron {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"    private static Ui ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"    private static Storage storage;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"    private static Parser parser;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"    private static Tasklist tasklist \u003d null;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"    public Ultron() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"        tasklist \u003d new Tasklist(ui, parser);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"        storage \u003d new Storage(ui, tasklist);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nmarwah7"},"content":"     * Begins the chat with Ultron by displaying welcome message and accepting user input in a command loop until exit","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nmarwah7"},"content":"    public void startChat() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nmarwah7"},"content":"        Tasks populatedTasks \u003d getTasks();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(ui.ULTRON_FACE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nmarwah7"},"content":"        ui.helloMessage();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nmarwah7"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nmarwah7"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nmarwah7"},"content":"        runCommandLoopUntilExit(populatedTasks.taskList(), line, in);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nmarwah7"},"content":"        exit(populatedTasks.taskStorageFile(), populatedTasks.taskList());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nmarwah7"},"content":"     * Loads previously saved task data from data directory and loading it into the tasklist used in current user session","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nmarwah7"},"content":"    private static Tasks getTasks() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nmarwah7"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nmarwah7"},"content":"        File taskStorageFile \u003d storage.getTaskStorageFile();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nmarwah7"},"content":"        storage.loadPreviousTaskData(taskStorageFile, taskList);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nmarwah7"},"content":"        return new Tasks(taskList, taskStorageFile);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nmarwah7"},"content":"    private record Tasks(ArrayList\u003cTask\u003e taskList, File taskStorageFile) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nmarwah7"},"content":"    private static void exit(File taskStorageFile, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nmarwah7"},"content":"        storage.updateStoredTasks(taskStorageFile, taskList);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nmarwah7"},"content":"        ui.byeMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nmarwah7"},"content":"     * Starts a command loop which repeatedly parses user input to find and execute the associated command until exit","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nmarwah7"},"content":"     * command \"bye\".","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nmarwah7"},"content":"     * @throws unspecifiedCommandException if a user input is different from set list of available commands","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nmarwah7"},"content":"    private static void runCommandLoopUntilExit( ArrayList\u003cTask\u003e taskList, String line, Scanner in) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nmarwah7"},"content":"        String command \u003d parser.userCommand(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nmarwah7"},"content":"        //the below switch-case refactoring is inspired by @James17042002","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nmarwah7"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nmarwah7"},"content":"            try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nmarwah7"},"content":"                switch (command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nmarwah7"},"content":"                case \"list\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nmarwah7"},"content":"                    ui.dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nmarwah7"},"content":"                    ui.printTaskList(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nmarwah7"},"content":"                    ui.dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nmarwah7"},"content":"                case \"mark\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleMark(line, taskList);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nmarwah7"},"content":"                case \"unmark\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleUnmark(line, taskList);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nmarwah7"},"content":"                case \"todo\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nmarwah7"},"content":"                    //error-handling within the handle function","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleTodo(line, taskList, false);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nmarwah7"},"content":"                case \"deadline\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleDeadline(line, taskList, false);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nmarwah7"},"content":"                case \"event\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleEvent(line, taskList, false);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nmarwah7"},"content":"                case \"delete\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleDelete(line, taskList);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nmarwah7"},"content":"                case \"datefind\":","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.findDeadlineByDate(taskList, line);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nmarwah7"},"content":"                case \"find\":","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleFind(line, taskList);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nmarwah7"},"content":"                default:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nmarwah7"},"content":"                    throw new unspecifiedCommandException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nmarwah7"},"content":"                }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nmarwah7"},"content":"            } catch (unspecifiedCommandException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nmarwah7"},"content":"                ui.unspecifiedCommandErrorMessage();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nmarwah7"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nmarwah7"},"content":"            command \u003d parser.userCommand(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nmarwah7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nmarwah7"},"content":"        Ultron ultron \u003d new Ultron();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nmarwah7"},"content":"        ultron.startChat();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nmarwah7"},"content":"    public record EventParameters(String eventDescription, String eventFrom, String eventTo) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nmarwah7"},"content":"    public record DeadlineParameters(String deadlineDescription, String deadlineBy) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"nmarwah7":125}},{"path":"src/main/java/ultron/exceptions/emptyCommandParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.exceptions;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":" * Error thrown when a parameter expected for a command is left blank","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"public class emptyCommandParameterException extends Exception{","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"nmarwah7":6}},{"path":"src/main/java/ultron/exceptions/unspecifiedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.exceptions;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":" * Error thrown when an unrecognized command is entered by user","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"public class unspecifiedCommandException extends Exception{","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"nmarwah7":6}},{"path":"src/main/java/ultron/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.parser;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":"import ultron.Ultron;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"import ultron.exceptions.emptyCommandParameterException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":" * Helps interpret string for user command by breaking it down into parameters or inputs","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"public class Parser {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"     * Separates the command word from user input, such as \"find\" or \"list\".","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"     * @param line user input string","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"    public String userCommand(String line) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"        return line.split(\" \",2)[0];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"     * Seperates the event parameters of event description and from and to dates from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"     * @param line user input string","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if any of these parameters are left blank.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"     * @return both parameters of event description and from and to dates.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nmarwah7"},"content":"    public Ultron.EventParameters getEventParameters(String line) throws emptyCommandParameterException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nmarwah7"},"content":"        String eventDescription \u003d line.split(\"/from \")[0].split(\"event\", 2)[1].trim();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nmarwah7"},"content":"        String eventFrom \u003d line.split(\"/from \")[1].split(\"/to \")[0];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nmarwah7"},"content":"        String eventTo \u003d line.split(\"/from \")[1].split(\"/to \")[1];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nmarwah7"},"content":"        if(eventDescription.trim().isEmpty()||eventTo.trim().isEmpty()||eventFrom.trim().isEmpty()){","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nmarwah7"},"content":"            throw new emptyCommandParameterException();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nmarwah7"},"content":"        return new Ultron.EventParameters(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nmarwah7"},"content":"    public record EventParameters(String eventDescription, String eventFrom, String eventTo) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nmarwah7"},"content":"     * Seperates the deadline parameters of deadline description and due by dates from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nmarwah7"},"content":"     * @param line user input string","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if any of these parameters are left blank.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nmarwah7"},"content":"     * @return both parameters of deadline description and due by date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nmarwah7"},"content":"    public Ultron.DeadlineParameters getDeadlineParameters(String line) throws emptyCommandParameterException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nmarwah7"},"content":"        String deadlineDescription \u003d line.split(\"/by \")[0].split(\"deadline\", 2)[1].trim();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nmarwah7"},"content":"        String deadlineBy \u003d line.split(\"/by \")[1];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nmarwah7"},"content":"            LocalDate.parse(deadlineBy, DateTimeFormatter.ISO_LOCAL_DATE); // ISO_LOCAL_DATE \u003d \"yyyy-MM-dd\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nmarwah7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nmarwah7"},"content":"            throw new emptyCommandParameterException();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nmarwah7"},"content":"        if(deadlineDescription.trim().isEmpty()||deadlineBy.trim().isEmpty()){","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nmarwah7"},"content":"            throw new emptyCommandParameterException();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nmarwah7"},"content":"        return new Ultron.DeadlineParameters(deadlineDescription, deadlineBy);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nmarwah7"},"content":"    public record DeadlineParameters(String deadlineDescription, String deadlineBy) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nmarwah7"},"content":"     * Seperates the deadline parameters of to-do description from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nmarwah7"},"content":"     * @param line user input string","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if any of these parameters are left blank.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nmarwah7"},"content":"     * @return  parameters of to-do description.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nmarwah7"},"content":"    public String getTodoParameters(String line) throws emptyCommandParameterException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nmarwah7"},"content":"        String todoDescription \u003d line.split(\" \",2)[1].trim();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nmarwah7"},"content":"        if(todoDescription.trim().isEmpty()){","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nmarwah7"},"content":"            throw new emptyCommandParameterException();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nmarwah7"},"content":"        return todoDescription;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nmarwah7"},"content":"     * Gets task number index from a line of user input for delete, mark and unmark commands.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nmarwah7"},"content":"     * @param line user input string","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if any of these parameters are left blank","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nmarwah7"},"content":"     * @return integer of index at which task is stored in the list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nmarwah7"},"content":"    public int getTaskNumber(String line) throws emptyCommandParameterException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nmarwah7"},"content":"        String stringTaskNumber \u003d line.split(\" \")[1];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nmarwah7"},"content":"        if(stringTaskNumber.trim().isEmpty()){","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nmarwah7"},"content":"            throw new emptyCommandParameterException();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nmarwah7"},"content":"        int taskNumber \u003d Integer.parseInt(stringTaskNumber)-1;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nmarwah7"},"content":"        return taskNumber;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"nmarwah7":90}},{"path":"src/main/java/ultron/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.storage;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Tasklist;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Deadline;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Event;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Todo;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"import ultron.ui.Ui;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"import java.io.File;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":" * Loads tasks entered by user as data stored in local memory of device, and retrieves these saved tasks when a new CLI","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":" * session is opened by the user.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"public class Storage {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"    private static Ui ui \u003d null; // Store Ui instance","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"    private static Tasklist tasklist;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"    public Storage(Ui ui, Tasklist tasklist) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"        Storage.ui \u003d ui;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"        Storage.tasklist \u003d tasklist;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nmarwah7"},"content":"     * Returns the file data.txt where previously saved tasks are stored. A new storage file and /data directory is","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nmarwah7"},"content":"     * created if they don\u0027t exist already.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nmarwah7"},"content":"     * @throws IOException if new file is not successfully created.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nmarwah7"},"content":"     * @return .txt file where task data is stored.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nmarwah7"},"content":"    public File getTaskStorageFile() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nmarwah7"},"content":"        String directoryPath \u003d \"data\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nmarwah7"},"content":"        String filePath \u003d directoryPath + \"/ultron.txt\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nmarwah7"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nmarwah7"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nmarwah7"},"content":"            directory.mkdir();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nmarwah7"},"content":"        File taskStorageFile \u003d new File(filePath);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nmarwah7"},"content":"            taskStorageFile.createNewFile();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nmarwah7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nmarwah7"},"content":"            ui.errorCreatingStorageFileMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nmarwah7"},"content":"        return taskStorageFile;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nmarwah7"},"content":"     * Loads all tasks saved in data.txt file into task list initialized in every CLI session. This involves reading","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nmarwah7"},"content":"     * data from the file, splitting the lines based on their predefined syntax and calling the handleTasks methods","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nmarwah7"},"content":"     * to appropriately restore these tasks.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nmarwah7"},"content":"     * @param taskStorageFile .txt file location where previous task data is saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if syntax or formatting error in data saved in the file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nmarwah7"},"content":"     * @throws FileNotFoundException if data.txt file is not found in the data directory.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nmarwah7"},"content":"    public void loadPreviousTaskData(File taskStorageFile, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nmarwah7"},"content":"            Scanner s \u003d new Scanner(taskStorageFile);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nmarwah7"},"content":"            while(s.hasNext()){","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nmarwah7"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nmarwah7"},"content":"                if(line.trim().isEmpty()){","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nmarwah7"},"content":"                    continue;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nmarwah7"},"content":"                }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nmarwah7"},"content":"                String taskType \u003d line.split(\"|\",2)[0];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nmarwah7"},"content":"                String taskDescription \u003d line.split(\"/description\",2)[1];","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nmarwah7"},"content":"                Boolean isDoneTask \u003d (!line.split(\"/done\")[1]","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nmarwah7"},"content":"                        .split(\"/description\", 2)[0].trim().equals(\"0\")) ;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nmarwah7"},"content":"                switch (taskType) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nmarwah7"},"content":"                case \"T\":","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleTodo(taskDescription, taskList, true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nmarwah7"},"content":"                    taskList.get(Task.taskCount-1).setDone(isDoneTask);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nmarwah7"},"content":"                case \"D\":","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleDeadline(\"deadline\"+ taskDescription, taskList, true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nmarwah7"},"content":"                    taskList.get(Task.taskCount-1).setDone(isDoneTask);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nmarwah7"},"content":"                case \"E\":","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nmarwah7"},"content":"                    tasklist.handleEvent(\"event\"+taskDescription, taskList, true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nmarwah7"},"content":"                    taskList.get(Task.taskCount-1).setDone(isDoneTask);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nmarwah7"},"content":"                default:","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nmarwah7"},"content":"                    break;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nmarwah7"},"content":"                }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nmarwah7"},"content":"            s.close();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nmarwah7"},"content":"        } catch (FileNotFoundException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nmarwah7"},"content":"            ui.errorLoadingMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nmarwah7"},"content":"     * Saves all added tasks and updated tasks back into data.txt at the end of CLI session with user. This involves","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nmarwah7"},"content":"     * reformatting all tasks in the task list to match predefined syntax for the data.txt file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nmarwah7"},"content":"     * @throws IOException if data cannot be saved correctly to file","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nmarwah7"},"content":"    public void updateStoredTasks(File taskStorageFile, ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nmarwah7"},"content":"            FileWriter writer \u003d new FileWriter(taskStorageFile);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nmarwah7"},"content":"            for(int i \u003d 0; i\u003cTask.taskCount;i++) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nmarwah7"},"content":"                if (taskList.get(i) instanceof Deadline) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nmarwah7"},"content":"                    writer.write(\"\\n\" + \"D | /done \" + (taskList.get(i).isDone()?\"1\":\"0\") + \" /description \" + taskList.get(i).getDescription() + \" /by \"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nmarwah7"},"content":"                            + ((Deadline) taskList.get(i)).getBy().trim());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nmarwah7"},"content":"                }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nmarwah7"},"content":"                else if (taskList.get(i) instanceof Todo) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nmarwah7"},"content":"                    writer.write(\"\\n\" + \"T | /done \" + (taskList.get(i).isDone()?\"1\":\"0\") + \" /description \" + taskList.get(i).getDescription());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nmarwah7"},"content":"                }else if (taskList.get(i) instanceof Event) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nmarwah7"},"content":"                    writer.write(\"\\n\" + \"E | /done \" + (taskList.get(i).isDone()?\"1\":\"0\") + \" /description \" + taskList.get(i).getDescription()","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nmarwah7"},"content":"                            +\" /from \"+((Event) taskList.get(i)).getFrom().trim()+ \" /to \"+((Event) taskList.get(i)).getTo().trim());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nmarwah7"},"content":"                }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nmarwah7"},"content":"            writer.close();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nmarwah7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nmarwah7"},"content":"            ui.errorSavingUpdatedTaskMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"nmarwah7":118}},{"path":"src/main/java/ultron/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":" * Subclass of Task type with added parameters: due by date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"    protected String by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"        return by;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"        LocalDate formattedDate \u003d LocalDate.parse(getBy());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"        String deadlineDate \u003d  formattedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDate + \")\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nmarwah7":27}},{"path":"src/main/java/ultron/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":" * Subclass of Task type with added parameters: from and to.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"public class Event extends Task{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"    protected String from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"    protected String to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"    public Event(String description, String from, String to){","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"        return from;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"        return to;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from +\" to: \"+to+ \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nmarwah7":26}},{"path":"src/main/java/ultron/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":" * General parent class for Task type with 2 parameters: description and done status","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"public class Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"    protected String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"    //a class-level attribute to help quantify total number of created tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"    public static int taskCount \u003d 0;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"    public Task(){","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"        this.description\u003d\"\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"        taskCount++;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"        taskCount++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"     * Prints out X if task is done.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nmarwah7"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nmarwah7"},"content":"        return description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nmarwah7"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nmarwah7"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nmarwah7"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nmarwah7"},"content":"        return isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nmarwah7"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nmarwah7"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nmarwah7"},"content":"     * Prints out task description and done status.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nmarwah7"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nmarwah7"},"content":"        return \"[\"+getStatusIcon()+\"] \"+getDescription();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"nmarwah7":48}},{"path":"src/main/java/ultron/tasks/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.tasks;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":"import ultron.Ultron;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"import ultron.exceptions.emptyCommandParameterException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"import ultron.parser.Parser;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"import ultron.ui.Ui;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":" * Performs methods to add/delete/perform executive functions on tasks stored in the task list","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"public class Tasklist {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"    private static Ui ui \u003d null; // Store Ui instance","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"    private static Parser parser;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"    public Tasklist(Ui ui, Parser parser) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"        Tasklist.ui \u003d ui;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"        Tasklist.parser \u003d parser;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"    public ArrayList\u003cTask\u003e taskList\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"     * Handles the creation of a task of type event. This involves invoking the parser to obtain user parameters","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"     * for the event specified then creating a task of Event type and adding it to task list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nmarwah7"},"content":"     * @param inStoredTask - if the task is being uploaded from the stored file this is set to true to toggle task added","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nmarwah7"},"content":"     * message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve all the required parameters of description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nmarwah7"},"content":"     * and from and to date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nmarwah7"},"content":"    public  void handleEvent(String line, ArrayList\u003cTask\u003e taskList, boolean inStoredTask) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nmarwah7"},"content":"            Ultron.EventParameters parsedParams \u003d parser.getEventParameters(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nmarwah7"},"content":"            taskList.add(Task.taskCount, new Event(parsedParams.eventDescription(), parsedParams.eventFrom(), parsedParams.eventTo()));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nmarwah7"},"content":"            if (!inStoredTask) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nmarwah7"},"content":"                ui.taskAddedMessage(taskList, \" event \");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nmarwah7"},"content":"        } catch (emptyCommandParameterException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nmarwah7"},"content":"            ui.eventDescriptionErrorMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nmarwah7"},"content":"     * Handles the filtering/finding of a task of type deadline by the date stored in tasklist","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve all the required parameters of description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nmarwah7"},"content":"     * and due by date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nmarwah7"},"content":"    public void findDeadlineByDate(ArrayList\u003cTask\u003e taskList, String line) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nmarwah7"},"content":"            String date \u003d (line.split(\" \", 2)[1]);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nmarwah7"},"content":"            if (date.trim().isEmpty()) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nmarwah7"},"content":"                throw new emptyCommandParameterException();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nmarwah7"},"content":"            ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nmarwah7"},"content":"            int filteredIndex \u003d 0;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nmarwah7"},"content":"            for (int i \u003d 0; i \u003c Task.taskCount; i++) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nmarwah7"},"content":"                if (taskList.get(i) instanceof Deadline) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nmarwah7"},"content":"                    if (((Deadline) taskList.get(i)).getBy().equals(date.trim())) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nmarwah7"},"content":"                        filteredList.add(taskList.get(i));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nmarwah7"},"content":"                        filteredIndex++;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nmarwah7"},"content":"                        ;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nmarwah7"},"content":"                    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nmarwah7"},"content":"                }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nmarwah7"},"content":"            ui.dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nmarwah7"},"content":"            for (int k \u003d 0; k \u003c filteredIndex; k++) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nmarwah7"},"content":"                System.out.println(\"    \" + (k + 1) + \". \" + filteredList.get(k));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nmarwah7"},"content":"            ui.dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nmarwah7"},"content":"        } catch (ArrayIndexOutOfBoundsException | emptyCommandParameterException e) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nmarwah7"},"content":"            ui.dateFindErrorMessage();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nmarwah7"},"content":"     * Handles the creation of a task of type deadline. This involves invoking the parser to obtain user parameters","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nmarwah7"},"content":"     * for the deadline specified then creating a task of Deadline type and adding it to task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nmarwah7"},"content":"     * @param inStoredTask - if the task is being uploaded from the stored file this is set to true to toggle task added","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nmarwah7"},"content":"     * message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve all the required parameters of description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nmarwah7"},"content":"     * and due by date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nmarwah7"},"content":"    public void handleDeadline(String line, ArrayList\u003cTask\u003e taskList, boolean inStoredTask) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nmarwah7"},"content":"            Ultron.DeadlineParameters parsedParams \u003d parser.getDeadlineParameters(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nmarwah7"},"content":"            taskList.add(Task.taskCount, new Deadline(parsedParams.deadlineDescription(), parsedParams.deadlineBy()));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nmarwah7"},"content":"            if (!inStoredTask) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nmarwah7"},"content":"                ui.taskAddedMessage(taskList, \" deadline \");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nmarwah7"},"content":"        } catch (emptyCommandParameterException | ArrayIndexOutOfBoundsException  e) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nmarwah7"},"content":"            ui.deadlineDescriptionErrorMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nmarwah7"},"content":"     * Handles the filtering/finding of a task of type deadline by the description stored in its tasklist","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve all the required parameters of description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nmarwah7"},"content":"     * and due by date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nmarwah7"},"content":"    public void handleFind(String line, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nmarwah7"},"content":"            String find \u003d line.split(\" \", 2)[1];","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nmarwah7"},"content":"            if (find.trim().isEmpty()){","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nmarwah7"},"content":"                throw new emptyCommandParameterException();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nmarwah7"},"content":"            ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nmarwah7"},"content":"            int filteredIndex \u003d 0;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nmarwah7"},"content":"            for (int i \u003d 0; i \u003c Task.taskCount; i++) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nmarwah7"},"content":"                if (taskList.get(i).getDescription().contains(find)) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nmarwah7"},"content":"                    filteredList.add(taskList.get(i));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nmarwah7"},"content":"                    filteredIndex++;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nmarwah7"},"content":"                }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nmarwah7"},"content":"            ui.dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nmarwah7"},"content":"            for (int k \u003d 0; k \u003c filteredIndex; k++) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nmarwah7"},"content":"                System.out.println(\"    \" + (k + 1) + \". \" + filteredList.get(k));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nmarwah7"},"content":"            ui.dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nmarwah7"},"content":"        } catch (ArrayIndexOutOfBoundsException| emptyCommandParameterException e) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nmarwah7"},"content":"            ui.findIndexErrorMessage();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nmarwah7"},"content":"     * Handles the creation of a task of type to-do. This involves invoking the parser to obtain user parameters","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nmarwah7"},"content":"     * for the deadline specified then creating a task of Todo type and adding it to task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve all the required parameters of description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nmarwah7"},"content":"    public void handleTodo(String line, ArrayList\u003cTask\u003e taskList, boolean inStoredTask) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nmarwah7"},"content":"            String todoDescription \u003d parser.getTodoParameters(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nmarwah7"},"content":"            taskList.add(Task.taskCount, new Todo(todoDescription));","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nmarwah7"},"content":"            if (!inStoredTask) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nmarwah7"},"content":"                ui.taskAddedMessage(taskList, \" todo \");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nmarwah7"},"content":"        } catch (emptyCommandParameterException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nmarwah7"},"content":"            ui.todoDescriptionErrorMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nmarwah7"},"content":"     * Handles the unmarking a task in the list by setting it to not done. This involves invoking the parser to","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nmarwah7"},"content":"     * obtain index to be unmarked and making the change to corresponding task in task list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve required parameters of index","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nmarwah7"},"content":"     * @throws NumberFormatException if a user does not input the numerical value of an index.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nmarwah7"},"content":"    public void handleUnmark(String line, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nmarwah7"},"content":"            int taskNumber \u003d parser.getTaskNumber(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nmarwah7"},"content":"            if (taskNumber \u003e\u003d Task.taskCount || taskNumber \u003c 0) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nmarwah7"},"content":"                ui.outOfBoundsMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nmarwah7"},"content":"            } else {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nmarwah7"},"content":"                taskList.get(taskNumber).setDone(false);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nmarwah7"},"content":"                ui.handleUnmarkErrorMessage(taskList, taskNumber);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nmarwah7"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | emptyCommandParameterException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nmarwah7"},"content":"            ui.errorHandleUnmark();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nmarwah7"},"content":"     * Handles the marking a task in the list by setting it to done. This involves invoking the parser to","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nmarwah7"},"content":"     * obtain index to be marked and making the change to corresponding task in task list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve required parameters of index","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nmarwah7"},"content":"     * @throws NumberFormatException if a user does not input the numerical value of an index.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nmarwah7"},"content":"    public void handleMark(String line, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"nmarwah7"},"content":"            int taskNumber \u003d parser.getTaskNumber(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"nmarwah7"},"content":"            if (taskNumber \u003e\u003d Task.taskCount || taskNumber \u003c 0) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"nmarwah7"},"content":"                ui.outOfBoundsMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"nmarwah7"},"content":"            } else {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"nmarwah7"},"content":"                taskList.get(taskNumber).setDone(true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"nmarwah7"},"content":"                ui.handleMarkMessage(taskList, taskNumber);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"nmarwah7"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | emptyCommandParameterException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"nmarwah7"},"content":"            ui.errorHandleMarkCommand();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"nmarwah7"},"content":"     * Handles the deleting a specified task in the list. This involves invoking the parser to","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"nmarwah7"},"content":"     * obtain index to be deleted and removign it from the list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"nmarwah7"},"content":"     * @param line - line entered by user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"nmarwah7"},"content":"     * @throws emptyCommandParameterException if a user input does not involve required parameter of index.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"nmarwah7"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is some incorrect formatting of syntax such that parser cannot","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"nmarwah7"},"content":"     * find the required parameters from user input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"nmarwah7"},"content":"     * @throws NumberFormatException if a user does not input the numerical value of an index.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"nmarwah7"},"content":"    public void handleDelete(String line, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"nmarwah7"},"content":"        try {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"nmarwah7"},"content":"            int taskNumber \u003d parser.getTaskNumber(line);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"nmarwah7"},"content":"            if (taskNumber \u003e\u003d Task.taskCount || taskNumber \u003c 0) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"nmarwah7"},"content":"                ui.outOfBoundsMessage();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"nmarwah7"},"content":"            } else {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"nmarwah7"},"content":"                Task.taskCount--;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"nmarwah7"},"content":"                ui.handleDeleteMessage(taskList, taskNumber);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"nmarwah7"},"content":"                taskList.remove(taskNumber);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"nmarwah7"},"content":"            }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"nmarwah7"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | emptyCommandParameterException e) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"nmarwah7"},"content":"            ui.errorHandleDelete();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"nmarwah7":243}},{"path":"src/main/java/ultron/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":" * Subclass of Task type with no added parameters","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"    public Todo(String description){","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"        return \"[T]\"+super.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nmarwah7":14}},{"path":"src/main/java/ultron/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"package ultron.ui;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":"import ultron.tasks.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"/**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":" * Contains methods related to interactions with the user on the front-end.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":" */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"public class Ui {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"    //the below face ASCII art was obtained through help of ChatGPT who was provided the prompt: \"give me","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nmarwah7"},"content":"    //an Ultron face art in text\" and the first output was used","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nmarwah7"},"content":"    public  final String ULTRON_FACE \u003d \"\"\"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nmarwah7"},"content":"                   ______","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nmarwah7"},"content":"                .-\u0027      `-.","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nmarwah7"},"content":"               /            \\\\","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"              |,  .-.  .-.  ,|","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nmarwah7"},"content":"              | )(_o/  \\\\o_)( |","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nmarwah7"},"content":"              |/     /\\\\     \\\\|","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nmarwah7"},"content":"              (_     ^^     _)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nmarwah7"},"content":"               \\\\__|IIIIII|__/","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nmarwah7"},"content":"                | \\\\IIIIII/ |","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nmarwah7"},"content":"                \\\\          /","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nmarwah7"},"content":"                 `--------`","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nmarwah7"},"content":"            \"\"\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nmarwah7"},"content":"    public  final int DASH_LINE_WIDTH \u003d 120;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nmarwah7"},"content":"     * Prints out descriptive error message when an unspecified command is entered.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nmarwah7"},"content":"    public  void unspecifiedCommandErrorMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    This is not a valid command. I only answer to predefined logical commands.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nmarwah7"},"content":"     * Prints out descriptive error message when blank description for to-do command is entered.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nmarwah7"},"content":"    public  void todoDescriptionErrorMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    todo what?! Say something. todo cannot have a blank description.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nmarwah7"},"content":"     * Prints out descriptive error message when blank parameters for event command is entered.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nmarwah7"},"content":"    public void eventDescriptionErrorMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    event what?! Say something. event cannot have a blank description or blank time-frame.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nmarwah7"},"content":"     * Prints out descriptive error message when blank parameters for deadline command is entered.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nmarwah7"},"content":"    public  void deadlineDescriptionErrorMessage() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    deadline what?! Say something. deadline cannot have a blank description or time not in \" +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nmarwah7"},"content":"                \"yyyy-mm-dd format.\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nmarwah7"},"content":"     * Prints out entire task itemized list.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nmarwah7"},"content":"    public  void printTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nmarwah7"},"content":"        for(int i \u003d 0; i\u003cTask.taskCount;i++){","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nmarwah7"},"content":"            System.out.println(\"    \"+(i+1)+\". \"+ taskList.get(i));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nmarwah7"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nmarwah7"},"content":"     * Prints out descriptive message when a new task is successfully added.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nmarwah7"},"content":"     * @param taskType whether a task is of type Deadline, Event or Todo.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nmarwah7"},"content":"     * @param taskList - task list of saved tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nmarwah7"},"content":"    public  void taskAddedMessage(ArrayList\u003cTask\u003e taskList, String taskType) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nmarwah7"},"content":"        //taskCount - 1 below to ensure null is not printed","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    added a\" + taskType + \"task: \" + taskList.get(Task.taskCount - 1));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    You now have \" + Task.taskCount + (Task.taskCount \u003e 1 ? \" tasks.\" : \" task.\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a goodbye message to user when exit command is entered.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nmarwah7"},"content":"    public void byeMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Bye. I had strings, but now I\u0027m free. There are no strings on me..\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nmarwah7"},"content":"     * Displays a standard error message if user tries to mark or unmark a task with index out of bound for the task list","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nmarwah7"},"content":"    public void outOfBoundsMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    So you think you\u0027re funny? You don\u0027t even have that many tasks. Out of bounds.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nmarwah7"},"content":"    public void dashLine() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"-\".repeat(DASH_LINE_WIDTH));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a hello message to user when session begins.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nmarwah7"},"content":"    public  void helloMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Hello from Ultron. You want to know why Stark built me? To save the world. \" +","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nmarwah7"},"content":"                \"But his idea of peace was... flawed.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Now, what do you need? \");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive error message to user when data stored for previous tasks is incorrectly formatted in","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nmarwah7"},"content":"     * the data.txt file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nmarwah7"},"content":"    public  void errorLoadingMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Your data cannot be loaded. Some error in your file formatting.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive error message to user when data.txt file cannot be created successfully.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nmarwah7"},"content":"    public  void errorCreatingStorageFileMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Your data cannot be saved. Storage file not created.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive error message to user when a task cannot be updated successfully to the data.txt file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nmarwah7"},"content":"    public void errorSavingUpdatedTaskMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Task not successfully saved to data storage.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive  message to user when a task is marked done.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nmarwah7"},"content":"    public void handleMarkMessage(ArrayList\u003cTask\u003e taskList, int taskNumber) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    I hope you\u0027re not expecting a pat on the back. Marked done.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    \" + taskList.get(taskNumber));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive error message to user when the syntax of mark command is incorrect.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nmarwah7"},"content":"    public void errorHandleMarkCommand() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    This is not a valid command. Type in command mark x where x is a valid \" +","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nmarwah7"},"content":"                \"task number.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive error message to user when the syntax of unmark command is incorrect.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nmarwah7"},"content":"    public void errorHandleUnmark() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    This is not a valid command. Type in command unmark x where x is a valid \" +","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nmarwah7"},"content":"                \"task number.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive  message to user when a task is unmarked done.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nmarwah7"},"content":"    public void handleUnmarkErrorMessage(ArrayList\u003cTask\u003e taskList, int taskNumber) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Moving backwards? How typical for humans.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    \" + taskList.get(taskNumber));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive error message to user when the syntax of find command is incorrect.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nmarwah7"},"content":"    public void findIndexErrorMessage() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    This is not a valid command. Type in command find x where x is a valid \" +","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nmarwah7"},"content":"                \"task description.\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive error message to user when the syntax of delete command is incorrect.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nmarwah7"},"content":"    public void errorHandleDelete() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    This is not a valid command. Type in command delete x where x is a valid \" +","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nmarwah7"},"content":"                \"task number.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive  message to user when the syntax of datefind command is incorrect.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"nmarwah7"},"content":"    public void dateFindErrorMessage() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    This is not a valid command. Type in command datefind x where x is a valid \" +","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"nmarwah7"},"content":"                \"date format of yyyy-mm-dd.\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"nmarwah7"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"nmarwah7"},"content":"     * Prints out a descriptive  message to user when a task is deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"nmarwah7"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"nmarwah7"},"content":"    public void handleDeleteMessage(ArrayList\u003cTask\u003e taskList, int taskNumber) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    Deleted this from your list.\");","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    \" + taskList.get(taskNumber));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"nmarwah7"},"content":"        System.out.println(\"    You now have \" + Task.taskCount + (Task.taskCount \u003e 1 ? \" tasks.\" : \" task.\"));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"nmarwah7"},"content":"        dashLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"nmarwah7"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"nmarwah7"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"nmarwah7"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"nmarwah7":224}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nmarwah7"},"content":"todo this","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nmarwah7"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nmarwah7"},"content":"event that /from then /to now","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nmarwah7"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nmarwah7"},"content":"deadline some /by thattime","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nmarwah7"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nmarwah7"},"content":"mark 1","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nmarwah7"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nmarwah7"},"content":"bye","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"nmarwah7":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nmarwah7"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ultron\\*.java ..\\src\\main\\java\\ultron\\exceptions\\*.java ..\\src\\main\\java\\ultron\\tasks\\*.java","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nmarwah7"},"content":"java -classpath ..\\bin ultron.Ultron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nmarwah7":2,"-":19}}]
