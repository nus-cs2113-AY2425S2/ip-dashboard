[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"# Bond\u0027s Mission Tracker","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"Welcome to **Bond\u0027s Mission Tracker**, your personal assistant for tracking missions, managing deadlines, and keeping","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"your tasks organized. Whether you\u0027re planning an event, managing a deadline, or handling to-dos, Bond will ensure you","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"stay ahead of the game.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"## Quick Start","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"1. Ensure you have Java 17 or above installed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"2. Download the latest version of Bond from the releases section.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"3. Navigate to the folder where you saved the application and run the following command:\\","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"   `java -jar ./ip.jar`","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"4. Bond will greet you with a welcome message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"5. Start typing commands in the command box and press Enter to execute. For example, type `list` to list all missions.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"Some example commands:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"* `list`: Lists all missions","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"* `todo read book`: Adds a to-do mission","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"* `delete 2`: Deletes the second mission","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"* `bye`: Exits Bond","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"## Features","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"- **Adding Missions**: Add missions like to-dos, deadlines, and events.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"- **List All Missions**: View all current missions.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"- **Find Missions by Keyword**: Search for missions using a keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"- **Marking Missions**: Mark tasks as complete or incomplete.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"- **Deleting Missions**: Remove missions from the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"- **Exiting the Tracker**: Exit and save your progress.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"Listen up, agent. With **Bond\u0027s Mission Tracker**, you\u0027ll stay ahead of the game—efficient, reliable, and always ready","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"to handle any task. No mission is too big or small. Stay organized, hit your deadlines, and make every move count. The","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"world needs you—time to get to work.","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"Betahaxer":39}},{"path":"docs/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"layout: default","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"name: Bond\u0027s Mission Tracker","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"# User Guide for **Bond\u0027s Mission Tracker**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"Welcome to **Bond\u0027s Mission Tracker**, your new partner in staying ahead of the game! Just like Bond himself, this tool","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"will help you complete your missions efficiently and precisely, whether you\u0027re tracking deadlines or managing those","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"pesky to-dos. Stay organized, stay sharp, and always be on top of your assignments.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"## Quick Start","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"1. Ensure you have the Java 17 or above installed in your computer.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"2. Download the latest version of Bond from [here](https://github.com/Betahaxer/ip).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"3. Navigate to the folder where you saved the application and run the following command:\\","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"   `java -jar bond.jar`","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"4. Bond will greet you with a welcome message upon starting. Welcome to Bond!","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"5. To start, type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing `Enter`","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"   will list all the missions in your task list.\\","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"   Some example commands you could try:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    * `list`: Lists all missions","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"    * `todo read book`: adds a todo mission with a description of `read book `","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    * `delete 2`: deletes the 2nd mission shown in the tasklist","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    * `bye`: Exits Bond","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"6. Refer to [Features](#features) below for details of each command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"## Features","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"### 1. **Adding Missions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"Bond\u0027s Mission Tracker supports three types of missions: **Todo**, **Deadline**, and **Event**.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"#### Add a Todo Mission","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"For those missions that have no deadline but must be done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"todo DESCRIPTION","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"todo Go for Walkies","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"[T][ ] Go for Walkies","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"#### Add a Deadline Mission","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"For those missions that have a time-sensitive deadline.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"deadline DESCRIPTION /by DATE_TIME","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"deadline Deliver intel /by 31st December 2359","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"[D][ ] Deliver intel (by: 31st December 2359)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"#### Add an Event Mission","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"For missions with a specific start and end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"event Secret briefing /from 1st Jan 9:00am /to 1st Jan 11:00am","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"[E][ ] Secret briefing (from: 1st Jan 9:00am to: 1st Jan 11:00am)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"### 2. **Viewing Missions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"#### List All Missions","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"View all your current missions.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Betahaxer"},"content":"list","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Betahaxer"},"content":"Hmph... The future is uncertain, but these tasks must be completed:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Betahaxer"},"content":"1. [T][ ] Go for Walkies","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Betahaxer"},"content":"2. [D][ ] Deliver intel (by: 31st December 2359)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Betahaxer"},"content":"3. [E][ ] Secret briefing (from: 1st Jan 9:00am to: 1st Jan 11:00am)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Betahaxer"},"content":"Woof 3 tasks… I see them all… woof","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Betahaxer"},"content":"#### Find Missions by Keyword","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Betahaxer"},"content":"Search for specific missions using a keyword.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"find KEYWORD","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"find Walkies","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"### 3. **Marking Missions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"#### Mark a Mission as Complete","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Betahaxer"},"content":"Seal the deal—mark a mission as completed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Betahaxer"},"content":"mark INDEX","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Betahaxer"},"content":"- `INDEX` refers to the task number shown in the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Betahaxer"},"content":"mark 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Betahaxer"},"content":"Wag wag! This task is done now! Good job, human!","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Betahaxer"},"content":"[T][X] Go for Walkies","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Betahaxer"},"content":"#### Mark a Mission as Incomplete","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Betahaxer"},"content":"Need to redo a mission? Mark it as incomplete.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Betahaxer"},"content":"unmark INDEX","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Betahaxer"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Betahaxer"},"content":"unmark 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Betahaxer"},"content":"Awooo... This task isn\u0027t done anymore! Try again later?","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Betahaxer"},"content":"[T][ ] Go for Walkies","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Betahaxer"},"content":"### 4. **Deleting Missions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Betahaxer"},"content":"#### Delete a Mission","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Betahaxer"},"content":"When a mission is no longer needed, simply remove it.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Betahaxer"},"content":"delete INDEX","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Betahaxer"},"content":"**Example:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Betahaxer"},"content":"delete 1","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Betahaxer"},"content":"Woof! Task 1 has been removed. Hope it wasn\u0027t a snack!","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Betahaxer"},"content":"### 5. **Exiting the Tracker**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Betahaxer"},"content":"When you\u0027re done tracking, exit with grace. This would also save the missions.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Betahaxer"},"content":"**Format:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Betahaxer"},"content":"bye","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Betahaxer"},"content":"**Output:**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Betahaxer"},"content":"Woof. Hope to see you again soon!","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Betahaxer"},"content":"## Command Summary","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Betahaxer"},"content":"| Command      | Format                                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Betahaxer"},"content":"|--------------|-------------------------------------------------------------|","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Betahaxer"},"content":"| **Todo**     | `todo DESCRIPTION`                                          |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Betahaxer"},"content":"| **Deadline** | `deadline DESCRIPTION /by DATE_TIME`                        |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Betahaxer"},"content":"| **Event**    | `event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME` |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Betahaxer"},"content":"| **List**     | `list`                                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Betahaxer"},"content":"| **Find**     | `find KEYWORD`                                              |    ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Betahaxer"},"content":"| **Mark**     | `mark INDEX`                                                |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Betahaxer"},"content":"| **Unmark**   | `unmark INDEX`                                              |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Betahaxer"},"content":"| **Delete**   | `delete INDEX`                                              |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Betahaxer"},"content":"| **Exit**     | `bye`                                                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Betahaxer"},"content":"## FAQ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Betahaxer"},"content":"**Q: Will my tasks be saved?**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Betahaxer"},"content":"A: Yes. Tasks are saved automatically upon exiting in file named `Tasks.txt`. There\u0027s no need to manually save anything.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Betahaxer"},"content":"**Q: Can I modify a task once it\u0027s added?**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Betahaxer"},"content":"A: Currently, Bond\u0027s Task Tracker doesn\u0027t allow direct editing of tasks. However, you can delete and re-add the task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Betahaxer"},"content":"with the updated information.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Betahaxer"},"content":"**Q: What happens if I close the app without typing `bye`?**  ","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Betahaxer"},"content":"A: Don\u0027t worry—your tasks will be preserved. However, it’s recommended to use the `bye` command to ensure a smooth exit.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Betahaxer"},"content":"Enjoy using **Bond\u0027s Mission Tracker**, where no mission is left behind! If you need assistance, reach out and we\u0027ll be","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Betahaxer"},"content":"right","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Betahaxer"},"content":"by your side, just like any good partner would.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Betahaxer"},"content":"\u003cstyle\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Betahaxer"},"content":"  .footer {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Betahaxer"},"content":"    display: none;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Betahaxer"},"content":"  }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Betahaxer"},"content":"\u003c/style\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"Betahaxer":273,"-":14}},{"path":"src/main/java/Bond/Bond.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Bond;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.EXIT_APP;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.INVALID_COMMAND;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import Commands.Command;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import Exceptions.IllegalArgumentException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import Exceptions.StorageOperationException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import Parser.Parser;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import Storage.Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"import UI.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"public class Bond {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"        Ui.greet();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"        String fullInputLine \u003d Ui.getUserCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"        while (!(fullInputLine.equals(EXIT_APP))) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"            try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"                Command c \u003d Parser.parseInput(fullInputLine);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"                c.executeCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"                Ui.showError(INVALID_COMMAND);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"            } finally {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"                Ui.showCommandArrow();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"                fullInputLine \u003d Ui.getUserCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"            Storage.save();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(\"Error saving file\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"        Ui.sayBye();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"Betahaxer":40}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * The Command class serves as the base class for all command types in the system.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * It provides an abstract method {@link #executeCommand()} that must be implemented","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * by subclasses to define the specific behavior when the command is executed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * Each command is expected to perform a distinct action based on its type.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * Subclasses of this class should override the {@link #executeCommand()} method","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * to implement the functionality associated with the command they represent.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command. The specific implementation of this method is provided","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     * by subclasses and defines what happens when the command is triggered.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    public abstract void executeCommand();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"Betahaxer":20}},{"path":"src/main/java/Commands/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static TaskTypes.TaskList.addDeadline;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * CommandDeadline is a concrete subclass of the {@link Command} class that represents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * a command to add a new deadline task to the task list. This command stores the arguments","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * passed to it and, when executed, adds a deadline task using those arguments.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * The command expects the arguments to be in a specific format that can be parsed and","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" * used to create a deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"public class CommandDeadline extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a CommandDeadline object with the provided arguments.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"     * The arguments should contain the necessary details to create a new deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the arguments to create the deadline task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    public CommandDeadline(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to add a new deadline task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"     * This method calls {@link TaskList#addDeadline(String)} with the provided arguments","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"     * to create and add the deadline task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"        addDeadline(arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":36}},{"path":"src/main/java/Commands/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static TaskTypes.TaskList.deleteTask;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * CommandDelete is a concrete subclass of the {@link Command} class that represents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * a command to delete a task from the task list. This command stores the arguments","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * passed to it and, when executed, deletes the task identified by those arguments.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * The arguments are typically expected to specify the task identifier or other","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" * information necessary to locate and delete the task from the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a CommandDelete object with the provided arguments.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"     * The arguments should contain the necessary information to identify and delete the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the arguments to identify the task to be deleted","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    public CommandDelete(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"     * This method calls {@link TaskList#deleteTask(String)} with the provided arguments","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"     * to delete the specified task from the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"        deleteTask(this.arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":36}},{"path":"src/main/java/Commands/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static TaskTypes.TaskList.addEvent;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * CommandEvent is a concrete subclass of the {@link Command} class that represents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * a command to add an event to the task list. This command stores the arguments passed to it","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * and, when executed, adds a new event to the task list based on those arguments.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * The arguments typically contain the details necessary to define the event, such as its description,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" * start time, and end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"public class CommandEvent extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a CommandEvent object with the provided arguments.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"     * The arguments should contain the necessary details to define the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the arguments to define the event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    public CommandEvent(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to add an event to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"     * This method calls {@link TaskList#addEvent(String)} with the provided arguments","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"     * to create and add a new event to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"        addEvent(this.arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":36}},{"path":"src/main/java/Commands/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static TaskTypes.TaskList.findTasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"    public String arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"    public CommandFind(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"        findTasks(this.arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":16}},{"path":"src/main/java/Commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import UI.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * CommandList is a concrete subclass of the {@link Command} class that represents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * a command to display the list of tasks. When executed, it triggers the UI to print","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * the current list of tasks, showing the details of each task in a user-friendly format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * This command is typically used when the user wants to view all the tasks currently","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * present in the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"public class CommandList extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     * This method calls {@link Ui#printList()} to output the task list to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"        Ui.printList();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":22}},{"path":"src/main/java/Commands/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static TaskTypes.TaskList.markTask;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * CommandMark is a concrete subclass of the {@link Command} class that represents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * a command to mark a task as either done or not done. When executed, it updates the","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * status of a specific task based on the task number and the desired status (done or not done).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * This command is typically used when the user wants to change the completion status","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" * of a task, either marking it as completed or resetting it to not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    private final String taskNumber;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    private final boolean isDone;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a CommandMark object with the specified task number and the status","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"     * to set for the task (either done or not done).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     * @param taskNumber the number identifying the task to be marked","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"     * @param isDone     the desired status for the task, true for done, false for not done","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    public CommandMark(String taskNumber, boolean isDone) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to mark the task as done or not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"     * This method calls {@link TaskList#markTask(String, boolean)} to update the task\u0027s status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"        markTask(this.taskNumber, this.isDone);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":38}},{"path":"src/main/java/Commands/CommandTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Commands;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static TaskTypes.TaskList.addTodo;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.TaskList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * CommandTodo is a concrete subclass of the {@link Command} class that represents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * a command to create and add a new \"Todo\" task to the task list. It encapsulates the","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * creation of a new Todo task with the provided arguments (task description) and,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * when executed, adds the task to the list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" * This command is typically used when the user wants to add a new task that is","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":" * categorized as a \"Todo\" to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"public class CommandTodo extends Command {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a CommandTodo object with the specified arguments to create a new Todo task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"     * The task is initialized with the provided description and marked as not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the description of the new Todo task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"    public CommandTodo(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to add the new Todo task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"     * This method calls {@link TaskList#addTodo(String)} to add the task to the list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"        addTodo(this.arguments);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":36}},{"path":"src/main/java/Constants/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Constants;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * The {@code Commands} class contains a collection of constant string values representing","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * the various commands that can be used in the application. These commands are interpreted","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * and executed by the system to manage tasks and interact with the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"public class Commands {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    public static final String EXIT_APP \u003d \"bye\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Betahaxer":18}},{"path":"src/main/java/Constants/Formatting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Constants;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * The {@code Formatting} class contains a collection of constants used for formatting","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * and styling text output in the console. These constants are primarily used to apply","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * colors and indentation to enhance the user interface experience.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"public class Formatting {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"    public static final String GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    public static final String WHITE \u003d \"\\033[97m\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"    public static final String RED \u003d \"\\033[31m\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    public static final String TAB \u003d \"    \";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    public static final String COMMAND \u003d GREEN + \"\u003e \";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Betahaxer":15}},{"path":"src/main/java/Constants/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Constants;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * This class contains constant message strings used for displaying various outputs in the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * These messages include greetings, task list headers/footers, usage instructions for various commands,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * and ASCII art for the fictional dog character, Bond.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * The messages are used throughout the application to provide feedback to the user, such as confirming","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * actions (e.g., marking tasks, deleting tasks), showing error messages (e.g., invalid commands, task numbers),","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * and greeting or saying goodbye to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"public class Messages {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    public static final String GREETING \u003d \"Hello! I\u0027m Bond, a dog that can predict the future.\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    public static final String GOODBYE \u003d \"Woof. Hope to see you again soon!\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    public static final String LIST_HEADER \u003d \"Hmph... The future is uncertain, but these tasks must be completed:\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    public static final String LIST_FOOTER \u003d \"Woof %d tasks… I see them all… woof\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    public static final String MARK_USAGE \u003d \"Grr... Want to mark a task? Try this: mark {task_number}.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    public static final String UNMARK_USAGE \u003d \"Ruff! To unmark a task, just say: unmark {task_number}.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    public static final String INVALID_MARK_COMMAND \u003d \"Hmm? That doesn\u0027t seem right... Try using mark or unmark with a task number.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"    public static final String INVALID_TASK_NUMBER \u003d \"Woof? That task number doesn\u0027t seem right. Try again!\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"    public static final String TASK_MARKED_DONE \u003d \"Wag wag! This task is done now! Good job, human!\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    public static final String TASK_MARKED_UNDONE \u003d \"Awooo... This task isn\u0027t done anymore! Try again later?\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"    public static final String TODO_USAGE \u003d \"To add something important (like walkies?): todo {todo_description}.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    public static final String DEADLINE_USAGE \u003d \"Big mission ahead? Add a deadline like this: deadline {deadline_description} /by {date/time}.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"    public static final String EVENT_USAGE \u003d \"Planning something? Tell me like this: event {event_description} /from {date/time} /to {date/time}.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    public static final String DELETE_USAGE \u003d \"Grrr... Removing something? Just say: remove {task_number}.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    public static final String TASK_DELETED \u003d \"Woof! Task %s has been removed. Hope it wasn\u0027t a snack!\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    public static final String INVALID_COMMAND \u003d \"Uh-oh... That command doesn\u0027t smell right! Try one of these: todo, deadline, event, mark, unmark, list, delete, find.\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    public static final String SEARCH_HEADER \u003d \"Woof. These tasks smell like a match for your search:\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    public static final String NO_TASKS_FOUND \u003d \"Hmph... No tasks found. Must’ve been a stealthy one.\\uD83D\\uDD75\\uFE0F\\u200D♂\\uFE0F\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    public static final String FIND_USAGE \u003d \"Ears twitch... That format’s all wrong! Try: find {search_term}.\\uD83D\\uDD0E\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    public static final String BOND_ASCII \u003d","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"            \"⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣶⣄⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠶⢶⣶⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠁⠀⠀⠀⠀⠹⣷⣾⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⠿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠁⠀⠘⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠈⠓⠤⠠⣀⠀⣀⠄⠒⠚⠁⠀⠀⠀⠀⠈⠓⢄⡀⠀⠀⠀⠀⠀⣀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠐⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣤⣄⡀⠀⠀⠀⣀⣤⣴⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣿⣿⣿⣷⣶⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⠿⠛⠛⠻⢿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"                    \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Betahaxer":51}},{"path":"src/main/java/Exceptions/IllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Exceptions;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"public class IllegalArgumentException extends RuntimeException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"Betahaxer":4}},{"path":"src/main/java/Exceptions/StorageOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Exceptions;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"public class StorageOperationException extends Exception {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"    public StorageOperationException(String message) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"        super(message);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":7}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Parser;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.DEADLINE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.DELETE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.EVENT;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.FIND;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.LIST;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.MARK;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.TODO;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Commands.UNMARK;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"import Commands.Command;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import Commands.CommandDeadline;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import Commands.CommandDelete;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import Commands.CommandEvent;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"import Commands.CommandFind;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"import Commands.CommandList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"import Commands.CommandMark;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"import Commands.CommandTodo;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"import Exceptions.IllegalArgumentException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":" * The Parser class is responsible for parsing user input and converting it","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":" * into the corresponding {@link Command} objects. It processes the input to","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":" * identify the command and its arguments, then returns the appropriate command","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":" * object that can be executed. The class supports multiple commands such as","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":" * \"LIST\", \"MARK\", \"UNMARK\", \"TODO\", \"DEADLINE\", \"EVENT\", \"DELETE\" and \"FIND\".","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":" * The class utilizes a switch statement to handle each command and returns","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":" * the corresponding Command object. If an invalid command is encountered,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":" * an {@link IllegalArgumentException} is thrown.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"public class Parser {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"     * Parses the user input and returns the corresponding {@link Command} object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"     * The input is split into a command and its arguments, which are used to","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"     * instantiate the appropriate Command object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"     * @param input the user input string","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"     * @return a Command object representing the parsed command","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"     * @throws IllegalArgumentException if the command is unrecognized or the arguments are invalid","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"    public static Command parseInput(String input) throws IllegalArgumentException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"        String[] inputList \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"        String command \u003d inputList[0];","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"        String arguments \u003d inputList.length \u003e 1 ? inputList[1] : \"\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"        return switch (command) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"            case LIST -\u003e new CommandList();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"            case MARK, UNMARK -\u003e new CommandMark(arguments, command.equals(MARK));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"            case TODO -\u003e new CommandTodo(arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"            case DEADLINE -\u003e new CommandDeadline(arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"            case EVENT -\u003e new CommandEvent(arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"            case DELETE -\u003e new CommandDelete(arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"            case FIND -\u003e new CommandFind(arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"            default -\u003e throw new IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"        };","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":59}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package Storage;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import java.io.File;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import Exceptions.StorageOperationException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.Deadline;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.Event;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.Todo;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":" * The Storage class is responsible for loading and saving task data to and from","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":" * a file. It provides functionality to read tasks from a file, process them,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":" * and save the task data back to a file. The class works with various types of","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":" * tasks including {@link Todo}, {@link Deadline}, and {@link Event}.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":" * The default file path for storing tasks is {@link #DEFAULT_FILE_PATH}.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"public class Storage {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    public static final String DEFAULT_FILE_PATH \u003d \"./data/Tasks.txt\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"     * Loads tasks from the storage file and returns them as an ArrayList of","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"     * Task objects. This method reads the task data from the file, processes","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"     * each line, and creates corresponding task objects (Todo, Deadline, Event).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"     * @return an ArrayList of Task objects loaded from the file","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"     * @throws StorageOperationException if an error occurs during the loading process","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"    public static ArrayList\u003cTask\u003e load() throws StorageOperationException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"            File taskDirectory \u003d new File(\"./data\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"            File taskFile \u003d new File(DEFAULT_FILE_PATH);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"            createDirectoryAndFile(taskDirectory, taskFile);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"            Scanner scanner \u003d new Scanner(taskFile);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"                String[] taskArguments \u003d scanner.nextLine().trim().split(\" \\\\| \");","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"                processTaskFromFile(taskArguments, tasks);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"            return tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"            throw new StorageOperationException(\"Error loading file: \" + DEFAULT_FILE_PATH);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"    private static void createDirectoryAndFile(File taskDirectory, File taskFile) throws IOException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"        if (!taskDirectory.exists()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"            taskDirectory.mkdirs();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"     * Saves the current list of tasks to the storage file. It retrieves the","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"     * list of tasks from {@link TaskList#getTasks()} and writes each task\u0027s","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"     * saved string representation to the file.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"     * @throws StorageOperationException if an error occurs during the saving process","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"    public static void save() throws StorageOperationException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.getTasks();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"            FileWriter fw \u003d new FileWriter(DEFAULT_FILE_PATH);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"                fw.write(t.toSaveString() + System.lineSeparator());","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"            fw.close();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + DEFAULT_FILE_PATH);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"     * Processes a line of task data from the file and adds the corresponding task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"     * object to the list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"     * @param taskArguments the arguments representing a task, split from a line in the file","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"     * @param tasks         the list of tasks to add the new task to","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"     * @throws IOException if an error occurs while processing the task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"    private static void processTaskFromFile(String[] taskArguments, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"        switch (taskArguments[0]) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"        case \"T\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"            Todo newTodo \u003d new Todo(taskArguments[2]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"            if (taskArguments[1].equals(\"1\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"                newTodo.markAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"        case \"D\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"            Deadline newDeadline \u003d new Deadline(taskArguments[2], taskArguments[3]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"            if (taskArguments[1].equals(\"1\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"                newDeadline.markAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"        case \"E\":","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"            Event newEvent \u003d new Event(taskArguments[2], taskArguments[3], taskArguments[4]);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"            if (taskArguments[1].equals(\"1\")) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"                newEvent.markAsDone();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Betahaxer"},"content":"            break;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Betahaxer"},"content":"        default:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Betahaxer"},"content":"            throw new IOException();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Betahaxer":122}},{"path":"src/main/java/TaskTypes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package TaskTypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * Represents a Deadline task, a specialized type of Todo task that includes a description","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * and a deadline date by which the task needs to be completed. The Deadline class extends","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * the {@link Todo} class and provides functionality to mark the task as done or not done,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * retrieve its details, and save it in a specific format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    protected String by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a Deadline task with the specified description and deadline date.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     * @param by          the deadline date by which the task must be completed","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"        super.setDone(false);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"     * Retrieves the deadline date by which the task must be completed.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"     * @return the deadline date of the task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"        return by;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"     * Returns a string representation of the Deadline task. The string includes","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"     * the task\u0027s status (done or not done), its description, and the deadline date.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representation of the Deadline task in a user-friendly format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"        return \"[D]\" + String.format(\"[%s] \", super.getIsDone() ? \"X\" : \" \") + super.getDescription() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"     * Converts the Deadline task into a string format that can be saved to storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"     * The string includes the task type, completion status, description, and deadline date.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representing the Deadline task in a saveable format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"    public String toSaveString() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"        return \"D | \" + (this.getIsDone() ? \"1\" : \"0\") + \" | \" + this.getDescription() + \" | \" + this.getBy();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":54}},{"path":"src/main/java/TaskTypes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package TaskTypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * Represents an Event task, a specialized subclass of the {@link Todo} class.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * The Event task includes a description, a start time (\"from\"), and an end time (\"to\").","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * It provides methods to mark the event as completed or not, retrieve its details,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * and save the event in a specific format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"public class Event extends Todo {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    protected String from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"    protected String to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     * @param from        the start time of the event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"     * @param to          the end time of the event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"     * @return the start time of the event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"        return from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"     * @return the end time of the event","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"        return to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"     * Returns a string representation of the Event. The string includes","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"     * the event\u0027s completion status, description, and time range (from and to times).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representation of the Event in a user-friendly format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"        return \"[E]\" + String.format(\"[%s] \", super.getIsDone() ? \"X\" : \" \") + super.getDescription() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"     * Converts the Event task into a string format that can be saved to storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"     * The string includes the task type, completion status, description,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"     * start time, and end time.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representing the Event in a saveable format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"    public String toSaveString() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"        return \"E | \" + (this.getIsDone() ? \"1\" : \"0\") + \" | \" + this.getDescription() + \" | \" + this.getFrom() + \" | \" + this.getTo();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":66}},{"path":"src/main/java/TaskTypes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package TaskTypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * An abstract class representing a task with a description and a completion status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * The task can be marked as done or not done, and it has a description that is saved","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * and retrieved. The task can also be represented as a string for displaying to the user","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * or saving to a storage medium.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    protected String description;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    protected int index;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a Task with a description and an initial status of not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"     * @return the description of the task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"        return this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"     * Retrieves the completion status of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"     * @param done the new completion status of the task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"     * Returns a string representation of the task. The task is represented as","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"     * a checkbox-like format, showing whether the task is done or not along","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"     * with its description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representation of the task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"        return String.format(\"[%s] \", getIsDone() ? \"X\" : \" \") + getDescription();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"     * Converts the task into a string format that can be saved to storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representing the task in a savable format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"    public abstract String toSaveString();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Betahaxer":83}},{"path":"src/main/java/TaskTypes/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package TaskTypes;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.DEADLINE_USAGE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.DELETE_USAGE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.EVENT_USAGE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.FIND_USAGE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.INVALID_MARK_COMMAND;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.INVALID_TASK_NUMBER;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.MARK_USAGE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.NO_TASKS_FOUND;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.SEARCH_HEADER;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.TASK_DELETED;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.TASK_MARKED_DONE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.TASK_MARKED_UNDONE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.TODO_USAGE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.UNMARK_USAGE;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"import Exceptions.IllegalArgumentException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"import Storage.Storage;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"import Exceptions.StorageOperationException;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"import UI.Ui;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":" * A class representing a task list, where tasks can be added, marked as done or undone,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":" * deleted, and retrieved. The tasks are stored in an ArrayList, and the data is loaded","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":" * from storage at class initialization.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"public class TaskList {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    public static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    static {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"            tasks \u003d Storage.load();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(\"Unable to load data from file!\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"     * Retrieves the array list of tasks.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"     * @return the array list of tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"        return tasks;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"     * Marks a task as either done or undone based on the specified task number and mark status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"     * @param taskNumber the number of the task to mark","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"     * @param mark       true to mark the task as done, false to mark it as undone","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"    public static void markTask(String taskNumber, boolean mark) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"            if (taskNumber.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"            int index \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"            if (mark) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"                Ui.showToUser(TASK_MARKED_DONE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"                Ui.showToUser(tasks.get(index).toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"            } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"                tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"                Ui.showToUser(TASK_MARKED_UNDONE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"                Ui.showToUser(tasks.get(index).toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"            if (mark) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"                Ui.showError(MARK_USAGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"            } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"                Ui.showError(UNMARK_USAGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(INVALID_TASK_NUMBER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(INVALID_MARK_COMMAND);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"     * Adds a Todo task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the string containing the todo description","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"    public static void addTodo(String arguments) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"            if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"                throw new Exceptions.IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"            Todo newTodo \u003d new Todo(arguments);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(newTodo.toString());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"        } catch (Exceptions.IllegalArgumentException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(TODO_USAGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the string containing the deadline description and deadline date, marked by \"/by\"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"    public static void addDeadline(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"            String[] splitInput \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"            boolean containsAllArguments \u003d splitInput.length \u003d\u003d 2;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"            if (!containsAllArguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"                throw new Exceptions.IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"            String deadlineDescription \u003d splitInput[0].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"            String byDescription \u003d splitInput[1].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"            if (deadlineDescription.isEmpty() || byDescription.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Betahaxer"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Betahaxer"},"content":"            Deadline deadline \u003d new Deadline(deadlineDescription, byDescription);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Betahaxer"},"content":"            tasks.add(deadline);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(deadline.toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Betahaxer"},"content":"        } catch (Exceptions.IllegalArgumentException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(DEADLINE_USAGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Betahaxer"},"content":"     * Adds an Event task to the task list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the string containing the event description and time range, marked by \"/from\" and \"to\"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Betahaxer"},"content":"    public static void addEvent(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Betahaxer"},"content":"            boolean containsAllArguments \u003d arguments.contains(\"/from\") \u0026\u0026 arguments.contains(\"/to\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Betahaxer"},"content":"            if (!containsAllArguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Betahaxer"},"content":"                throw new Exceptions.IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"            Event newEvent \u003d getEvent(arguments);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(newEvent.toString());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"        } catch (Exceptions.IllegalArgumentException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(EVENT_USAGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"     * Parses the event arguments and creates an Event object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the string containing the event description and time range, marked by \"/from\" and \"to\"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"     * @return the created Event object","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"     * @throws IllegalArgumentException if the event arguments are invalid","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"    private static Event getEvent(String arguments) throws IllegalArgumentException {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"        String[] splitByTo \u003d arguments.split(\"/to\", 2);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"        String[] splitByFrom \u003d splitByTo[0].split(\"/from\", 2);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Betahaxer"},"content":"        String eventDescription \u003d splitByFrom[0].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Betahaxer"},"content":"        String fromDescription \u003d splitByFrom[1].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Betahaxer"},"content":"        String toDescription \u003d splitByTo[1].trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Betahaxer"},"content":"        if (eventDescription.isEmpty() || fromDescription.isEmpty() || toDescription.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Betahaxer"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Betahaxer"},"content":"        return new Event(eventDescription, fromDescription, toDescription);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"     * Deletes a task from the task list by its task number.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the task number to delete","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Betahaxer"},"content":"    public static void deleteTask(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Betahaxer"},"content":"            tasks.remove(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(String.format(TASK_DELETED, arguments));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Betahaxer"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(DELETE_USAGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Betahaxer"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(INVALID_TASK_NUMBER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Betahaxer"},"content":"     * Searches for tasks that contain the given search term in their description","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Betahaxer"},"content":"     * and displays the matching tasks. If no tasks are found, a message is shown","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Betahaxer"},"content":"     * indicating that no tasks match the search term.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the search term used to find matching tasks","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Betahaxer"},"content":"    public static void findTasks(String arguments) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Betahaxer"},"content":"            String searchTerm \u003d arguments.trim();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Betahaxer"},"content":"            if (searchTerm.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Betahaxer"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Betahaxer"},"content":"            ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Betahaxer"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Betahaxer"},"content":"                if (t.getDescription().contains(arguments.trim())) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Betahaxer"},"content":"                    tasksFound.add(t);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Betahaxer"},"content":"                }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Betahaxer"},"content":"            if (!tasksFound.isEmpty()) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Betahaxer"},"content":"                Ui.showToUser(SEARCH_HEADER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Betahaxer"},"content":"            } else {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Betahaxer"},"content":"                Ui.showToUser(NO_TASKS_FOUND);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Betahaxer"},"content":"            for (Task t : tasksFound) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Betahaxer"},"content":"                Ui.showToUser(String.format(\"%d\" + \". \", tasksFound.indexOf(t) + 1) + t);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Betahaxer"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(FIND_USAGE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":214}},{"path":"src/main/java/TaskTypes/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package TaskTypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * Represents a Todo task, a type of task that is characterized by a description","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" * and a completion status. The Todo task can be marked as done or not done,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":" * and it provides functionality to display its details and save it in a specific format.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * This class extends the {@link Task} class and provides a basic implementation","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" * for tasks without additional attributes like dates or time ranges.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a Todo task with the specified description and an initial status of not done.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     * @param description the description of the Todo task","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"        super.setDone(false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     * Returns a string representation of the Todo task. The string includes the","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"     * task\u0027s status (done or not done) and its description.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representation of the Todo task in a user-friendly format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"        return \"[T]\" + String.format(\"[%s] \", super.getIsDone() ? \"X\" : \" \") + super.getDescription();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"     * Converts the Todo task into a string format that can be saved to storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"     * The string includes the task type, completion status, and description of the task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"     * @return a string representing the Todo task in a saveable format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"    public String toSaveString() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"        return \"T | \" + (this.getIsDone() ? \"1\" : \"0\") + \" | \" + this.getDescription();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Betahaxer":42}},{"path":"src/main/java/UI/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package UI;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Formatting.COMMAND;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Formatting.RED;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Formatting.TAB;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Formatting.WHITE;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.GOODBYE;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.GREETING;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.LIST_FOOTER;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import static Constants.Messages.LIST_HEADER;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.Task;","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"import TaskTypes.TaskList;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":" * The Ui class is responsible for managing all user interface interactions in the application.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":" * It provides methods for displaying messages to the user, receiving user input, and printing","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":" * the list of tasks. It acts as an intermediary between the application\u0027s logic and the user,","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":" * ensuring that the user experience is seamless and interactive.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":" * This class handles greetings, farewells, displaying task lists, showing errors, and other","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":" * user interaction messages. It also provides a method to capture user commands.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"public class Ui {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"     * Prompts and returns the user\u0027s input from the command line.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"     * @return the user\u0027s input as a String","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    public static String getUserCommand() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"        return in.nextLine();","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"     * Prints a greeting message to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    public static void greet() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"        Ui.showToUser(GREETING);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"        Ui.showCommandArrow();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"     * Prints a farewell message to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    public static void sayBye() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"        Ui.showToUser(GOODBYE);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"     * Displays the list of tasks to the user in a formatted manner.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"     * It shows each task with its index, description, and completion status.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"    public static void printList() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.getTasks();","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"        Ui.showToUser(LIST_HEADER);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(String.format(\"%d\" + \". \", tasks.indexOf(t) + 1) + t);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"        Ui.showToUser(String.format(LIST_FOOTER, tasks.size()));","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"     * @param message the error message to be displayed","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"    public static void showError(String message) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"        System.out.println(TAB + RED + message);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"     * @param message the message to be displayed","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"    public static void showToUser(String message) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"        String[] splitMessage \u003d message.split(\"\\n\");","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"        for (String m : splitMessage) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"            System.out.println(TAB + WHITE + m);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"     * Displays a command prompt arrow to indicate that the program is waiting for user input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"    public static void showCommandArrow() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"        System.out.print(COMMAND);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Betahaxer":94}}]
