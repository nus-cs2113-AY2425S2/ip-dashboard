[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"# Mon User Guide","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"## Overview","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"Mon is a simple command-line task manager that allows you to create, view, mark, unmark, and delete tasks, as well as manage tasks based on specific criteria such as deadlines, events, and schedules. The app supports reading from and writing to a file and also allows searching for tasks using keywords.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"### Key Features:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"- **Add Tasks**: Create tasks of various types (To-Do, Deadline, Event).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"- **Mark/Unmark Tasks**: Track task completion status.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"- **Delete Tasks**: Remove tasks from the list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"- **View All Tasks**: List all tasks in your task manager.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"- **Search Tasks**: Find tasks based on keywords.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"- **Scheduled Tasks**: View tasks scheduled for a specific date.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"## Commands","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"### General Commands","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"1. **list** - Display all tasks in the list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"    - Example: ","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"      list","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"2. **todo \u003ctask\u003e** - Add a new To-Do task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"      todo Finish homework","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"3. **deadline \u003ctask\u003e /by \u003ctime\u003e** - Add a task with a deadline.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"      deadline Submit assignment /by 2025-03-01","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"4. **event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e** - Add an event with a start and end time.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"      event Team meeting /from 2025-02-27T10:00 /to 2025-02-27T12:00","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"5. **mark \u003cnumber\u003e** - Mark a task as completed. `\u003cnumber\u003e` is the task number (starting from 1).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"      mark 1","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"6. **unmark \u003cnumber\u003e** - Unmark a task (revert its completion status). `\u003cnumber\u003e` is the task number (starting from 1).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"      unmark 1","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SeanTerrr"},"content":"7. **delete \u003cnumber\u003e** - Delete a task by its number.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SeanTerrr"},"content":"      delete 1","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SeanTerrr"},"content":"8. **find \u003ckeyword\u003e** - Search for tasks that contain the specified keyword.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SeanTerrr"},"content":"      find homework","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SeanTerrr"},"content":"9. **bye** - Exit the application and save all tasks to the data file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SeanTerrr"},"content":"      bye","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SeanTerrr"},"content":"10. **schedule \u003cdate\u003e** - View tasks scheduled for a specific date. The date should be in the format `YYYY-MM-DD`.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SeanTerrr"},"content":"      schedule 2025-03-01","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SeanTerrr"},"content":"### Special Cases","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SeanTerrr"},"content":"- **Invalid Command**: If you enter an invalid command, the system will provide a helpful error message with guidance on valid commands.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SeanTerrr"},"content":"    - Example error message:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SeanTerrr"},"content":"      Invalid command. Please use the correct format:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SeanTerrr"},"content":"      - mark \u003cnumber\u003e – Mark an item as completed","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SeanTerrr"},"content":"      - unmark \u003cnumber\u003e – Unmark a completed item","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SeanTerrr"},"content":"      - list – Show all items","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SeanTerrr"},"content":"      - todo \u003citem\u003e – Add a to-do item","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SeanTerrr"},"content":"      - deadline \u003ctask\u003e /by \u003ctime\u003e – Add a task with a deadline","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SeanTerrr"},"content":"      - event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e – Add an event with a start and end time","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SeanTerrr"},"content":"      - schedule \u003cdate\u003e – Displays all tasks scheduled for the specified date (format: YYYY-MM-DD)","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SeanTerrr"},"content":"      - find \u003ckeyword\u003e - Find all matching tasks","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SeanTerrr"},"content":"- **Invalid Task Number**: When trying to mark, unmark, or delete a task, the task number must be valid (i.e., a positive number that refers to a task in the list). An error message will be shown if you try to refer to a non-existent task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SeanTerrr"},"content":"    - Example error message:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SeanTerrr"},"content":"      Please enter a valid task ID. There are currently 2 items in the list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SeanTerrr"},"content":"### Task Formats","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SeanTerrr"},"content":"- **To-Do**: A basic task that needs to be done.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SeanTerrr"},"content":"    - Example: ","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SeanTerrr"},"content":"      [T] [ ] Finish homework","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SeanTerrr"},"content":"    - Where:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SeanTerrr"},"content":"      - `[T]` indicates this is a To-Do task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SeanTerrr"},"content":"      - `[ ]` indicates the task is not completed.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SeanTerrr"},"content":"- **Deadline**: A task with a deadline.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SeanTerrr"},"content":"      [D] [ ] Submit assignment /by 2025-03-01","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SeanTerrr"},"content":"    - Where:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SeanTerrr"},"content":"      - `[D]` indicates this is a Deadline task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SeanTerrr"},"content":"      - `/by 2025-03-01` indicates the task deadline.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SeanTerrr"},"content":"- **Event**: A task with a start and end time.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SeanTerrr"},"content":"    - Example:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SeanTerrr"},"content":"      ```sh","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SeanTerrr"},"content":"      [E] [ ] Team meeting /from 2025-02-27 10:00 /to 2025-02-27 12:00","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SeanTerrr"},"content":"      ```","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SeanTerrr"},"content":"    - Where:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SeanTerrr"},"content":"      - `[E]` indicates this is an Event task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SeanTerrr"},"content":"      - `/from 2025-02-27 10:00 /to 2025-02-27 12:00` specifies the event’s timing.","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":109,"-":16}},{"path":"src/main/java/mon/Mon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":" * Main class for running the Mon application.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":" * It initializes and coordinates the UI, task management, and command parsing.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"public class Mon {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"     * Constructs the Mon application with its components: Storage, Ui, TaskManager, and Parser.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"    public Mon(){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"     * Prints the welcome text, processes user input, and handles commands.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"    public void run(){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"        ui.printWelcomeText();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"            storage.addDataToTaskManager(taskManager);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"            while (true) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"                String userInput \u003d in.nextLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"                    taskManager.executeByeCommand(storage);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"                } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"                    ui.printLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"                    parser.decodeCommand(userInput,taskManager);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"                    ui.printLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SeanTerrr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"        ui.printByeStatement();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SeanTerrr"},"content":"     * Main method to start the Mon application.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SeanTerrr"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SeanTerrr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SeanTerrr"},"content":"        new Mon().run();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":61}},{"path":"src/main/java/mon/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"import mon.exception.InvalidCommandException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":" * The Parser class is responsible for decoding user input commands and directing them to the appropriate methods in the TaskManager.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"public class Parser {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     * Decodes a user command and executes the corresponding task management action.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"     * The method splits the input command into the command type and its associated data, then processes it accordingly.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"     * @param command The user input command as a string.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskManager The task manager responsible for managing tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidCommandException If the command is invalid or in an incorrect format.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"    public void decodeCommand(String command, TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"        String[] commandArray \u003d command.split(\" \", 2);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"            if (commandArray.length \u003d\u003d 1 \u0026\u0026 commandArray[0].equals(\"list\")) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.printAllTasks();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"                return;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"            if (commandArray.length \u003c 2) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"            commandArray[1] \u003d commandArray[1].trim();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"            if (commandArray[1].isEmpty()) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"            switch (commandArray[0]) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"            case \"schedule\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.executeScheduleCommand(commandArray[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"            case \"event\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.addEvent(commandArray[1], false, true);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.addDeadline(commandArray[1], false, true);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"            case \"todo\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.addTodo(commandArray[1], false, true);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SeanTerrr"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.unmarkTaskAsDone(Integer.parseInt(commandArray[1]));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.markTaskAsDone(Integer.parseInt(commandArray[1]));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SeanTerrr"},"content":"            case \"delete\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.deleteTask(Integer.parseInt(commandArray[1]));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SeanTerrr"},"content":"            case \"find\":","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.executeFindCommand(commandArray[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SeanTerrr"},"content":"            default:","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SeanTerrr"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SeanTerrr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":66}},{"path":"src/main/java/mon/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"import mon.exception.InvalidDateTimeFormat;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"import mon.exception.InvalidDeadlineException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"import mon.exception.InvalidEventException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"import mon.exception.InvalidWriteCommandException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"import mon.tasktype.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"import java.io.File;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":" * The Storage class handles all file-related operations for saving and loading task data.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":" * It ensures the data is stored in a file and can be loaded back into the task manager upon application startup.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"public class Storage {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"    private File monFile;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"    private final String dataPath \u003d \"./data/MonData.txt\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"     * Constructs a Storage object, initializing the data directory and file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"     * If the directory or file doesn\u0027t exist, it creates them.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"    public Storage() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"        File dir \u003d new File(\"./data\"); // Separate directory creation","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"            if (dir.mkdirs()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"                System.out.println(\"Directory created: \" + dir.getAbsolutePath());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"            } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"                System.out.println(\"Failed to create directory!\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"        monFile \u003d new File(dataPath);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"        if (!monFile.exists()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"            try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"                if (monFile.createNewFile()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"                    System.out.println(\"    File created: \" + monFile.getAbsolutePath());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"                } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"                    System.out.println(\"    File already exists at: \" + monFile.getAbsolutePath());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"                }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SeanTerrr"},"content":"                System.out.println(\"    An error occurred while creating the file.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SeanTerrr"},"content":"     * Writes the task data to the file in a specific format.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SeanTerrr"},"content":"     * @param task The task to be written to the file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SeanTerrr"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SeanTerrr"},"content":"    public void writeToFile(Task task)  throws IOException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SeanTerrr"},"content":"        FileWriter fw \u003d new FileWriter(dataPath,true);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SeanTerrr"},"content":"        fw.write(task.convertToWriteFormat());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SeanTerrr"},"content":"        fw.close();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SeanTerrr"},"content":"     * Loads data from the file and adds the tasks to the TaskManager.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SeanTerrr"},"content":"     * It parses the file content and creates the corresponding tasks based on the file format.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskManager The TaskManager instance to load the tasks into.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidWriteCommandException If the file format is invalid.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SeanTerrr"},"content":"     * @throws FileNotFoundException If the file is not found.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidEventException If an event is malformed in the file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidDeadlineException If a deadline is malformed in the file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidDateTimeFormat If the date time format is invalid","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SeanTerrr"},"content":"    public void addDataToTaskManager(TaskManager taskManager)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SeanTerrr"},"content":"            throws InvalidWriteCommandException, FileNotFoundException,","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SeanTerrr"},"content":"            InvalidEventException, InvalidDeadlineException, InvalidDateTimeFormat {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SeanTerrr"},"content":"        Scanner s \u003d new Scanner(monFile);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SeanTerrr"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SeanTerrr"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SeanTerrr"},"content":"            if (currentLine.isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SeanTerrr"},"content":"                continue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SeanTerrr"},"content":"            String[] taskParts \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SeanTerrr"},"content":"            if (taskParts.length !\u003d 3 || (!taskParts[1].equals(\"X\") \u0026\u0026 !taskParts[1].equals(\"O\"))) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SeanTerrr"},"content":"                throw new InvalidWriteCommandException(currentLine);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SeanTerrr"},"content":"            Boolean isDone \u003d taskParts[1].equals(\"X\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SeanTerrr"},"content":"            switch (taskParts[0]) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SeanTerrr"},"content":"            case \"T\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.addTodo(taskParts[2], isDone, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SeanTerrr"},"content":"            case \"D\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.addDeadline(taskParts[2], isDone, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SeanTerrr"},"content":"            case \"E\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SeanTerrr"},"content":"                taskManager.addEvent(taskParts[2], isDone, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SeanTerrr"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SeanTerrr"},"content":"            default:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SeanTerrr"},"content":"                throw new InvalidWriteCommandException(currentLine);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SeanTerrr"},"content":"     * Clears the content of the task data file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SeanTerrr"},"content":"    public void clearFileContent(){","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SeanTerrr"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SeanTerrr"},"content":"            FileWriter fw \u003d new FileWriter(dataPath);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SeanTerrr"},"content":"            fw.write(\"\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SeanTerrr"},"content":"            fw.close();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SeanTerrr"},"content":"        catch (Exception e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":119}},{"path":"src/main/java/mon/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"import mon.exception.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"import mon.tasktype.Deadline;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"import mon.tasktype.Event;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"import mon.tasktype.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"import mon.tasktype.ToDo;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":" * The TaskManager class manages the list of tasks, providing methods to add, delete, mark, unmark, and search for tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":" * It interacts with the UI to print updates and task statuses.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"    private HashMap\u003cLocalDate, ArrayList\u003cTask\u003e\u003e taskMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"    private HashMap\u003cTask, LocalDate\u003e dateMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"  ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"     * Constructs a TaskManager object, initializing the task list and UI.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"    public TaskManager() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"     * Prints all the tasks currently in the task list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"    public void printAllTasks() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"            int numberCount \u003d i + 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(\"    \" + numberCount + \".\" + taskList.get(i));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"     * Marks a specific task as done based on its task ID.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskId The ID of the task to mark as done.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidTaskNumberException If the task ID is invalid (greater than the size of the task list or less than 0).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"    public void markTaskAsDone(int taskId) throws InvalidTaskNumberException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"        if (taskId \u003c\u003d 0 || taskId \u003e taskList.size()) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SeanTerrr"},"content":"            throw new InvalidTaskNumberException(taskList.size());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SeanTerrr"},"content":"        } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SeanTerrr"},"content":"            taskList.get(taskId-1).markAsDone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(taskList.get(taskId-1));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SeanTerrr"},"content":"     * Unmarks a specific task as done based on its task ID.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskId The ID of the task to unmark as done.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidTaskNumberException If the task ID is invalid (greater than the size of the task list or less than 0).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SeanTerrr"},"content":"    public void unmarkTaskAsDone(int taskId) throws InvalidTaskNumberException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SeanTerrr"},"content":"        if (taskId \u003c\u003d 0 || taskId \u003e taskList.size()) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SeanTerrr"},"content":"            throw new InvalidTaskNumberException(taskList.size());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SeanTerrr"},"content":"        } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SeanTerrr"},"content":"            taskList.get(taskId-1).unmarkAsDone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(taskList.get(taskId-1));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SeanTerrr"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SeanTerrr"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SeanTerrr"},"content":"     * @param isDone The status of the task (done or not).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SeanTerrr"},"content":"     * @param printText Whether to print a confirmation message after adding the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SeanTerrr"},"content":"    public void addTodo(String description, Boolean isDone, Boolean printText) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SeanTerrr"},"content":"        taskList.add(new ToDo(description, isDone));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SeanTerrr"},"content":"        if (printText){","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SeanTerrr"},"content":"            ui.printAddedText(taskList.get(taskList.size()-1),taskList);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SeanTerrr"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SeanTerrr"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SeanTerrr"},"content":"     * @param isDone The status of the task (done or not).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SeanTerrr"},"content":"     * @param printText Whether to print a confirmation message after adding the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidDeadlineException If the deadline format is invalid.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidWriteCommandException If the write command is invalid.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidDateTimeFormat If the date time format is invalid","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SeanTerrr"},"content":"    public void addDeadline(String description, Boolean isDone, Boolean printText)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SeanTerrr"},"content":"            throws InvalidDeadlineException, InvalidWriteCommandException, InvalidDateTimeFormat {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SeanTerrr"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SeanTerrr"},"content":"            String[] deadlineParts \u003d description.split(\" /by\", 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SeanTerrr"},"content":"            if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SeanTerrr"},"content":"                if (printText) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SeanTerrr"},"content":"                    throw new InvalidDeadlineException();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SeanTerrr"},"content":"                } else {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SeanTerrr"},"content":"                    throw new InvalidWriteCommandException(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SeanTerrr"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SeanTerrr"},"content":"            //trim leading spaces in the array","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SeanTerrr"},"content":"            for (int i \u003d 0; i \u003c deadlineParts.length; i++) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SeanTerrr"},"content":"                deadlineParts[i] \u003d deadlineParts[i].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SeanTerrr"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SeanTerrr"},"content":"            Deadline task \u003d new Deadline(deadlineParts[0], deadline, isDone);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SeanTerrr"},"content":"            taskList.add(task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SeanTerrr"},"content":"            taskMap.computeIfAbsent(deadline, k -\u003e new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SeanTerrr"},"content":"            dateMap.computeIfAbsent(task, k -\u003e deadline);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SeanTerrr"},"content":"            if (printText) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SeanTerrr"},"content":"                ui.printAddedText(taskList.get(taskList.size() - 1), taskList);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SeanTerrr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SeanTerrr"},"content":"            throw new InvalidDateTimeFormat();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SeanTerrr"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SeanTerrr"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SeanTerrr"},"content":"     * @param isDone The status of the task (done or not).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SeanTerrr"},"content":"     * @param printText Whether to print a confirmation message after adding the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidEventException If the event format is invalid.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidWriteCommandException If the write command is invalid.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidDateTimeFormat If the date time format is invalid","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SeanTerrr"},"content":"    public void addEvent(String description, Boolean isDone, Boolean printText)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SeanTerrr"},"content":"            throws InvalidEventException, InvalidWriteCommandException, InvalidDateTimeFormat{","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SeanTerrr"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SeanTerrr"},"content":"            String[] eventParts \u003d description.split(\" /from | /to\", 3);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SeanTerrr"},"content":"            if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SeanTerrr"},"content":"                if (printText) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"SeanTerrr"},"content":"                    throw new InvalidEventException();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"SeanTerrr"},"content":"                } else {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"SeanTerrr"},"content":"                    throw new InvalidWriteCommandException(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SeanTerrr"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SeanTerrr"},"content":"            for (int i \u003d 0; i \u003c eventParts.length; i++) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SeanTerrr"},"content":"                eventParts[i] \u003d eventParts[i].trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"SeanTerrr"},"content":"            LocalDateTime eventStartTime \u003d LocalDateTime.parse(eventParts[1]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"SeanTerrr"},"content":"            LocalDateTime eventEndTime \u003d LocalDateTime.parse(eventParts[2]);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"SeanTerrr"},"content":"            Event task \u003d new Event(eventParts[0], eventStartTime, eventEndTime, isDone);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"SeanTerrr"},"content":"            taskList.add(task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"SeanTerrr"},"content":"            taskMap.computeIfAbsent(eventStartTime.toLocalDate(), k -\u003e new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"SeanTerrr"},"content":"            dateMap.computeIfAbsent(task, k -\u003e eventStartTime.toLocalDate());","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"SeanTerrr"},"content":"            if (printText) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"SeanTerrr"},"content":"                ui.printAddedText(taskList.get(taskList.size() - 1), taskList);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"SeanTerrr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"SeanTerrr"},"content":"            throw new InvalidDateTimeFormat();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"SeanTerrr"},"content":"     * Deletes a specific task from the task list based on its task ID.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskId The ID of the task to delete.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidTaskNumberException If the task ID is invalid (greater than the size of the task list or less than 0).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"SeanTerrr"},"content":"    public void deleteTask(int taskId) throws InvalidTaskNumberException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"SeanTerrr"},"content":"        if (taskId \u003c\u003d 0 || taskId \u003e taskList.size() || taskList.isEmpty()) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"SeanTerrr"},"content":"            throw new InvalidTaskNumberException(taskList.size());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"SeanTerrr"},"content":"        Task taskToDelete \u003d taskList.get(taskId-1);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"SeanTerrr"},"content":"        if (taskToDelete.getIdentifier().equals(\"D\") || taskToDelete.getIdentifier().equals(\"E\")) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"SeanTerrr"},"content":"            LocalDate date \u003d dateMap.get(taskToDelete);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"SeanTerrr"},"content":"            dateMap.remove(taskToDelete);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"SeanTerrr"},"content":"            taskMap.get(date).remove(taskToDelete);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"SeanTerrr"},"content":"            if (taskMap.get(date).isEmpty()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"SeanTerrr"},"content":"                taskMap.remove(date);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"SeanTerrr"},"content":"        ui.printDeletedText(taskList.get(taskId-1));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"SeanTerrr"},"content":"        taskList.remove(taskToDelete);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"SeanTerrr"},"content":"        ui.printCurrentTaskSize(taskList);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"SeanTerrr"},"content":"     * Executes the \"bye\" command to save all tasks to the file and clear the file content.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"SeanTerrr"},"content":"     * @param monFile The Storage instance used to handle file operations.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"SeanTerrr"},"content":"    public void executeByeCommand(Storage monFile) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"SeanTerrr"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"SeanTerrr"},"content":"            monFile.clearFileContent();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"SeanTerrr"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"SeanTerrr"},"content":"                monFile.writeToFile(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"SeanTerrr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"SeanTerrr"},"content":"     * Executes the schedule command by parsing the given date string and retrieving tasks on that date.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"SeanTerrr"},"content":"     * If the date format is invalid, it throws an {@link InvalidDateTimeFormat} exception.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"SeanTerrr"},"content":"     * @param dateString The date string in the format \"YYYY-MM-DD\" to search for tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"SeanTerrr"},"content":"     * @throws InvalidDateTimeFormat if the provided date string is not in the valid format.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"SeanTerrr"},"content":"    public void executeScheduleCommand(String dateString) throws InvalidDateTimeFormat {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"SeanTerrr"},"content":"        try {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"SeanTerrr"},"content":"            LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"SeanTerrr"},"content":"            getAllTaskOnDate(date);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"SeanTerrr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"SeanTerrr"},"content":"            throw new InvalidDateTimeFormat();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"SeanTerrr"},"content":"     * Retrieves and displays all tasks scheduled for a specific date.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"SeanTerrr"},"content":"     * @param date The {@link LocalDate} representing the date for which tasks are retrieved.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"SeanTerrr"},"content":"    public void getAllTaskOnDate(LocalDate date) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"SeanTerrr"},"content":"        ArrayList\u003cTask\u003e taskListAtDate \u003d taskMap.get(date);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Here are the tasks in your list for \"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"SeanTerrr"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \":\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"SeanTerrr"},"content":"        if (taskListAtDate \u003d\u003d null) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(\"    No tasks in your list!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"SeanTerrr"},"content":"            return;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"SeanTerrr"},"content":"        for (int i \u003d 0; i \u003c taskListAtDate.size(); i++) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"SeanTerrr"},"content":"            int numberCount \u003d i + 1;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(\"    \" + numberCount + \".\" + taskListAtDate.get(i));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"SeanTerrr"},"content":"        /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"SeanTerrr"},"content":"     * Executes the \"find\" command to search for tasks containing a specific keyword.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"SeanTerrr"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"SeanTerrr"},"content":"    public void executeFindCommand(String keyword) {    ","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"SeanTerrr"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"SeanTerrr"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"SeanTerrr"},"content":"            if (task.getTaskName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"SeanTerrr"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"SeanTerrr"},"content":"            }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"SeanTerrr"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(\"    No matching tasks found!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"SeanTerrr"},"content":"            return;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"SeanTerrr"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"SeanTerrr"},"content":"            int numberCount \u003d i + 1;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"SeanTerrr"},"content":"            System.out.println(\"    \" + numberCount + \".\" + foundTasks.get(i));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"SeanTerrr"},"content":"        }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":268}},{"path":"src/main/java/mon/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"import mon.tasktype.Task;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":" * User interface class that handles the printing of various messages and task-related information to the console.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"public class Ui {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"    final String botName \u003d \"Mon\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"    final String logo \u003d \"\\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"            \"   .___  ___.   ______   .__   __. \\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"            \"   |   \\\\/   |  /  __  \\\\  |  \\\\ |  | \\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"            \"   |  \\\\  /  | |  |  |  | |   \\\\|  | \\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"            \"   |  |\\\\/|  | |  |  |  | |  . `  | \\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"            \"   |  |  |  | |  `--\u0027  | |  |\\\\   | \\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"            \"   |__|  |__|  \\\\______/  |__| \\\\__| \\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"            \"                                \\n\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"    final String horizontalLine \u003d \"   _______________________________\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"     * Prints a horizontal line to the console.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"    public void printLine(){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"     * Prints a message indicating that a task has been added to the task list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"     * Displays the added task and the total number of tasks in the list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskList The list of all tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"    public void printAddedText(Task task, ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"     * Prints the current number of tasks in the task list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskList The list of all tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SeanTerrr"},"content":"    public void printCurrentTaskSize(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"     * Prints a message indicating that a task has been deleted from the task list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SeanTerrr"},"content":"     * Displays the deleted task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SeanTerrr"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SeanTerrr"},"content":"    public void printDeletedText(Task task){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Got it. I\u0027ve deleted this task:\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SeanTerrr"},"content":"     * Prints the welcome message with the bot\u0027s name and logo.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SeanTerrr"},"content":"    public void printWelcomeText(){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SeanTerrr"},"content":"        printLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(logo + \"    Hello! I\u0027m \" + botName + \"\\n\" + \"    What can I do for you?\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SeanTerrr"},"content":"        printLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SeanTerrr"},"content":"     * Prints a goodbye message when the program ends.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SeanTerrr"},"content":"    public void printByeStatement(){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SeanTerrr"},"content":"        printLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Bye! See you again!\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SeanTerrr"},"content":"        printLine();","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":79}},{"path":"src/main/java/mon/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.exception;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":" * Exception thrown when an invalid command is entered.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"     * Constructs an {@code InvalidCommandException} with a predefined error message.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"     * The message provides guidance on correct command formats.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"        super(\"    Invalid command. Please use the correct format:\\n\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - mark \u003cnumber\u003e – Mark an item as completed\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - unmark \u003cnumber\u003e – Unmark a completed item\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - list – Show all items\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - todo \u003citem\u003e – Add a to-do item\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - deadline \u003ctask\u003e /by \u003ctime\u003e – Add a task with a deadline\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e – Add an event with a start and end time\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - schedule \u003cdate\u003e – Displays all tasks scheduled for the specified date (format: YYYY-MM-DD)\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n    - find \u003ckeyword\u003e - Findl all matching tasks\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"                \"\\n\\n    Check your input and try again!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":24}},{"path":"src/main/java/mon/exception/InvalidDateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.exception;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"public class InvalidDateTimeFormat extends Exception {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"    public InvalidDateTimeFormat() {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"        super(\"    ERROR: Invalid date format.\\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"                \"    Expected formats:\\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"                \"      - YYYY-MM-DD for deadlines and schedule command (e.g., 2025-03-15)\\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"                \"      - YYYY-MM-DD\u0027T\u0027HH:mm:ss for events (e.g., 2025-03-15T14:30:00)\\n\" +","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"                \"    Please check your input and try again.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-27","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":11}},{"path":"src/main/java/mon/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.exception;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":" * Exception thrown when an invalid deadline format is provided.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"     * Constructs an {@code InvalidDeadlineException} with a predefined error message.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"     * The message provides guidance on the correct format for deadlines.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"        super(\"    Invalid deadline format. Use: deadline \u003ctask\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":15}},{"path":"src/main/java/mon/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.exception;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":" * Exception thrown when an invalid event format is provided.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"     * Constructs an {@code InvalidEventException} with a predefined error message.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"     * The message provides guidance on the correct format for events.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"    public InvalidEventException() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"        super(\"    Invalid event format. Use: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":15}},{"path":"src/main/java/mon/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.exception;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":" * Exception thrown when an invalid task number is provided.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"  /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"   * Constructs an {@code InvalidTaskNumberException} with a message indicating the number of tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"   * The message helps the user to enter a valid task ID by informing them of the current number of tasks.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"   *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"   * @param numberOfTasks The current number of tasks in the list.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"   */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"  public InvalidTaskNumberException(int numberOfTasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"    super(\"    Please enter a valid task ID. \" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"            \"There are currently \" + numberOfTasks + \" items in the list.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"  }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":18}},{"path":"src/main/java/mon/exception/InvalidWriteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.exception;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":" * Exception thrown when a task could not be added from the data file due to an invalid command format.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"public class InvalidWriteCommandException extends Exception {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"     * Constructs an {@code InvalidWriteCommandException} with a message indicating the problematic command data.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"     * The message helps the user identify issues with the command data that caused the task addition to fail.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"     * @param commandData The data from the file that caused the issue.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"    public InvalidWriteCommandException(String commandData) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"        super(\"    Task could not be added from the data file. \" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"                \"Please check the following description for issues: \" + commandData);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":18}},{"path":"src/main/java/mon/tasktype/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.tasktype;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"    private LocalDate deadline;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"     * Creates a new Deadline task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"     * @param deadline The due date or deadline for the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"     * @param isDone   Whether the task is completed (true) or not (false).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"    public Deadline(String taskName, LocalDate deadline, Boolean isDone){","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"        super(taskName,\"D\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"     * Format: [D][status] TaskName (by: deadline)","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"     * @return The formatted string representing the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"        return super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"     * Converts the task into a format suitable for writing to a file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"     * Format: D | [status] | TaskName /by deadline","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"    public String convertToWriteFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"        return super.convertToWriteFormat() + \" /by \" + deadline + System.lineSeparator();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":45}},{"path":"src/main/java/mon/tasktype/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.tasktype;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"    private LocalDateTime eventStartTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"    private LocalDateTime eventEndTime;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"     * Creates a new Event task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"     * @param eventName     The name of the event.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"     * @param eventStartTime The start time of the event.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"     * @param eventEndTime   The end time of the event.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"     * @param isDone        Whether the event task is completed (true) or not (false).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"    public Event(String eventName, LocalDateTime eventStartTime, LocalDateTime eventEndTime, Boolean isDone) {","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"        super(eventName,\"E\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"     * Format: [E][status] EventName (from: startTime to: endTime)","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"     * @return The formatted string representing the event task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"        return super.toString() + \" (from: \"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"                + eventStartTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\")) + \" to: \"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"                + eventEndTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\")) + \")\";","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"     * Converts the event into a format suitable for writing to a file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"     * Format: E | [status] | EventName /from startTime /to endTime","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"     * @return The formatted string representation of the event for file storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"    public String convertToWriteFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"        return super.convertToWriteFormat() + \" /from \" + eventStartTime + \" /to \" + eventEndTime + System.lineSeparator();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":52}},{"path":"src/main/java/mon/tasktype/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.tasktype;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":" * Represents a general task with a name and completion status.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"public class Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"    protected String taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"    protected Boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"    protected String identifier;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     * Creates a new Task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"     * @param identifier The type of task","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"    public Task(String taskName, String identifier) {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"        return taskName;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"     * Marks the task as done and prints a confirmation message.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Nice! Marked as Done:\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SeanTerrr"},"content":"        System.out.print(\"      \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SeanTerrr"},"content":"     * Unmarks the task as done and prints a confirmation message.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SeanTerrr"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SeanTerrr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SeanTerrr"},"content":"        System.out.println(\"    Oh no! Unmarked:\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SeanTerrr"},"content":"        System.out.print(\"      \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SeanTerrr"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SeanTerrr"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SeanTerrr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SeanTerrr"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SeanTerrr"},"content":"     * Gets the identifier for the task.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SeanTerrr"},"content":"     * @return \"T\", \"D\", \"E\" depending on the type of task","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SeanTerrr"},"content":"    public String getIdentifier() {","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SeanTerrr"},"content":"        return identifier;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SeanTerrr"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SeanTerrr"},"content":"     * Format: [status] TaskName","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SeanTerrr"},"content":"     * @return The formatted string representing the task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SeanTerrr"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SeanTerrr"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SeanTerrr"},"content":"        return \"[\" + identifier + \"][\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SeanTerrr"},"content":"     * Converts the task into a format suitable for writing to a file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SeanTerrr"},"content":"     * Format: Status | TaskName","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SeanTerrr"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SeanTerrr"},"content":"    public String convertToWriteFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SeanTerrr"},"content":"        String statusIcon \u003d isDone ? \"X\" : \"O\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SeanTerrr"},"content":"        return identifier + \" | \" + statusIcon + \" | \" + taskName;","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":82}},{"path":"src/main/java/mon/tasktype/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"package mon.tasktype;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"/**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":" * Represents a simple to-do task without a specific deadline or event time.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":" */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"     * Creates a new ToDo task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"     * @param taskName The name of the to-do task.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"     * @param isDone   Whether the task is completed (true) or not (false).","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SeanTerrr"},"content":"    public ToDo(String taskName, Boolean isDone) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SeanTerrr"},"content":"        super(taskName,\"T\");","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SeanTerrr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SeanTerrr"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SeanTerrr"},"content":"    /**","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SeanTerrr"},"content":"     * Converts the ToDo task into a format suitable for writing to a file.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SeanTerrr"},"content":"     * Format: T | [status] | TaskName","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"     *","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SeanTerrr"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SeanTerrr"},"content":"     */","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SeanTerrr"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SeanTerrr"},"content":"    public String convertToWriteFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SeanTerrr"},"content":"        return super.convertToWriteFormat() + System.lineSeparator();","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SeanTerrr"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SeanTerrr"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SeanTerrr"},"content":"todo borrow book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SeanTerrr"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SeanTerrr"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SeanTerrr"},"content":"mark 3","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SeanTerrr"},"content":"mark 2","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SeanTerrr"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SeanTerrr"},"content":"mark 3","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SeanTerrr"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SeanTerrr"},"content":"unmark 2","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SeanTerrr"},"content":"error","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SeanTerrr"},"content":"deadline test","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SeanTerrr"},"content":"event test","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SeanTerrr"},"content":"bye","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SeanTerrr"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\mon\\*.java ..\\src\\main\\java\\mon\\tasktype\\*.java","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SeanTerrr"},"content":"java -classpath ..\\bin mon.Mon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SeanTerrr"},"content":"java -classpath ../bin Mon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"SeanTerrr":1,"-":37}}]
