[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"# BobChungus - User Guide","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"## Overview","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"BobChungus is a command-line based application intended as a Task Management System. It aims to help users manage their active tasks in the form of **todos**, **deadlines** and **events**.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"## Commands","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"#### Notes about the Command Format","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"\u003cdiv style\u003d\"border: 1px solid #2196F3; background-color: #BBDEFB; padding: 10px; border-radius: 5px;\"\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"  e.g. in TASK_DESCRIPTION is a parameter which can be replaced with the description of the task to be added","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"- Parameters \u003cstrong\u003e must \u003c/strong\u003e be in the specified order.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"  e.g. if the command specifies TASK_DESCRIPTION followed by TASK_DATE,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"  TASK_DATE followed by TASK_DESCRIPTION is \u003cstrong\u003e NOT \u003c/strong\u003e acceptable and will cause issues.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"- Extraneous parameters for commands that do not take in parameters (such as list and bye) will cause errors.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"  e.g. if the command specifies bye 123, it will be create an error.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"### List of Commnads","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"### **Exiting the program:** `bye`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Exits the program. Saves all Tasks within `TaskList` before exitting.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** When the user is done, they can type `bye` to exit the program.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `bye`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"### **Display all Tasks:** `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Displays the list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** When the user wants to view all tasks in their list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"### **Create new `Todo` task:** `todo`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Adds a new to-do task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides a description for the to-do task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task description (e.g., `todo Buy groceries`)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `todo TASK_DESCRIPTION`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"### **Create new `deadline` task:** `deadline`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Adds a new deadline task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides a task description and a deadline date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task description followed by `/by` and the deadline date (e.g., `deadline Finish assignment /by 15-03-2025`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `deadline TASK_DESCRIPTION /by DD-MM-YYYY`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jonathan2745"},"content":"### **Create new `event` task:** `event`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Adds a new event task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides an event description and start and end date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Event description followed by `/from` (start date) and `/to` (end date) (e.g., `event Conference /from 20-03-2025 /to 22-03-2025`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `event TASK_DESCRIPTION /from TASK_START_DATE(dd-MM-yyyy) /to TASK_END_DATE(dd-MM-yyyy)`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jonathan2745"},"content":"\u003cdiv style\u003d\"border: 1px solid #2196F3; background-color: #BBDEFB; padding: 10px; border-radius: 5px;\"\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jonathan2745"},"content":"  \u003cstrong\u003eNote:\u003c/strong\u003e Tasks are stored within the program 0-indexed, but are displayed and interacted with by users 1-indexed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jonathan2745"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jonathan2745"},"content":"### **Delete a Task:** `delete`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Deletes a task by index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides the index of the task to be deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task index (e.g., `delete 2` to delete the second task in the list).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `delete TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jonathan2745"},"content":"### **Mark a task as complete:** `mark`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Marks a task as completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides the index of the task to mark as done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task index (e.g., `mark 3` to mark the third task as done).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `mark TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jonathan2745"},"content":"### **Mark a task as not complete:** `unmark`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Marks a task as not completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides the index of the task to mark as not done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task index (e.g., `unmark 1` to unmark the first task).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `unmark TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jonathan2745"},"content":"### **Find a task:** `find`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Finds tasks with a specific keyword in their description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides a keyword to search for in the task descriptions.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Keyword to search for (e.g., `find meeting`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `find TASK_DESCRIPTION`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jonathan2745"},"content":"### **Saving your data**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jonathan2745"},"content":"BobChungus\u0027 `TaskList` data is saved in the hard disk automatically after exiting with the `bye` command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jonathan2745"},"content":"There is no need to save manually.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jonathan2745"},"content":"### **Editing Saved data**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jonathan2745"},"content":"BobChungus\u0027 `TaskList` Data is automatically saved as a `.txt` file at `[JAR file location]/data/userTasks.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jonathan2745"},"content":"\u003cdiv style\u003d\"border: 1px solid #FF9800; background-color: #FFEB3B; padding: 10px; border-radius: 5px;\"\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jonathan2745"},"content":"  \u003cstrong\u003eCaution:\u003c/strong\u003e  If your changes to the data file makes its format invalid, BobChungus will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jonathan2745"},"content":"Furthermore, certain edits can cause BobChungus to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jonathan2745"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jonathan2745"},"content":"## Command Summary","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jonathan2745"},"content":"| Command    | Description                               | Arguments                             | Format                                             |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jonathan2745"},"content":"| ---------- | ----------------------------------------- | ------------------------------------- | -------------------------------------------------- |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jonathan2745"},"content":"| `bye`      | Exits the program                         | None                                  | `bye`                                              |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jonathan2745"},"content":"| `list`     | Lists all tasks                           | None                                  | `list`                                             |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jonathan2745"},"content":"| `todo`     | Adds a to-do task                         | Task description                      | `todo Buy groceries`                               |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jonathan2745"},"content":"| `deadline` | Adds a deadline task                      | Task description /by date             | `deadline Submit report /by 18-03-2025`            |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jonathan2745"},"content":"| `event`    | Adds an event task                        | Event description /from date /to date | `event Conference /from 20-03-2025 /to 22-03-2025` |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jonathan2745"},"content":"| `delete`   | Deletes a task by index                   | Task index                            | `delete 2`                                         |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jonathan2745"},"content":"| `mark`     | Marks a task as completed                 | Task index                            | `mark 3`                                           |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jonathan2745"},"content":"| `unmark`   | Marks a task as not completed             | Task index                            | `unmark 1`                                         |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jonathan2745"},"content":"| `find`     | Finds tasks by keyword in the description | Search keyword                        | `find meeting`                                     |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jonathan2745"},"content":"## FAQs","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jonathan2745"},"content":"### 1. **What happens if I enter an invalid command?**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jonathan2745"},"content":"- If you enter a command that is not recognized, the program will throw an exception and display an error message indicating that the command is invalid.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jonathan2745"},"content":"### 2. **What if I forget to include the arguments for a command like `todo` or `deadline`?**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jonathan2745"},"content":"- The program will throw an exception (`MissingTodoArgumentException`, `MissingDeadlineArgumentException`, etc.) and inform you that you are missing required arguments.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jonathan2745"},"content":"### 3. **What format should the dates be in?**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jonathan2745"},"content":"- All dates should be in the format `dd-MM-yyyy`, for Format, example `15-03-2025`.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Jonathan2745"},"content":"## Notes on Editing Data","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jonathan2745"},"content":"- The commands are case-insensitive, meaning you can type commands in any letter case (e.g., `todo`, `TODO`, `ToDo`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Jonathan2745"},"content":"- Ensure that the date format for commands like `deadline` and `event` is strictly followed (`dd-MM-yyyy`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jonathan2745"},"content":"- You can modify the task list and storage handling by editing the `TaskList` and `Storage` classes.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Jonathan2745"},"content":"## Known Issues","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Jonathan2745"},"content":"- **Date parsing errors**: If a date is not in the correct format (`dd-MM-yyyy`), a `DateTimeParseException` will be thrown.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Jonathan2745"},"content":"- **Index errors**: Deleting or marking tasks by index requires the index to be valid; otherwise, an exception may occur if the user enters an invalid index.","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":177}},{"path":"data/userTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"todo|done|testing","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"# BobChungus - User Guide","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"## Overview","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"BobChungus is a command-line based application intended as a Task Management System. It aims to help users manage their active tasks in the form of **todos**, **deadlines** and **events**.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"## Commands","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"\u003cdiv style\u003d\"border: 1px solid #2196F3; background-color: #BBDEFB; padding: 10px; border-radius: 5px;\"\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"\u003cstrong\u003e Notes about the Command Format \u003c/strong\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"  e.g. in TASK_DESCRIPTION is a parameter which can be replaced with the description of the task to be added","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"- Parameters \u003cstrong\u003e must \u003c/strong\u003e be in the specified order.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"  e.g. if the command specifies TASK_DESCRIPTION followed by TASK_DATE,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"  TASK_DATE followed by TASK_DESCRIPTION is \u003cstrong\u003e NOT \u003c/strong\u003e acceptable and will cause issues.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"- Extraneous parameters for commands that do not take in parameters (such as list and bye) will cause errors.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"  e.g. if the command specifies bye 123, it will be create an error.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"  \u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"### List of Commands","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"### **Exiting the program:** `bye`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Exits the program. Saves all Tasks within `TaskList` before exitting.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** When the user is done, they can type `bye` to exit the program.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `bye`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"### **Display all Tasks:** `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Displays the list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** When the user wants to view all tasks in their list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"### **Create new `Todo` task:** `todo`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Adds a new to-do task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides a description for the to-do task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task description (e.g., `todo Buy groceries`)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `todo TASK_DESCRIPTION`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jonathan2745"},"content":"### **Create new `deadline` task:** `deadline`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Adds a new deadline task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides a task description and a deadline date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task description followed by `/by` and the deadline date (e.g., `deadline Finish assignment /by 15-03-2025`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `deadline TASK_DESCRIPTION /by DD-MM-YYYY`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jonathan2745"},"content":"### **Create new `event` task:** `event`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Adds a new event task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides an event description and start and end date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Event description followed by `/from` (start date) and `/to` (end date) (e.g., `event Conference /from 20-03-2025 /to 22-03-2025`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `event TASK_DESCRIPTION /from TASK_START_DATE(dd-MM-yyyy) /to TASK_END_DATE(dd-MM-yyyy)`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jonathan2745"},"content":"\u003cdiv style\u003d\"border: 1px solid #2196F3; background-color: #BBDEFB; padding: 10px; border-radius: 5px;\"\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jonathan2745"},"content":"  \u003cstrong\u003eNote:\u003c/strong\u003e Tasks are stored within the program 0-indexed, but are displayed and interacted with by users 1-indexed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jonathan2745"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jonathan2745"},"content":"### **Delete a Task:** `delete`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Deletes a task by index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides the index of the task to be deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task index (e.g., `delete 2` to delete the second task in the list).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `delete TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jonathan2745"},"content":"### **Mark a task as complete:** `mark`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Marks a task as completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides the index of the task to mark as done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task index (e.g., `mark 3` to mark the third task as done).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `mark TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jonathan2745"},"content":"### **Mark a task as not complete:** `unmark`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Marks a task as not completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides the index of the task to mark as not done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Task index (e.g., `unmark 1` to unmark the first task).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `unmark TASK_INDEX`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jonathan2745"},"content":"### **Find a task:** `find`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jonathan2745"},"content":"**Description:** Finds tasks with a specific keyword in their description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jonathan2745"},"content":"- **Use Case:** The user provides a keyword to search for in the task descriptions.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jonathan2745"},"content":"- **Arguments:** Keyword to search for (e.g., `find meeting`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jonathan2745"},"content":"- **Format:** `find TASK_DESCRIPTION`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jonathan2745"},"content":"### **Saving your data**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jonathan2745"},"content":"BobChungus\u0027 `TaskList` data is saved in the hard disk automatically after exiting with the `bye` command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jonathan2745"},"content":"There is no need to save manually.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jonathan2745"},"content":"### **Editing Saved data**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jonathan2745"},"content":"BobChungus\u0027 `TaskList` Data is automatically saved as a `.txt` file at `[JAR file location]/data/userTasks.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jonathan2745"},"content":"\u003cdiv style\u003d\"border: 1px solid #FF9800; background-color: #FFEB3B; padding: 10px; border-radius: 5px;\"\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jonathan2745"},"content":"  \u003cstrong\u003eCaution:\u003c/strong\u003e  If your changes to the data file makes its format invalid, BobChungus will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jonathan2745"},"content":"Furthermore, certain edits can cause BobChungus to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jonathan2745"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jonathan2745"},"content":"## Command Summary","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jonathan2745"},"content":"| Command    | Description                               | Arguments                                   | Format                                             |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jonathan2745"},"content":"| ---------- | ----------------------------------------- |---------------------------------------------| -------------------------------------------------- |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jonathan2745"},"content":"| `bye`      | Exits the program                         | None                                        | `bye`                                              |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jonathan2745"},"content":"| `list`     | Lists all tasks                           | None                                        | `list`                                             |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jonathan2745"},"content":"| `todo`     | Adds a to-do task                         | TASK_DESCRIPTION                            | `todo Buy groceries`                               |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jonathan2745"},"content":"| `deadline` | Adds a deadline task                      | TASK_DESCRIPTION /by DD-MM-YYYY             | `deadline Submit report /by 18-03-2025`            |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jonathan2745"},"content":"| `event`    | Adds an event task                        | TASK_DESCRIPTION /from DD-MM-YYYY /to DD-MM-YYYY | `event Conference /from 20-03-2025 /to 22-03-2025` |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jonathan2745"},"content":"| `delete`   | Deletes a task by index                   | TASK_INDEX (1-indexed)                      | `delete 2`                                         |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jonathan2745"},"content":"| `mark`     | Marks a task as completed                 | TASK_INDEX (1-indexed)                      | `mark 3`                                           |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jonathan2745"},"content":"| `unmark`   | Marks a task as not completed             | TASK_INDEX (1-indexed)                      | `unmark 1`                                         |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jonathan2745"},"content":"| `find`     | Finds tasks by keyword in the description | SEARCH_KEYWORD                              | `find meeting`                                     |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jonathan2745"},"content":"## FAQs","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jonathan2745"},"content":"### 1. **What happens if I enter an invalid command?**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jonathan2745"},"content":"- If you enter a command that is not recognized, the program will throw an exception and display an error message indicating that the command is invalid. You may then follow the instructions in the error code for the correct formatting of inputs.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jonathan2745"},"content":"### 2. **What if I forget to include the arguments for a command like `todo` or `deadline`?**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Jonathan2745"},"content":"- The program will throw an exception (`MissingTodoArgumentException`, `MissingDeadlineArgumentException`, etc.) and inform you that you are missing required arguments.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Jonathan2745"},"content":"### 3. **What format should the dates be in?**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Jonathan2745"},"content":"- All dates should be in the format `dd-MM-yyyy`, for Format, example `15-03-2025`.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Jonathan2745"},"content":"## Notes on Editing Data","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Jonathan2745"},"content":"- The commands are case-insensitive, meaning you can type commands in any letter case (e.g., `todo`, `TODO`, `ToDo`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Jonathan2745"},"content":"- Ensure that the date format for commands like `deadline` and `event` is strictly followed (`dd-MM-yyyy`).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Jonathan2745"},"content":"- You can modify the task list and storage handling by editing the `TaskList` and `Storage` classes.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Jonathan2745"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Jonathan2745"},"content":"## Known Issues","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Jonathan2745"},"content":"- **Date parsing errors**: If a date is not in the correct format (`dd-MM-yyyy`), a `DateTimeParseException` will be thrown.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Jonathan2745"},"content":"- **Index errors**: Deleting or marking tasks by index requires the index to be valid; otherwise, an exception may occur if the user enters an invalid index.","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"-":17,"Jonathan2745":169}},{"path":"runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"@ECHO OFF","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"REM delete output from previous run","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"    exit /b 1","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"REM compare the output to the expected output","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":21}},{"path":"src/main/java/ASCII_Art.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"public class ASCII_Art {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"    public static String art \u003d \"\"\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"      ____        _        _____ _                                ","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"     |  _ \\\\      | |      / ____| |                               ","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"     | |_) | ___ | |__   | |    | |__  _   _ _ __   __ _ _   _ ___","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"     |  _ \u003c / _ \\\\| \u0027_ \\\\  | |    | \u0027_ \\\\| | | | \u0027_ \\\\ / _` | | | / __|","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"     | |_) | (_) | |_) | | |____| | | | |_| | | | | (_| | |_| \\\\__ \\\\","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"     |____/ \\\\___/|_.__/   \\\\_____|_| |_|\\\\__,_|_| |_|\\\\__, |\\\\__,_|___/","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"                                                    __/ |         ","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"                                                   |___/\"\"\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"    public static void printArt() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"            System.out.println(art);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"            System.err.println(\"Error printing ASCII Art: \" + e.getMessage());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":30}},{"path":"src/main/java/BobChat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"import java.io.*;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"import Errors.*;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":" * Represents the Bob chatbot application, handling user input and task management.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"class Bob {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs a Bob chatbot instance and initializes necessary components.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"     * @throws FileNotFoundException If the task storage file is not found.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"    Bob() throws FileNotFoundException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"    /** User interface for interacting with the user. */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"    private final UI ui \u003d new UI();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"    /** Storage handler for saving and loading tasks from a file. */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"    private final Storage storage \u003d new Storage(\"data/userTasks.txt\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"    /** Task list containing all user tasks. */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"    private final TaskList taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"     * Starts the chatbot, displaying a welcome message and handling user input continuously.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"    public void start() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"        while (true) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"            String userInput \u003d Parser.getUserInput();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"            try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"                Parser.parseCommand(userInput, taskList, storage, ui);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"            } catch (InputExceptions e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"                System.out.println(\"Error: \" + e.getMessage()); // Prints error but continues running","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"                System.out.println(\"Error: Please enter a valid number.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":" * Entry point for running the Bob chatbot application.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"public class BobChat {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"     * Main method that initializes and starts the chatbot.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"     * @throws InputExceptions If an input-related exception occurs.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"     * @throws IOException If an error occurs during file operations.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"    public static void main(String[] args) throws InputExceptions, IOException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"        Bob chatbot \u003d new Bob();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"        chatbot.start();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":65}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":" * The Deadline class represents a task with a specific due date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"    private final LocalDate deadlineBy;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"    private final DateTimeFormatter dateTimeOutputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs a Deadline task with a description, completion status, and due date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"     * @param isDone The completion status of the deadline task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"     * @param deadlineBy The due date of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"    public Deadline(boolean isDone, String description, LocalDate deadlineBy) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"I have added this deadline: \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"     * Gets the formatted due date of the deadline task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"     * @return The formatted due date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"    public String getDeadlineBy() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"        return deadlineBy.format(dateTimeOutputFormat);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"     * @return The formatted string representation of the deadline task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"        return \"[D]\" + getStatusIcon() + getDescription() + \" (by: \" + deadlineBy + \")\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":44}},{"path":"src/main/java/Errors/InputExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"package Errors;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"public class InputExceptions extends Exception {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"    public InputExceptions(String message) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"        super(message);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"    public static class MissingTodoArgumentException extends InputExceptions {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"        public MissingTodoArgumentException(String command) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"            super(command + \" must have arguments.\" + \"\\n\" +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"                    \"Please use: \\\"todo\\\"  \\\"TASK_DESCRIPTION\\\" instead\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"    public static class MissingDeadlineArgumentException extends InputExceptions {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"        public MissingDeadlineArgumentException(String command) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"            super(command + \" must have arguments.\" + \"\\n\" +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"                    \"Please use: \\\"deadline\\\" \\\"TASK_DESCRIPTION\\\" /by \\\"TASK_DEADLINE\\\" instead\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"    public static class MissingEventArgumentException extends InputExceptions {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"        public MissingEventArgumentException(String command) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"            super(command + \" must have arguments.\" + \"\\n\" +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"                    \"Please use: \\\"event\\\" \\\"TASK_DESCRIPTION\\\" /from \\\"TASK_START_DATE\\\" /to \\\"TASK_END_DATE\\\" instead\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"    public static class MissingFindArgumentException extends InputExceptions {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"        public MissingFindArgumentException(String command) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"            super(command + \" must contain 1 argument.\" + \"\\n\" +","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"                    \"Please use: \\\"find\\\" \\\"description\\\" instead\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"    public static class InvalidIndexException extends InputExceptions {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"        public InvalidIndexException() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"            super(\"Invalid task number.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"    public static class InvalidCommandException extends InputExceptions {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"        public InvalidCommandException() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"            super(\"Invalid command. Please try again.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"    public static class InvalidDateFormatException extends InputExceptions {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"        public InvalidDateFormatException() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"            super(\"Invalid date format. Please use dd-MM-yyyy.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":54}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":" * The Event class represents a task with a start and end date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"    private final LocalDate eventFrom;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"    private final LocalDate eventTo;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"    private final DateTimeFormatter dateTimeOutputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs an Event task with a description, completion status, start date, and end date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"     * @param eventFrom The start date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"     * @param eventTo The end date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"    public Event(boolean isDone, String description, LocalDate eventFrom, LocalDate eventTo) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"        this.eventFrom \u003d eventFrom;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"        this.eventTo \u003d eventTo;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"I have added this event: \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"     * Gets the formatted start date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"     * @return The formatted start date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"    public String getEventFrom() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"        return eventFrom.format(dateTimeOutputFormat);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"     * Gets the formatted end date of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"     * @return The formatted end date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"    public String getEventTo() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"        return eventTo.format(dateTimeOutputFormat);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"     * @return The formatted string representation of the event.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"        return \"[E]\" + getStatusIcon() + getDescription() + \" (from: \" + eventFrom + \" to: \" + eventTo + \")\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":57}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"import Errors.InputExceptions;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":" * Parses user commands and executes corresponding actions.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"class Parser {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"    /** Scanner for reading user input. */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"    private static final DateTimeFormatter dateTimeInputFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"     * Reads and returns user input from the console, trimming whitespace.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"     * @return The trimmed user input as a string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"    public static String getUserInput() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"     * Parses and executes the user command.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"     * @param ui The user interface handler for displaying messages.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"     * @throws InputExceptions If an invalid command or missing argument is encountered.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"    public static void parseCommand(String input, TaskList taskList, Storage storage, UI ui) throws InputExceptions {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"        String[] inputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"        String command \u003d inputParts[0].toLowerCase();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"        String arguments \u003d (inputParts.length \u003e 1) ? inputParts[1] : \"\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"        switch (command) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"            case \"bye\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"                ui.showGoodbye();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"                storage.saveTasks(taskList.getListOfTasks());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"                System.exit(0);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"            case \"list\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"                ui.showList();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"                if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"                    System.out.println(\"No tasks added yet.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"                } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"                    for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"                        System.out.println((i + 1) + \". \" + taskList.getTask(i));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"                    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"                ui.printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"            case \"todo\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"                    throw new InputExceptions.MissingTodoArgumentException(\"todo\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"                taskList.addTask(new ToDo(false, arguments));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"                ui.printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jonathan2745"},"content":"            case \"deadline\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jonathan2745"},"content":"                String[] parts \u003d arguments.split(\" /by \", 2);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jonathan2745"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jonathan2745"},"content":"                    throw new InputExceptions.MissingDeadlineArgumentException(\"deadline\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jonathan2745"},"content":"                try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jonathan2745"},"content":"                    LocalDate deadlineBy \u003d LocalDate.parse(parts[1], dateTimeInputFormat);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jonathan2745"},"content":"                    taskList.addTask(new Deadline(false, parts[0], deadlineBy));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jonathan2745"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jonathan2745"},"content":"                    throw new InputExceptions.InvalidDateFormatException();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jonathan2745"},"content":"                ui.printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jonathan2745"},"content":"            case \"event\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jonathan2745"},"content":"                String[] eventParts \u003d arguments.split(\" /from \", 2);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jonathan2745"},"content":"                if (eventParts.length \u003c 2) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jonathan2745"},"content":"                    throw new InputExceptions.MissingEventArgumentException(\"event\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jonathan2745"},"content":"                String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jonathan2745"},"content":"                if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jonathan2745"},"content":"                    throw new InputExceptions.MissingEventArgumentException(\"event\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jonathan2745"},"content":"                try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jonathan2745"},"content":"                    LocalDate startDate \u003d LocalDate.parse(timeParts[0], dateTimeInputFormat);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jonathan2745"},"content":"                    LocalDate endDate \u003d LocalDate.parse(timeParts[1], dateTimeInputFormat);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jonathan2745"},"content":"                    taskList.addTask(new Event(false, eventParts[0], startDate, endDate));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jonathan2745"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jonathan2745"},"content":"                    throw new InputExceptions.InvalidDateFormatException();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jonathan2745"},"content":"                ui.printLine();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jonathan2745"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jonathan2745"},"content":"                int deleteIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jonathan2745"},"content":"                taskList.removeTask(deleteIndex);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jonathan2745"},"content":"                ui.deletedTask(deleteIndex);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jonathan2745"},"content":"            case \"mark\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jonathan2745"},"content":"                int markIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jonathan2745"},"content":"                taskList.getTask(markIndex).markAsDone();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jonathan2745"},"content":"                ui.markedTask(markIndex);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jonathan2745"},"content":"            case \"unmark\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jonathan2745"},"content":"                int unmarkIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jonathan2745"},"content":"                taskList.getTask(unmarkIndex).markAsNotDone();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jonathan2745"},"content":"                ui.unmarkedTask(unmarkIndex);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jonathan2745"},"content":"            case \"find\":","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jonathan2745"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jonathan2745"},"content":"                    throw new InputExceptions.MissingFindArgumentException(\"find\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jonathan2745"},"content":"                ui.printFindingTask();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jonathan2745"},"content":"                int taskFound \u003d 0;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jonathan2745"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jonathan2745"},"content":"                    Task task \u003d taskList.getTask(i);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jonathan2745"},"content":"                    if (task.getDescription().toLowerCase().contains(arguments)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jonathan2745"},"content":"                        taskFound++;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jonathan2745"},"content":"                        ui.printFoundTask(taskFound, task);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jonathan2745"},"content":"                    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jonathan2745"},"content":"                if (taskFound \u003d\u003d 0) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jonathan2745"},"content":"                    ui.printNoTaskFound();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jonathan2745"},"content":"                ui.printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jonathan2745"},"content":"                break;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jonathan2745"},"content":"            default:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jonathan2745"},"content":"                throw new InputExceptions.InvalidCommandException();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jonathan2745"},"content":" }","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":145}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"import java.io.*;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":" * The Storage class handles loading and saving tasks to a file.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":" * It reads from and writes to a specified file path, ensuring tasks are","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":" * persisted across program executions.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"class Storage {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs a Storage object with a specified file path.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"     * Loads tasks from the file into an ArrayList.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"     * @return An ArrayList of tasks loaded from storage.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"     * @throws FileNotFoundException If the file does not exist.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"            try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"                if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"                    parentDir.mkdirs();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"                file.createNewFile();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"                System.out.println(\"File not found. A new file \u0027userData.txt\u0027 has been created in \u0027data\u0027 folder.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"                System.err.println(\"Error creating new file: \" + e.getMessage());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"            return tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"            tasks.add(formatTaskFromStorage(scanner.nextLine()));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"        scanner.close();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"Tasks loaded successfully.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"        return tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"     * Saves tasks to the file in a structured format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jonathan2745"},"content":"             PrintWriter writer \u003d new PrintWriter(fileWriter)) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jonathan2745"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jonathan2745"},"content":"                String taskInStorageFormat \u003d formatTaskToStorage(task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jonathan2745"},"content":"                writer.println(taskInStorageFormat);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jonathan2745"},"content":"            }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jonathan2745"},"content":"            System.out.println(\"Tasks saved successfully.\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jonathan2745"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jonathan2745"},"content":"            System.err.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jonathan2745"},"content":"     * Converts a Task object into a storage-friendly string format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jonathan2745"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jonathan2745"},"content":"     * @return A string representation of the task for storage.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jonathan2745"},"content":"    public String formatTaskToStorage(Task task) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jonathan2745"},"content":"        String taskInStorageFormat;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jonathan2745"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jonathan2745"},"content":"            taskInStorageFormat \u003d \"todo|\" + task.getDoneStatus() + \"|\" + task.getDescription();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jonathan2745"},"content":"        else if (task instanceof Deadline deadlineTask) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jonathan2745"},"content":"            taskInStorageFormat \u003d \"deadline|\" + deadlineTask.getDoneStatus() + \"|\" + deadlineTask.getDescription() +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jonathan2745"},"content":"                    \"|\" + deadlineTask.getDeadlineBy();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jonathan2745"},"content":"        else if (task instanceof Event eventTask) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jonathan2745"},"content":"            taskInStorageFormat \u003d \"event|\" + eventTask.getDoneStatus() + \"|\" + eventTask.getDescription() +","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jonathan2745"},"content":"                    \"|\" + eventTask.getEventFrom() + \"|\" + eventTask.getEventTo();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jonathan2745"},"content":"        } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jonathan2745"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + task.getClass().getSimpleName());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jonathan2745"},"content":"        assert taskInStorageFormat !\u003d null : \"taskInStorageFormat should not be null\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jonathan2745"},"content":"        return taskInStorageFormat;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jonathan2745"},"content":"     * Parses a task from its stored string format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jonathan2745"},"content":"     * @param savedTask The string representation of the task from storage.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jonathan2745"},"content":"     * @return The reconstructed Task object.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jonathan2745"},"content":"     * @throws IllegalArgumentException If the format is invalid or unknown.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jonathan2745"},"content":"    public Task formatTaskFromStorage(String savedTask) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jonathan2745"},"content":"        String[] parts \u003d savedTask.split(\"\\\\|\"); // Split by \"|\"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jonathan2745"},"content":"        DateTimeFormatter dateTimeLoadFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jonathan2745"},"content":"        // Ensure the task format is valid","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jonathan2745"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jonathan2745"},"content":"            throw new IllegalArgumentException(\"Invalid task format: \" + savedTask);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jonathan2745"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jonathan2745"},"content":"        String taskDoneFormat \u003d parts[1];","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jonathan2745"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jonathan2745"},"content":"        boolean taskDone;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jonathan2745"},"content":"        if (Objects.equals(taskDoneFormat, \"done\")){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jonathan2745"},"content":"            taskDone \u003d true;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jonathan2745"},"content":"        } else if (Objects.equals(taskDoneFormat, \"not done\")){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jonathan2745"},"content":"            taskDone \u003d false;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jonathan2745"},"content":"        } else {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jonathan2745"},"content":"            throw new IllegalArgumentException(\"Data corrupted\" + savedTask);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jonathan2745"},"content":"        switch (taskType) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jonathan2745"},"content":"            case \"todo\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jonathan2745"},"content":"                assert parts.length \u003d\u003d 3 : \"Todo task should have 2 arguments\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jonathan2745"},"content":"                return new ToDo(taskDone, description);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jonathan2745"},"content":"            case \"deadline\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jonathan2745"},"content":"                assert parts.length \u003d\u003d 4 : \"Deadline task should have 3 arguments\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jonathan2745"},"content":"                if (parts.length !\u003d 4) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jonathan2745"},"content":"                    throw new IllegalArgumentException(\"Invalid deadline format: \" + savedTask);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jonathan2745"},"content":"                return new Deadline(taskDone, description, LocalDate.parse(parts[3], dateTimeLoadFormat));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jonathan2745"},"content":"            case \"event\":","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jonathan2745"},"content":"                assert parts.length \u003d\u003d 5 : \"Event task should have 4 arguments\";","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jonathan2745"},"content":"                if (parts.length !\u003d 5) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jonathan2745"},"content":"                    throw new IllegalArgumentException(\"Invalid event format: \" + savedTask);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jonathan2745"},"content":"                }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jonathan2745"},"content":"                return new Event(taskDone, description, LocalDate.parse(parts[3], dateTimeLoadFormat), LocalDate.parse(parts[4],dateTimeLoadFormat));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jonathan2745"},"content":"            default:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jonathan2745"},"content":"                throw new IllegalArgumentException(\"Unknown task type: \" + taskType);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":163}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"public class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"    private final String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs a new task with the given description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"     * By default, the task is not done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs a new task with the given completion status and description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"     * @return \"[X] \" if the task is done, \"[ ] \" otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"     * Returns the completion status of the task as a string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"     * @return \"done\" if the task is completed, \"not done\" otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"        return (isDone ? \"done\" : \"not done\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jonathan2745"},"content":"     * @return The task description.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jonathan2745"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jonathan2745"},"content":"        return description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":74}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"import Errors.InputExceptions;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":" * The TaskList class manages a collection of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":" * It provides methods to add, retrieve, remove, and get the size of the task list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"class TaskList {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"     * @param tasks The list of tasks to manage.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"        tasks.add(task);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"     * Retrieves a task at a specific index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"     * @param index The index of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"     * @throws InputExceptions If the index is out of bounds.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"    public Task getTask(int index) throws InputExceptions {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"            throw new InputExceptions.InvalidIndexException();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"     * Returns the list of all tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"     * @return An ArrayList of tasks.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"        return tasks;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"    public int size() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"     * Removes a task at a specified index.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"     * @throws InputExceptions If the index is out of bounds.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jonathan2745"},"content":"    public void removeTask(int index) throws InputExceptions {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jonathan2745"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jonathan2745"},"content":"            throw new InputExceptions.InvalidIndexException();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jonathan2745"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jonathan2745"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":73}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":" * The ToDo class represents a simple task without a specific deadline or event period.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"     * Constructs a ToDo task with a description and completion status.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"    public ToDo(boolean isDone, String description) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"I have added this Todo: \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"        return \"[T]\" + getStatusIcon() + getDescription();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":28}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan2745"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jonathan2745"},"content":" * Handles user interface interactions by displaying messages and formatting output.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jonathan2745"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jonathan2745"},"content":"class UI {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jonathan2745"},"content":"     * Displays the welcome message along with ASCII art of BobChungus.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jonathan2745"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jonathan2745"},"content":"        ASCII_Art.printArt();","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\" Hello! I\u0027m BobChungus \");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jonathan2745"},"content":"     * Displays the goodbye message when exiting the program.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jonathan2745"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jonathan2745"},"content":"     * Displays a header for the task list output.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jonathan2745"},"content":"    public void showList() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jonathan2745"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jonathan2745"},"content":"     * @param deleteIndex The index of the task that was deleted.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jonathan2745"},"content":"    public void deletedTask(int deleteIndex){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"Okay, deleted Task \" + (deleteIndex + 1));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jonathan2745"},"content":"     * Displays a message indicating a task has been marked as completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jonathan2745"},"content":"     * @param markIndex The index of the task that was marked as done.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jonathan2745"},"content":"    public void markedTask(int markIndex){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"Okay, marked Task \" + (markIndex + 1));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jonathan2745"},"content":"     * Displays a message indicating a task has been unmarked as completed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jonathan2745"},"content":"     * @param unmarkIndex The index of the task that was unmarked.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jonathan2745"},"content":"    public void unmarkedTask(int unmarkIndex){","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"Okay, unmarked Task \" + (unmarkIndex + 1));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jonathan2745"},"content":"     * Displays a message indicating that a search for tasks has begun.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jonathan2745"},"content":"    public void printFindingTask(){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jonathan2745"},"content":"     * Displays a message when no matching tasks are found during a search.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jonathan2745"},"content":"    public void printNoTaskFound(){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jonathan2745"},"content":"        printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"No task with matching keyword found\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jonathan2745"},"content":"     * Displays a found task from a search result.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jonathan2745"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jonathan2745"},"content":"     * @param position The position of the task in the list.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jonathan2745"},"content":"     * @param task The task object that was found.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jonathan2745"},"content":"    public void printFoundTask(int position, Task task){","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jonathan2745"},"content":"        printLine();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println( position + \".\" + \" \" + task.toString() );","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jonathan2745"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jonathan2745"},"content":"     * Prints a horizontal line for formatting output.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jonathan2745"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jonathan2745"},"content":"    public void printLine() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jonathan2745"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jonathan2745"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jonathan2745"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jonathan2745"},"content":"}","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Jonathan2745":101}}]
