[{"path":"src/main/java/amadinho/exceptions/EmptyList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.exceptions;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Exception for the scenario","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * when the list of Tasks is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class EmptyList extends Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"     * Constructor for the EmptyList exception.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"     * @param message Error message to be printed when EmptyList is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    public EmptyList(String message){","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"b1inmeister":17}},{"path":"src/main/java/amadinho/exceptions/EmptyString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.exceptions;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Exception for the scenario  when","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * the String provided is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class EmptyString extends Exception {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"     * Constructor for the EmptyString exception.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"     * @param message Error message to be printed when EmptyString is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    public EmptyString(String message){","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"        super(message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":17}},{"path":"src/main/java/amadinho/exceptions/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.exceptions;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Exception for the scenario when","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * the command input is of incorrect format.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class InvalidCommand extends Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"     * Constructor for the InvalidCommand exception.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"     * @param message Error message to be printed when InvalidCommand is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"        super(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"b1inmeister":17}},{"path":"src/main/java/amadinho/main/Amadinho.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.main;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"import amadinho.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":"import amadinho.parser.Parser;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":"import amadinho.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":" * Main class for execution of Amadinho.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":" * Program starts and terminates here.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"public class Amadinho {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"     * Method for execution of Amadinho. When the program","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"     * is started, this method is called, and the program","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"     * terminates when the method has finished execution.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"     * @param args Command-line arguments passed to the program.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"        Storage.readTextFile(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"        while (true) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"            String userCommand \u003d Ui.readCommand(in);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"            if (Ui.isCompleted(userCommand)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"            String information \u003d Ui.readInfo(in, false);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"            Parser.executeCommand(taskList, userCommand, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"b1inmeister"},"content":"        Ui.exitMessage();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":45}},{"path":"src/main/java/amadinho/main/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.main;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Contains constants that are commonly used within all classes of Amadinho.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"public class Constants {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"    public static final int LIST_COUNTER_START \u003d 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    public static final int ARRAY_INCREMENT \u003d 1;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"    public static final String LIST_SPACE \u003d \" \";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"    public static final String LIST_DOT \u003d \".\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    public static final String BORDER_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":15}},{"path":"src/main/java/amadinho/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.parser;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"import static amadinho.parser.ParserConstants.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":"import amadinho.main.Constants;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"import amadinho.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasklist.Tasklist;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"import amadinho.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"import amadinho.exceptions.EmptyString;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"import amadinho.exceptions.InvalidCommand;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":" * Contains methods that handles the command input from the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"public class Parser {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"     * Main Command Execution Method","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"     * Deciphers which command input to execute, based on the user input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"     * If the user input does not match any of the existing commands, InvalidCommand is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"     * @param userCommand Command input from the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"     * @param information Information input from the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"    public static void executeCommand(ArrayList\u003cTask\u003e taskList, String userCommand, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"            switch (userCommand) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_LIST:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"b1inmeister"},"content":"                commandList(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_FIND:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"b1inmeister"},"content":"                commandFind(taskList, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_MARK:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"b1inmeister"},"content":"                commandMark(taskList, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_UNMARK:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"b1inmeister"},"content":"                commandUnmark(taskList, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"b1inmeister"},"content":"                commandDelete(taskList, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"b1inmeister"},"content":"                commandTodo(taskList, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"b1inmeister"},"content":"                commandDeadline(taskList, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"b1inmeister"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"b1inmeister"},"content":"                commandEvent(taskList, information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"b1inmeister"},"content":"            default:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"b1inmeister"},"content":"                errorInvalidCommand(MESSAGE_ERROR_INVALID_COMMAND);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"b1inmeister"},"content":"        } catch (InvalidCommand e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"b1inmeister"},"content":"            errorPrinting(e);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"b1inmeister"},"content":"     * Primary Command Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"b1inmeister"},"content":"     * Executes the \"list\" command that prints the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks to be printed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"b1inmeister"},"content":"    private static void commandList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"b1inmeister"},"content":"        Tasklist.executeList(taskList, false);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"b1inmeister"},"content":"     * Executes the \"find\" command that searches for Tasks in the list that contains the search criteria.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks to search.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"b1inmeister"},"content":"     * @param information String containing the search criteria.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"b1inmeister"},"content":"    private static void commandFind(ArrayList\u003cTask\u003e taskList, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"b1inmeister"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"b1inmeister"},"content":"            if (information.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"b1inmeister"},"content":"                errorEmptyString();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"b1inmeister"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"b1inmeister"},"content":"                if (isContains(information, task)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"b1inmeister"},"content":"                    Tasklist.insertIntoTaskList(foundTasks, task, true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"b1inmeister"},"content":"                }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"b1inmeister"},"content":"            Tasklist.executeList(foundTasks, true);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"b1inmeister"},"content":"        } catch (EmptyString e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"b1inmeister"},"content":"            errorPrinting(e);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"b1inmeister"},"content":"     * Executes the \"mark\" command that marks a Task in the list of Tasks as completed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"b1inmeister"},"content":"     * @param information Index of Task to be marked within the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"b1inmeister"},"content":"    private static void commandMark(ArrayList\u003cTask\u003e taskList, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"b1inmeister"},"content":"        Tasklist.executeMark(taskList, information, true);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"b1inmeister"},"content":"     *  Executes the \"unmark\" command that marks a Task in the list of Tasks as incomplete.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"b1inmeister"},"content":"     * @param information Index of Task to be unmarked within the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"b1inmeister"},"content":"    private static void commandUnmark(ArrayList\u003cTask\u003e taskList, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"b1inmeister"},"content":"        Tasklist.executeMark(taskList, information, false);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"b1inmeister"},"content":"     * Executes the \"delete\" command that removes a Task from the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"b1inmeister"},"content":"     * @param information Index of Task to be removed within the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"b1inmeister"},"content":"    private static void commandDelete(ArrayList\u003cTask\u003e taskList, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"b1inmeister"},"content":"        int taskCount;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"b1inmeister"},"content":"            taskCount \u003d Integer.parseInt(information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"b1inmeister"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"b1inmeister"},"content":"            printNumberFormatExceptionMessage(COMMAND_DELETE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"b1inmeister"},"content":"            return;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"b1inmeister"},"content":"            Task taskToDelete \u003d taskList.get(taskCount - Constants.ARRAY_INCREMENT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"b1inmeister"},"content":"            taskList.remove(taskCount - Constants.ARRAY_INCREMENT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"b1inmeister"},"content":"            Storage.writeToTextFile(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"b1inmeister"},"content":"            Ui.deleteCommandMessage(taskList, taskToDelete);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"b1inmeister"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"b1inmeister"},"content":"            printIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"b1inmeister"},"content":"     * Executes the \"todo\" command that adds a Todo to the end of the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the Todo will be added to .","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"b1inmeister"},"content":"     * @param information Information of the Todo to be inserted, which is the description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"b1inmeister"},"content":"    private static void commandTodo(ArrayList\u003cTask\u003e taskList, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"b1inmeister"},"content":"            if (isEmpty(information)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"b1inmeister"},"content":"                errorInvalidCommand(MESSAGE_ERROR_INVALID_COMMAND_TODO);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"b1inmeister"},"content":"            Todo newTodo \u003d new Todo(information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"b1inmeister"},"content":"            Tasklist.insertIntoTaskList(taskList, newTodo, false);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"b1inmeister"},"content":"            Storage.writeToTextFile(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"b1inmeister"},"content":"        } catch (InvalidCommand e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"b1inmeister"},"content":"            errorPrinting(e);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"b1inmeister"},"content":"     * Executes the \"deadline\" command that adds a Deadline to the end of the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the Deadline will be added to.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"b1inmeister"},"content":"     * @param information Information of the Deadline to be inserted, which includes","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"b1inmeister"},"content":"     *                    the description and the deadline timing.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"b1inmeister"},"content":"    private static void commandDeadline(ArrayList\u003cTask\u003e taskList, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"b1inmeister"},"content":"            if (isMissing(information, IDENTIFIER_BY)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"b1inmeister"},"content":"                errorInvalidCommand(MESSAGE_ERROR_INVALID_COMMAND_DEADLINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"b1inmeister"},"content":"            int descriptionPosition \u003d findIndex(information, IDENTIFIER_BY);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"b1inmeister"},"content":"            String description \u003d generateSubstring(information, START_OF_STRING, descriptionPosition);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"b1inmeister"},"content":"            String by \u003d generateSubstring(information, descriptionPosition + LENGTH_BY);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"b1inmeister"},"content":"            Deadline newDeadline \u003d extractDateDeadline(by, description);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"b1inmeister"},"content":"            // check for incorrect input format (since newDeadline \u003d null when format is wrong)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"b1inmeister"},"content":"            if (newDeadline \u003d\u003d null) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"b1inmeister"},"content":"                return;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"b1inmeister"},"content":"            Tasklist.insertIntoTaskList(taskList, newDeadline, false);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"b1inmeister"},"content":"            Storage.writeToTextFile(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"b1inmeister"},"content":"        } catch (InvalidCommand e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"b1inmeister"},"content":"            errorPrinting(e);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"b1inmeister"},"content":"     * Executes the \"event\" command that adds an Event to the end of the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the Event will be added to.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"b1inmeister"},"content":"     * @param information Information of the Event to be inserted, which includes","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"b1inmeister"},"content":"     *                    the description, as well as the start and end timing.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"b1inmeister"},"content":"    private static void commandEvent(ArrayList\u003cTask\u003e taskList, String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"b1inmeister"},"content":"            if (isMissing(information, IDENTIFIER_FROM) || isMissing(information, IDENTIFIER_TO)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"b1inmeister"},"content":"                errorInvalidCommand(MESSAGE_ERROR_INVALID_COMMAND_EVENT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"b1inmeister"},"content":"            int descriptionPosition \u003d findIndex(information, IDENTIFIER_FROM);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"b1inmeister"},"content":"            int toPosition \u003d findIndex(information, IDENTIFIER_TO);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"b1inmeister"},"content":"            String description \u003d generateSubstring(information, START_OF_STRING, descriptionPosition);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"b1inmeister"},"content":"            String from \u003d generateSubstring(information, descriptionPosition + LENGTH_FROM, toPosition);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"b1inmeister"},"content":"            String to \u003d generateSubstring(information, toPosition + LENGTH_TO);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"b1inmeister"},"content":"            Event newEvent \u003d extractDateEvent(from, to, description);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"b1inmeister"},"content":"            // check for incorrect input format (since newEvent \u003d null when format is wrong)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"b1inmeister"},"content":"            if (newEvent \u003d\u003d null) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"b1inmeister"},"content":"                return;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"b1inmeister"},"content":"            Tasklist.insertIntoTaskList(taskList, newEvent, false);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"b1inmeister"},"content":"            Storage.writeToTextFile(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"b1inmeister"},"content":"        } catch (InvalidCommand e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"b1inmeister"},"content":"            errorPrinting(e);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"b1inmeister"},"content":"     * Secondary Command Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"b1inmeister"},"content":"     * Checks if the information String can be found within the description of a Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"b1inmeister"},"content":"     * @param information String to check within the reference description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"b1inmeister"},"content":"     * @param task Task containing the description that acts as the reference.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"b1inmeister"},"content":"     * @return Boolean value that indicates if the information","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"b1inmeister"},"content":"     *         String is present in the description of the Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"b1inmeister"},"content":"    private static boolean isContains(String information, Task task) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"b1inmeister"},"content":"        return task.getDescription().contains(information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"b1inmeister"},"content":"     * Checks if the inputted String is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"b1inmeister"},"content":"     * @param information String to check.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"b1inmeister"},"content":"     * @return Boolean value that indicates if the inputted String is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"b1inmeister"},"content":"    private static boolean isEmpty(String information) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"b1inmeister"},"content":"        return information.isEmpty();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"b1inmeister"},"content":"     * Checks if an identifier String is present within another inputted String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"b1inmeister"},"content":"     * @param information String that acts as the reference.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"b1inmeister"},"content":"     * @param identifier String to check within the reference String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"b1inmeister"},"content":"     * @return Boolean value that indicates if the identifier is present.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"b1inmeister"},"content":"    private static boolean isMissing(String information, String identifier) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"b1inmeister"},"content":"        return !(information.contains(identifier));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"b1inmeister"},"content":"     * Returns index of the identifier String within another inputted String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"b1inmeister"},"content":"     * @param information String that acts as the reference.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"b1inmeister"},"content":"     * @param identifier String to check within the reference String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"b1inmeister"},"content":"     * @return Index of the identifier String within the reference String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"b1inmeister"},"content":"    private static int findIndex(String information, String identifier) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"b1inmeister"},"content":"        return information.indexOf(identifier);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"b1inmeister"},"content":"     * Creates a substring from an inputted String within the range provided.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"b1inmeister"},"content":"     * @param information String that acts as the reference.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"b1inmeister"},"content":"     * @param start Index of the start of the substring within the reference String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"b1inmeister"},"content":"     * @param end Index of the end of the substring within the reference String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"b1inmeister"},"content":"     * @return Substring of the reference String within the range provided.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"b1inmeister"},"content":"    private static String generateSubstring(String information, int start, int end) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"b1inmeister"},"content":"        return information.substring(start, end).trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"b1inmeister"},"content":"     * Creates a substring from an inputted String within the range provided.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"b1inmeister"},"content":"     * In this method, the end index will be the end of the inputted string.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"b1inmeister"},"content":"     * @param information String that acts as the reference.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"b1inmeister"},"content":"     * @param start Index of the start of the substring within the reference String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"b1inmeister"},"content":"     * @return Substring of the reference String within the range provided.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"b1inmeister"},"content":"    private static String generateSubstring(String information, int start) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"b1inmeister"},"content":"        return information.substring(start).trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"b1inmeister"},"content":"     * Date and Time Extraction Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"b1inmeister"},"content":"     * Extracts the date / time from the by String, and creates a Deadline.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"b1inmeister"},"content":"     * @param by Unformatted deadline timing of the Deadline to be created.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"b1inmeister"},"content":"     * @param description Description of the Deadline to be created.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"b1inmeister"},"content":"     * @return Deadline with the formatted date / time.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"b1inmeister"},"content":"    private static Deadline extractDateDeadline(String by, String description) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"b1inmeister"},"content":"        Deadline newDeadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"b1inmeister"},"content":"        DateTimeFormatter dateTimeInputFormat \u003d getDateTimeInputFormat();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"b1inmeister"},"content":"        DateTimeFormatter dateTimeOutputFormat \u003d getDateTimeOutputFormat();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"b1inmeister"},"content":"            LocalDateTime dateTime \u003d parseDateTime(by, dateTimeInputFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"b1inmeister"},"content":"            String formattedDateTime \u003d getFormattedDateTime(dateTime, dateTimeOutputFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"b1inmeister"},"content":"            newDeadline \u003d new Deadline(description, formattedDateTime);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"b1inmeister"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"b1inmeister"},"content":"            printDateTimeParseExceptionMessage(MESSAGE_ERROR_INVALID_COMMAND_DEADLINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"b1inmeister"},"content":"            return null;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"b1inmeister"},"content":"        return newDeadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"b1inmeister"},"content":"     * Extracts the date / time from the from and to String, and creates an Event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"b1inmeister"},"content":"     * @param from Unformatted start timing of the Event to be created.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"b1inmeister"},"content":"     * @param to Unformatted end timing of the Event to be created.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"b1inmeister"},"content":"     * @param description Description of the Event to be created.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"b1inmeister"},"content":"     * @return Event with the formatted date / time.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"b1inmeister"},"content":"    private static Event extractDateEvent(String from, String to, String description) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"b1inmeister"},"content":"        Event newEvent;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"b1inmeister"},"content":"        DateTimeFormatter dateTimeInputFormat \u003d getDateTimeInputFormat();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"b1inmeister"},"content":"        DateTimeFormatter dateTimeOutputFormat \u003d getDateTimeOutputFormat();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"b1inmeister"},"content":"            LocalDateTime dateTimeFrom \u003d parseDateTime(from, dateTimeInputFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"b1inmeister"},"content":"            LocalDateTime dateTimeTo \u003d parseDateTime(to, dateTimeInputFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"b1inmeister"},"content":"            String formattedDateTimeFrom \u003d getFormattedDateTime(dateTimeFrom, dateTimeOutputFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"b1inmeister"},"content":"            String formattedDateTimeTo \u003d getFormattedDateTime(dateTimeTo, dateTimeOutputFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"b1inmeister"},"content":"            newEvent \u003d new Event(description, formattedDateTimeFrom, formattedDateTimeTo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"b1inmeister"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"b1inmeister"},"content":"            printDateTimeParseExceptionMessage(MESSAGE_ERROR_INVALID_COMMAND_EVENT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"b1inmeister"},"content":"            return null;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"b1inmeister"},"content":"        return newEvent;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"b1inmeister"},"content":"     * Gets the format for the date / time input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"b1inmeister"},"content":"     * @return Correct format for the date / time input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"b1inmeister"},"content":"    private static DateTimeFormatter getDateTimeInputFormat() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"b1inmeister"},"content":"        return DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"b1inmeister"},"content":"     * Gets the format for the date / time output.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"b1inmeister"},"content":"     * @return Correct format for the date / time output.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"b1inmeister"},"content":"    private static DateTimeFormatter getDateTimeOutputFormat() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"b1inmeister"},"content":"        return DateTimeFormatter.ofPattern(DATETIME_OUTPUT_FORMAT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"b1inmeister"},"content":"     * Parses the inputted String into a LocalDateTime instance.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"b1inmeister"},"content":"     * @param info String to be parsed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"b1inmeister"},"content":"     * @param dateTimeInputFormat Format of the LocalDateTime instance.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"b1inmeister"},"content":"     * @return LocalDateTime instance containing the date and time from the String.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"b1inmeister"},"content":"    private static LocalDateTime parseDateTime(String info, DateTimeFormatter dateTimeInputFormat) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"b1inmeister"},"content":"        return LocalDateTime.parse(info, dateTimeInputFormat);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"b1inmeister"},"content":"     * Formats the LocalDateTime instance with the correct format for output.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"b1inmeister"},"content":"     * @param dateTime LocalDateTime instance to be re-formatted.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"b1inmeister"},"content":"     * @param dateTimeOutputFormat Correct format for re-formatting.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"b1inmeister"},"content":"     * @return Re-formatted LocalDateTime instance.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"b1inmeister"},"content":"    private static String getFormattedDateTime(LocalDateTime dateTime, DateTimeFormatter dateTimeOutputFormat) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"b1inmeister"},"content":"        return dateTime.format(dateTimeOutputFormat);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"b1inmeister"},"content":"     * Exception Handling Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"b1inmeister"},"content":"     * Throws EmptyString","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"b1inmeister"},"content":"     * @throws EmptyString If the String provided is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"b1inmeister"},"content":"    private static void errorEmptyString() throws EmptyString {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"b1inmeister"},"content":"        throw new EmptyString(MESSAGE_ERROR_INVALID_COMMAND_FIND);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"b1inmeister"},"content":"     * Throws InvalidCommand.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"b1inmeister"},"content":"     * @param message Error message to be paired with the InvalidCommand thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"b1inmeister"},"content":"     * @throws InvalidCommand If the command input is in the incorrect format.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"b1inmeister"},"content":"    private static void errorInvalidCommand(String message) throws InvalidCommand {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"b1inmeister"},"content":"        throw new InvalidCommand(message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"b1inmeister"},"content":"     * Prints an error message when an index exceeds the size of the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"b1inmeister"},"content":"    public static void printIndexOutOfBoundsExceptionMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(MESSAGE_ERROR_OUTOFBOUNDS);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"b1inmeister"},"content":"     * Prints an error message when parsing into a number cannot be performed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"b1inmeister"},"content":"     * @param message Command input of the method where the NumberFormatException was thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"b1inmeister"},"content":"    public static void printNumberFormatExceptionMessage(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(MESSAGE_ERROR_INVALID_COMMAND);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"b1inmeister"},"content":"        if (message.equals(COMMAND_MARK)) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"b1inmeister"},"content":"            System.out.println(MESSAGE_ERROR_INVALID_COMMAND_MARK);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"b1inmeister"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"b1inmeister"},"content":"            System.out.println(MESSAGE_ERROR_INVALID_COMMAND_DELETE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"b1inmeister"},"content":"     * Prints an error message when parsing into the specified date / time format","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"b1inmeister"},"content":"     * cannot be performed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"b1inmeister"},"content":"     * @param message Command input of the method where the DateTimeParseException was thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"b1inmeister"},"content":"    private static void printDateTimeParseExceptionMessage(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"b1inmeister"},"content":"     * Prints the corresponding error message of the exception caught.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"b1inmeister"},"content":"     * @param e Exception caught.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"b1inmeister"},"content":"    public static void errorPrinting(Exception e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":497}},{"path":"src/main/java/amadinho/parser/ParserConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.parser;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Contains constants that are used only within the Parser class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * The only exception is COMMAND_MARK, which is used in the Tasklist class as well.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class ParserConstants {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"    protected static final int START_OF_STRING \u003d 0;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"    protected static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"    protected static final String DATETIME_OUTPUT_FORMAT \u003d \"dd MMM yyyy HHmm\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"    protected static final String IDENTIFIER_BY \u003d \"/by\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"    protected static final String IDENTIFIER_FROM \u003d \"/from\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"    protected static final String IDENTIFIER_TO \u003d \"/to\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LENGTH_BY \u003d IDENTIFIER_BY.length();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LENGTH_FROM \u003d IDENTIFIER_FROM.length();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LENGTH_TO \u003d IDENTIFIER_TO.length();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_OUTOFBOUNDS \u003d \"Number provided is not in the list. Lousy.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_INVALID_COMMAND \u003d \"Invalid command. Skill issue.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_INVALID_COMMAND_FIND \u003d MESSAGE_ERROR_INVALID_COMMAND","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"            + \"\\n\" + \"find \u003cdescription\u003e\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_INVALID_COMMAND_TODO \u003d MESSAGE_ERROR_INVALID_COMMAND","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"            + \"\\n\" + \"todo \u003cdescription\u003e\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_INVALID_COMMAND_DEADLINE \u003d MESSAGE_ERROR_INVALID_COMMAND","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"            + \"\\n\" + \"deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_INVALID_COMMAND_EVENT \u003d MESSAGE_ERROR_INVALID_COMMAND","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"            + \"\\n\" + \"event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_INVALID_COMMAND_MARK \u003d \"mark / unmark \u003cinteger\u003e\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_INVALID_COMMAND_DELETE \u003d \"delete \u003cinteger\u003e\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":42}},{"path":"src/main/java/amadinho/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"import static amadinho.storage.StorageConstants.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":"import amadinho.main.Constants;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"import amadinho.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasklist.Tasklist;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Todo;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Deadline;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Event;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"import java.io.File;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":" * Contains methods that pertain to the reading and writing of the list of Tasks","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":" * to an external provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"public class Storage {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"     * Key Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"     * Instantiates the provided text file with data into the","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"     * program, and calls for an existence check.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the data will be inserted to.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"    public static void readTextFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"        File listFile \u003d new File(LISTFILE_PATHNAME);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"        fileExistCheck(listFile);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"        readList(taskList, listFile);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"b1inmeister"},"content":"     * Reads data from the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"b1inmeister"},"content":"     * If text file cannot be found, FileNotFoundException is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the data will be inserted to.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"b1inmeister"},"content":"     * @param listFile Instance of the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"b1inmeister"},"content":"    private static void readList(ArrayList\u003cTask\u003e taskList, File listFile) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"b1inmeister"},"content":"            Scanner fileInput \u003d new Scanner(listFile);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"b1inmeister"},"content":"            while (fileInput.hasNext()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"b1inmeister"},"content":"                String listFileCommand \u003d Ui.readCommand(fileInput);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"b1inmeister"},"content":"                String listFileInfo \u003d Ui.readInfo(fileInput, true);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"b1inmeister"},"content":"                executeCommandFromListFile(taskList, listFileCommand, listFileInfo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"b1inmeister"},"content":"            fileInput.close();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"b1inmeister"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"b1inmeister"},"content":"            printFileExceptionsMessage(MESSAGE_ERROR_FILENOTFOUND);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"b1inmeister"},"content":"     * Instantiates the provided text file for writing","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"b1inmeister"},"content":"     * If there are issues with the instantiation process, IOException is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList Existing list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"b1inmeister"},"content":"    public static void writeToTextFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"b1inmeister"},"content":"            FileWriter fileWriter \u003d new FileWriter(LISTFILE_PATHNAME);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"b1inmeister"},"content":"            writeList(taskList, fileWriter);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"b1inmeister"},"content":"            fileWriter.close();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"b1inmeister"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"b1inmeister"},"content":"            printFileExceptionsMessage(MESSAGE_ERROR_WRITEFAILED);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"b1inmeister"},"content":"     * Writes data from the list of Tasks onto the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList Existing list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"b1inmeister"},"content":"     * @param fileWriter Instance of the provided text file for writing purposes.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"b1inmeister"},"content":"     * @throws IOException If there are issues when writing to the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"b1inmeister"},"content":"    private static void writeList(ArrayList\u003cTask\u003e taskList, FileWriter fileWriter) throws IOException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"b1inmeister"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"b1inmeister"},"content":"            char taskType \u003d getTaskType(task);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"b1inmeister"},"content":"            String defaultString \u003d makeDefaultString(task, taskType);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"b1inmeister"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"b1inmeister"},"content":"            case CHAR_TODO:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"b1inmeister"},"content":"                fileWriter.write(defaultString + LISTFILE_NEWLINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"b1inmeister"},"content":"            case CHAR_DEADLINE:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"b1inmeister"},"content":"                fileWriter.write(defaultString + LISTFILE_DIVIDER + getBy((Deadline) task) + LISTFILE_NEWLINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"b1inmeister"},"content":"            case CHAR_EVENT:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"b1inmeister"},"content":"                fileWriter.write(defaultString + LISTFILE_DIVIDER + getFrom((Event) task)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"b1inmeister"},"content":"                        + LISTFILE_DIVIDER + getTo((Event) task) + LISTFILE_NEWLINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"b1inmeister"},"content":"            default:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"b1inmeister"},"content":"                printFileExceptionsMessage(MESSAGE_ERROR_WRITEFAILED);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"b1inmeister"},"content":"                break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"b1inmeister"},"content":"     * Secondary Methods (for readTextFile)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"b1inmeister"},"content":"     * Checks if the provided text file exists.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"b1inmeister"},"content":"     * @param listFile Instance of the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"b1inmeister"},"content":"    private static void fileExistCheck(File listFile) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"b1inmeister"},"content":"            File directory \u003d listFile.getParentFile();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"b1inmeister"},"content":"            directoryCheck(directory);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"b1inmeister"},"content":"            fileCheck(listFile);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"b1inmeister"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"b1inmeister"},"content":"            printFileExceptionsMessage(MESSAGE_ERROR_IO);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"b1inmeister"},"content":"     * Checks if the parent directory of the provided text file exists.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"b1inmeister"},"content":"     * Creates the parent directory if it does not exist.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"b1inmeister"},"content":"     * @param directory Instance of the parent directory of the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"b1inmeister"},"content":"     * @throws IOException If there are issues with the creation of the directory.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"b1inmeister"},"content":"    private static void directoryCheck(File directory) throws IOException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"b1inmeister"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"b1inmeister"},"content":"            boolean isCreated \u003d directory.mkdirs();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"b1inmeister"},"content":"            createdCheck(isCreated);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"b1inmeister"},"content":"     * Checks if the provided text file exists within the parent directory.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"b1inmeister"},"content":"     * Creates the text file if it does not exist.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"b1inmeister"},"content":"     * @param listFile Instance of the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"b1inmeister"},"content":"     * @throws IOException If there are issues with the creation of the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"b1inmeister"},"content":"    private static void fileCheck(File listFile) throws IOException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"b1inmeister"},"content":"        if (!listFile.exists()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"b1inmeister"},"content":"            boolean isCreated \u003d listFile.createNewFile();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"b1inmeister"},"content":"            createdCheck(isCreated);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"b1inmeister"},"content":"     * Checks if the creation of either the parent directory or the provided text file is successful.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"b1inmeister"},"content":"     * @param isCreated Boolean value resulting from the attempt to create the parent directory","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"b1inmeister"},"content":"     *                  or the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"b1inmeister"},"content":"     * @throws IOException If the creation is unsuccessful.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"b1inmeister"},"content":"    private static void createdCheck(boolean isCreated) throws IOException {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"b1inmeister"},"content":"        if (!isCreated) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"b1inmeister"},"content":"            throw new IOException();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"b1inmeister"},"content":"     * Executes the input from the command part of data from the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the data will be inserted into.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"b1inmeister"},"content":"     * @param listFileCommand Input from the command part of data from the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"b1inmeister"},"content":"     * @param listFileInfo Input from the information part of data from the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"b1inmeister"},"content":"    private static void executeCommandFromListFile(ArrayList\u003cTask\u003e taskList,","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"b1inmeister"},"content":"                                                  String listFileCommand, String listFileInfo) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"b1inmeister"},"content":"        switch (listFileCommand) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"b1inmeister"},"content":"        case STRING_SPACE:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"b1inmeister"},"content":"            readTodo(taskList, listFileInfo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"b1inmeister"},"content":"            break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"b1inmeister"},"content":"        case STRING_DEADLINE:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"b1inmeister"},"content":"            readDeadline(taskList, listFileInfo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"b1inmeister"},"content":"            break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"b1inmeister"},"content":"        case STRING_EVENT:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"b1inmeister"},"content":"            readEvent(taskList, listFileInfo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"b1inmeister"},"content":"            break;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"b1inmeister"},"content":"        default:","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"b1inmeister"},"content":"            printFileExceptionsMessage(MESSAGE_ERROR_READFAILED);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"b1inmeister"},"content":"     * Adds a Todo from the provided text file to the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the Todo will be inserted into.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"b1inmeister"},"content":"     * @param listFileInfo Information of the Todo such as description and completion status.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"b1inmeister"},"content":"    private static void readTodo(ArrayList\u003cTask\u003e taskList, String listFileInfo) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"b1inmeister"},"content":"        String[] infoParts \u003d splitInfo(listFileInfo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"b1inmeister"},"content":"        Todo newTodo \u003d new Todo(getDescription(infoParts));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"b1inmeister"},"content":"        newTodo.setStatusIcon(getStatusIcon(infoParts));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"b1inmeister"},"content":"        Tasklist.insertIntoTaskList(taskList, newTodo, true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"b1inmeister"},"content":"     * Adds a Deadline from the provided text file to the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the Deadline will be inserted into.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"b1inmeister"},"content":"     * @param listFileInfo Information of the Deadline such as description, completion","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"b1inmeister"},"content":"     *                     status and deadline timing.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"b1inmeister"},"content":"    private static void readDeadline(ArrayList\u003cTask\u003e taskList, String listFileInfo) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"b1inmeister"},"content":"        String[] infoParts \u003d splitInfo(listFileInfo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"b1inmeister"},"content":"        Deadline newDeadline \u003d new Deadline(getDescription(infoParts), getBy(infoParts));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"b1inmeister"},"content":"        newDeadline.setStatusIcon(getStatusIcon(infoParts));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"b1inmeister"},"content":"        Tasklist.insertIntoTaskList(taskList, newDeadline, true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"b1inmeister"},"content":"     * Adds an Event from the provided text file to the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks that the Event will be inserted into.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"b1inmeister"},"content":"     * @param listFileInfo Information of the Event such as description, completion","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"b1inmeister"},"content":"     *                     status as well as start and end timings.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"b1inmeister"},"content":"    private static void readEvent(ArrayList\u003cTask\u003e taskList, String listFileInfo) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"b1inmeister"},"content":"        String[] infoParts \u003d splitInfo(listFileInfo);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"b1inmeister"},"content":"        Event newEvent \u003d new Event(getDescription(infoParts), getFrom(infoParts), getTo(infoParts));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"b1inmeister"},"content":"        newEvent.setStatusIcon(getStatusIcon(infoParts));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"b1inmeister"},"content":"        Tasklist.insertIntoTaskList(taskList, newEvent, true);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"b1inmeister"},"content":"     * Splits the information into its individual components.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"b1inmeister"},"content":"     * These include description, as well as deadline, start and end timings,","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"b1inmeister"},"content":"     * depending on the type of Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"b1inmeister"},"content":"     * @param listFileInfo Information of the Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"b1inmeister"},"content":"     * @return Array of Strings where each index contains an individual","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"b1inmeister"},"content":"     *         component of information from the Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"b1inmeister"},"content":"    private static String[] splitInfo(String listFileInfo) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"b1inmeister"},"content":"        return listFileInfo.split(SPLIT_PARAMETER);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"b1inmeister"},"content":"     * Gets the description of a Task from the array of individual information components.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"b1inmeister"},"content":"     * @param infoParts Array of the individual components of the information of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"b1inmeister"},"content":"     * @return Description of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"b1inmeister"},"content":"    private static String getDescription(String[] infoParts) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"b1inmeister"},"content":"        return infoParts[LISTFILE_DESCRIPTION].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"b1inmeister"},"content":"     * Gets the completion status of a Task from the array of individual information components.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"b1inmeister"},"content":"     * @param infoParts Array of the individual components of the information of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"b1inmeister"},"content":"     * @return Completion status of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"b1inmeister"},"content":"    private static String getStatusIcon(String[] infoParts) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"b1inmeister"},"content":"        return infoParts[LISTFILE_STATUSICON].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"b1inmeister"},"content":"     * Gets the deadline timing of a Deadline from the array of individual information components.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"b1inmeister"},"content":"     * @param infoParts Array of the individual components of the information of the Deadline chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"b1inmeister"},"content":"     * @return Deadline timing of the Deadline chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"b1inmeister"},"content":"    private static String getBy(String[] infoParts) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"b1inmeister"},"content":"        return infoParts[LISTFILE_BY].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"b1inmeister"},"content":"     * Gets the start timing of an Event from the array of individual information components.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"b1inmeister"},"content":"     * @param infoParts Array of the individual components of the information of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"b1inmeister"},"content":"     * @return Start timing of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"b1inmeister"},"content":"    private static String getFrom(String[] infoParts) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"b1inmeister"},"content":"        return infoParts[LISTFILE_FROM].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"b1inmeister"},"content":"     * Gets the end timing of an Event from the array of individual information components.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"b1inmeister"},"content":"     * @param infoParts Array of the individual components of the information of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"b1inmeister"},"content":"     * @return End timing of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"b1inmeister"},"content":"    private static String getTo(String[] infoParts) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"b1inmeister"},"content":"        return infoParts[LISTFILE_TO].trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"b1inmeister"},"content":"     * Sets the completion status of a Task to the same as the format in the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"b1inmeister"},"content":"     * @param task Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"b1inmeister"},"content":"     * @return Completion status symbol. (X or _)","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"b1inmeister"},"content":"    private static char getTaskType(Task task) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"b1inmeister"},"content":"        return task.getTaskType();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"b1inmeister"},"content":"     * Secondary Methods (for writeTextFile)","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"b1inmeister"},"content":"     * Inputs a Task and creates a default String format for writing to the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"b1inmeister"},"content":"     * The information in this String, which is the completion status and description,","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"b1inmeister"},"content":"     * are common among all types of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"b1inmeister"},"content":"     * @param task Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"b1inmeister"},"content":"     * @param taskType Type of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"b1inmeister"},"content":"     * @return String of the common information of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"b1inmeister"},"content":"    private static String makeDefaultString(Task task, char taskType) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"b1inmeister"},"content":"        return taskType + LISTFILE_DIVIDER + task.getStatusIcon() +","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"b1inmeister"},"content":"                LISTFILE_DIVIDER + task.getDescription();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"b1inmeister"},"content":"     * Gets the deadline timing of a Deadline.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"b1inmeister"},"content":"     * @param deadline Deadline chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"b1inmeister"},"content":"     * @return Deadline timing of the Deadline chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"b1inmeister"},"content":"    private static String getBy(Deadline deadline) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"b1inmeister"},"content":"        return deadline.getBy();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"b1inmeister"},"content":"     * Gets the start timing of an Event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"b1inmeister"},"content":"     * @param event Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"b1inmeister"},"content":"     * @return Start timing of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"b1inmeister"},"content":"    private static String getFrom(Event event) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"b1inmeister"},"content":"        return event.getFrom();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"b1inmeister"},"content":"     * Gets the end timing of an Event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"b1inmeister"},"content":"     * @param event Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"b1inmeister"},"content":"     * @return End timing of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"b1inmeister"},"content":"    private static String getTo(Event event) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"b1inmeister"},"content":"        return event.getTo();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"b1inmeister"},"content":"     * Error Printing Method","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"b1inmeister"},"content":"     * Prints error messages when there are issues with","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"b1inmeister"},"content":"     * reading or writing to the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"b1inmeister"},"content":"     * @param message Error message to print.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"b1inmeister"},"content":"    private static void printFileExceptionsMessage(String message) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":383}},{"path":"src/main/java/amadinho/storage/StorageConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Contains constants that are used only within the Storage class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"public class StorageConstants {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"    protected static final String LISTFILE_PATHNAME \u003d \"./data/amadinho.txt\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    protected static final String LISTFILE_DIVIDER \u003d \" | \";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"    protected static final String LISTFILE_NEWLINE \u003d \"\\n\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"    protected static final String SPLIT_PARAMETER \u003d \"\\\\|\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LISTFILE_STATUSICON \u003d 1;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LISTFILE_DESCRIPTION \u003d 2;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LISTFILE_BY \u003d 3;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LISTFILE_FROM \u003d 3;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"    protected static final int LISTFILE_TO \u003d 4;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"    protected static final char CHAR_TODO \u003d \u0027T\u0027;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"    protected static final char CHAR_DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"    protected static final char CHAR_EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"    protected static final String STRING_SPACE \u003d \"T\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"    protected static final String STRING_DEADLINE \u003d \"D\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"    protected static final String STRING_EVENT \u003d \"E\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_FILENOTFOUND \u003d \"File not found. Just give up.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_IO \u003d \"Error creating file / directory. Just give up.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_WRITEFAILED \u003d \"Error writing to file. Just give up.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ERROR_READFAILED \u003d \"Error reading file. Just give up.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":30}},{"path":"src/main/java/amadinho/tasklist/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.tasklist;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"import static amadinho.tasklist.TasklistConstants.*;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":"import amadinho.exceptions.EmptyList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"import amadinho.main.Constants;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"import amadinho.parser.ParserConstants;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"import amadinho.ui.Ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"import amadinho.parser.Parser;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"import amadinho.storage.Storage;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":" * Contains methods that manipulate the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"public class Tasklist {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"     * Primary taskList Manipulation Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"     * Checks if list is empty, and formats the output for printing.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"     * @param list List of Tasks to print out.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"     * @param isFind Boolean value to indicate what this method is used for","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"     *               isFind \u003d\u003d true --\u003e Method is used during execution of \"find\" command","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"     *               isFind \u003d\u003d false --\u003e Method is used during execution of \"list\" command","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"    public static void executeList(ArrayList\u003cTask\u003e list, boolean isFind) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"            if (list.isEmpty()) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"                isErrorListOrFind(isFind);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"            } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"                System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"                isIntroListOrFind(isFind);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"                Tasklist.printList(list);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"                System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"b1inmeister"},"content":"        } catch (EmptyList e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"b1inmeister"},"content":"            Parser.errorPrinting(e);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"b1inmeister"},"content":"     * Prints each Task in the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"b1inmeister"},"content":"     * @param list List of Tasks to print out.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"b1inmeister"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"b1inmeister"},"content":"        int taskCounter \u003d Constants.LIST_COUNTER_START;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"b1inmeister"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"b1inmeister"},"content":"            System.out.println(taskCounter + Constants.LIST_DOT + task);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"b1inmeister"},"content":"            taskCounter++;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"b1inmeister"},"content":"     * Marks or unmarks a Task that is within the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"b1inmeister"},"content":"     * If the information parameter does not contain a number, NumberFormatException is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"b1inmeister"},"content":"     * If number provided in the information parameter exceeds the number of Tasks","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"b1inmeister"},"content":"     * in the list, IndexOutOfBoundsException is thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"b1inmeister"},"content":"     * @param information Index of Task to be marked or unmarked.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"b1inmeister"},"content":"     * @param toMark Boolean value to determine whether to mark or unmark the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"b1inmeister"},"content":"     *               toMark \u003d\u003d true --\u003e Task is to be marked.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"b1inmeister"},"content":"     *               toMark \u003d\u003d false --\u003e Task is to be unmarked.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"b1inmeister"},"content":"    public static void executeMark(ArrayList\u003cTask\u003e taskList, String information, boolean toMark) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"b1inmeister"},"content":"        int taskCount;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"b1inmeister"},"content":"            taskCount \u003d Integer.parseInt(information);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"b1inmeister"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"b1inmeister"},"content":"            Parser.printNumberFormatExceptionMessage(ParserConstants.COMMAND_MARK);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"b1inmeister"},"content":"            return;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"b1inmeister"},"content":"        try {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"b1inmeister"},"content":"            Task taskToMark \u003d taskList.get(taskCount - Constants.ARRAY_INCREMENT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"b1inmeister"},"content":"            if (toMark) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"b1inmeister"},"content":"                taskToMark.markAsDone();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"b1inmeister"},"content":"            } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"b1inmeister"},"content":"                taskToMark.markAsUndone();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"b1inmeister"},"content":"            }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"b1inmeister"},"content":"            Storage.writeToTextFile(taskList);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"b1inmeister"},"content":"            Ui.markCommandMessage(taskCount, taskToMark, toMark);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"b1inmeister"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"b1inmeister"},"content":"            Parser.printIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"b1inmeister"},"content":"     * Inserts a Task to the end of the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"b1inmeister"},"content":"     * @param newTask Task to be added to the list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"b1inmeister"},"content":"     * @param isStart Boolean value to determine the purpose of using this method.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"b1inmeister"},"content":"     *                isStart \u003d\u003d true --\u003e Method is used to transfer data from a provided text file to","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"b1inmeister"},"content":"     *                                   the program.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"b1inmeister"},"content":"     *                isStart \u003d\u003d false --\u003e Method is used to insert a Task that is provided from user input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"b1inmeister"},"content":"    public static void insertIntoTaskList(ArrayList\u003cTask\u003e taskList, Task newTask, boolean isStart) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"b1inmeister"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"b1inmeister"},"content":"        if (!isStart) {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"b1inmeister"},"content":"            Ui.addCommandMessage(taskList, newTask);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"b1inmeister"},"content":"     * Secondary Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"b1inmeister"},"content":"     * Throws EmptyList with an error message that is dependent on the command input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"b1inmeister"},"content":"     * @param isFind Boolean value to indicate what this method is used for","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"b1inmeister"},"content":"     *               isFind \u003d\u003d true --\u003e \"find\" command was the input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"b1inmeister"},"content":"     *               isFind \u003d\u003d false --\u003e \"list\" command was the input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"b1inmeister"},"content":"     * @throws EmptyList If the list provided is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"b1inmeister"},"content":"    private static void isErrorListOrFind(boolean isFind) throws EmptyList {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"b1inmeister"},"content":"        if (isFind) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"b1inmeister"},"content":"            errorEmptyList(MESSAGE_FIND_FAILED);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"b1inmeister"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"b1inmeister"},"content":"            errorEmptyList(MESSAGE_LIST_EMPTY);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"b1inmeister"},"content":"     * Prints the intro message for list printing, depending on the command input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"b1inmeister"},"content":"     * @param isFind Boolean value to indicate the command input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"b1inmeister"},"content":"     *               isFind \u003d\u003d true --\u003e \"find\" command was the input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"b1inmeister"},"content":"     *               isFind \u003d\u003d false --\u003e \"list\" command was the input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"b1inmeister"},"content":"    private static void isIntroListOrFind(boolean isFind) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"b1inmeister"},"content":"        if (isFind) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"b1inmeister"},"content":"            System.out.println(MESSAGE_FIND_INTRO);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"b1inmeister"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"b1inmeister"},"content":"            System.out.println(MESSAGE_LIST_INTRO);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"b1inmeister"},"content":"     * Exception Handling Method for EmptyList","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"b1inmeister"},"content":"     * Throws EmptyList.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"b1inmeister"},"content":"     * @param message Error message to be paired with the EmptyList thrown.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"b1inmeister"},"content":"     * @throws EmptyList If the list of Tasks is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"b1inmeister"},"content":"    public static void errorEmptyList(String message) throws EmptyList {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"b1inmeister"},"content":"        throw new EmptyList(message);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":170}},{"path":"src/main/java/amadinho/tasklist/TasklistConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.tasklist;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Contains constants that are used only within the Tasklist class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"public class TasklistConstants {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_FIND_INTRO \u003d \"Tasks found:\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_FIND_FAILED \u003d \"No tasks found. Skill issue.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_LIST_INTRO \u003d \"Tasks in the list:\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_LIST_EMPTY \u003d \"The list is empty. Lazy bum.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"b1inmeister":11}},{"path":"src/main/java/amadinho/tasktypes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.tasktypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Subclass of Task for Tasks that","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * have a provided deadline.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    protected String by;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"     * Constructor for a Deadline to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"     * @param description Description of the Deadline to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"     * @param by Date / time that this Deadline must be completed by.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"        super(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"     * Getter function for the date and time that a Deadline must be completed by.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"     * @return Date / time that the Deadline chosen must be completed by.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"        return by;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"     * Converts a Deadline to a String type for printing purposes.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"     * Builds upon the similarly named method in the Task superclass.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"     * @return String version of the Deadline chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"b1inmeister":41}},{"path":"src/main/java/amadinho/tasktypes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.tasktypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Subclass of Task for Tasks that have","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * a provided start and end time.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    protected String from;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"    protected String to;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"     * Constructor for an Event to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"     * @param description Description of the Event to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"     * @param from Start date / time of this Event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"     * @param to End date / time of this Event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"        super(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"     * Getter function for the start date and time of an Event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"     * @return Start date / time of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"        return from;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"     * Getter function for the end date and time of an Event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"     * @return End date / time of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"        return to;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"b1inmeister"},"content":"     * Converts an Event to a String type for printing purposes.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"b1inmeister"},"content":"     * Builds upon the similarly named method in the Task superclass.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"b1inmeister"},"content":"     * @return String version of the Event chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"b1inmeister"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"b1inmeister"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"b1inmeister"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"b1inmeister":53}},{"path":"src/main/java/amadinho/tasktypes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.tasktypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Custom data type that contains data of each Task that","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * the user wants to add to their list of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"    private static final int TASKTYPE_POSITION \u003d 1;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"     * Constructor for a Task to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"     * @param description Description of the task to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"     * Getter function for the description within a Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"     * @return Description of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"        return description;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"     * Getter function for the completion status of a Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"     * X means complete, while _ means incomplete.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"     * @return Completion status of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"        return (isDone ? \"X\" : \"_\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"b1inmeister"},"content":"     *  Getter function of the type of a Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"b1inmeister"},"content":"     *  T means todo, D means deadline, and E means event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"b1inmeister"},"content":"     * @return Type of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"b1inmeister"},"content":"    public char getTaskType() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"b1inmeister"},"content":"        return toString().charAt(TASKTYPE_POSITION);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"b1inmeister"},"content":"     * Setter function of the completion status of a Task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"b1inmeister"},"content":"     * This method is called when transferring data of an existing list of Tasks","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"b1inmeister"},"content":"     * from a provided text file to the program.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"b1inmeister"},"content":"     * @param statusIcon Completion status of the Task to be added.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"b1inmeister"},"content":"    public void setStatusIcon(String statusIcon) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"b1inmeister"},"content":"        if (statusIcon.equals(\"X\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"b1inmeister"},"content":"            markAsDone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"b1inmeister"},"content":"        } else if (statusIcon.equals(\"_\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"b1inmeister"},"content":"            markAsUndone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"b1inmeister"},"content":"     * Marks the chosen Task as completed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"b1inmeister"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"b1inmeister"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"b1inmeister"},"content":"     * Marks the chosen Task as incomplete.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"b1inmeister"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"b1inmeister"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"b1inmeister"},"content":"     * Converts a Task to a String type for printing purposes.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"b1inmeister"},"content":"     * @return String version of the Task chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"b1inmeister"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"b1inmeister"},"content":"    public String toString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"b1inmeister"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"b1inmeister":91}},{"path":"src/main/java/amadinho/tasktypes/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.tasktypes;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Subclass of Task for Tasks that do","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" * not have a provided deadline.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"     * Constructor for a Todo to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"     * @param description Description of the Todo to be instantiated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"        super(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"     * Converts a Todo to a String type for printing purposes.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"     * Builds upon the similarly named method in the Task superclass.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"     * @return String version of the Todo chosen.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"b1inmeister":28}},{"path":"src/main/java/amadinho/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"import static amadinho.ui.UiConstants.*;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":"import amadinho.main.Constants;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"import amadinho.tasktypes.Task;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":" * Contains methods used to interact with the user of Amadinho.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"public class Ui {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"     * Input Reading Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"     * Reads the first word in the command input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"     * @param in Command input from the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"     * @return First word in the command input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"b1inmeister"},"content":"    public static String readCommand(Scanner in) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"b1inmeister"},"content":"        return in.next();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"b1inmeister"},"content":"     * Reads the remaining words in the command input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"b1inmeister"},"content":"     * @param in Command input from the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"b1inmeister"},"content":"     * @param isStart Boolean value to determine the purpose of using this method.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"b1inmeister"},"content":"     *                isStart \u003d\u003d true --\u003e Method is used to transfer data from a provided text file to","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"b1inmeister"},"content":"     *                                   the program. In this case, the command input comes from","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"b1inmeister"},"content":"     *                                   the provided text file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"b1inmeister"},"content":"     *                isStart \u003d\u003d false --\u003e Method is used to read the command input from the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"b1inmeister"},"content":"     * @return Remaining words in the command input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"b1inmeister"},"content":"    public static String readInfo(Scanner in, boolean isStart) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"b1inmeister"},"content":"        if (isStart) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"b1inmeister"},"content":"            return in.nextLine();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"b1inmeister"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"b1inmeister"},"content":"            return in.nextLine().trim();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"b1inmeister"},"content":"     * Checks if the \"bye\" command is inputted, which means","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"b1inmeister"},"content":"     * that the user wants to terminate the program.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"b1inmeister"},"content":"     * @param userCommand Command inputted by the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"b1inmeister"},"content":"     * @return Boolean value that indicates if the \"bye\" command is inputted.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"b1inmeister"},"content":"    public static boolean isCompleted(String userCommand) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"b1inmeister"},"content":"        return userCommand.equals(COMMAND_BYE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"b1inmeister"},"content":"    /*","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"b1inmeister"},"content":"     * Message Printing Methods","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"b1inmeister"},"content":"     * Message to display when the program is started.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"b1inmeister"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(MESSAGE_WELCOME);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"b1inmeister"},"content":"     * Message to display when the program is terminated.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"b1inmeister"},"content":"    public static void exitMessage() {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(MESSAGE_EXIT);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"b1inmeister"},"content":"     * Message to display when marking or unmarking a Task is successful.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"b1inmeister"},"content":"     * @param taskCount Position of the Task that was marked or unmarked within the list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"b1inmeister"},"content":"     * @param taskToMark Data of the Task that was marked or unmarked.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"b1inmeister"},"content":"     * @param toMark Boolean value to determine if marking or unmarking has occurred.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"b1inmeister"},"content":"     *               toMark \u003d\u003d true --\u003e Task was marked.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"b1inmeister"},"content":"     *               toMark \u003d\u003d false --\u003e Task was unmarked.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"b1inmeister"},"content":"    public static void markCommandMessage(int taskCount, Task taskToMark, boolean toMark) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"b1inmeister"},"content":"        if (toMark) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"b1inmeister"},"content":"            System.out.println(MESSAGE_MARK_COMPLETE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"b1inmeister"},"content":"        } else {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"b1inmeister"},"content":"            System.out.println(MESSAGE_UNMARK_COMPLETE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"b1inmeister"},"content":"        }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(taskCount + Constants.LIST_DOT + taskToMark);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"b1inmeister"},"content":"     * Message to display when deleting a Task from the list is successful.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"b1inmeister"},"content":"     * @param taskToDelete Data of the Task that was deleted from the list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"b1inmeister"},"content":"    public static void deleteCommandMessage(ArrayList\u003cTask\u003e taskList, Task taskToDelete) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(MESSAGE_DELETED_TASK);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.LIST_SPACE + taskToDelete);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(printTotalTasks(taskList));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"b1inmeister"},"content":"     * Message to display when adding a Task to the list is successful.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"b1inmeister"},"content":"     * @param newTask Data of the Task that was added to the list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"b1inmeister"},"content":"    public static void addCommandMessage(ArrayList\u003cTask\u003e taskList, Task newTask) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(MESSAGE_ADDED_TASK);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.LIST_SPACE + newTask);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(printTotalTasks(taskList));","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"b1inmeister"},"content":"        System.out.println(Constants.BORDER_LINE);","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"b1inmeister"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"b1inmeister"},"content":"     * Returns a String of the total number of Tasks in the list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"b1inmeister"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"b1inmeister"},"content":"     * @param taskList List of Tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"b1inmeister"},"content":"     * @return Message indicating the number of Tasks in the list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"b1inmeister"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"b1inmeister"},"content":"    public static String printTotalTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"b1inmeister"},"content":"        int totalTasks \u003d taskList.size();","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"b1inmeister"},"content":"        return MESSAGE_TOTALTASKS + totalTasks;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"b1inmeister"},"content":"    }","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":144}},{"path":"src/main/java/amadinho/ui/UiConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"package amadinho.ui;","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"/**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":" * Contains constants that are used only within the Ui class.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":" */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"public class UiConstants {","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"    protected static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_WELCOME \u003d \"\"\"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"            To add new Tasks                    todo / deadline / event","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"            To mark Tasks as complete or not    mark / unmark","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"            To list all Tasks                   list","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"            To search for Tasks                 find","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"            To delete Tasks                     delete","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"            To give up and exit                 bye\"\"\";","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_EXIT \u003d \"Congrats! You have given up.\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_MARK_COMPLETE \u003d \"Task marked as done:\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_UNMARK_COMPLETE \u003d \"Task marked as not done:\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_DELETED_TASK \u003d \"Task deleted:\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_ADDED_TASK \u003d \"Task added:\";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"    protected static final String MESSAGE_TOTALTASKS \u003d \"Number of tasks: \";","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":21}},{"path":"text-ui-test/data/amadinho.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"T | _ | tod","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"E | X | even2 | 03 Mar 2025 1854 | 06 Nov 2025 1423","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"b1inmeister":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"b1inmeister"},"content":"list","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"b1inmeister"},"content":"todo","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"b1inmeister"},"content":"todo tod","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"b1inmeister"},"content":"deadline","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"b1inmeister"},"content":"deadline dead1 /by now","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"b1inmeister"},"content":"deadline dead2 /by 2025-02-24 1548","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"b1inmeister"},"content":"event","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"b1inmeister"},"content":"event even1 /from then /to now","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"b1inmeister"},"content":"event even2 /from 2025-03-03 1854 /to 2025-11-06 1423","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"mark a","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"b1inmeister"},"content":"mark 4","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"b1inmeister"},"content":"mark 3","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"b1inmeister"},"content":"mark 1","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"b1inmeister"},"content":"unmark a","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"b1inmeister"},"content":"unmark 4","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"unmark 1","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"b1inmeister"},"content":"list","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"find","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"b1inmeister"},"content":"find no","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"b1inmeister"},"content":"find 2","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"b1inmeister"},"content":"delete","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"b1inmeister"},"content":"delete 4","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"delete 2","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"b1inmeister"},"content":"list","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"b1inmeister"},"content":"bye","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"b1inmeister":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"b1inmeister"},"content":"javac  -cp ..\\src\\main\\java\\amadinho\\main -Xlint:none -d ..\\bin ..\\src\\main\\java\\amadinho\\main\\*.java ..\\src\\main\\java\\amadinho\\exceptions\\*.java ..\\src\\main\\java\\amadinho\\tasktypes\\*.java ..\\src\\main\\java\\amadinho\\ui\\*.java ..\\src\\main\\java\\amadinho\\parser\\*.java ..\\src\\main\\java\\amadinho\\tasklist\\*.java ..\\src\\main\\java\\amadinho\\storage\\*.java","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"b1inmeister"},"content":"java -classpath ..\\bin amadinho.main.Amadinho \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"b1inmeister":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"b1inmeister"},"content":"if ! javac -cp ../src/main/java/amadinho/main -Xlint:none -d ../bin ../src/main/java/amadinho/main/*.java","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"b1inmeister"},"content":"java -classpath ../bin amadinho/main/Amadinho \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"b1inmeister":2,"-":36}}]
