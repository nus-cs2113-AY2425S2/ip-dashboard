{"authorDailyContributionsMap":{"prathisttam":[{"date":"2025-01-24","commitResults":[{"hash":"82acddce751103e39eae5ec81eec327972a7d452","isMergeCommit":false,"messageTitle":"Rename chatbot to Simba and implement greeting and exit","messageBody":"Introduce Simba as the chatbot\u0027s new identity. Add a basic greeting and\nexit message to improve the user experience.\n\nAlso include a decorative ASCII logo for Simba in the greeting.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":10}}}]},{"date":"2025-01-31","commitResults":[{"hash":"c3fd60e74d153480030ebc312adace5d0c575aed","isMergeCommit":false,"messageTitle":"Add Echo game feature and refactor UI handling","messageBody":"The chatbot lacked interactive features beyond displaying messages,\nlimiting user engagement.\n\nKeeping UI logic inside Simba.java and Echo.java leads to redundancy and\n makes it difficult to maintain consistency in formatting.\n\nLet\u0027s introduce an `Echo` class that allows users to play a simple game\nwhere their input is echoed back until they say bye.\n\nLet\u0027s also refactor UI handling into a separate `Ui` class to centralize\n all message formatting and prompts, ensuring consistency and easier\nmaintenance.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":24}}},{"hash":"6ca65df11ead4b958642d1d4185ea3599d9baf24","isMergeCommit":false,"messageTitle":"Add AllTasksManager and Task Classes to store and retrieve tasks","messageBody":"There is currently no way for users to add and view tasks in the\nchatbot.\n\nLet\u0027s add an AllTasksManager class to handle task storage and retrieval.\nTasks are stored in an array and can be added and listed sequentially.\n\nUsing an array allows simple indexing and ordering of tasks without\nrequiring external dependencies. Future enhancements may introduce\ndynamic data structures for scalability.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":2}}},{"hash":"1f26cddbde5dbf61b43a79d0cf22a198d1d6c98c","isMergeCommit":false,"messageTitle":"Enable marking and unmarking of tasks as completed","messageBody":"Users cannot currently track task completion status. This change allows\ntasks to be marked as completed or incomplete, improving task\nmanagement.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":6}}},{"hash":"9e347fc9b0934db04330e8d4810c2d7e82283265","isMergeCommit":false,"messageTitle":"Add Javadoc comments across the codebase for clarity","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":8}}}]},{"date":"2025-02-07","commitResults":[{"hash":"9c02e140befec0c884eb3cb01d5ec6df0a5a58a2","isMergeCommit":false,"messageTitle":"Add Todo, Event and Deadlines subclasses of Task","messageBody":"Task management currently does not differentiate between different types\nof tasks. Additionally, deeply nested conditional logic in\nstartTaskManagement reduces readability.\n\nLet\u0027s introduce three task types:\n- ToDo: Simple tasks without a deadline.\n- Deadline: Tasks with a specific due date.\n- Event: Tasks that occur within a specific time range.\n\nTo improve code clarity, extract handleMark and handleUnmark methods\nfrom startTaskManagement, reducing nested conditionals.\n\nUsing inheritance improves code organization and allows polymorphic\nhandling of tasks and enhances usability by providing clear distinctions\nbetween task types.\n","tags":["Level-4","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":30}}},{"hash":"dda8e690b38c10939421280124ccee6e2599717a","isMergeCommit":false,"messageTitle":"Refactor task creation: Remove magic numbers and redundant prints","messageBody":"","tags":["A-CodeQuality-v1.2"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":13}}}]},{"date":"2025-02-14","commitResults":[{"hash":"c77fcfea982e3119cf175a1d21f43903330e8fda","isMergeCommit":false,"messageTitle":"Chatbot error handling: prevent crashes and improve user feedback","messageBody":"Error handling relies solely on printing messages, making it\ninconsistent and difficult to manage. For example, invalid commands\n(e.g., deadline /by) do not terminate execution properly, leading to\nunintended behavior instead of prompting the user to correct the input.\n\nUsers need clear guidance when they enter incorrect commands. Unexpected\ncrashes break the user experience.\n\nLet\u0027s add structured exception handling (SimbaException) to prevent\ncrashes and guide users.\n\nWe now throw exceptions when parameters are missing or invalid, ensuring\nthat incorrect inputs do not proceed further.\n","fileTypesAndContributionMap":{"java":{"insertions":130,"deletions":57}}},{"hash":"4c377f99764821da8aea2e4dbdcdbc34d62957a9","isMergeCommit":false,"messageTitle":"Chatbot error handling: add global exception catch for unexpected errors","messageBody":"Currently, only known user input errors (SimbaException) are handled,\nbut unexpected runtime errors (e.g., NullPointerException) can crash\nthe program.\n\nCrashes disrupt the user experience and make debugging harder.\n\nLet\u0027s add a global exception catch (`Exception e`) to handle all\nunexpected errors. This prevents abrupt crashes and provides a clear\nerror message, improving stability.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":14}}},{"hash":"eb7cafaaa6049c513e2ed6607df19b8305206b34","isMergeCommit":false,"messageTitle":"Revert \"Chatbot error handling: add global exception catch for unexpected errors\"","messageBody":"This reverts commit 4c377f99764821da8aea2e4dbdcdbc34d62957a9.\n","tags":["Level-5","A-Jar","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":20}}}]},{"date":"2025-02-21","commitResults":[{"hash":"d965738b79946e5efb126789b364097a6f3553fa","isMergeCommit":false,"messageTitle":"AllTasksManager: Add delete function and refactor to use ArrayList","messageBody":"The task list is implemented using a fixed-size array, which limits the\nscalability of task management. Additionally, there is no functionality\nto delete tasks, leading to a cumbersome user experience.\n\nLet\u0027s refactor the code to use ArrayList\u003cTask\u003e for storing tasks,\nproviding dynamic sizing and simplifying element manipulation. This\nenhances maintainability and scalability.\n\nAdditionally, let\u0027s add a delete function that leverages the ArrayList\u0027s\nbuilt-in methods to easily remove tasks by index. This improves the user\nexperience by allowing efficient task management.\n\nArrayList is chosen over other collections due to its indexed access and\ndynamic resizing, which are ideal for maintaining the order of tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":49}}}]},{"date":"2025-03-03","commitResults":[{"hash":"c4e59caed05438e1ec4f85fd6a41bd2c4e74d3ec","isMergeCommit":false,"messageTitle":"Add storage to save user tasks and reload saved tasks when chatbot restarts","messageBody":"User data on tasks is lost when chatbot restarts. User has to re-enter\ntasks each time they log-in which is impractical.\n\nlet\u0027s implement automatic saving of tasks whenever the task list changes\nand load data from a file when the chatbot starts.\n\nThe file will be stored at ./data/duke.txt, and the chatbot will handle\ncases where the file or directory does not exist.\n\nAdditionally, file paths are specified in a platform-independent way\nto ensure compatibility across different operating systems.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":315,"deletions":62}}}]},{"date":"2025-03-04","commitResults":[{"hash":"86911ab056daa581cb29b38ee3c775c34dce0e71","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-6\u0027","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{}}]},{"date":"2025-03-06","commitResults":[{"hash":"d20d6859d915e1ab602808e52b408b636668aa47","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/simba/AllTasksManager.java\n","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"ec5d5d1d5bc0e70f7d61c4f42fb0bc531a42bea6","isMergeCommit":false,"messageTitle":"Fix bug caused when merging branches","messageBody":"SaveTasksToStorage function used fixed size array instead of dynamic\narray.\n\nLet\u0027s update the function to use dynamic array similar to the rest of\nthe codebase to prevent the program from crashing\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":2,"deletions":2}}}]},{"date":"2025-03-13","commitResults":[{"hash":"8b47303533eb7ef6b250128cef635028f7915602","isMergeCommit":false,"messageTitle":"Refactor AllTasksManager UI handling to Ui.java class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":2},"java":{"insertions":117,"deletions":82}}},{"hash":"fc0f9a46c4c742b75c5d2f36c90770ee491176b1","isMergeCommit":false,"messageTitle":"Refactor Echo class UI handling to Ui.java class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":4},"java":{"insertions":6,"deletions":6}}},{"hash":"e50be1f9ce146af0381ec2b39552c535261becd5","isMergeCommit":false,"messageTitle":"Bug fix for storage of Deadlines and Events","messageBody":"Deadlines and events were stored in an incorrect format, causing data\nretrieval failures on program restart.\n\nRe-formatted deadline and event tasks so they can be saved and reloaded\nproperly.\n","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":2},"java":{"insertions":6,"deletions":19}}},{"hash":"8cb63db156b02410a9ddd86e1932c8cf0cfb46ae","isMergeCommit":false,"messageTitle":"Add Parser class to deal with making sense of the user command","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":17,"deletions":1},"java":{"insertions":191,"deletions":192}}},{"hash":"71abce49054cd7a258f06bc9f29272bf9d742a24","isMergeCommit":false,"messageTitle":"Move command processing from AllTasksManager to parser to enhance user input processing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":22},"java":{"insertions":54,"deletions":61}}},{"hash":"2b3ce210495879fa8c54cea7dbeed8b7294994a8","isMergeCommit":false,"messageTitle":"Add find functionality to give users a way to find a task by searching for a keyword in the task description","messageBody":"","tags":["Level-9","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":21,"deletions":1}}},{"hash":"89a30b1dfb6dbe272c562bc9fa18ec357dcd3a65","isMergeCommit":false,"messageTitle":"Add missing JavaDoc comments for all classes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":3},"java":{"insertions":116,"deletions":63}}},{"hash":"131f18feeae59c803832e5f2bd39f731ae39781b","isMergeCommit":true,"messageTitle":"Merge pull request #1 from prathisttam/branch-Level-9","messageBody":"Add find functionality to give users a way to find a task by searching","fileTypesAndContributionMap":{}},{"hash":"d7f77549c90fc80ec8464faedbae1b1f6722760c","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-JavaDoc","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b2862f4080b7490cc1bd10f4ceadbe6310868746","isMergeCommit":true,"messageTitle":"Merge pull request #2 from prathisttam/branch-A-JavaDoc","messageBody":"Add missing JavaDoc comments for all classes","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}}]},{"date":"2025-03-14","commitResults":[{"hash":"030e98fa9c6c8c2b328e69b66aa0ac58f73dfea2","isMergeCommit":false,"messageTitle":"Fix bug to close scanner upon pressing 3","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":11,"deletions":0}}},{"hash":"db6c939dedd1eb51c3c0b902eb60ee1440760605","isMergeCommit":false,"messageTitle":"Refactor the classes into suitable java packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":6}}},{"hash":"dfea17a8433f7d6f443c50e26fe62e92272467fb","isMergeCommit":false,"messageTitle":"Add a User Guide to the project","messageBody":"User Guide with instructions, features, and command examples improves\nuser experience with the product.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":3},"java":{"insertions":10,"deletions":23},"md":{"insertions":196,"deletions":14}}},{"hash":"da997b708918da0fbeddfb1c1e01f5a95c5362b3","isMergeCommit":false,"messageTitle":"Add Javadoc comments to overridden methods","messageBody":"Overriden methods in the inheritted classes modify the behavior of the\nparent class, but without Javadoc, it is unclear how they differ.\n\nLet\u0027s add JavaDoc comments to overriden methods to provide clarity on\nmethod\u0027s modified behaviour compared to its parent class and improve\nreadability.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":22,"deletions":4},"md":{"insertions":9,"deletions":2}}},{"hash":"34feeee014c69a05027539e029d5eaefd954d08f","isMergeCommit":false,"messageTitle":"Format codebase to follow Java coding standards","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":2},"java":{"insertions":26,"deletions":24}}},{"hash":"64b5d5cb4868727381e5f22d7154befe4b94c5d5","isMergeCommit":false,"messageTitle":"Update README with link to jar file release","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"f9d909ae0a54cf9cc648e302436ef95340d4ea90","isMergeCommit":false,"messageTitle":"Update instructions on README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":3}}}]}]},"authorFileTypeContributionMap":{"prathisttam":{"java":863,"md":195,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":18}},"authorContributionVariance":{"prathisttam":22338.322},"authorDisplayNameMap":{"prathisttam":"CS2113-T11a-3 MANI..STTA"}}
