[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"# Bob project template","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"This is a project template for a greenfield Java project. It\u0027s named after [the famous builder](https://en.wikipedia.org/wiki/Bob_the_Builder), Bob. Given below are instructions on how to use it.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"   Hello I\u0027m Bob","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"   What can I do for you?","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"-":18,"jwyk":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"# Bob User Guide","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"## Introduction","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"**Bob** is a desktop based **Command Line Interface** (CLI) chatbot designed to help its users manage and keep","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"track of their tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"- [Features](#features)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"    1. [Adding Tasks](#1-adding-tasks)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"        1. [Adding Todos](#adding-a-todo-task-todo)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"        2. [Adding Deadlines](#adding-a-deadline-task-deadline)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"        3. [Adding Events](#adding-an-event-task-event)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"    2. [Viewing Tasks](#2-viewing-tasks)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"        1. [Listing All Tasks](#listing-tasks-list)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"        2. [Finding Tasks](#finding-tasks-find)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    3. [Marking Tasks](#3-marking-tasks)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"        1. [Mark as Done](#marking-tasks-mark)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"        2. [Mark as Unfinished](#unmarking-tasks-unmark)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"    4. [Deleting Tasks](#4-deleting-tasks)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    5. [Exiting the Bot](#5-exit)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"- [Saving and Loading](#saving-and-loading)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"## Quick Start","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"2. Download the `Bob.jar` file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"3. Open the command prompt or terminal, and `cd` to the directory containing `Bob.jar","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"4. Run the following line to start Bob:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":" ```sh","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":" java -jar Bob.jar","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":" ```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"5. You can now enter commands to use **Bob**.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"## Features","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"### 1. Adding Tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"There are 3 types of tasks that Bob supports: Todo, Deadline and Event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"#### Adding a Todo Task: `todo`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"Adds a todo task to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"todo description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"todo eat food","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jwyk"},"content":"Okay, we are checking... done! Task added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jwyk"},"content":"added: [T][ ] eat food","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jwyk"},"content":"Current number of tasks: 1","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jwyk"},"content":"#### Adding a Deadline Task: `deadline`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jwyk"},"content":"Adds a task with a due date to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jwyk"},"content":"Due Date Format: `YYYY/MM/DD HHmm`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jwyk"},"content":"- The format above must be strictly followed, else the command will fail.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jwyk"},"content":"deadline description /by YYYY/MM/DD HHmm","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jwyk"},"content":"deadline finish EE2026 project /by 2024/03/15 2359","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jwyk"},"content":"Okay, we are checking... done! Task added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jwyk"},"content":"added: [D][ ] finish EE2026 project (by: Mar 15 2024 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jwyk"},"content":"Current number of tasks: 2","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jwyk"},"content":"#### Adding an Event Task: `event`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jwyk"},"content":"Adds a task with a start date and an end date to the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jwyk"},"content":"Start and End Date Format: `YYYY/MM/DD HHmm`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jwyk"},"content":"- The format above must be strictly followed, else the command will fail.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jwyk"},"content":"event description /from YYYY/MM/DD HHmm /to YYYY/MM/DD HHmm","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jwyk"},"content":"event Semester 2 /from 2025/01/13 0000 /to 2025/05/10 2359","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jwyk"},"content":"Okay, we are checking... done! Task added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jwyk"},"content":"added: [E][ ] Semester 2 (from: Jan 13 2025 0000 to: May 10 2025 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jwyk"},"content":"Current number of tasks: 8","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jwyk"},"content":"### 2. Viewing Tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jwyk"},"content":"#### Listing Tasks: `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jwyk"},"content":"Lists all current tasks in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jwyk"},"content":"1. [D][ ] finish EE2026 project (by: Mar 15 2024 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jwyk"},"content":"2. [E][ ] Semester 2 (from: Jan 13 2025 0000 to: May 10 2025 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jwyk"},"content":"#### Finding Tasks: `find`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jwyk"},"content":"Finds and lists all tasks that contain a specific keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jwyk"},"content":"- There must be at least 1 task in the list, else the command will fail.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jwyk"},"content":"- The `find` function will search for any task that contains the keyword in its description, and is case-sensitive.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jwyk"},"content":"find keyword","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jwyk"},"content":"find Semester","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jwyk"},"content":"Tasks containing \"Semester\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jwyk"},"content":"1.[E][ ] Semester 2 (from: Jan 13 2025 0000 to: May 10 2025 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jwyk"},"content":"### 3. Marking Tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jwyk"},"content":"#### Marking Tasks: `mark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jwyk"},"content":"Marks the task at the specified index number as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jwyk"},"content":"- The index given must be within the index boundaries of the list (greater than 0, less than or equal to the list size).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jwyk"},"content":"mark index_num","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jwyk"},"content":"mark 1","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jwyk"},"content":"Okay, we are checking... done! Task marked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jwyk"},"content":"[D][X] finish EE2026 project (by: Mar 15 2024 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jwyk"},"content":"#### Unmarking Tasks: `unmark`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jwyk"},"content":"Unmarks the task at the specified index number as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jwyk"},"content":"- The index given must be within the index boundaries of the list (greater than 0, less than or equal to the list size).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jwyk"},"content":"unmark index_num","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jwyk"},"content":"unmark 1","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jwyk"},"content":"Okay, we are checking... done! Task marked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jwyk"},"content":"[D][ ] finish EE2026 project (by: Mar 15 2024 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jwyk"},"content":"### 4. Deleting Tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"jwyk"},"content":"#### Deleting Tasks: `delete`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jwyk"},"content":"Deletes the task at the specified index number as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jwyk"},"content":"- The index given must be within the index boundaries of the list (greater than 0, less than or equal to the list size).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jwyk"},"content":"delete index_num","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"jwyk"},"content":"**Example**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"jwyk"},"content":"delete 1","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"jwyk"},"content":"Okay, we are checking... done! Task deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"jwyk"},"content":"deleted: [D][ ] finish EE2026 project (by: Mar 15 2024 2359)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"jwyk"},"content":"Current number of tasks: 2","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"jwyk"},"content":"### 5. Exit","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"jwyk"},"content":"#### Exiting the chatbot: `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"jwyk"},"content":"Exits the chatbot.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"jwyk"},"content":"**Usage**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"jwyk"},"content":"```commandline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"jwyk"},"content":"bye","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"jwyk"},"content":"**Expected Output**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"jwyk"},"content":"Bye dude, see you soon again!","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"jwyk"},"content":"____________________________________________________________","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"jwyk"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"jwyk"},"content":"---","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"jwyk"},"content":"## Saving and Loading","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"jwyk"},"content":"Bob automatically **saves** tasks to a text file called `bob.txt` after every command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"jwyk"},"content":"Tasks will be autoloaded from `bob.txt` on startup. Should this file not exist, Bob will automatically create a new file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"jwyk"},"content":"for saving tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"jwyk"},"content":"## Command Summary","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"jwyk"},"content":"| Command      | Format                                                        |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"jwyk"},"content":"|--------------|---------------------------------------------------------------|","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"jwyk"},"content":"| **list**     | `list`                                                        |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"jwyk"},"content":"| **todo**     | `todo description`                                            |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"jwyk"},"content":"| **deadline** | `deadline description /by YYYY/MM/DD HHmm`                    |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"jwyk"},"content":"| **event**    | `event description /from YYYY/MM/DD HHmm /to YYYY/MM/DD HHmm` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"jwyk"},"content":"| **mark**     | `mark index`                                                  |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"jwyk"},"content":"| **unmark**   | `unmark index`                                                |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"jwyk"},"content":"| **delete**   | `delete index`                                                |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"jwyk"},"content":"| **find**     | `find keyword`                                                |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"jwyk"},"content":"| **bye**      | `bye`                                                         |","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"-":21,"jwyk":308}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.parser.Parser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"public class Bob {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"    private static TaskList taskList;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"        Ui.showHi();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"        if (Storage.exists()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"            try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"                Storage.load(taskList);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"                System.out.print(\"Failed to load data. Will start with a new save file.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"        Parser.getInput(taskList);","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":2,"jwyk":26}},{"path":"src/main/java/bob/commands/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":" * Maps each action to an actionString typed in by the user","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"public enum Action {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"    LIST(\"list\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    FIND(\"find\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    private final String actionString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     * Constructs an {@code Action} with the specified command string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"     * @param actionString The string representation of the action.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"    Action(String actionString) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"        this.actionString \u003d actionString;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     * Returns an {@code Action} corresponding to a given input string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"     * @return The corresponding {@code Action} enum value.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If no matching action is found.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"    public static Action fromString(String input) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"        for (Action action : Action.values()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"            //Ignore any case","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"            if (action.actionString.equalsIgnoreCase(input)) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"                return action;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"        throw new BobException(\"No command with text \" + input + \" found\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":47}},{"path":"src/main/java/bob/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     * Returns whether the command signals an exit from the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     * Overrides the default value to indicate application termination.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     * @return true since this command exits the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"        return true;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"     * Executes the bye command by displaying the exit message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list (not used in this command but required by the method signature).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"     * @throws BobException Never thrown in this implementation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"        Ui.showBye();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":33}},{"path":"src/main/java/bob/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":" * Contains the base abstract Command Class","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"     * Returns whether to exit the application","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     * This method is only overridden by the ByeCommand subclass","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"        return false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     * Executes the given command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     * This method is intended to be implemented by","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"     * subclasses to perform its associated actions","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list to which {@code Tasks} is added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    public abstract void execute(TaskList taskList) throws BobException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":28}},{"path":"src/main/java/bob/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.parser.DateParser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Deadline;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" * Represents a command to create and add a Deadline task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    private final Deadline task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * Constructs a DeadlineCommand with the given user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * @param input The full user input string containing the description and deadline.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the input format is incorrect.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    public DeadlineCommand(String input) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"        int taskPosition \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"        if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no description. \" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"                    \"Please add a description.\"); // Missing task description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"        // Split the input to extract the description and deadline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"        String[] dueArray \u003d input.substring(taskPosition).split(\"/by \", 2);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"        if (dueArray.length !\u003d 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay, we are checking... you didn\u0027t type in /by to demarcate the deadline. \" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"                    \"Please write it.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"        String description \u003d dueArray[0].trim(); // Extract and trim description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"        String dueDate \u003d dueArray[1].trim(); // Extract and trim deadline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"        // Parse the deadline string into a LocalDateTime object","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"        LocalDateTime dueLocalDateTime \u003d DateParser.getDate(dueDate);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"        if (dueLocalDateTime \u003d\u003d null) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"The date and time input is not in the correct format. \" +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"                    \"Please input it in: YYYY/MM/dd HHmm\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"        // Create a new Deadline task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"        task \u003d new Deadline(description, dueLocalDateTime);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"     * Executes the command by adding the Deadline task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list to which the Deadline task is added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If an error occurs while adding the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"        taskList.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"        Ui.showAdd(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":62}},{"path":"src/main/java/bob/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import static bob.parser.Parser.convertToInt;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"    protected final int position;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     * Constructs a DeleteCommand object with the specified task position.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     * @param input The user input containing the delete command and task position.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the task position is missing or invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"    public DeleteCommand(String input) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"        int taskPosition \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"        if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no number.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"                    \"Please type a number.\"); //Index doesn\u0027t exist","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"        this.position \u003d convertToInt(input, taskPosition);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"        if (position \u003d\u003d -1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no number.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"                    \"Please type a number.\"); //Alphabetical input","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"     * Executes the delete command by removing the specified task from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list from which the task will be deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If an error occurs during deletion.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"        Task task \u003d taskList.delete(position);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"        Ui.showDelete(taskList, task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":48}},{"path":"src/main/java/bob/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.parser.DateParser;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Event;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    private final Event task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * Constructs an EventCommand object by parsing user input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * @param input The user input containing the event description and time period.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the input format is incorrect or missing required details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    public EventCommand(String input) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"        int taskPosition \u003d input.indexOf(\" \");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"        if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no description.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"                    \"Please add a description.\"); //Missing space before description","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"        //Split the description and event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"        String[] eventArray \u003d input.substring(taskPosition).split(\"/from \", 2);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"        if (eventArray.length !\u003d 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no from.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"                    \"Please add /from to demarcate the duration of the event.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"        String[] fromToArray \u003d eventArray[1].split(\" /to\", 2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"        //This error check needs to be split with the /from check, or you will get index out of bounds","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"        if (fromToArray.length !\u003d 2) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no to.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"                    \"Please add /to to demarcate the duration of the event.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"        String eventName \u003d eventArray[0].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"        String startDate \u003d fromToArray[0].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"        String endDate \u003d fromToArray[1].trim();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"        LocalDateTime startLocalDateTime \u003d DateParser.getDate(startDate);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"        LocalDateTime endLocalDateTime \u003d DateParser.getDate(endDate);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"        if (startLocalDateTime \u003d\u003d null || endLocalDateTime \u003d\u003d null) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"The date and time input is not in the correct\" +","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"                    \" format. Please input it in: YYYY/MM/dd HHmm\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"        task \u003d new Event(eventName, startLocalDateTime, endLocalDateTime);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"     * Executes the event command by adding the event task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list to which the event task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If an error occurs during execution.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"        taskList.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"        Ui.showAdd(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":68}},{"path":"src/main/java/bob/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.util.List;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" * Represents a command to search for tasks in the task list that match a given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" * The command processes user input to extract the keyword and then searches for tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" * containing that keyword in their descriptions.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    protected final String keyword;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * Constructs a {@code FindCommand} object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * @param input The user input containing the keyword to search for.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the input is empty, contains only whitespace, or does not contain a valid keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    public FindCommand(String input) throws BobException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"        int taskPosition \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"        if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no description.\" +","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"                    \"Please type a description.\"); //No description","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"        this.keyword \u003d input.substring(taskPosition).trim();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no description.\" +","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"                    \"Please type a description.\"); //Whitespace only","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"     * Executes the find command by searching for tasks in the task list that match the keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"     * The matching tasks are then displayed to the user via the {@code Ui} class.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list to search for matching tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If an error occurs during the search process.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"        List\u003cTask\u003e tasks \u003d taskList.find(keyword);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"        Ui.showFind(tasks, keyword);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"jwyk":52}},{"path":"src/main/java/bob/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":" * This command retrieves and displays all tasks currently stored in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     * Executes the list command by retrieving all tasks from the task list and displaying them to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     * A line separator is shown after the list for better readability.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list containing the tasks to be displayed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If an error occurs while retrieving or displaying the tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"        taskList.list();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"        Ui.showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":25}},{"path":"src/main/java/bob/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import static bob.parser.Parser.convertToInt;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" * Represents a command to mark a specific task in the task list as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" * The task to be marked is identified by its position in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"    protected final int position;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     * Constructs a {@code MarkCommand} object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     * @param input The user input containing the position of the task to be marked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the input is invalid (e.g., missing a number or contains non-numeric characters).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    public MarkCommand(String input) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"        int taskPosition \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"        if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no number.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"                    \"Please type a number.\"); //Index  doesn\u0027t exist","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"        this.position \u003d convertToInt(input, taskPosition);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"        if (position \u003d\u003d -1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no number.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"                    \"Please type a number.\"); //Alphabetical input","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"     * Executes the mark command by marking the task at the specified position as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"     * The updated task list and the marked task are displayed to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list containing the task to be marked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the specified position is invalid or an error occurs during execution.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"        Task task \u003d taskList.mark(position);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"        Ui.showMark(taskList, task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":50}},{"path":"src/main/java/bob/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Todo;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":" * Represents a command to add a new \"To-Do\" task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" * The task is created using the description provided by the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"    private final Todo task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     * Constructs a {@code TodoCommand} object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * @param input The user input containing the description of the \"To-Do\" task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the input is invalid (e.g., missing a description).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    public TodoCommand(String input) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"        int taskPosition \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"        if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay we are checking... there\u0027s no description.\" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"                    \"Please add a description.\"); //Missing description","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"        String description \u003d input.substring(taskPosition + 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"        task \u003d new Todo(description);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"     * Executes the \"To-Do\" command by adding the new task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"     * The updated task list is displayed to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list to which the new task will be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If an error occurs while adding the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"        taskList.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"        Ui.showAdd(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":43}},{"path":"src/main/java/bob/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.commands;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":" * Represents a command to unmark a specific task in the task list as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" * The task to be unmarked is identified by its position in the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" * This class extends {@code MarkCommand} to reuse the logic for parsing the task position.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"public class UnmarkCommand extends MarkCommand {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     * Constructs an {@code UnmarkCommand} object.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * @param input The user input containing the position of the task to be unmarked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the input is invalid (e.g., missing a number or contains non-numeric characters).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    public UnmarkCommand(String input) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"        super(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"     * Executes the unmark command by unmarking the task at the specified position as incomplete.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"     * The updated task list and the unmarked task are displayed to the user.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"     * @param taskList The task list containing the task to be unmarked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the specified position is invalid or an error occurs during execution.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"    public void execute(TaskList taskList) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"        Task task \u003d taskList.unmark(super.position);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"        Ui.showUnmark(taskList, task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":38}},{"path":"src/main/java/bob/exception/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.exception;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Custom exception class for exceptions specific to Bob.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" * The BobException class extends the built-in Exception class","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":" * and provides error message constructors for errors","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":" * specific to Bob only.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"public class BobException extends Exception {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     * Constructs a BobException with custom error messages","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     * @param message String with the custom message","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    public BobException(String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"        super(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jwyk":20}},{"path":"src/main/java/bob/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.parser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" * Handles the parsing and printing of dates to the Deadline and Event Classes.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" *","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"public class DateParser {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     * Returns a LocalDateTime object from a string containing date and time.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * DateTime Format: YYYY/MM/dd HHmm (Year/Month/Day 24Hr Time)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * @param dateTime The string containing the date and time.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    public static LocalDateTime getDate(String dateTime){","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"        //Pattern: YYYY/MM/dd HHmm","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"        if (isValidFormat(dateTime,dateTimeFormatter)) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"                return LocalDateTime.parse(dateTime,dateTimeFormatter);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"                System.out.println(\"Date Time Error\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"                return null;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"        } else {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"            return null;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"     * Returns a formatted string from a LocalDateTime object","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     * DateTime Format: MMM d YYYY HHmm (Month Day Year 24Hr Time)","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"     * @param dateTime The LocalDateTime containing the date and time.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"     * @return Formatted string","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"    public static String printDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"     * Checks if a string matches the given DateTimeFormatter pattern.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"     * @param dateTime The string to check.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"     * @param formatter  The DateTimeFormatter with the desired pattern.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"     * @return true if the string matches the format, false otherwise.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"    public static boolean isValidFormat(String dateTime, DateTimeFormatter formatter) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"            LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"            return true;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"            return false;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"jwyk":69}},{"path":"src/main/java/bob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.parser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.commands.Action;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.commands.ByeCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"import bob.commands.Command;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"import bob.commands.DeadlineCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"import bob.commands.DeleteCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"import bob.commands.EventCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"import bob.commands.FindCommand;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"import bob.commands.ListCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"import bob.commands.MarkCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"import bob.commands.TodoCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"import bob.commands.UnmarkCommand;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":" * Handles parsing of user input and execution of commands.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":" * The {@code Parser} class continuously listens for user input,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":" * processes it into commands, and executes them accordingly.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"public class Parser {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     * Continuously listens for user input from the CLI until a \"bye\" command is issued.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"     * @param taskList The {@link TaskList} containing tasks to be managed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"    public static void getInput(TaskList taskList) {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"        //Initialise input variables","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"        String line;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"        //Handle Cases, until the COMMAND_BYE is detected","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"        do {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"                Command c \u003d parseString(line); //Parse inputs into different categories","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"                c.execute(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"                Storage.save(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"            } catch (BobException | IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"        } while (!isExit);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"     * Parses the user input string into a corresponding {@link Command}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"     * @param input The user\u0027s input as a string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"     * @return A {@link Command} object representing the parsed command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the command is unrecognized.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"    public static Command parseString(String input) throws BobException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"        //Strip input into position and command","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"        String command \u003d inputArray[0].toLowerCase();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"        Action action \u003d Action.fromString(command);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jwyk"},"content":"        return switch (action) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jwyk"},"content":"            case BYE -\u003e new ByeCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jwyk"},"content":"            case MARK -\u003e new MarkCommand(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jwyk"},"content":"            case UNMARK -\u003e new UnmarkCommand(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jwyk"},"content":"            case LIST -\u003e new ListCommand();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jwyk"},"content":"            case DELETE -\u003e new DeleteCommand(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jwyk"},"content":"            case TODO -\u003e new TodoCommand(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jwyk"},"content":"            case DEADLINE -\u003e new DeadlineCommand(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jwyk"},"content":"            case EVENT -\u003e new EventCommand(input);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jwyk"},"content":"            case FIND -\u003e new FindCommand(input);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jwyk"},"content":"            default -\u003e throw new BobException(\"Sorry, I didn\u0027t get that. Will come back to you...\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jwyk"},"content":"        };","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jwyk"},"content":"     * Converts a substring of the user input into an integer, representing a task index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jwyk"},"content":"     * @param input        The user\u0027s input as a string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jwyk"},"content":"     * @param taskPosition The position of the first space in the input string.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jwyk"},"content":"     * @return The integer representation of the task index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the extracted string is not a valid integer.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jwyk"},"content":"    public static int convertToInt(String input, int taskPosition) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jwyk"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jwyk"},"content":"            return Integer.parseInt(input.substring(taskPosition + 1));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jwyk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jwyk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay, we are checking.. there is an invalid number!\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jwyk"},"content":"                    \" This isn\u0027t a number, type a proper digit.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jwyk":102}},{"path":"src/main/java/bob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.io.File;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Deadline;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Event;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Todo;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":" * Handles storage of tasks to and from a file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":" * This class provides methods to save and load tasks from a text file,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":" * ensuring persistence between program executions. The tasks are stored","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":" * in a structured format, with each field separated by a delimiter.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"public class Storage {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    private static final String filePath \u003d \"bob.txt\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"    private static final String DIV \u003d \"|\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"     * Checks if the save file exists.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"     * @return {@code true} if the file exists, {@code false} otherwise.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"    public static boolean exists() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"        return f.exists();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"     * Saves the given list of tasks to a text file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"     * @param list The {@link TaskList} containing tasks to be saved.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If an error occurs during the saving process.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     * @throws IOException  If an I/O error occurs.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"    public static void save(TaskList list) throws BobException, IOException {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"            for (Task temp : list.taskList) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"                //Handle saving each respective task type","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"                if (temp instanceof Todo) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"                    fw.write(\"T\" + DIV + temp.getStatus() +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"                            DIV + temp.getDescription() + DIV);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"                } else if (temp instanceof Deadline) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"                    fw.write(\"D\" + DIV + temp.getStatus() +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"                            DIV + temp.getDescription() + DIV +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"                            ((Deadline) temp).getDueDate());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"                } else if (temp instanceof Event) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"                    fw.write(\"E\" + DIV + temp.getStatus() +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"                            DIV + temp.getDescription() + DIV +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"                            ((Event) temp).getStartDate() + DIV +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"                            ((Event) temp).getEndDate());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"                }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"            fw.close();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"            throw new BobException(e.getMessage());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jwyk"},"content":"     * Loads tasks from the save file into the given task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jwyk"},"content":"     * @param list The {@link TaskList} to populate with loaded tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jwyk"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jwyk"},"content":"    public static void load(TaskList list) throws IOException {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jwyk"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jwyk"},"content":"        Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jwyk"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jwyk"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jwyk"},"content":"            String[] temp \u003d line.split(\"\\\\|\", 5); //Delimited by |","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jwyk"},"content":"            switch (temp[0]) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jwyk"},"content":"            case \"T\":","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jwyk"},"content":"                Todo tempTodo \u003d new Todo(temp[2]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jwyk"},"content":"                if (temp[1].equals(\"true\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jwyk"},"content":"                    tempTodo.markAsDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jwyk"},"content":"                }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jwyk"},"content":"                list.add(tempTodo);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jwyk"},"content":"                break;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jwyk"},"content":"            case \"D\":","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jwyk"},"content":"                Deadline tempDeadline \u003d new Deadline(temp[2],","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jwyk"},"content":"                        LocalDateTime.parse(temp[3]));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jwyk"},"content":"                if (temp[1].equals(\"true\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jwyk"},"content":"                    tempDeadline.markAsDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jwyk"},"content":"                }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jwyk"},"content":"                list.add(tempDeadline);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jwyk"},"content":"                break;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jwyk"},"content":"            case \"E\":","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jwyk"},"content":"                Event tempEvent \u003d new Event(temp[2],","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jwyk"},"content":"                        LocalDateTime.parse(temp[3]),","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jwyk"},"content":"                        LocalDateTime.parse(temp[4]));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jwyk"},"content":"                if (temp[1].equals(\"true\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jwyk"},"content":"                    tempEvent.markAsDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jwyk"},"content":"                }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jwyk"},"content":"                list.add(tempEvent);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jwyk"},"content":"                break;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"jwyk":117}},{"path":"src/main/java/bob/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.storage;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import java.util.List;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.exception.BobException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" * Represents a list of tasks with methods to manage them.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" * This class provides functionality to add, remove, mark, unmark,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":" * list, and search for tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"public class TaskList {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"     * @param task The {@link Task} to be added.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"        taskList.add(task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"     * Lists all the tasks currently stored in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"     * Tasks are displayed in the following format:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"     * - Todo Tasks: [isDone][T] description","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"     * - Deadline Tasks: [isDone][D] description (by: deadline)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     * - Event Tasks: [isDone][E] description (from: startDate to: endDate)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"    public void list() {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"There are no tasks. Maybe add a few more.\");","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"        } else {","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"                System.out.println(i + 1 + \". \" + taskList.get(i));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"     * Marks a task as completed at the specified index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"     * @param index The position of the task to mark as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"     * @return The updated {@link Task} that has been marked as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the index is out of bounds.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"    public Task mark(int index) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"There are no tasks to mark. Maybe add a few more.\"); //Not within list range","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"        if (index \u003e taskList.size() || index \u003c\u003d 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay, we are checking... there is an invalid number! \" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jwyk"},"content":"                    \"Type something within the list range.\"); //Not within list range","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jwyk"},"content":"        taskList.get(index - 1).markAsDone();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jwyk"},"content":"        return taskList.get(index - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jwyk"},"content":"     * Unmarks a task as incomplete at the specified index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jwyk"},"content":"     * @param index The position of the task to mark as undone.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jwyk"},"content":"     * @return The updated {@link Task} that has been marked as undone.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the index is out of bounds.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jwyk"},"content":"    public Task unmark(int index) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jwyk"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"There are no tasks to unmark. Maybe add a few more.\"); //Not within list range","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jwyk"},"content":"        if (index \u003e taskList.size() || index \u003c\u003d 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay, we are checking... there is an invalid number! \" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jwyk"},"content":"                    \"Type something within the list range.\"); //Not within list range","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jwyk"},"content":"        taskList.get(index - 1).markAsUndone();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jwyk"},"content":"        return taskList.get(index - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jwyk"},"content":"     * Deletes a task at the specified index from the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jwyk"},"content":"     * @param index The position of the task to be deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jwyk"},"content":"     * @return The removed {@link Task}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jwyk"},"content":"     * @throws BobException If the index is out of bounds.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jwyk"},"content":"    public Task delete(int index) throws BobException {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jwyk"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"There are no tasks to delete. Maybe add a few more.\"); //Not within list range","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jwyk"},"content":"        if (index \u003e taskList.size() || index \u003c\u003d 0) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay, we are checking... there is an invalid number! \" +","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jwyk"},"content":"                    \"Type something within the list range.\"); //Not within list range","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jwyk"},"content":"        return taskList.remove(index - 1);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jwyk"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jwyk"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jwyk"},"content":"    public int size() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jwyk"},"content":"        return taskList.size();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jwyk"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jwyk"},"content":"     * @param index The index of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jwyk"},"content":"     * @return The {@link Task} at the given index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jwyk"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jwyk"},"content":"        return taskList.get(index);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jwyk"},"content":"     * Finds tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jwyk"},"content":"     * @param keyword The keyword to filter tasks by.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jwyk"},"content":"     * @return A {@link List} of tasks that contain the keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jwyk"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jwyk"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jwyk"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jwyk"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jwyk"},"content":"                tasks.add(task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jwyk"},"content":"        return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-01","isFullCredit":false}],"authorContributionMap":{"jwyk":156}},{"path":"src/main/java/bob/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.parser.DateParser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":" * Represent a deadline task with a description, and due date","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     * Constructs a Deadline task with a description and due date","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     * @param description Deadline details","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     * @param dueDate     Due Date/time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"     * @inheritDoc","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"        return \"[D]\" + getStatusIcon() + \" \" + this.description +","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"                \" (by: \" + DateParser.printDate(this.dueDate) + \")\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"     * Returns the due date of a deadline","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"        return dueDate;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jwyk":41}},{"path":"src/main/java/bob/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.parser.DateParser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":" * Represents an event task with a specific start and end date/time.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":" * This class extends the {@code Task} class and adds functionality for handling event-specific details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     * Constructs an {@code Event} task with a description, start date, and end date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     * @param description The details of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * @param startDate   The start date and time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     * @param endDate     The end date and time of the event.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"     * Returns a string representation of the event task, including its status, description,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     * and formatted start and end dates.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"        return \"[E]\" + this.getStatusIcon() + \" \" + this.description +","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"                \" (from: \" + DateParser.printDate(this.startDate) +","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"                \" to: \" + DateParser.printDate(this.endDate) + \")\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     * Returns the start date of an event","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"        return startDate;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"     * Returns the start date of an event","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"        return endDate;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jwyk":56}},{"path":"src/main/java/bob/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" * This is an abstract class that serves as the base for specific task types.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"    protected String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     * Constructs a task with a description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     * @param description The details of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"     * @return \"[X]\" if the task is done, \"[ ]\" otherwise.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"     * Returns a string representation of the event task, including its status, description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"     * Depending on the subclass, it also returns the starting and ending dates, or the due date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"     * This method is abstract and must be implemented by subclasses.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"    public abstract String toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"        return description;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jwyk"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jwyk"},"content":"    public boolean getStatus() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jwyk"},"content":"        return isDone;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jwyk":75}},{"path":"src/main/java/bob/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.tasks;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Represent a Todo task with a description, and completion status","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" * This class extends the {@code Task} class and provides specific functionality for Todo tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"     * Constructs a Todo task with a description, start date and end date","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     * @param description The details of the Todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"        super(description);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     * Returns a String representation of the Todo task, including its status and description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"    public String toString() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"        return \"[T]\" + this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jwyk":28}},{"path":"src/main/java/bob/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.ui;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.util.List;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.storage.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":" * Handles the user interface and displays messages in response to user actions.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":" * Provides feedback for actions such as adding, marking, unmarking, deleting,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":" * and finding tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"public class Ui {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     * Displays a horizontal line as a visual separator.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    public static void showLine() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"     * Displays a farewell message when exiting the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"    public static void showBye() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Bye dude, see you soon again!\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     * Displays a confirmation message after adding a task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"     * @param list The current {@link TaskList} after adding the task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"    public static void showAdd(TaskList list) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Okay, we are checking... done! Task added.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"added: \" + list.get(list.size() - 1));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Current number of tasks: \" + list.size());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     * Displays a confirmation message after marking a task as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"     * @param list       The current {@link TaskList}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"     * @param markedTask The task that was marked as done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"    public static void showMark(TaskList list, Task markedTask) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Okay, we are checking... done! Task marked.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"        System.out.println(markedTask);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"     * Displays a confirmation message after unmarking a task as not done.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"     * @param list         The current {@link TaskList}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"     * @param unmarkedTask The task that was unmarked.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"    public static void showUnmark(TaskList list, Task unmarkedTask) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Okay, we are checking... done! Task unmarked.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"        System.out.println(unmarkedTask);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"     * Displays a confirmation message after deleting a task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"     * @param list        The current {@link TaskList} after deletion.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jwyk"},"content":"     * @param deletedTask The task that was deleted.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jwyk"},"content":"    public static void showDelete(TaskList list, Task deletedTask) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Okay, we are checking... done! Task deleted.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"deleted: \" + deletedTask);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Current number of tasks: \" + list.size());","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jwyk"},"content":"     * Displays a greeting message when the application starts.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jwyk"},"content":"    public static void showHi() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Hello I\u0027m Bob\\n\" + \"What can I do for you?\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jwyk"},"content":"     * Displays a list of tasks that match a given keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jwyk"},"content":"     * @param filterList The list of tasks containing the keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jwyk"},"content":"     * @param keyword    The keyword used for filtering tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jwyk"},"content":"    public static void showFind(List\u003cTask\u003e filterList, String keyword) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jwyk"},"content":"        if (filterList.isEmpty()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"No tasks contain matching keyword \\\"\" + keyword + \"\\\"\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jwyk"},"content":"        } else {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jwyk"},"content":"            int count \u003d 1;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"Tasks containing \\\"\" + keyword + \"\\\"\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jwyk"},"content":"            for (Task task : filterList) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jwyk"},"content":"                System.out.println(count + \".\" + task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jwyk"},"content":"                count++;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jwyk"},"content":"        showLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"jwyk":108}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"todo CS2113 Tutorial","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"deadline EE2026 Lab 1 /by 2 Feb","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"event EE2211 Midterm /from 5pm /to 6pm","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"mark 1","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"unmark 1","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"event EE2211 Midterm /from 5pm to 6pm","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"event EE2211 Midterm from 5pm /to 6pm","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"deadline EE2026 Lab 1 by 2 Feb","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"mark -1","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"mark 0","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"mark 5","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"find EE2211","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"bye","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"jwyk":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bob\\*.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"java -classpath ..\\bin bob.Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"REM Delete bob.txt if it exists, as this will affect the results","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"if exist \"bob.txt\" del \"bob.txt\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"    echo The contents of ACTUAL.TXT and EXPECTED.TXT do not match.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    exit /b 1","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":") ELSE (","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"    echo The contents of ACTUAL.TXT and EXPECTED.TXT match.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"    exit /b 0","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"-":18,"jwyk":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/bob/*.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":36,"jwyk":2}}]
