[{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"public class Bob {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"    //Initializer for Bob","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"    public Bob() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"    //Takes in a string input and prints outputs depending on the input string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    public static void main(String[] args) throws BobException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"Hello I\u0027m Bob\\n\" + \"What can I do for you?\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"        Bob Tasks \u003d new Bob();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"        Parser.getInput(list);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":2,"jwyk":24}},{"path":"src/main/java/bob/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Custom exception class for exceptions specific to Bob.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" * The BobException class extends the built-in Exception class","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":" * and provides error message constructors for errors","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":" * specific to Bob only.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"public class BobException extends Exception {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     * Constructs a BobException with custom error messages","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     * @param message String with the custom message","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    public BobException(String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"        super(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jwyk":20}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"import bob.task.Deadline;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"import bob.task.Event;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"import bob.task.Todo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"public class Parser {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     * String constants for each command type","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     * Poll the CLI for user inputs until a COMMAND_BYE event is triggered","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"     * @param taskList ArrayList containing Tasks","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    public static void getInput(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"        //Initialise input variables","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"        String line;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"        //Handle Cases, until the COMMAND_BYE is detected","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"        do {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"                parseString(line, taskList); //Parse inputs into different categories","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"            } catch (BobException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"        } while (!line.toLowerCase().startsWith(COMMAND_BYE));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jwyk"},"content":"     * Process the string input to different commands","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jwyk"},"content":"     * @param input    User\u0027s input as a string","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jwyk"},"content":"     * @param taskList Due Date/time","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jwyk"},"content":"    public static void parseString(String input, ArrayList\u003cTask\u003e taskList) throws BobException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jwyk"},"content":"        //Strip input into position and command","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jwyk"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jwyk"},"content":"        String command \u003d inputArray[0].toLowerCase();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jwyk"},"content":"        int taskPosition \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jwyk"},"content":"        int position;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jwyk"},"content":"        switch (command) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jwyk"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"Bye dude, see you soon again!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jwyk"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jwyk"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jwyk"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jwyk"},"content":"                System.out.println(\"There are no tasks. Maybe add a few more.\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jwyk"},"content":"            } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jwyk"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jwyk"},"content":"                    System.out.println(i + 1 + \". \" + taskList.get(i));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jwyk"},"content":"                }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jwyk"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jwyk"},"content":"        case COMMAND_MARK, COMMAND_UNMARK:","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jwyk"},"content":"            if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay we are checking... there\u0027s no number.\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jwyk"},"content":"                        \"Please type a number.\"); //Alphabetical input","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jwyk"},"content":"            position \u003d convertToInt(input, taskPosition);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jwyk"},"content":"            if (taskList.size() \u003e\u003d position \u0026\u0026 position \u003e 0) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jwyk"},"content":"                if (command.equals(COMMAND_MARK)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jwyk"},"content":"                    taskList.get(position - 1).markAsDone();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jwyk"},"content":"                } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jwyk"},"content":"                    taskList.get(position - 1).markAsUndone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jwyk"},"content":"                }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jwyk"},"content":"                System.out.println(\"Okay, we are checking... done! Task \" + command + \"ed.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jwyk"},"content":"                System.out.println(taskList.get(position - 1));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jwyk"},"content":"            } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay, we are checking... there is an invalid number! \" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jwyk"},"content":"                        \"Type something within the list range.\"); //Not within list range","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jwyk"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jwyk"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jwyk"},"content":"            if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay we are checking... there\u0027s no description.\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jwyk"},"content":"                        \"Please add a description.\"); //Missing space before description","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jwyk"},"content":"            String[] dueArray \u003d input.substring(taskPosition).split(\"/by \", 2); //Split the description and deadline","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jwyk"},"content":"            if (dueArray.length !\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay, we are checking... you didn\u0027t type in /by to demarcate the deadline.\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jwyk"},"content":"                        \" Please write it.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jwyk"},"content":"            String description \u003d dueArray[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jwyk"},"content":"            String dueDate \u003d dueArray[1].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jwyk"},"content":"            taskList.add(new Deadline(description, dueDate));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"added: \" + taskList.get(taskList.size() - 1));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"Current number of tasks: \" + taskList.size());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jwyk"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jwyk"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jwyk"},"content":"            if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay we are checking... there\u0027s no description.\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jwyk"},"content":"                        \"Please add a description.\"); //Missing space before description","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jwyk"},"content":"            String[] eventArray \u003d input.substring(taskPosition).split(\"/from \", 2); //Split the description and event","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jwyk"},"content":"            if (eventArray.length !\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay we are checking... there\u0027s no from.\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jwyk"},"content":"                        \"Please add /from to demarcate the duration of the event.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jwyk"},"content":"            String[] fromToArray \u003d eventArray[1].split(\" /to\", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jwyk"},"content":"            //This error check needs to be split with the /from check, or you will get index out of bounds","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jwyk"},"content":"            if (fromToArray.length !\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay we are checking... there\u0027s no to.\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jwyk"},"content":"                        \"Please add /to to demarcate the duration of the event.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jwyk"},"content":"            String eventName \u003d eventArray[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jwyk"},"content":"            String startDate \u003d fromToArray[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jwyk"},"content":"            String endDate \u003d fromToArray[1].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jwyk"},"content":"            taskList.add(new Event(eventName, startDate, endDate));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"added: \" + taskList.get(taskList.size() - 1));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"Current number of tasks: \" + taskList.size());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jwyk"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jwyk"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jwyk"},"content":"            if (taskPosition \u003d\u003d -1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jwyk"},"content":"                throw new BobException(\"Okay we are checking... there\u0027s no description.\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jwyk"},"content":"                        \"Please add a description.\"); //Missing description","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jwyk"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jwyk"},"content":"            input \u003d input.substring(taskPosition + 1);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jwyk"},"content":"            taskList.add(new Todo(input));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"added: \" + taskList.get(taskList.size() - 1));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"Current number of tasks: \" + taskList.size());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jwyk"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jwyk"},"content":"        default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jwyk"},"content":"            //None of the above commands met","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jwyk"},"content":"            System.out.println(\"Sorry, I didn\u0027t get that. Will come back to you...\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jwyk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jwyk"},"content":"     * Return an integer of the task you want to mark","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jwyk"},"content":"     * @param input        User\u0027s input as a string","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jwyk"},"content":"     * @param taskPosition Position of the first space","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jwyk"},"content":"     * @return Integer of the task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jwyk"},"content":"    private static int convertToInt(String input, int taskPosition) throws BobException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jwyk"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jwyk"},"content":"            return Integer.parseInt(input.substring(taskPosition + 1));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jwyk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jwyk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jwyk"},"content":"            throw new BobException(\"Okay, we are checking.. there is an invalid number!\" +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jwyk"},"content":"                    \" This isn\u0027t a number, type a proper digit.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jwyk"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jwyk":178}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Represent a deadline task with a description, and due date","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"    protected String dueDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"     * Constructs a Deadline task with a description and due date","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     * @param description Deadline details","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     * @param dueDate Due Date/time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"     * @inheritDoc","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"        return \"[D]\" + getStatusIcon() + \" \" + this.description + \" (by: \" + this.dueDate + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jwyk":31}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Represent an event task with a start and end date","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"    protected String startDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"    protected String endDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"     * Constructs an Event task with a description, start date and end date","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     * @param description Event details","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     * @param startDate   Event starting date/time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     * @param endDate     Event ending date/time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     * @inheritDoc","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"    public String toString() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"        return \"[E]\" + this.getStatusIcon() + \" \" + this.description + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jwyk":32}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Represent a task with a description, and completion status","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"    protected String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"     * Constructs a task with a description, start date and end date","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     * By default, sets isDone to false","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"     * @param description Task details","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"     * Returns a String representation of completion status","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":"     * Returns a String representation of the task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jwyk"},"content":"    public abstract String toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jwyk"},"content":"     * Marks completion status as done","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jwyk"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jwyk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jwyk"},"content":"     * Marks completion status as undone","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jwyk"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jwyk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jwyk":48}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"package bob.task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":" * Represent a todo task with a description, and completion status","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"     * Constructs a todo task with a description, start date and end date","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"     * By default, sets isDone to false","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"     * @param description Todo details","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"        super(description);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jwyk"},"content":"     * Returns a String representation of the todo task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jwyk"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jwyk"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"    public String toString() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"        return \"[T]\" + this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jwyk":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jwyk"},"content":"todo CS2113 Tutorial","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jwyk"},"content":"deadline EE2026 Lab 1 /by 2 Feb","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jwyk"},"content":"event EE2211 Midterm /from 5pm /to 6pm","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jwyk"},"content":"mark 1","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"unmark 1","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jwyk"},"content":"list","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jwyk"},"content":"event EE2211 Midterm /from 5pm to 6pm","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"event EE2211 Midterm from 5pm /to 6pm","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jwyk"},"content":"deadline EE2026 Lab 1 by 2 Feb","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jwyk"},"content":"mark -1","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jwyk"},"content":"mark 0","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jwyk"},"content":"mark 5","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jwyk"},"content":"bye","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"jwyk":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jwyk"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jwyk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bob\\*.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jwyk"},"content":"java -classpath ..\\bin bob.Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jwyk"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jwyk"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jwyk"},"content":"    echo The contents of ACTUAL.TXT and EXPECTED.TXT do not match.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jwyk"},"content":"    exit /b 1","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jwyk"},"content":") ELSE (","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jwyk"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jwyk"},"content":"    echo The contents of ACTUAL.TXT and EXPECTED.TXT match.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jwyk"},"content":"    exit /b 0","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jwyk"},"content":")","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"-":18,"jwyk":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jwyk"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/bob/*.java","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jwyk"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":36,"jwyk":2}}]
