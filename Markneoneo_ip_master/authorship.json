[{"path":"src/main/java/amadeus/Amadeus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * The Amadeus class serves as the main entry point for the Amadeus chatbot system.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * It handles user input, processes commands, and manages the execution flow.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * The chatbot remains active in a loop until the exit command is received.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.Command;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.Parser;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"public class Amadeus","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * Scanner object for reading user input from the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    public static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * Flag to track whether the chatbot should terminate.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * Awakens the Amadeus chatbot, initializing the interaction loop.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * The chatbot continuously listens for user commands, processes them,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * and executes the corresponding actions until the exit command is received.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    public static void awaken()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        // Display Amadeus Login Sequence","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayWelcome();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        // Keep running until the exit command is given","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        while (!isExit)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"            try // Start the command loop","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"                // Read user input from console","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"                // Print a separating line for clarity","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"                Speech.sayLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"                // Parse the input into a Command object","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"                // Execute the command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"                c.execute();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"                // Check if the user wants to exit","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"                isExit \u003d c.isBye();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"            } catch (AmadeusException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"                // Display any command-related errors","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"            } finally {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"                // Print a separator line before next input (except during goodbye)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"                if (!isExit) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"                    Speech.sayLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     * The main method that serves as the program\u0027s entry point.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * It starts the chatbot by calling the awaken() method.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"        awaken();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Markneoneo":75}},{"path":"src/main/java/amadeus/brain/AmadeusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Custom exception class for Amadeus-specific errors.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class extends the built-in `Exception` class and provides static factory methods","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * to create exceptions for different error scenarios, such as invalid commands, missing arguments,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * invalid task formats, and database errors.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"package amadeus.brain;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"public class AmadeusException extends Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an AmadeusException with a custom error message.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * @param message The custom error message.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    public AmadeusException(String message)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"        super(message);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    //region Command \u0026 Argument Exceptions","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid commands.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user enters a command that is not recognized.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message prompting the user to view available commands.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidCommand() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Invalid Command! Please type \u0027commands\u0027 to see what I can do.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for missing arguments in user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when a required argument (e.g., task description) is missing.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * @param type The type of task (e.g., \"todo\", \"deadline\", \"event\") for which the argument is missing.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message prompting the user to provide the missing argument.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException missingArgument(String type) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"⚠️ Please provide the \\033[1m%s\\033[0m task name/description!\", type));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid deadline formats.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user enters a deadline task in an incorrect format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message explaining the correct deadline format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidDeadline() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Invalid \\033[1mDEADLINE\\033[0m format! Use: \u003cdescription\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid event formats.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user enters an event task in an incorrect format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message explaining the correct event format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidEvent() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Invalid \\033[1mEVENT\\033[0m format! Use: \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid event time formats.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user enters an event task in an incorrect time format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * Start time is ahead of End time.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message explaining the correct event format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidEventTime() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Invalid \\033[1mEVENT\\033[0m Start \u0026 End Date/Time! Make sure they are in chronological order.\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid checking formats.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user enters a check command in an incorrect format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message explaining the correct checking format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidCheck() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Invalid \\033[1mCHECK\\033[0m format! Use: check (Optional: before/after) \u003cdate/time\u003e\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"    //region Index \u0026 Date Number Exceptions","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for missing task indices.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user does not provide an index for commands like `mark`, `unmark`, or `delete`.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message prompting the user to provide a task index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException missingNumber() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Missing Task Index! Please provide desired number.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid task indices.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user provides an index that is not a valid number.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message prompting the user to provide a valid number.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidNumber() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Invalid Task Index! Please provide a valid number.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for out-of-bounds task indices.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user provides an index that does not exist in the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating that the task index was not found.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidIndex() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"⚠️ Task Index not found on the list! Please try again.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid date formats.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when the user provides a date that is not in the valid format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message prompting the user to provide a valid date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidDate() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"                ⚠️ Invalid date format! Please enter the date and time in one of the following formats:","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"                ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"                Date only: 2/12/2019, 2-12-2019, 2 12 2019","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"                Date \u0026 time (24-hour): Date 18:00, Date 1800, Date 18.00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"                Date \u0026 time (12-hour): Date 6:00PM, Date 6pm, Date 6.30AM\"\"\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"    //region Database Exceptions","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for errors while saving tasks to the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when an IOException occurs during the save operation.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"     * @param file The error message from the IOException.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating the error while saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException errorSavingTask(String file) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"⚠️ Error saving tasks to file: %s\\n\", file));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for errors while loading tasks from the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when an IOException occurs during the load operation.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"     * @param file The error message from the IOException.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating the error while loading tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException errorLoadingTask(String file) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"⚠️ Error loading tasks from file: %s\\n\", file));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for invalid task types in the saved file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when a task type in the file is not recognized (e.g., not \"T\", \"D\", or \"E\").","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"     * @param type The invalid task type found in the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating the invalid task type.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidTaskType(String type) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"⚠️ Invalid task type in file: %s\", type));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for errors while parsing a task from the saved file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when a line in the file cannot be parsed into a valid task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"     * @param line The line from the file that caused the parsing error.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating the error while parsing the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException errorParsingTask(String line) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"⚠️ Error parsing task from line: \u0027%s\u0027. Skipping.\", line));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":178}},{"path":"src/main/java/amadeus/brain/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Manages the storage and retrieval of tasks in the Amadeus application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class handles saving tasks to a file and loading tasks from a file,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * ensuring data persistence across application sessions.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus.brain;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.ToDo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"public class Database","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * The file path where tasks are saved and loaded from.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    public final static String FILE_PATH \u003d \"Memory.txt\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * Saves the current list of tasks to a file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     * Each task is converted to a file-friendly format using the `toFileFormat` method","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * and written to the file specified by `FILE_PATH`.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while saving tasks to the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"            // Open the file for writing","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"            // Write each task to the file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"                writer.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"            // Close the file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"            writer.close();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"            // Error Saving Task List to Memory.txt","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.errorSavingTask(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     * Parses a line from the file into a `Task` object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     * The line is expected to be in a specific format, depending on the task type:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     * - ToDo: `T | \u003cisDone\u003e | \u003cdescription\u003e`","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"     * - Deadline: `D | \u003cisDone\u003e | \u003cdescription\u003e | \u003cby\u003e`","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"     * - Event: `E | \u003cisDone\u003e | \u003cdescription\u003e | \u003cfrom\u003e | \u003cto\u003e`","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     * @param line The line from the file to parse.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     * @return The `Task` object corresponding to the line.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the line is invalid or cannot be parsed.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"    public static Task parseSave(String line) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"            // Split the line into parts using the delimiter \" | \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"            String type \u003d parts[0]; // Task type (T, D, or E)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"            boolean isDone \u003d parts[1].equals(\"1\"); // Completion status","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"            String description \u003d parts[2]; // Task description","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"            // Create the appropriate Task object based on the type","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"            switch (type)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"                case \"D\": // Deadline","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"                    // Parse the due date into a LocalDateTime object","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"                    Object by \u003d DateConverter.parseDate(parts[3].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"                    return new Deadline(description, isDone, by);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"                case \"E\": // Event","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                    // Parse the start and end times into LocalDateTime objects","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"                    Object from \u003d DateConverter.parseDate(parts[3].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"                    Object to \u003d DateConverter.parseDate(parts[4].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"                    return new Event(description, isDone, from, to);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"                case \"T\": // ToDo","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"                    return new ToDo(description, isDone);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"                default: // Invalid Saved Task Type Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"                    throw AmadeusException.invalidTaskType(type);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"            // Error parsing a Saved Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.errorParsingTask(line);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"     * Loads tasks from the file and returns them as a list of `Task` objects.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     * If the file does not exist, an empty list is returned. If the file exists,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"     * each line is parsed into a `Task` object using the `parseSave` method.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while loading tasks from the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"    public static ArrayList\u003cTask\u003e load() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"            // Open the file for reading","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"            while (scanner.hasNextLine())","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"                String line \u003d scanner.nextLine(); // Read each line","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"                Task task \u003d parseSave(line); // parse into Task object","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"                tasks.add(task); // Add to Task List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"            // Close the file","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"            scanner.close();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"        } catch (FileNotFoundException e) { // If the file is not found, start with an empty task list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"            System.out.println(\"⚠️ No existing task file found. Starting with an empty task list.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"            // Error Loading Task List from Memory.txt","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.errorLoadingTask(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"        return tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Markneoneo":143}},{"path":"src/main/java/amadeus/cognition/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to exit the Amadeus application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command displays a farewell message and terminates the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"public class ByeCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"     * Displays a farewell message and terminates the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    public void execute()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayGoodbye();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * Indicates that this command is a termination command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * @return `true` to indicate that this command should terminate the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    public boolean isBye()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"        return true;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":30}},{"path":"src/main/java/amadeus/cognition/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.*;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"public class CheckCommand extends Command","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e(); // List of filtered Tasks based on date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    String preposition \u003d \"on\"; // on, before or after","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    String formattedDate; // String of date inquiry","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    public CheckCommand(String argument) throws AmadeusException","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidCheck();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d argument.trim().split(\" \", 2); // Trim to remove extra spaces","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        if (parts.length \u003d\u003d 0 || parts[0].isEmpty())","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            // Invalid: Empty argument after \"check\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidCheck();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        // Assume full input is a date unless proven otherwise","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        String dateString \u003d argument.trim();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        boolean isBefore \u003d dateString.startsWith(\"before\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        boolean isAfter \u003d dateString.startsWith(\"after\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"        // Special case: If it starts with \"before\" or \"after\", extract date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        if (isBefore || isAfter)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"            String[] splitParts \u003d dateString.split(\" \", 2); // Split at first space","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"            if (splitParts.length \u003c 2)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"                // Invalid: \"check before\" (no date provided)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.invalidCheck();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"            dateString \u003d splitParts[1]; // Extract only the date portion","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"        // Parse the date of inquiry","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"        Object date \u003d DateConverter.parseDate(dateString);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"        // Convert into LocalDateTime","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"        LocalDateTime checkDateTime \u003d (date instanceof LocalDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"                ? (LocalDateTime) date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"                : ((LocalDate) date).atStartOfDay(); // Midnight 00:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        // Filter tasks based on the type of check","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        for (Task task : TaskList.getTaskList())","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"            LocalDateTime taskDateTime \u003d getTaskDateTime(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            if (taskDateTime !\u003d null)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"                if (isBefore \u0026\u0026 taskDateTime.isBefore(checkDateTime))","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"                {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"                else if (isAfter \u0026\u0026 taskDateTime.isAfter(checkDateTime))","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"                {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"                else if (isExactMatch(taskDateTime, checkDateTime)) // Exact date or date-time","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"                {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"        // Determine the appropriate preposition for the message","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"        if (isBefore) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"            preposition \u003d \"before\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        } else if (isAfter) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"            preposition \u003d \"after\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"        // Format the date for display","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"        formattedDate \u003d DateConverter.formatDate(date);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by printing the desired filtered Task List","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    public void execute()","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"        // Display the filtered tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"        if (filteredTasks.isEmpty())","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"⚠️ No tasks found occurring %s %s!\\n\", preposition, formattedDate);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"✍️ These are the Tasks occurring %s %s:\\n\", preposition, formattedDate);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayList(filteredTasks);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"     * Checks if a task\u0027s date/time matches the check date/time based on the rules.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"     * @param taskDateTime The task\u0027s date/time.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"     * @param checkDateTime The check date/time.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"     * @return True if the task should be included based on the check conditions.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"    private boolean isExactMatch(LocalDateTime taskDateTime, LocalDateTime checkDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"        // Extract date parts","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"        LocalDate taskDate \u003d taskDateTime.toLocalDate();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"        LocalDate checkDate \u003d checkDateTime.toLocalDate();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"        // Always check if the dates match","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"        if (!taskDate.equals(checkDate)) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"            return false;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"        // Extract time parts","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"        LocalTime taskTime \u003d taskDateTime.toLocalTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"        LocalTime checkTime \u003d checkDateTime.toLocalTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"        // Determine if the checkDateTime has a time component (i.e., user provided time)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"        boolean checkHasTime \u003d !checkTime.equals(LocalTime.MIDNIGHT); // Only true if check isn\u0027t 00:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"        // If checking with a specific time, match exact tasks and date-only tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"        if (checkHasTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"            return taskTime.equals(checkTime) || taskTime.equals(LocalTime.MIDNIGHT);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"        // If checking a date only, match all tasks on that date (regardless of time)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"        return true;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"     * Extracts the date and time from a task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"     * @param task The task to extract the date and time from.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"     * @return The date and time of the task, or null if the task has no date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"    private LocalDateTime getTaskDateTime(Task task)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"        if (task instanceof Deadline)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"            Object by \u003d ((Deadline) task).getBy();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"            return (by instanceof LocalDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"                    ? (LocalDateTime) by","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"                    : ((LocalDate) by).atStartOfDay();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"        else if (task instanceof Event)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"            Object from \u003d ((Event) task).getFrom();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"            return (from instanceof LocalDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"                    ? (LocalDateTime) from","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"                    : ((LocalDate) from).atStartOfDay();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"        return null; // ToDo tasks have no date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Markneoneo":170}},{"path":"src/main/java/amadeus/cognition/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Abstract base class for all commands in the Amadeus application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class defines the structure for commands, including the `execute` method","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * that must be implemented by subclasses and the `isBye` method to check if the command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * is a termination command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public abstract class Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * This method must be implemented by subclasses to perform the specific action","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * associated with the command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs during execution.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    public abstract void execute() throws AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * Checks if the command is a termination command (e.g., `bye`).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * This method can be overridden by subclasses to indicate that the command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * should terminate the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * @return `true` if the command is a termination command, `false` otherwise.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    public boolean isBye()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"        return false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":33}},{"path":"src/main/java/amadeus/cognition/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to display the list of available commands.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command prints the list of commands to the console, providing usage examples.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"public class CommandList extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"     * Displays the list of available commands to the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * The commands are formatted with usage examples for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    public void execute()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayCommands();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":20}},{"path":"src/main/java/amadeus/cognition/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to add a new Deadline task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to create a Deadline task and adds it to the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"public class DeadlineCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    Deadline d;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new `DeadlineCommand` by parsing the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a description and a due date, separated by \"/by\".","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task description and due date.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input is empty or in an invalid format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    public DeadlineCommand(String input) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"DEADLINE\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        // Check if \"/by\" exist before splitting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        if (!input.contains(\" /by \"))","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Deadline Format Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidDeadline();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        // Split the input into description and due date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        // Parse the due date into a LocalDateTime object","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"        Object by \u003d DateConverter.parseDate(parts[1].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        // Create a new Deadline task","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"        d \u003d new Deadline(name, by);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by adding the Deadline task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while adding the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"        TaskList.addDeadline(d);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":60}},{"path":"src/main/java/amadeus/cognition/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to identify the task index and removes the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.NumberConverter;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class DeleteCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    private final int index;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new `DeleteCommand` by parsing the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a valid task index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input is empty or the index is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    public DeleteCommand(String input) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"            // Missing Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        // Extract the task index from the input","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"        this.index \u003d NumberConverter.extractIndex(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        // Check if the index is valid","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by deleting the task at the specified index from the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while deleting the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        TaskList.deleteTask(index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":50}},{"path":"src/main/java/amadeus/cognition/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to add a new Event task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to create an Event task and adds it to the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"public class EventCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    private final Event e;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new `EventCommand` by parsing the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a description, a start time, and an end time,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * separated by \"/from\" and \"/to\".","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task description, start time, and end time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input is empty or in an invalid format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    public EventCommand(String input) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"EVENT\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        // Check if \"/from\" and \"/to\" exist before splitting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        if (!input.contains(\" /from \") || !input.contains(\" /to \"))","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Event Format Exception","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidEvent();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        // Split the input into description and from/to","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"        // Split the from/to part into start and end times","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        String[] fromToParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"        // Parse the start and end times into LocalDateTime objects","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        Object from \u003d DateConverter.parseDate(fromToParts[0].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"        Object to \u003d DateConverter.parseDate(fromToParts[1].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"        // Ensure that from is strictly before to","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"        if (from instanceof LocalDateTime \u0026\u0026 to instanceof LocalDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"            if (!((LocalDateTime) from).isBefore((LocalDateTime) to))","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.invalidEventTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        else if (from instanceof LocalDate \u0026\u0026 to instanceof LocalDate)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            if (!((LocalDate) from).isBefore((LocalDate) to))","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.invalidEventTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"            // Handle case where types don\u0027t match","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidEvent();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"        // Create a new Event task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"        e \u003d new Event(name, from, to);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by adding the Event task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while adding the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        TaskList.addEvent(e);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":87}},{"path":"src/main/java/amadeus/cognition/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Task;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.util.List;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class FindCommand extends Command","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    private final String keyword; // The keyword to search for","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    private final ArrayList\u003cTask\u003e matchingTasks; // List of tasks matching the keyword","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a FindCommand by parsing the user input for the keyword.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * @param argument The user input containing the keyword to search for.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input is empty or invalid.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    public FindCommand(String argument) throws AmadeusException","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"FIND\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        this.keyword \u003d argument.trim().toLowerCase(); // Normalize keyword to lowercase for case-insensitive search","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        this.matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        // Filter tasks that contain the keyword in their description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        for (Task task : TaskList.getTaskList())","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"            if (task.getName().toLowerCase().contains(keyword))","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by displaying the tasks that match the keyword.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    public void execute()","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        if (matchingTasks.isEmpty())","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"⚠️ No tasks found containing the keyword \u0027%s\u0027!\\n\", keyword);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"🔍 Here are the tasks containing the keyword \u0027%s\u0027:\\n\", keyword);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayList(matchingTasks);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Markneoneo":56}},{"path":"src/main/java/amadeus/cognition/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to display the current list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command prints the list of tasks to the console, organized by type.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import static amadeus.workspace.TaskList.taskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"public class ListCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * Displays the current list of tasks to the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * The tasks are organized by type (Deadlines, Events, ToDos).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    public void execute()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayList(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":21}},{"path":"src/main/java/amadeus/cognition/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to mark a task as complete or incomplete.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to identify the task index and updates its status.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.NumberConverter;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"public class MarkCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    private final int index;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    private final boolean isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new `MarkCommand` by parsing the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a valid task index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * @param mark  Indicates whether the task should be marked as complete (`true`) or incomplete (`false`).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input is empty or the index is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    public MarkCommand(String input, boolean mark) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d mark;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            // Missing Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        // Extract the task index from the input","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        this.index \u003d NumberConverter.extractIndex(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        // Check if the index is valid","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by marking the task at the specified index as complete or incomplete.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while updating the task status.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"        TaskList.markDone(index, isDone);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":55}},{"path":"src/main/java/amadeus/cognition/ResetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to reset the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command clears all tasks from the task list and updates the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"public class ResetCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * Resets the task list by clearing all tasks and updating the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while resetting the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"        TaskList.resetList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":22}},{"path":"src/main/java/amadeus/cognition/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Command to add a new ToDo task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to create a ToDo task and adds it to the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.ToDo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"public class ToDoCommand extends Command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    ToDo td;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new `ToDoCommand` by parsing the user input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a task description.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task description.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input is empty.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    public ToDoCommand(String input) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"TODO\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"        // Create a new ToDo Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        td \u003d new ToDo(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by adding the ToDo task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while adding the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        TaskList.addToDo(td);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":45}},{"path":"src/main/java/amadeus/perception/DateConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.perception;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.util.List;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class DateConverter","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    // Supported date formats","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"), // e.g., 2/12/2019","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"), // e.g., 2-12-2019","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy\")  // e.g., 2 12 2019","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    // Supported date-time formats","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_TIME_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy ha\"),    // e.g., 2/12/2019 6PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy h:mma\"), // e.g., 2/12/2019 6:00PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy h.mma\"), // e.g., 2/12/2019 6.30AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),  // e.g., 2/12/2019 1800","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\"), // e.g., 2/12/2019 18:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HH.mm\"), // e.g., 2/12/2019 18.00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy ha\"),    // e.g., 2-12-2019 6PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy h:mma\"), // e.g., 2-12-2019 6:00PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy h.mma\"), // e.g., 2-12-2019 6.30AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"),  // e.g., 2-12-2019 1800","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HH:mm\"), // e.g., 2-12-2019 18:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HH.mm\"), // e.g., 2-12-2019 18.00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy ha\"),    // e.g., 2 12 2019 6PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy h:mma\"), // e.g., 2 12 2019 6:00PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy h.mma\"), // e.g., 2 12 2019 6.30AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy HHmm\"),  // e.g., 2 12 2019 1800","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy HH:mm\"), // e.g., 2 12 2019 18:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy HH.mm\")  // e.g., 2 12 2019 18.00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    // Output format for dates","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    // Output format for date-times","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * Parses a date string into a LocalDate or LocalDateTime object.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * Supports multiple date and time formats.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * @param dateString The date string to parse.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     * @return A LocalDate or LocalDateTime object, or null if the input is invalid.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    public static Object parseDate(String dateString) throws AmadeusException","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"        // Normalize AM/PM to be case-insensitive","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"        dateString \u003d dateString.replaceAll(\"(?i)am\", \"AM\").replaceAll(\"(?i)pm\", \"PM\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        // Try parsing as a date-time first","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        for (DateTimeFormatter format : DATE_TIME_FORMATS)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"                return LocalDateTime.parse(dateString, format);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"                // Ignore and try the next format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"        // Try parsing as a date if date-time parsing fails","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"        for (DateTimeFormatter format : DATE_FORMATS)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"                return LocalDate.parse(dateString, format);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                // Ignore and try the next format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"        // If no format matches, throw an exception","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"        throw AmadeusException.invalidDate();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     * Formats a date or date-time object into a user-friendly string.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     * @param date The date or date-time object to format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"     * @return The formatted date string (e.g., \"Oct 15 2019\" or \"Oct 15 2019, 6:00PM\").","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"    public static String formatDate(Object date)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDateTime) date).format(OUTPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"        } else if (date instanceof LocalDate) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDate) date).format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"            return \"⚠️ Invalid Date\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"        //create dates from strings","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d1 \u003d LocalDate.parse(\"2019-12-01\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d2 \u003d LocalDate.parse(\"2019-12-02\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d3 \u003d LocalDate.parse(\"2019-12-02\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"        //compare dates","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.isBefore(d2)); // -\u003e true","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.isAfter(d2)); // -\u003e false","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d2.equals(d3)); // -\u003e true","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"        //work with dates","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.getDayOfWeek()); // -\u003e SUNDAY","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.getMonth()); // -\u003e DECEMBER","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.plusYears(1));  // -\u003e 2020-12-01","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"        // get today\u0027s date and print it in a specific format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d4 \u003d LocalDate.now();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d4); // -\u003e 2019-10-15","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d4.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))); // -\u003e Oct 15 2019","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Markneoneo":130}},{"path":"src/main/java/amadeus/perception/NumberConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * A utility class for converting written number words into their numeric equivalents.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This implementation follows a rule-based approach without relying on a hash map","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * to allow flexibility and expansion.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus.perception;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.util.*;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * Implements rule-based number conversion from words to integers.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * Handles numbers up to the thousands.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * Supports numbers with hyphens (e.g., \"twenty-one\") by replacing hyphens with spaces.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * Ignores the word \"and\" for better parsing.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * Ensures incorrect inputs return -1 as an error indicator.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"public class NumberConverter","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of unit numbers (one to nineteen) to their integer values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e UNITS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"one\", 1), Map.entry(\"two\", 2), Map.entry(\"three\", 3),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"four\", 4), Map.entry(\"five\", 5), Map.entry(\"six\", 6),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"seven\", 7), Map.entry(\"eight\", 8), Map.entry(\"nine\", 9),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"ten\", 10), Map.entry(\"eleven\", 11), Map.entry(\"twelve\", 12),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"thirteen\", 13), Map.entry(\"fourteen\", 14), Map.entry(\"fifteen\", 15),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"sixteen\", 16), Map.entry(\"seventeen\", 17), Map.entry(\"eighteen\", 18),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"nineteen\", 19)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of tens multiples (twenty to ninety) to their integer values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e TENS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"twenty\", 20), Map.entry(\"thirty\", 30), Map.entry(\"forty\", 40),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"fifty\", 50), Map.entry(\"sixty\", 60), Map.entry(\"seventy\", 70),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"eighty\", 80), Map.entry(\"ninety\", 90)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of large number multipliers (hundred, thousand) to their values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e MULTIPLIERS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"hundred\", 100), Map.entry(\"thousand\", 1000)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * Converts a number written in words into its integer representation.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * Supports numbers from \"one\" to \"nine thousand nine hundred ninety-nine.\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * Handles compound numbers like \"twenty-one\" or \"three hundred and five.\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * Ignores the word \"and\" for natural language compatibility.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * Returns -1 if input is invalid or contains unrecognized words.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * @param input The number written in words (e.g., \"two hundred forty-five\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * @return The integer representation of the input word, or -1 for invalid input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    public static int wordToNumber(String input)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) { return -1; } // Invalid Input","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        // Splits the input into an array of words using spaces/tabs/newlines as delimiters","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        String[] words \u003d input.toLowerCase().replaceAll(\"-\", \" \").split(\"\\\\s+\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"        int result \u003d 0; // Final number","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"        int current \u003d 0; // Value of the current segment","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"        for (String word : words)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"            if (UNITS.containsKey(word))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"                current +\u003d UNITS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"            else if (TENS.containsKey(word))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"                current +\u003d TENS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"            else if (MULTIPLIERS.containsKey(word))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                int multiplier \u003d MULTIPLIERS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"                if (multiplier \u003d\u003d 100)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"                {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"                    current *\u003d multiplier; // Handle \"hundred\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"                } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"                    current *\u003d multiplier; // Handle \"thousand\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"                    result +\u003d current; // Add to the final result","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"                    current \u003d 0; // Reset for the next part","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"            else if (!word.equals(\"and\"))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"                return -1; // Invalid word","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        return result + current;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"     * Extracts a task index from the provided argument.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"     * The argument can be either a numeric string (e.g., \"1\") or a word representing a number (e.g., \"one\").","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"     * If the argument is invalid or cannot be converted to a number, -1 is returned.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"     * @param argument The string containing the task index (numeric or word format).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"     * @return The task index as an integer, or -1 if the argument is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"    public static int extractIndex(String argument)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"            // Try parsing the argument as a number directly","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"            return Integer.parseInt(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"            // If parsing fails, try converting words to a number","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"            return NumberConverter.wordToNumber(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"        // Test Cases","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"two hundred and forty-five\")); // 245","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"three thousand one hundred\")); // 3100","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"nine hundred ninety-nine\")); // 999","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":123}},{"path":"src/main/java/amadeus/perception/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Handles the parsing of user input into executable commands.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class interprets the user\u0027s input and maps it to the appropriate command object,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * which can then be executed to perform the desired action.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus.perception;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.*;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class Parser","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * Constants representing valid user commands.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * These are used to map user input to the appropriate command object.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    public final static String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    public final static String COMMAND_LIST \u003d \"commands\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    public final static String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    public final static String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    public final static String CHECK_COMMAND \u003d \"check\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    public final static String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    public final static String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    public final static String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    public final static String RESET_COMMAND \u003d \"reset\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    public final static String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    public final static String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    public final static String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * Parses the user\u0027s input and returns the corresponding command object.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     * The input is split into a command and an optional argument. The command is then","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     * matched against predefined constants to determine the appropriate action.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     * @param input The full command input provided by the user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * @return The corresponding `Command` object.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the command is invalid or the input cannot be parsed.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    public static Command parse(String input) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        String[] words \u003d input.split(\" \", 2); // Split into command + optional argument","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        String command \u003d words[0].toLowerCase(); // Start with command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"        String argument \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        // Match the command to the appropriate Command object","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"        return switch (command)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"            // Exits the command loop and terminates the interaction","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"            case BYE_COMMAND -\u003e new ByeCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"            // Shows the user all possible Amadeus commands","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"            case COMMAND_LIST -\u003e new CommandList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"            // Displays the current list of tasks to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"            case LIST_COMMAND -\u003e new ListCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"            // Print tasks occurring on / before / after a specific date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"            case CHECK_COMMAND -\u003e new CheckCommand(argument);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"            // Resets and Clears the saved Task List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"            case RESET_COMMAND -\u003e new ResetCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            // Finds a task by searching for a keyword in the task description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"            case FIND_COMMAND -\u003e new FindCommand(argument);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"            // Deletes a given task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"            case DELETE_COMMAND -\u003e new DeleteCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"            // Marks or unmarks a given task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"            case MARK_COMMAND, UNMARK_COMMAND -\u003e new MarkCommand(argument, command.equals(MARK_COMMAND));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"            // Adds a new task of the specified type","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"            case DEADLINE_COMMAND -\u003e new DeadlineCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"            case EVENT_COMMAND -\u003e new EventCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"            case TODO_COMMAND -\u003e new ToDoCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Command Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"            default -\u003e throw AmadeusException.invalidCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"        };","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":82}},{"path":"src/main/java/amadeus/personality/Speech.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Handles the user interface (UI) and speech interactions for the Amadeus application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class provides methods to display messages, commands, and task lists to the user,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * with features like typing effects and formatted text for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus.personality;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.*;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class Speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    // \\033[1m Text \\033[0m , [1m \u003d Bold , [3m \u003d Italicize","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * A string of \"\u003d\" characters used as a visual divider in the console output.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    private static final String DIVIDER \u003d \"\u003d\".repeat(100);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * A large ASCII art representation of the Amadeus logo.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * Used to display a visually appealing welcome message.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    //region Amadeus Logo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    private static final String AMADEUS \u003d","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"            \"\"\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"                                                                                   @","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"                                                                              @@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"                                                                           @@@@@@#@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"                                                                         @@@@@@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"                                                                       @@@@@@@  @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"                                                                    @@@@@@@:    @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"                                                                  @@@@@@@       @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"                                                               -@@@@@@#         @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"                                                             @@@@@@@            @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"                                                           @@@@@@@              @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"                                                         @@@@@@\u003d                @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"                                                      @@@@@@@                   @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"                                                   +@@@@@@\u003d                     @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"                                                 @@@@@@@                        @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"                                               @@@@@@@                          @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"                                             @@@@@@#                            @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"                                          @@@@@@@+                              @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"                                       @@@@@@@#        @@@@@@@@@@@@@@@@@@@@@@@  @@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"                                     @%#@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@\u003d@@@@@@@@@@@@@@@@@#-","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"                                   #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\u003d+         @@ @@@@@@@@@@@@@@@@%@@@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"                                 @@%@@@@                                     @@                       @@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"                              @@@@@@@@ @@@@@@@@@@@@@@@ @@@@@@@@@@@ @@@@@@@@@@@@ @@@@@@@@@@@@ @@       @@@ @@@@@@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"                            @@@#@@@    @@@   @@    @@@         @@@ @@#       @@ @@       @@@ @@       @@@ @@        \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"                         @@@@@@@@      @@@   @@    @@@ @@@@@@@@@@@ @@@       @@ @@@@@@@@@@@@ @@       @@@ @@@@@@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"                       @@@@@@@         @@@   #@    @@@ @@       @@ @@@       @@ @@           @@       @@%          @@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"                     @@@@@@@@@@@@@@@@@@@@@   @@    @@@ @@@@@@@@@@@ @@@@@@@@@@@@ @@@@@@@@@@@@ @@@@@@@@@@@ @@@@@@@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"                                                   @@-                                         @@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"                                                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"                                                                                  @@@@@@@@+","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@@@@@-","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"                                                                                @","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"                    \"\"\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     * A formatted string listing all available commands and their usage.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     * Includes examples and styling (bold and italic) for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"    // region Amadeus Command List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"    private static final String COMMANDS \u003d","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"            \"\"\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"                ✨ Welcome to Amadeus Task Manager! ✨","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"                Here are the commands you can use to manage your tasks:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"               \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"                ➤ ✍️ Adding a Task:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mtodo 【description】\\033[0m: Adds a new ToDo task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mtodo Buy groceries\\033[0m\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mdeadline 【description】 /by 【date/time】\\033[0m: Adds a new Deadline task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mdeadline Submit report /by 31/12/2025\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mevent 【description】 /from 【start date/time】 /to 【end date/time】\\033[0m: Adds a new Event task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mevent Team meeting /from 1/1/2025 11:59pm /to 2/1/2025 12pm\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"               \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"                ➤ 👀 View Tasks:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mlist\\033[0m: Displays all your saved tasks, organized by type.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mcheck 【date/time】\\033[0m: Lists tasks on a specified date/time.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mcheck 2/10/2025\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mcheck before 【date/time】\\033[0m: Lists tasks before a specified date/time (inclusive).","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mcheck before 2/10/2025 6am\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mcheck after 【date/time】\\033[0m: Lists tasks after a specified date/time (inclusive).","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mcheck after 2/10/2025 2359\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"               \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"                ➤ ✔️ Mark Tasks:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mmark 【index】\\033[0m: Marks a task as complete.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mmark 1\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1munmark 【index】\\033[0m: Marks a task as incomplete.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3munmark 1\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"               \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"                ➤ 🗑️ Delete Tasks:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mdelete 【index】\\033[0m: Deletes a task from the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mdelete 2\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mreset\\033[0m: Resets and deletes the entire saved list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"               \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"                ➤ 📴 Exit:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mbye\\033[0m: Exits the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"               \\s","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"                ➤ ℹ️ Formating Notice:","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mIndex Numbers\\033[0m: I am able to parse both words and integers.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3mmark one, delete thirteen\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mDate Format\\033[0m: I am strictly only allowing dd/mm/yyyy format. Sorry Americans!","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3m31/12/2025, 31-12-2025, 31 12 2025\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"                   ╰┈➤ \\033[1mTime Format\\033[0m: I am able to parse both 12 (AM/PM) \u0026 24 Hour formats.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"                        Eg: \"\\033[3m12am, 11:59pm, 11.59pm, 2359, 23:59, 23.59\\033[0m\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"              \\s\"\"\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"    //endregion\\","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"     * Prints a visual divider line to the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"     * This is used to separate sections of the output for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"    public static void sayLine() { System.out.println(DIVIDER); }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"     * Prints text to the console with a typing effect, simulating a character-by-character display.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"     * This method is useful for creating a more interactive and engaging user experience.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"     * @param text     The text to be printed to the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"     * @param duration The delay (in milliseconds) between printing each character.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"     *                A smaller value results in faster typing, while a larger value slows it down.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"    public static void saySlowly(String text, int duration)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"        // Print each character with a delay to simulate a typing effect","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"        for (int i \u003d 0; i \u003c text.length(); i++)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"            System.out.print(text.charAt(i));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"                Thread.sleep(duration);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"                Thread.currentThread().interrupt(); // Restore the interrupted status","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"     * Displays the welcome message when the Amadeus application starts.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"     * This includes the Amadeus logo, a login sequence, and an introduction.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"    public static void sayWelcome()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(\"User ID: \\033[1mSalieri\\033[0m\\n\\033[3mLogging in...\\033[0m\\n\\033[3mLaunching...\\033[0m\\n\", 50);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(AMADEUS, 1); // Amadeus Logo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(\"\"\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"                Nice to meet you, I\u0027m Kurisu Makise, a.k.a. \\033[1mAmadeus\\033[0m.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"                I look forward to working with you.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"                Type \"\\033[1mcommands\\033[0m\" to see what I can do!","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"                \"\"\",10);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"     * Displays the farewell message when the Amadeus application is exiting.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"     * This includes a thematic goodbye message and the Amadeus catchphrase.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"    public static void sayGoodbye()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(\"Goodbye. May our timelines converge once more.\\n\\033[1mEl Psy Kongroo\\033[0m\\n\",30);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"     * Displays the list of available commands to the user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"     * The commands are formatted with styling (bold and italic) for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"    public static void sayCommands()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(COMMANDS,1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"     * Displays the current list of tasks to the user, organized by type (Deadlines, Events, ToDos).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"     * If the list is empty, a message indicating no pending tasks is shown.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"     * @param taskList The list of tasks to display.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"    public static void sayList(ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"        // Check if the task list is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Markneoneo"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"            System.out.println(\"⚠️ There are currently no pending tasks!\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"✍️ You currently have 【%s】 pending tasks!\\n\\n\", taskList.size());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Markneoneo"},"content":"        // Track which section titles have been printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"        // Index 0: Deadlines, Index 1: Events, Index 2: ToDos, Index 3: Misc Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"        boolean[] titlePrinted \u003d new boolean[4];","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Markneoneo"},"content":"        for (Task task : taskList)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Markneoneo"},"content":"            if (task instanceof Deadline \u0026\u0026 !titlePrinted[0])","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"⚠️\\033[1mDEADLINES\\033[0m⚠️\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[0] \u003d true; // Mark Deadlines title as printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Markneoneo"},"content":"            else if (task instanceof Event \u0026\u0026 !titlePrinted[1])","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Markneoneo"},"content":"                if (index \u003e 0) { System.out.println(); } // Add a newline before the section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"\\uD83C\\uDF38\\033[1mEVENTS\\033[0m\\uD83C\\uDF38\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[1] \u003d true; // Mark Events title as printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Markneoneo"},"content":"            else if (task instanceof ToDo \u0026\u0026 !titlePrinted[2])","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Markneoneo"},"content":"                if (index \u003e 0) { System.out.println(); } // Add a newline before the section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"\\uD83D\\uDCCB\\033[1mTODO LIST\\033[0m\\uD83D\\uDCCB\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[2] \u003d true; // Mark ToDos title as printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Markneoneo"},"content":"            // Print out task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Markneoneo"},"content":"            System.out.print(index + \". \");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Markneoneo"},"content":"            task.printTask();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that a task has been successfully added to the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Markneoneo"},"content":"     * The task type and details are displayed with formatting for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Markneoneo"},"content":"     * @param task     The task that was added.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Markneoneo"},"content":"     * @param taskType The type of the task (e.g., \"DEADLINE\", \"EVENT\", \"TODO\").","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskAdded(Task task, String taskType)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Markneoneo"},"content":"        System.out.printf(\"✍️ Understood! The following \\033[1m%s\\033[0m has been stored:\\n╰┈➤ %s%n\", taskType, task);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that a task has been marked as complete or incomplete.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Markneoneo"},"content":"     * The task index and new status are displayed with formatting for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Markneoneo"},"content":"     * @param index  The index of the task that was marked.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Markneoneo"},"content":"     * @param status The new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskMarked(int index, boolean status)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Markneoneo"},"content":"        System.out.printf(\"✍️ Understood, the following task has been set to %s\\n╰┈➤ %d. \",","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Markneoneo"},"content":"                status ? \"\\033[1mComplete\\033[0m ✔️. Well Done!\" : \"\\033[1mIncomplete\\033[0m ❌. Keep it up!\", index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that a task has been successfully deleted from the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Markneoneo"},"content":"     * The task index is displayed with formatting for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Markneoneo"},"content":"     * @param index The index of the task that was deleted.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskDeleted(int index)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Markneoneo"},"content":"        System.out.printf(\"🗑️ Understood, the following task has been deleted:\\n╰┈➤ %s. \", index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that all tasks have been reset and the task list is now empty.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskReset()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(\"🗑️ All tasks have been deleted. The task list is now empty.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":280}},{"path":"src/main/java/amadeus/workspace/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"public class Deadline extends Task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    // The due date/time of the deadline task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    protected Object by;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a Deadline task with a name and due date/time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * @param by   The deadline by which the task must be completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    public Deadline(String name, Object by)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a Deadline task with a name, completion status and due date/time.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     * @param done  A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * @param by   The deadline by which the task must be completed.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    public Deadline(String name, boolean done, Object by)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        super(name, done);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     * Returns the due date/time of the deadline task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * @return The due date/time of the deadline task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"    public Object getBy()","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"        return by;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the Deadline, including its name","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     * and due date/time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     * @return A formatted string representing the deadline details.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"    public String toString()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"        return name + \" ⏰Due by:【\" + DateConverter.formatDate(by) + \"】\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     * Converts the Deadline task to a file-friendly format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     * The format is: `D | \u003cisDone\u003e | \u003cdescription\u003e | \u003cby\u003e`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     * @return A string representation of the Deadline task in a format suitable for saving to a file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"    public String toFileFormat()","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"        String byFormatted \u003d dateFileFormat(by);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + name + \" | \" + byFormatted;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"     * Formats a date or date-time object into a string for saving to a file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"     * @param date The date or date-time object to format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"     * @return The formatted date string.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"    private String dateFileFormat(Object date)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDateTime) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        } else if (date instanceof LocalDate) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDate) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":102}},{"path":"src/main/java/amadeus/workspace/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Represents a scheduled event task with a start and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"public class Event extends Task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    // The start date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    protected Object from;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    // The end date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    protected Object to;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an Event task with a name, start time, and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * @param to   The end date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    public Event(String name, Object from, Object to)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an Event task with a name, completion status, start time, and end time.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     * @param done  A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * @param to   The end date/time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    public Event(String name, boolean done, Object from, Object to)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        super(name, done);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * Returns the start date/time of the event.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * @return The start date/time of the event.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    public Object getFrom()","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"        return from;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the Event, including its name,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     * start time, and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * @return A formatted string representing the event details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"    public String toString()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"        return name + \" \\uD83D\\uDE80From:【\" + DateConverter.formatDate(from) + \"】 \\uD83D\\uDEA9To:【\" + DateConverter.formatDate(to) + \"】\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     * Converts the Event task to a file-friendly format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     * The format is: `E | \u003cisDone\u003e | \u003cdescription\u003e | \u003cfrom\u003e | \u003cto\u003e`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * @return A string representation of the Event task in a format suitable for saving to a file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"    public String toFileFormat()","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        String fromFormatted \u003d dateFileFormat(from);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"        String toFormatted \u003d dateFileFormat(to);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + name + \" | \" + fromFormatted + \" | \" + toFormatted;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"     * Formats a date or date-time object into a string for saving to a file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"     * @param date The date or date-time object to format.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"     * @return The formatted date string.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"    private String dateFileFormat(Object date)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDateTime) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        } else if (date instanceof LocalDate) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDate) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":109}},{"path":"src/main/java/amadeus/workspace/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Abstract base class representing a generic task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class provides the foundational properties and methods for tasks, including","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * a name, completion status, and methods to update and display task details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * Subclasses can extend this class to create specific task types (Deadline, Event, ToDo).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"public abstract class Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    // The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    protected String name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    // The completion status of the task (true if complete, false if incomplete).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * Initializes a new Task with the given name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * The task is marked as incomplete by default.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * @param input The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    public Task(String input)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"        this.name \u003d input;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * Initializes a new Task with the given name and completion status.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     * @param input The name or description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * @param done  A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"    public Task(String input, boolean done)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        this.name \u003d input;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    public String getName()","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        return name;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * Updates the completion status of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * @param status The new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    public void updateDone(boolean status)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the task, which is its name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"     * @return The name or description of the task as a String.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"    public String toString()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"        return this.name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     * Prints the task\u0027s name and completion status to the console.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     * If the task is complete, a checkmark (✔️) is displayed next to the name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"    public void printTask()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"        System.out.print(this + (isDone ? \" ✔️\" : \"\") + \"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"     * Converts the task to a file-friendly format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"     * Subclasses must implement this method.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"     * @return A string representation of the task in a format suitable for saving to a file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":89}},{"path":"src/main/java/amadeus/workspace/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Manages the list of tasks in the Amadeus application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class provides methods to add, mark, delete, and reset tasks, ensuring","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * that changes are saved to the database and communicated to the user via speech.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.Database;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"public class TaskList","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * ArrayList to store all tasks, categorized by type (Deadline, Event, ToDo, etc.).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * The list is initialized by loading tasks from the database when the program starts.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    public static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * Loads tasks from the database when the program starts.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * If an error occurs during loading, a runtime exception is thrown.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    static {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"            taskList \u003d Database.load();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"        } catch (AmadeusException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * Returns the current saved Task List","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     * @return The current saved Task List","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    public static ArrayList\u003cTask\u003e getTaskList()","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"        return taskList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"    //region Add Tasks to List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted at the end of the Deadline section, and the updated list is saved to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * The user is notified via speech that the task has been added.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     * @param d The Deadline task to add.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while saving the updated list to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    public static void addDeadline(Deadline d) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"        // Insert the Deadline task at the end of the Deadline section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 taskList.get(index) instanceof Deadline)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, d);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskAdded(d, \"DEADLINE\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted at the end of the Event section, and the updated list is saved to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     * The user is notified via speech that the task has been added.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * @param e The Event task to add.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while saving the updated list to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"    public static void addEvent(Event e) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        // Insert the Event task at the end of the Event section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 (taskList.get(index) instanceof Deadline || taskList.get(index) instanceof Event))","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, e);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskAdded(e, \"EVENT\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted at the end of the ToDo section, and the updated list is saved to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"     * The user is notified via speech that the task has been added.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"     * @param td The ToDo task to add.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while saving the updated list to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"    public static void addToDo(ToDo td) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"        // Insert the ToDo task at the end of the ToDo section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 (taskList.get(index) instanceof Deadline || taskList.get(index) instanceof Event || taskList.get(index) instanceof ToDo))","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, td);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskAdded(td, \"TODO\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"     * Marks a task as complete or incomplete based on the provided index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"     * The updated task status is saved to the database, and the user is notified via speech.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"     * @param index  The index of the task to update (1-based).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"     * @param status The new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the index is invalid or an error occurs while saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"    public static void markDone(int index, boolean status) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"            // Update the task\u0027s completion status","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"            taskList.get(index - 1).updateDone(status);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"            // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"            Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"            // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayTaskMarked(index, status);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"            // Print the updated task details","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"            taskList.get(index - 1).printTask();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"            // Out of Bounds Index Number Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidIndex();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"     * Deletes a task from the task list based on the provided index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"     * The updated list is saved to the database, and the user is notified via speech.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"     * @param index The index of the task to delete (1-based).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the index is invalid or an error occurs while saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"    public static void deleteTask(int index) throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"            // Remove the task at the specified index","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"            Task removedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"            // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"            Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"            // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayTaskDeleted(index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"            // Print the deleted task details","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"            removedTask.printTask();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"            // Out of Bounds Index Number Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidIndex();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"     * Resets the task list by clearing all tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"     * The updated list is saved to the database, and the user is notified via speech.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If an error occurs while saving the updated list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"    public static void resetList() throws AmadeusException","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Markneoneo"},"content":"        // Clear all tasks from the list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"        taskList.clear();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskReset();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":204}},{"path":"src/main/java/amadeus/workspace/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Represents a simple task with no specific date or time constraints.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"public class ToDo extends Task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a ToDo task with a given name or description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    public ToDo(String name)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a ToDo task with a given name and completion status.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * @param name  The name or description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * @param done  A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    public ToDo(String name, boolean done) { super(name, done); }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * Converts the ToDo task to a file-friendly format.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * The format is: `T | \u003cisDone\u003e | \u003cdescription\u003e`","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * @return A string representation of the ToDo task in a format suitable for saving to a file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    public String toFileFormat()","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + name;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":39}},{"path":"text-ui-test/Amadeus Test Cases.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"    *** Unit Test Cases (for input.txt testing) ***","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"These test cases represent different user interactions with the chatbot. ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"They are organized into categories for better readability and testing coverage.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"    1. Initial Setup and List Management","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"➤ Check if able to parse existing saved list","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Verify that the chatbot can load and parse tasks from a saved file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"- Input: `list`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot should display the list of tasks from the file without errors.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"➤ Execute reset list command","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Test the `reset` command to clear all tasks.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"- Input: `reset`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: All tasks are deleted, and the chatbot confirms the reset.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"➤ Check if Empty Task List","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Verify behavior when the task list is empty.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"- Input: `list`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays a message indicating no pending tasks.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    2. Adding Tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"➤ Adding a ToDo Task","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Ensure ToDo tasks are added correctly.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"- Input: `todo Buy groceries`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following TODO has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ Buy groceries","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"➤ Adding a ToDo with Missing Description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Check error handling for missing input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"- Input: `todo`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Please provide the TODO task name/description!","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"➤ Add extra ToDo (4th task) to delete later","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Add an additional task for deletion testing.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"- Input: `todo Read a book`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following TODO has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ Read a book","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    3. Test Cases for Event Tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"Event tasks require a start time (`/from`) and an end time (`/to`). Test cases include valid and invalid inputs for both dates and times.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"    *** Valid Inputs ***","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"➤ Date Only (No Time)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"- Input: `event project meeting /from 2/12/2019 /to 3/12/2019`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following EVENT has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ project meeting (from: 2/12/2019 to: 3/12/2019)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (12-hour format)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"- Input: `event team lunch /from 2/12/2019 12:00PM /to 2/12/2019 1:00PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following EVENT has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ team lunch (from: 2/12/2019 12:00PM to: 2/12/2019 1:00PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (24-hour format)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"- Input: `event conference /from 2/12/2019 1400 /to 2/12/2019 1800`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following EVENT has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ conference (from: 2/12/2019 1400 to: 2/12/2019 1800)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Mixed Formats)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"- Input: `event workshop /from 2-12-2019 6.30AM /to 2-12-2019 12.00PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following EVENT has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ workshop (from: 2-12-2019 6.30AM to: 2-12-2019 12.00PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Different Delimiters)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"- Input: `event party /from 2 12 2019 6PM /to 2 12 2019 10PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following EVENT has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ party (from: 2 12 2019 6PM to: 2 12 2019 10PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Case-Insensitive AM/PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"- Input: `event dinner /from 2/12/2019 6pm /to 2/12/2019 8pm`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following EVENT has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ dinner (from: 2/12/2019 6pm to: 2/12/2019 8pm)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Single-Digit Day/Month)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"- Input: `event meeting /from 1/1/2023 9:00AM /to 1/1/2023 10:00AM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following EVENT has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ meeting (from: 1/1/2023 9:00AM to: 1/1/2023 10:00AM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"    *** Invalid Inputs ***","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"➤ Missing `/from` or `/to`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"- Input: `event project meeting /from 2/12/2019`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid EVENT format! Use: \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"➤ Invalid Date Format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"- Input: `event workshop /from 12-2-2019 /to 13-2-2019`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid EVENT format! Use: \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"➤ Invalid Time Format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"- Input: `event team lunch /from 2/12/2019 12:60PM /to 2/12/2019 1:00PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid EVENT format! Use: \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"➤ End Time Before Start Time","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"- Input: `event conference /from 2/12/2019 6:00PM /to 2/12/2019 5:00PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid EVENT format! Use: \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"➤ Empty Input","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"- Input: `event`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Please provide the EVENT task name/description!","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"    4. Test Cases for Deadline Tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"Deadline tasks require a due date (`/by`). Test cases include valid and invalid inputs for dates and times.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"    *** Valid Inputs ***","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"➤ Date Only (No Time)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline project submission /by 2/12/2019`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ project submission (by: 2/12/2019)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (12-hour format)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline report /by 2/12/2019 6:00PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ report (by: 2/12/2019 6:00PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (24-hour format)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline presentation /by 2/12/2019 1800`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ presentation (by: 2/12/2019 1800)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Mixed Formats)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline review /by 2-12-2019 6.30AM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ review (by: 2-12-2019 6.30AM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Different Delimiters)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline meeting /by 2 12 2019 6PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ meeting (by: 2 12 2019 6PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Case-Insensitive AM/PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline dinner /by 2/12/2019 6pm`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ dinner (by: 2/12/2019 6pm)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Markneoneo"},"content":"➤ Date with Time (Single-Digit Day/Month)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline task /by 1/1/2023 9:00AM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ task (by: 1/1/2023 9:00AM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Markneoneo"},"content":"    *** Invalid Inputs ***","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Markneoneo"},"content":"➤ Missing `/by`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline project submission`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid DEADLINE format! Use: \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Markneoneo"},"content":"➤ Invalid Date Format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline report /by 12-2-2019`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid DEADLINE format! Use: \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Markneoneo"},"content":"➤ Invalid Time Format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline presentation /by 2/12/2019 12:60PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid DEADLINE format! Use: \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Markneoneo"},"content":"➤ Empty Input","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Please provide the DEADLINE task name/description!","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Markneoneo"},"content":"  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Markneoneo"},"content":"    5. Edge Cases","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Markneoneo"},"content":"➤ Leap Year","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline leap year /by 29/2/2024`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ leap year (by: 29/2/2024)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Markneoneo"},"content":"➤ Non-Leap Year","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline non-leap year /by 29/2/2023`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid DEADLINE format! Use: \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Markneoneo"},"content":"➤ Time at Midnight","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline midnight /by 2/12/2019 12:00AM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ midnight (by: 2/12/2019 12:00AM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Markneoneo"},"content":"➤ Time at Noon","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Markneoneo"},"content":"- Input: `deadline noon /by 2/12/2019 12:00PM`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the addition of the task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood! The following DEADLINE has been stored:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ noon (by: 2/12/2019 12:00PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Markneoneo"},"content":"    6. Marking and Unmarking Tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Markneoneo"},"content":"➤ Marking a Task as Complete","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Verify marking functionality.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Markneoneo"},"content":"- Input: `mark 1`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the task is marked as complete:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood, the following task has been set to Complete ✔️. Well Done!  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 1. [T][X] Buy groceries","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Markneoneo"},"content":"➤ Marking a Task as Complete (Non-Numeric)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Ensure error handling for invalid input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Markneoneo"},"content":"- Input: `mark one`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid Task Index! Please provide a valid number.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Markneoneo"},"content":"➤ List tasks to check marking","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Verify the task list reflects the updated status.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Markneoneo"},"content":"- Input: `list`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays the task list with the marked task:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Markneoneo"},"content":"  ✍️ You currently have 【3】 pending tasks!  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 1. [T][X] Buy groceries  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 2. [E][ ] project meeting (from: 2/12/2019 to: 3/12/2019)  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 3. [D][ ] report (by: 2/12/2019 6:00PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Markneoneo"},"content":"➤ Marking a Task as Incomplete","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Verify unmarking functionality.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Markneoneo"},"content":"- Input: `unmark 1`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the task is marked as incomplete:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Markneoneo"},"content":"  ✍️ Understood, the following task has been set to Incomplete ❌. Keep it up!  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 1. [T][ ] Buy groceries","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Markneoneo"},"content":"➤ Marking a Task as Incomplete (Non-Numeric)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Validate incorrect unmarking input.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Markneoneo"},"content":"- Input: `unmark one`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid Task Index! Please provide a valid number.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Markneoneo"},"content":"➤ Invalid Task Index (Mark/Unmark)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Ensure proper handling of out-of-range indexes.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Markneoneo"},"content":"- Input: `mark 10`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Task Index not found! Please try again.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Markneoneo"},"content":"➤ Missing Task Index (Mark/Unmark)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Validate missing index scenario.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Markneoneo"},"content":"- Input: `mark`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Missing Task Index! Please provide desired number.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Markneoneo"},"content":"    7. Deleting Tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Markneoneo"},"content":"➤ Deleting a Task","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Test task deletion.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Markneoneo"},"content":"- Input: `delete 1`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot confirms the task is deleted:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Markneoneo"},"content":"  🗑️ Understood, the following task has been deleted:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 1. [T][ ] Buy groceries","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Markneoneo"},"content":"➤ Invalid Task Index (Delete)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Ensure proper handling of out-of-range indexes.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Markneoneo"},"content":"- Input: `delete 10`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Task Index not found! Please try again.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Markneoneo"},"content":"➤ Missing Task Index (Delete)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Validate missing index scenario.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Markneoneo"},"content":"- Input: `delete`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Missing Task Index! Please provide desired number.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Markneoneo"},"content":"    8. Listing Tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Markneoneo"},"content":"➤ Listing All Tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Check if the final task list to save is displayed correctly.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Markneoneo"},"content":"- Input: `list`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays the task list:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Markneoneo"},"content":"  ✍️ You currently have 【2】 pending tasks!  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 1. [E][ ] project meeting (from: 2/12/2019 to: 3/12/2019)  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Markneoneo"},"content":"  ╰┈➤ 2. [D][ ] report (by: 2/12/2019 6:00PM)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Markneoneo"},"content":"    9. Miscellaneous","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Markneoneo"},"content":"➤ Check if garbage input throws exceptions","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Markneoneo"},"content":"- Purpose: Verify error handling for invalid commands.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Markneoneo"},"content":"- Input: `randomcommand`","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Markneoneo"},"content":"- Expected Output: The chatbot displays an error message:  ","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Markneoneo"},"content":"  ⚠️ Invalid Command! Please type \u0027commands\u0027 to see what I can","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Markneoneo"},"content":"  ```","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Markneoneo":404}},{"path":"text-ui-test/Memory.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"D | 0 | leap year | 29/2/2024","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"D | 0 | non-leap year | 28/2/2023","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"D | 0 | midnight | 31/12/2025 0000","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"D | 0 | noon | 31/12/2025 1200","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 30/12/2025 | 31/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 31/12/2025 1400 | 31/12/2025 1600","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 31/12/2025 1400 | 31/12/2025 1600","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 31/12/2025 1400 | 31/12/2025 1600","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"T | 1 | Buy groceries","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Markneoneo":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"reset","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"todo","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"todo Read a book","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31-12-2025 9.00AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31 12 2025 9am","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"deadline","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31/12/2025 12:60","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"deadline leap year /by 29/2/2024","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"deadline non-leap year /by 29/2/2023","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"deadline midnight /by 31/12/2025 12:00AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"deadline noon /by 31/12/2025 12:00PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 30/12/2025 /to 31-12-2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31/12/2025 1400 /to 31 12 2025 16:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31-12-2025 14.00 /to 31/12/2025 4pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31 12 2025 2:00PM /to 31-12-2025 4.00pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"event","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"event Team meeting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31/12/2025 /to 30/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 12/30/2025 /to 12/31/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 30/12/2025 /to 31/12/2025 12pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"mark 1","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"mark nine","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"mark thirteen","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"unmark 1","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"unmark nine","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"mark","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"unmark","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"mark 10 twenty","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"unmark three 100","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"delete 14","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"delete","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"delete hundred","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"Read a book","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"find meeting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"find","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"check","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"check before","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"check this out","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"check 31 12 2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"check 31/12/2025 9:00AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"check before 31-12-2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"check before 31/12/2025 12pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"check after 31 12 2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"check after 31-12-2025 1200","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"bye","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Markneoneo":54}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"if exist FULL_OUTPUT.TXT del FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"if exist SKIP_INTRO.TXT del SKIP_INTRO.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"javac -encoding UTF-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\amadeus\\*.java","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin amadeus.Amadeus \u003c input.txt \u003e FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"REM Skips the Amadeus Introduction for comparison","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"powershell -Command \"Get-Content FULL_OUTPUT.TXT | Select-Object -Skip 43 | Set-Content SKIP_INTRO.TXT\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"FC SKIP_INTRO.TXT EXPECTED.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    echo The contents of SKIP_INTRO.TXT and EXPECTED.TXT do not match.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    exit /b 1","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":") ELSE (","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    echo The contents of SKIP_INTRO.TXT and EXPECTED.TXT match.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    exit /b 0","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":")","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Markneoneo":18,"-":16}}]
