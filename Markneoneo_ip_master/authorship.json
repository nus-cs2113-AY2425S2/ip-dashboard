[{"path":"src/main/java/amadeus/Amadeus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * The main class for the Amadeus chatbot interface.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * Handles startup, shutdown messages, and user interaction.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.command.UserInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"public class Amadeus","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"    private static final String DIVIDER \u003d \"\u003d\".repeat(100);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    //region Amadeus Logo","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    private static final String AMADEUS \u003d","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"            \"\"\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"                                                                                   @","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"                                                                              @@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"                                                                           @@@@@@#@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"                                                                         @@@@@@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"                                                                       @@@@@@@  @@ @","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"                                                                    @@@@@@@:    @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"                                                                  @@@@@@@       @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"                                                               -@@@@@@#         @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"                                                             @@@@@@@            @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"                                                           @@@@@@@              @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"                                                         @@@@@@\u003d                @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"                                                      @@@@@@@                   @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"                                                   +@@@@@@\u003d                     @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"                                                 @@@@@@@                        @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"                                               @@@@@@@                          @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"                                             @@@@@@#                            @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"                                          @@@@@@@+                              @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"                                       @@@@@@@#        @@@@@@@@@@@@@@@@@@@@@@@  @@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"                                     @%#@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@\u003d@@@@@@@@@@@@@@@@@#-","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"                                   #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\u003d+         @@ @@@@@@@@@@@@@@@@%@@@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"                                 @@%@@@@                                     @@                       @@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"                              @@@@@@@@ @@@@@@@@@@@@@@@ @@@@@@@@@@@ @@@@@@@@@@@@ @@@@@@@@@@@@ @@       @@@ @@@@@@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"                            @@@#@@@    @@@   @@    @@@         @@@ @@#       @@ @@       @@@ @@       @@@ @@        \\s","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"                         @@@@@@@@      @@@   @@    @@@ @@@@@@@@@@@ @@@       @@ @@@@@@@@@@@@ @@       @@@ @@@@@@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"                       @@@@@@@         @@@   #@    @@@ @@       @@ @@@       @@ @@           @@       @@%          @@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"                     @@@@@@@@@@@@@@@@@@@@@   @@    @@@ @@@@@@@@@@@ @@@@@@@@@@@@ @@@@@@@@@@@@ @@@@@@@@@@@ @@@@@@@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"                                                   @@-                                         @@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"                                                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"                                                                                  @@@@@@@@+","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@@@@@-","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"                                                                                @@@","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"                                                                                @","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"                    \"\"\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     * Prints a string to the console with a typing effect.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * @param text The text to be printed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     * @param duration The delay (in milliseconds) between each character.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"    public static void printSlow(String text, int duration)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        for (int i \u003d 0; i \u003c text.length(); i++)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"            System.out.print(text.charAt(i));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"                Thread.sleep(duration);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"                Thread.currentThread().interrupt();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     * Displays the boot sequence when Amadeus starts.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     * Shows login messages and an introduction.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"    public static void logIn()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"        printSlow(\"User ID: Salieri\\nLogging in...\\nLaunching...\\n\", 50);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"        printSlow(AMADEUS, 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"        printSlow(\"\"\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"                Nice to meet you, I\u0027m Kurisu Makise, a.k.a. Amadeus.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"                I look forward to working with you.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"                \"\"\",10);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     * Displays shutdown messages when Amadeus is exiting.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"     * Prints a farewell message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"    public static void logOff()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        printSlow(\"Goodbye. May our timelines converge once more.\\nEl Psy Kongroo\\n\",30);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"        logIn();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"        UserInput.getCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        logOff();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"    /* input.txt Test Cases","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"    ➤ Empty Task List","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"    ➤ Adding a ToDo Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"    ➤ Adding a ToDo with Missing Description","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"    ➤ Adding a Deadline Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"    ➤ Invalid Deadline Format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"    ➤ Adding a Deadline with Missing Description","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"    ➤ Adding an Event Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"    ➤ Invalid Event Format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"    ➤ Adding an Event with Missing Description","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"    ➤ Adding a Generic Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"    ➤ Marking a Task as Complete","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"    ➤ Marking a Task as Incomplete (Non-Numeric)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"    ➤ Invalid Task Index (Mark/Unmark)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"    ➤ Missing Task Index (Mark/Unmark)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"    ➤ Listing All Tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"    ➤ Exiting the Application","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"    */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Markneoneo":127}},{"path":"src/main/java/amadeus/command/AmadeusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Custom exception class for Amadeus-specific errors.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class extends the built-in Exception class and provides constructors","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * for creating exceptions with custom error messages.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"public class AmadeusException extends Exception","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an AmadeusExceptions with a custom error message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * @param message The custom error message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    public AmadeusException(String message)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"        super(message);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Markneoneo":20}},{"path":"src/main/java/amadeus/command/NumberConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * A utility class for converting written number words into their numeric equivalents.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This implementation follows a rule-based approach without relying on a hash map","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * to allow flexibility and expansion.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"package amadeus.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.util.*;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * Implements rule-based number conversion from words to integers.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * Handles numbers up to the thousands.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * Supports numbers with hyphens (e.g., \"twenty-one\") by replacing hyphens with spaces.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * Ignores the word \"and\" for better parsing.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * Ensures incorrect inputs return -1 as an error indicator.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"public class NumberConverter","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of unit numbers (one to nineteen) to their integer values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e UNITS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"one\", 1), Map.entry(\"two\", 2), Map.entry(\"three\", 3),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"four\", 4), Map.entry(\"five\", 5), Map.entry(\"six\", 6),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"seven\", 7), Map.entry(\"eight\", 8), Map.entry(\"nine\", 9),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"ten\", 10), Map.entry(\"eleven\", 11), Map.entry(\"twelve\", 12),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"thirteen\", 13), Map.entry(\"fourteen\", 14), Map.entry(\"fifteen\", 15),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"sixteen\", 16), Map.entry(\"seventeen\", 17), Map.entry(\"eighteen\", 18),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"nineteen\", 19)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of tens multiples (twenty to ninety) to their integer values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e TENS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"twenty\", 20), Map.entry(\"thirty\", 30), Map.entry(\"forty\", 40),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"fifty\", 50), Map.entry(\"sixty\", 60), Map.entry(\"seventy\", 70),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"eighty\", 80), Map.entry(\"ninety\", 90)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of large number multipliers (hundred, thousand) to their values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e MULTIPLIERS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"hundred\", 100), Map.entry(\"thousand\", 1000)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * Converts a number written in words into its integer representation.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * Supports numbers from \"one\" to \"nine thousand nine hundred ninety-nine.\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * Handles compound numbers like \"twenty-one\" or \"three hundred and five.\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * Ignores the word \"and\" for natural language compatibility.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * Returns -1 if input is invalid or contains unrecognized words.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * @param input The number written in words (e.g., \"two hundred forty-five\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * @return The integer representation of the input word, or -1 for invalid input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    public static int wordToNumber(String input)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) { return -1; } // Invalid Input","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        // Splits the input into an array of words using spaces/tabs/newlines as delimiters","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        String[] words \u003d input.toLowerCase().replaceAll(\"-\", \" \").split(\"\\\\s+\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"        int result \u003d 0; // Final number","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"        int current \u003d 0; // Value of the current segment","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"        for (String word : words)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"            if (UNITS.containsKey(word))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"                current +\u003d UNITS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"            else if (TENS.containsKey(word))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"                current +\u003d TENS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"            else if (MULTIPLIERS.containsKey(word))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                int multiplier \u003d MULTIPLIERS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"                if (multiplier \u003d\u003d 100)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"                {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"                    current *\u003d multiplier; // Handle \"hundred\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"                } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"                    current *\u003d multiplier; // Handle \"thousand\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"                    result +\u003d current; // Add to the final result","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"                    current \u003d 0; // Reset for the next part","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"            else if (!word.equals(\"and\"))","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"                return -1; // Invalid word","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        return result + current;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"        // Test Cases","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"two hundred and forty-five\")); // 245","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"three thousand one hundred\")); // 3100","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"nine hundred ninety-nine\")); // 999","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":104}},{"path":"src/main/java/amadeus/command/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Manages the storage, organization, and manipulation of tasks in the application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class provides methods to add, update, and display tasks, ensuring they are","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * categorized and displayed in a structured manner (e.g., Deadlines, Events, ToDos).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * Tasks are stored in an ArrayList and can be marked as complete or incomplete.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"package amadeus.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.task.*;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"public class TaskList","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    // ArrayList to store all tasks, categorized by type (Deadline, Event, ToDo, etc.).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * The input string is expected to contain a description and a due date, separated by \"/by\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted into the appropriate section of the list (after existing Deadlines).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task description and due date (e.g., \"return book /by Sunday\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input format is invalid.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    public static void storeDeadline(String input) throws AmadeusException","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d input.split(\" /by \", 2); // Split into description and date","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        if (parts.length !\u003d 2)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            throw new AmadeusException(\"⚠️Invalid deadline format! Use: \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        Deadline d \u003d new Deadline(name, by);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 taskList.get(index) instanceof Deadline)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, d); // Insert at the end of the Deadline section","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(\"✍️Understood! The following Deadline has been stored:\\n╰┈➤ \" + d);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * The input string is expected to contain a description, a start time, and an end time,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * separated by \"/from\" and \"/to\". The task is inserted into the appropriate section of","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * the list (after existing Deadlines and Events).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task description, start time, and end time","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     *              (e.g., \"project meeting /from Mon 2pm /to 4pm\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input format is invalid or cannot be parsed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    public static void storeEvent(String input) throws AmadeusException","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        Event e \u003d getEvent(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 (taskList.get(index) instanceof Deadline || taskList.get(index) instanceof Event))","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, e); // Insert at the end of the Event section","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(\"✍️Understood! The following Event has been stored:\\n╰┈➤ \" + e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     * Parses the input string to create a new Event task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     * The input string is expected to contain a description, a start time, and an end time,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     * separated by \"/from\" and \"/to\". If the input format is invalid, an AmadeusException is thrown.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     * @param input The user input containing the task description, start time, and end time","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     *              (e.g., \"project meeting /from Mon 2pm /to 4pm\").","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     * @return A new Event object created from the parsed input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the input format is invalid (e.g., missing \"/from\" or \"/to\").","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    private static Event getEvent(String input) throws AmadeusException","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d input.split(\" /from \", 2); // Split into description and from/to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"        String[] fromToParts \u003d parts[1].split(\" /to \", 2); // Split into from and to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"        if (parts.length !\u003d 2 || fromToParts.length !\u003d 2)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"            throw new AmadeusException(\"⚠️Invalid event format! Use: \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"        String from \u003d fromToParts[0].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        String to \u003d fromToParts[1].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        return new Event(name, from, to);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted into the appropriate section of the list (after existing Deadlines,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"     * Events, and ToDos).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"     * @param name The description or name of the ToDo task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"    public static void storeToDo(String name)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"        ToDo td \u003d new ToDo(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 (taskList.get(index) instanceof Deadline || taskList.get(index) instanceof Event || taskList.get(index) instanceof ToDo))","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, td); // Insert at the end of the ToDo section","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(\"✍️Understood! The following ToDo has been stored:\\n╰┈➤ \" + td);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"     * Adds a generic Task to the end of the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"     * This method is used for tasks that do not fall into the Deadline, Event, or ToDo categories.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"     * @param name The description or name of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"    public static void storeTask(String name)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"        Task t \u003d new Task(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(t); // Add generic tasks at the end","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(\"✍️Understood! The following Task has been stored:\\n╰┈➤ \" + t);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"     * Updates the completion status of a specific task in the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"     * The task is identified by its index, and its status is updated to either complete or incomplete.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"     * If the index is invalid, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"     * @param index  The index of the task to update (1-based).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"     * @param status The new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the task index is invalid.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"    public static void markDone(int index, boolean status) throws AmadeusException","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"            taskList.get(index - 1).updateDone(status);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"            System.out.print(\"✍️Understood, the following task has been set to\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"                    + (status ? \"〚Complete〛✔️. Well Done!\" : \"〚Incomplete〛❌. Keep it up!\")","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"                    + \"\\n╰┈➤ \" + index + \". \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"            taskList.get(index - 1).printTask();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"            throw new AmadeusException(\"⚠️Task Index not found! Please try again.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"     * Displays all tasks in the list, organized by category (Deadlines, Events, ToDos, Misc Tasks).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"     * Each task is printed with its index and details. If the list is empty, a message indicating","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"     * no pending tasks is shown.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"    public static void printTaskList()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"        if (taskList.isEmpty())","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"            System.out.println(\"⚠️There are currently no pending tasks!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"            System.out.println(\"✍️You currently have 【\" + taskList.size() + \"】 pending tasks!\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"        boolean[] titlePrinted \u003d new boolean[4]; // Boolean array to track printed titles","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"        // Index 0: Deadlines, Index 1: Events, Index 2: ToDos, Index 3: Misc Tasks","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"        for (Task task : taskList)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"            if (task instanceof Deadline \u0026\u0026 !titlePrinted[0])","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"⚠️DEADLINES⚠️\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[0] \u003d true; // Mark Deadlines title as printed","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"            else if (task instanceof Event \u0026\u0026 !titlePrinted[1])","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Markneoneo"},"content":"                if (index \u003e 0) { System.out.println(); } // Add a newline before the section","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"\\uD83C\\uDF38EVENTS\\uD83C\\uDF38\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[1] \u003d true; // Mark Events title as printed","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"            else if (task instanceof ToDo \u0026\u0026 !titlePrinted[2])","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"                if (index \u003e 0) { System.out.println(); } // Add a newline before the section","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"\\uD83D\\uDCCBTODO LIST\\uD83D\\uDCCB\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[2] \u003d true; // Mark ToDos title as printed","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"            else if (!(task instanceof Deadline || task instanceof Event || task instanceof ToDo) \u0026\u0026 !titlePrinted[3])","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"                if (index \u003e 0) { System.out.println(); } // Add a newline before the section","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"\\uD83D\\uDEE0️MISC TASKS\\uD83D\\uDEE0️\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[3] \u003d true; // Mark Misc Tasks title as printed","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"            System.out.print(index + \". \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Markneoneo"},"content":"            task.printTask();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":208}},{"path":"src/main/java/amadeus/command/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Handles user input and command processing for the application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class manages the parsing and execution of user commands, such as adding tasks,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * marking tasks as done, and listing tasks. It also provides a loop for continuous","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * user interaction until the exit command is received.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"package amadeus.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.util.Scanner; // Methods for input","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class UserInput","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    // Constants representing valid user commands","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    public final static String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    public final static String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    public final static String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    public final static String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    public final static String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    public final static String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    public final static String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    public static final String DIVIDER \u003d \"\u003d\".repeat(100);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    public static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * Continuously reads user input from the console and processes commands.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * The loop runs until the user mentions the exit command \u0027bye\u0027.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * Each command is executed using the `scanInput` method.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    public static void getCommand()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        String input;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        do {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"            input \u003d in.nextLine(); // User Input","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"                scanInput(input); // Execute Command","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"            } catch (AmadeusException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(e.getMessage()); // Print custom error message","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"            if (!input.toLowerCase().startsWith(BYE_COMMAND)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        } while(!input.toLowerCase().startsWith(BYE_COMMAND));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * Extracts a task index from the provided argument.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * The argument can be either a numeric string (e.g., \"1\") or a word representing a number (e.g., \"one\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * If the argument is invalid or cannot be converted to a number, -1 is returned.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     * @param argument The string containing the task index (numeric or word format).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * @return The task index as an integer, or -1 if the argument is invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    private static int extractIndex(String argument)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"            // Try parsing the argument as a number directly","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"            return Integer.parseInt(argument);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"            // If parsing fails, try converting words to a number","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            return NumberConverter.wordToNumber(argument);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     * Parses and executes the user\u0027s command based on the input string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     * The input is split into a command and an optional argument. The command is then","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     * matched against predefined constants to determine the appropriate action.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     * If the command requires an argument (e.g., marking a task), the argument is validated","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     * and processed accordingly. Invalid or missing arguments result in error messages.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     * @param input The full command input provided by the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException If the command or input is invalid.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"    public static void scanInput(String input) throws AmadeusException","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"        String[] words \u003d input.split(\" \", 2); // Split into command + optional argument","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"        String command \u003d words[0].toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"        String argument \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"        switch (command)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"            // Exits the command loop and terminates the interaction.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"            case BYE_COMMAND:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"            // Displays the current list of tasks to the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"            case LIST_COMMAND:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"                TaskList.printTaskList();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"            // Marks or unmarks a task as done based on the provided task index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"            // Displays an error if the index is missing or invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"            case MARK_COMMAND:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"            case UNMARK_COMMAND:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"                if (!argument.isEmpty())","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"                {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"                    int index \u003d extractIndex(argument); // Get Task Index","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"                    if (index !\u003d -1)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"                    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"                        TaskList.markDone(index, command.equals(MARK_COMMAND)); // Update status","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"                    } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"                        throw new AmadeusException(\"⚠️Invalid Task Index! Please provide a valid number.\"); // Invalid Number","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"                    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"                } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"                    throw new AmadeusException(\"⚠️Missing Task Index! Please provide desired number.\"); // No Number","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"            // Adds a new task of the specified type (deadline, event, or todo) using the provided argument.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"            // Displays an error if the task description is missing.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"            case DEADLINE_COMMAND:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"            case EVENT_COMMAND:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"            case TODO_COMMAND:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"                if (!argument.isEmpty())","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"                {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"                    switch (command)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"                    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"                        case DEADLINE_COMMAND -\u003e TaskList.storeDeadline(argument);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"                        case EVENT_COMMAND -\u003e TaskList.storeEvent(argument);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"                        case TODO_COMMAND -\u003e TaskList.storeToDo(argument);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"                    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"                } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"                    throw new AmadeusException(\"⚠️Please provide the \" + command.toLowerCase() + \" task name/description!\"); // No Argument","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"            // Adds a generic task using the full input as the task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"            default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"                TaskList.storeTask(input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":137}},{"path":"src/main/java/amadeus/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"public class Deadline extends Task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"    // The due date/time of the deadline task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"    protected String by;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a Deadline task with a name and due date/time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * @param by   The deadline by which the task must be completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    public Deadline(String name, String by)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the Deadline, including its name","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * and due date/time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * @return A formatted string representing the deadline details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    public String toString()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        return name + \" ⏰Due by:【\" + by + \"】\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":36}},{"path":"src/main/java/amadeus/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Represents a scheduled event task with a start and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"public class Event extends Task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"    // The start date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"    protected String from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    // The end date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    protected String to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an Event task with a name, start time, and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * @param to   The end date/time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    public Event(String name, String from, String to)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the Event, including its name,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     * start time, and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     * @return A formatted string representing the event details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    public String toString()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        return name + \" \\uD83D\\uDE80From:【\" + from + \"】 \\uD83D\\uDEA9To:【\" + to + \"】\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":40}},{"path":"src/main/java/amadeus/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Abstract base class representing a generic task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * This class provides the foundational properties and methods for tasks, including","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * a name, completion status, and methods to update and display task details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * Subclasses can extend this class to create specific task types (e.g., Deadline, Event, ToDo).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"package amadeus.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"public class Task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    // The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    protected String name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    // The completion status of the task (true if complete, false if incomplete).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * Initializes a new Task with the given name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * The task is marked as incomplete by default.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * @param input The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    public Task(String input)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"        this.name \u003d input;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * Updates the name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * @param input The new name or description for the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    public void setName(String input)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        this.name \u003d input;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     * Retrieves the name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * @return The name or description of the task as a String.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    public String getName()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        return this.name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * Checks whether the task is marked as complete.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * @return True if the task is complete, false if it is incomplete.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    public boolean getDone()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"        return isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     * Updates the completion status of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"     * @param status The new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"    public void updateDone(boolean status)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the task, which is its name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     * @return The name or description of the task as a String.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"    public String toString()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"        return this.name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * Prints the task\u0027s name and completion status to the console.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     * If the task is complete, a checkmark (✔️) is displayed next to the name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"    public void printTask()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        System.out.print(this + (isDone ? \" ✔️\" : \"\") + \"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":87}},{"path":"src/main/java/amadeus/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Represents a simple task with no specific date or time constraints.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"package amadeus.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"public class ToDo extends Task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a ToDo task with a given name or description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    public ToDo(String name)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"todo","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 2023-10-31","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"deadline","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 2023-10-25 2pm /to 4pm","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 2pm","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"event","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"Read a book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"mark 1","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"unmark one","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"mark 10 twenty","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"mark","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"bye","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Markneoneo":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"if exist FULL_OUTPUT.TXT del FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"if exist SKIP_INTRO.TXT del SKIP_INTRO.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"javac -encoding UTF-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Amadeus \u003c input.txt \u003e FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"REM Skips the Amadeus Introduction for comparison","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"powershell -Command \"Get-Content FULL_OUTPUT.TXT | Select-Object -Skip 42 | Set-Content SKIP_INTRO.TXT\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"FC SKIP_INTRO.TXT EXPECTED.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    echo The contents of SKIP_INTRO.TXT and EXPECTED.TXT do not match.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    exit /b 1","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":") ELSE (","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    echo The contents of SKIP_INTRO.TXT and EXPECTED.TXT match.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    exit /b 0","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":")","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Markneoneo":18,"-":17}}]
