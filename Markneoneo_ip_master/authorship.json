[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"# ‚ú® The Amadeus System ‚ú®","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"üëã **Greetings, I\u0027m Makise Kurisu, also known as Amadeus.**  ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"I‚Äôm your personal assistant for managing tasks. Whether you‚Äôre a busy scientist or just someone trying to stay organized, I‚Äôm here to help you keep track of everything. Let‚Äôs make this timeline a productive one!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"![Amadeus](https://github.com/user-attachments/assets/0e7ecd31-601c-4571-91c4-b1f3c84b11cd)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"## ‚úçÔ∏è What I Can Do","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"I‚Äôm designed to help you manage your tasks efficiently. Here‚Äôs what I can do for you:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"- **Add Tasks**: Keep track of your to-dos, deadlines, and events.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"- **View Tasks**: See all your tasks at a glance or search for specific ones.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"- **Mark Tasks**: Mark tasks as complete or incomplete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"- **Delete Tasks**: Remove tasks you no longer need.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"- **Reset Tasks**: Clear your entire task list if you want a fresh start.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"Using me is simple! Just type commands to add, view, or manage your tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"### To see the full list of commands, check out the [User Guide](https://markneoneo.github.io/ip/).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"## üôã‚Äç‚ôÄÔ∏è Why Choose Me?","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"- **Flexible Date Formats**: I understand dates and times in many formats, so you don‚Äôt have to worry about getting it \"just right.\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"- **Automatic Saving**: Your tasks are saved automatically, so you don‚Äôt have to lift a finger.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"- **User-Friendly**: I‚Äôm designed to be intuitive and easy to use, even if you‚Äôre not a tech genius.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"## üèÅ Getting Started","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"1. Download the latest version of `Amadeus` from [here](https://github.com/Markneoneo/ip).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"2. Open **IntelliJ** and Navigate to the folder where you saved the application and run in **Fullscreen**:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"   java -jar amadeus.jar","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"3. I‚Äôll greet you with a welcome message. Start typing commands, and I‚Äôll take care of the rest!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"## ‚ö†Ô∏è UI Compatibility","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"Amadeus uses **ANSI text formatting** and **UTF-8 emojis** for a rich experience. However, not all terminals may be compatible.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"- Ensure you run Amadeus in **Fullscreen** to avoid formatting issues.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"- **IntelliJ** will be the best Terminal to run Amadeus on as it displays coloured text and emojis.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"- If you see `?` appearing, it means the terminal is not able to parse emojis. Try the following commands:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"   - Set the code page to UTF-8 before running the JAR:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     chcp 65001","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     java -jar amadeus.jar","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"   - Run the JAR with explicit encoding:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     java -Dfile.encoding\u003dUTF-8 -jar Amadeus.jar","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     java \"-Dfile.encoding\u003dUTF-8\" -jar Amadeus.jar","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"   - For compiling:  ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     javac -encoding UTF-8 -d . amadeus/*.java","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     java -Dfile.encoding\u003dUTF-8 amadeus.Amadeus","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"- **Git Bash, Windows Terminal and MacOS**: These terminals work but may have unintended outputs such as:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"   - Uncoloured Emojis","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"   - Unable to parse certain text colours","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"   - Messed up text formatting","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"- **Windows PowerShell and CMD.exe**: These terminals work but **do not show emojis**. ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"  ","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"I hope you enjoy using me to manage your tasks. If you have any questions or feedback, feel free to reach out!","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"### El Psy Kongroo","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"![Amadeus 2](https://github.com/user-attachments/assets/b47e66c8-a0e7-49fa-b3de-bd85b138d3a2)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"Markneoneo":73,"-":10}},{"path":"docs/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"layout: default","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"title: Home","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"# User Guide for **Amadeus Task Manager**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"Welcome to **Amadeus Task Manager**, your personal assistant for managing tasks efficiently! Amadeus helps you keep track of your to-dos, deadlines, and events, ensuring you stay organized and productive.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"# [View Javadocs](javadoc/index.html)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"## Table of Contents","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"- [Features](#features)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"  - [Adding Tasks](#1-adding-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    - [Add a ToDo Task](#add-a-todo-task)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    - [Add a Deadline Task](#add-a-deadline-task)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    - [Add an Event Task](#add-an-event-task)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"  - [Viewing Tasks](#2-viewing-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    - [List All Tasks](#list-all-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    - [Find Tasks by Keyword](#find-tasks-by-keyword)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    - [Check Tasks by Date](#check-tasks-by-date)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"  - [Marking Tasks](#3-marking-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    - [Mark a Task as Complete](#mark-a-task-as-complete)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    - [Mark a Task as Incomplete](#mark-a-task-as-incomplete)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"  - [Deleting Tasks](#4-deleting-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    - [Delete a Task](#delete-a-task)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    - [Reset All Tasks](#reset-all-tasks)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"  - [Exiting the Chatbot](#5-exiting-the-chatbot)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"- [Notes](#notes)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"- [FAQ](#faq)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"## Quick Start","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"2. Download the latest version of `Amadeus` from [here](https://github.com/Markneoneo/ip).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"3. Navigate to the folder where you saved the application and run the following command:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"   ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"   java -jar amadeus.jar","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"   ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"4. Amadeus will greet you with a welcome message. You can start using the chatbot immediately!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"## ‚ö†Ô∏è UI Compatibility","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"Amadeus uses **ANSI text formatting** and **UTF-8 emojis** for a rich experience. However, not all terminals may be compatible.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"- Ensure you run Amadeus in **Fullscreen** to avoid formatting issues.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"- **IntelliJ** will be the best Terminal to run Amadeus on as it displays coloured text and emojis.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"- If you see `?` appearing, it means the terminal is not able to parse emojis. Try the following commands:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"   - Set the code page to UTF-8 before running the JAR:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     chcp 65001","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"     java -jar amadeus.jar","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"   - Run the JAR with explicit encoding:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     java -Dfile.encoding\u003dUTF-8 -jar Amadeus.jar","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     java \"-Dfile.encoding\u003dUTF-8\" -jar Amadeus.jar","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"   - For compiling:  ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     javac -encoding UTF-8 -d . amadeus/*.java","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     java -Dfile.encoding\u003dUTF-8 amadeus.Amadeus","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     ```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"- **Git Bash, Windows Terminal and MacOS**: These terminals work but may have unintended outputs such as:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"   - Uncoloured Emojis","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"   - Unable to parse certain text colours","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"   - Messed up text formatting","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"- **Windows PowerShell and CMD.exe**: These terminals work but **do not show emojis**. ","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"## Features","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"### 1. **Adding Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"Amadeus supports three types of tasks: **ToDo**, **Deadline**, and **Event**.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"#### Add a ToDo Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"Adds a simple task with no specific date or time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"todo DESCRIPTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"todo Buy groceries","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"#### Add a Deadline Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"Adds a task with a specific deadline.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"deadline DESCRIPTION /by DATE_TIME","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"- `DATE_TIME` can be in the following formats:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"  - Date only: `2/12/2025`, `2-12-2025`, or `2 12 2025`.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"  - Date and time (24-hour): `2/12/2025 1800`, `2/12/2025 18:00`, or `2/12/2025 18.00`.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"  - Date and time (12-hour): `2/12/2025 6pm`, `2/12/2025 6:00PM`, or `2/12/2025 6.30AM`.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31/12/2025","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"#### Add an Event Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"Adds a task with a start and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"- `START_DATE_TIME` and `END_DATE_TIME` follow the same format as `DATE_TIME` in the Deadline task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 1/1/2025 11:59pm /to 2/1/2025 12pm","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"### 2. **Viewing Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"#### List All Tasks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"Displays all tasks in your list, organized by type (Deadlines, Events, ToDos).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"#### Find Tasks by Keyword","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"Searches for tasks containing a specific keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"find KEYWORD","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"find meeting","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"#### Check Tasks by Date","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"Lists tasks occurring on, before, or after a specific date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"check [before/after] DATE_TIME","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"- Omit `before/after` to list tasks on the exact date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"**Examples:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"check 2/10/2025","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"check before 2/10/2025 6am","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"check after 2/10/2025 2359","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"### 3. **Marking Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"#### Mark a Task as Complete","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"Marks a task as done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"mark INDEX","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"- `INDEX` is the task number shown in the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"mark 1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Markneoneo"},"content":"#### Mark a Task as Incomplete","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Markneoneo"},"content":"Marks a task as not done.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Markneoneo"},"content":"unmark INDEX","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Markneoneo"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Markneoneo"},"content":"unmark 1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Markneoneo"},"content":"### 4. **Deleting Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Markneoneo"},"content":"#### Delete a Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Markneoneo"},"content":"Deletes a task from the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Markneoneo"},"content":"delete INDEX","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Markneoneo"},"content":"**Example:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Markneoneo"},"content":"delete 2","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Markneoneo"},"content":"#### Reset All Tasks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Markneoneo"},"content":"Clears all tasks from the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Markneoneo"},"content":"reset","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Markneoneo"},"content":"### 5. **Exiting the Chatbot**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Markneoneo"},"content":"Exits the chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Markneoneo"},"content":"**Format:**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Markneoneo"},"content":"bye","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Markneoneo"},"content":"## Command Summary","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Markneoneo"},"content":"| Command                | Format                                                                 |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Markneoneo"},"content":"|------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Markneoneo"},"content":"| **Add ToDo**           | `todo DESCRIPTION`                                                     |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Markneoneo"},"content":"| **Add Deadline**       | `deadline DESCRIPTION /by DATE_TIME`                                   |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Markneoneo"},"content":"| **Add Event**          | `event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME`            |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Markneoneo"},"content":"| **List Tasks**         | `list`                                                                 |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Markneoneo"},"content":"| **Find Tasks**         | `find KEYWORD`                                                         |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Markneoneo"},"content":"| **Check Tasks**        | `check [before/after] DATE_TIME`                                       |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Markneoneo"},"content":"| **Mark Task**          | `mark INDEX`                                                           |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Markneoneo"},"content":"| **Unmark Task**        | `unmark INDEX`                                                         |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Markneoneo"},"content":"| **Delete Task**        | `delete INDEX`                                                         |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Markneoneo"},"content":"| **Reset Tasks**        | `reset`                                                                |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Markneoneo"},"content":"| **Exit**               | `bye`                                                                  |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Markneoneo"},"content":"## Notes","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Markneoneo"},"content":"- **Date and Time Formats**: Amadeus supports flexible date and time formats. For example:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Markneoneo"},"content":"  - `2/12/2025`, `2-12-2025`, or `2 12 2025` for dates.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Markneoneo"},"content":"  - `6pm`, `6:00PM`, `1800`, or `18:00` for times.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Markneoneo"},"content":"- **Index Numbers**: You can use either numeric indices (e.g., `1`, `2`) or words (e.g., `one`, `two`) for commands like `mark`, `unmark`, and `delete`.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Markneoneo"},"content":"- **Error Handling**: If you enter an invalid command, Amadeus will display an error message with guidance on the correct format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Markneoneo"},"content":"## FAQ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Markneoneo"},"content":"**Q: How do I save my tasks?**  ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Markneoneo"},"content":"A: Tasks are automatically saved to a file (`Memory.txt`) in the same directory as the application. You don‚Äôt need to manually save anything.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Markneoneo"},"content":"**Q: Can I edit a task after adding it?**  ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Markneoneo"},"content":"A: Currently, Amadeus does not support direct editing of tasks. You can delete the task and add a new one with the updated details.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Markneoneo"},"content":"**Q: What happens if I close the application without typing `bye`?**  ","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Markneoneo"},"content":"A: Your tasks will still be saved, but it‚Äôs recommended to use the `bye` command to ensure a clean exit.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Markneoneo"},"content":"Enjoy using **Amadeus Task Manager**! If you have any questions or feedback, feel free to reach out. üòä","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":280,"-":16}},{"path":"docs/javadoc/legal/jquery.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"## jQuery v3.6.1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"### jQuery License","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"jQuery v 3.6.1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"Copyright OpenJS Foundation and other contributors, https://openjsf.org/","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"the following conditions:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"******************************************","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"The jQuery JavaScript Library v3.6.1 also includes Sizzle.js","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"Sizzle.js includes the following license:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"Copyright JS Foundation and other contributors, https://js.foundation/","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"This software consists of voluntary contributions made by many","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"individuals. For exact contribution history, see the revision history","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"available at https://github.com/jquery/sizzle","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"The following license applies to all parts of this software except as","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"documented below:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"the following conditions:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"All files located in the node_modules and external directories are","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"externally maintained libraries used by this software which have their","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"own licenses; we recommend you read them, as their terms may differ from","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"the terms above.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"*********************","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":72}},{"path":"docs/javadoc/legal/jqueryUI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"## jQuery UI v1.12.1","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"### jQuery UI License","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"Copyright jQuery Foundation and other contributors, https://jquery.org/","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"This software consists of voluntary contributions made by many","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"individuals. For exact contribution history, see the revision history","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"available at https://github.com/jquery/jquery-ui","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"The following license applies to all parts of this software except as","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"documented below:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"the following conditions:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"Copyright and related rights for sample code are waived via CC0. Sample","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"code is defined as all source code contained within the demos directory.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"CC0: http://creativecommons.org/publicdomain/zero/1.0/","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"All files located in the node_modules and external directories are","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"externally maintained libraries used by this software which have their","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"own licenses; we recommend you read them, as their terms may differ from","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"the terms above.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"```","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":49}},{"path":"src/main/java/amadeus/Amadeus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.Command;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.Parser;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * The main entry point for the Amadeus chatbot system.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * This class handles user input, processes commands, and manages the execution flow of the chatbot.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * It initializes the interaction loop, continuously listens for user commands, and executes the","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * corresponding actions until the exit command is received.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * The chatbot uses the following components:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.personality.Speech}: For user interaction and displaying messages.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.perception.Parser}: For parsing user input into executable commands.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.Command}: For executing the parsed commands.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"public class Amadeus {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * Scanner object for reading user input from the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    public static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * Flag to track whether the chatbot should terminate.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * Awakens the Amadeus chatbot, initializing the interaction loop.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     * This method displays a welcome message and continuously listens for user commands.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     * Each command is parsed and executed until the exit command is received. Errors during","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     * command execution are caught and displayed to the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"     * The interaction loop includes the following steps:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003eRead user input from the console.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003eParse the input into a {@link amadeus.cognition.Command} object.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003eExecute the command.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003eCheck if the command is an exit command.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    public static void awaken() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"        // Display Amadeus Login Sequence","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayWelcome();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"        // Keep running until the exit command is given","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"            try // Start the command loop","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"            {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"                // Read user input from console","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"                // Print a separating line for clarity","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"                Speech.sayLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"                // Parse the input into a Command object","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"                // Execute the command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"                c.execute();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"                // Check if the user wants to exit","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"                isExit \u003d c.isBye();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"            } catch (AmadeusException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"                // Display any command-related errors","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"            } finally {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"                // Print a separator line before next input (except during goodbye)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"                if (!isExit) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"                    Speech.sayLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"     * The main method that serves as the program\u0027s entry point.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"     * This method starts the chatbot by calling the {@link #awaken()} method.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"     * @param args command-line arguments (not used in this application).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args) { awaken(); }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Markneoneo":93}},{"path":"src/main/java/amadeus/brain/AmadeusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.brain;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * Represents a custom exception class for handling domain-specific errors in the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * This class extends {@code Exception} and provides static factory methods to create","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * exceptions for different error scenarios, such as invalid commands, missing arguments,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * invalid task formats, and database errors.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class AmadeusException extends Exception {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an {@code AmadeusException} with a specified error message.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * @param message The detailed error message explaining the exception.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    public AmadeusException(String message) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"        super(message);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    //region Command \u0026 Argument Exceptions","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an invalid command was entered.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user inputs a command that is not recognized by the application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} with a message prompting the user to view available commands.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidCommand() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid Command!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"                Hmph. It seems you\u0027ve entered something I don\u0027t recognize.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"                Type \"\\033[1;32mcommands\\033[0m\" to see what I can do.\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating a required argument is missing.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user fails to provide a necessary argument, such as a task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"     * @param type The type of task (e.g., \"todo\", \"deadline\", \"event\") for which the argument is missing.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} indicating the missing argument.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException missingArgument(String type) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mMissing Argument!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"                You forgot to provide the \\033[1m%s\\033[0m task name/description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"                Is your Hippocampus alright?\"\"\", type));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an invalid deadline format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user enters a deadline task with an incorrect format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} indicating the correct deadline format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidDeadline() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid Deadline Format!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"                The correct format is: \\033[1m\u003cdescription\u003e /by \u003cdate/time\u003e\\033[0m.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"                For example: \"\\033[3;32mdeadline Submit report /by 31/12/2025\\033[0m\".\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an invalid event format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user enters an event task with an incorrect format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} indicating the correct event format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidEvent() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid Event Format!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"                The correct format is: \\033[1m\u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\\033[0m.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"                For example: \"\\033[3;32mevent Team meeting /from 1/1/2025 11:59pm /to 2/1/2025 12pm\\033[0m\".\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an invalid event time range.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the event\u0027s start time is after its end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} indicating that the event time range is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidEventTime() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid Event Time!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"                The start time must be before the end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"                Time travel isn\u0027t possible... yet.\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an invalid check command format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user enters a check command with an incorrect format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} indicating the correct check command format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidCheck() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid CHECK Format!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"                The correct format is: \\033[1mcheck (Optional: before/after) \u003cdate/time\u003e\\033[0m.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"                For example: \"\\033[3;32mcheck before 31/12/2025\\033[0m\".\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"    //region Index \u0026 Date Number Exceptions","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating a missing task index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user does not provide an index for commands like `mark`, `unmark`, or `delete`.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} prompting the user to provide a task index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException missingNumber() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mMissing Task Index!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"                Please provide the desired task index number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"                Personally, I like the number 1.048596.\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an invalid task index format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user provides an index that is not a valid number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} prompting the user to provide a valid numeric task index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidNumber() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid Task Index!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"                Please provide a valid task index number.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"                You do know how to count... right?\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an out-of-bounds task index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user provides an index that is outside the range of the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} indicating that the task index was not found.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidIndex() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid Task Index!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"                The task index you provided doesn\u0027t exist.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"                Perhaps it does in another timeline.\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception indicating an invalid date format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"     * This exception is thrown when the user provides a date that does not match the expected format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} prompting the user to provide a date in a valid format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidDate() {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(\"\"\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mInvalid Date Format!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"                \\033[4mPlease enter the date and time in one of the following formats:\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"                Date only: \\033[32m2/12/2019, 2-12-2019, 2 12 2019\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"                Date \u0026 time (24-hour): \\033[32mDate 18:00, Date 1800, Date 18.00\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"                Date \u0026 time (12-hour): \\033[32mDate 6:00PM, Date 6pm, Date 6.30AM\\033[0m\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"    //region Database Exceptions","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for errors while saving tasks to the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when an IOException occurs during the save operation.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"     * @param file The error message from the IOException.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating the error while saving tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException errorSavingTask(String file) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mError Saving Tasks!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"                Something went wrong while saving tasks to the file: %s","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"                Please check the file and try again.\"\"\", file));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for errors while loading tasks from the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when an IOException occurs during the load operation.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Markneoneo"},"content":"     * @param file The error message from the IOException.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating the error while loading tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException errorLoadingTask(String file) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Markneoneo"},"content":"                ‚ö†Ô∏è \\033[31;1mError Loading Tasks!\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Markneoneo"},"content":"                Something went wrong while loading tasks from the file: %s","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Markneoneo"},"content":"                Please check the file and try again.\"\"\", file));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for an unrecognized task type found in the saved file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Markneoneo"},"content":"     * @param type The invalid task type found (e.g., not \"T\", \"D\", or \"E\").","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException indicating the invalid task type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException invalidTaskType(String type) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"‚ö†Ô∏è \\033[31;1mInvalid task type\\033[0m in file: %s\", type));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for errors while parsing a task from the saved file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when a line in the file cannot be parsed into a valid task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Markneoneo"},"content":"     * @param line The line from the file that caused the parsing error.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Markneoneo"},"content":"     * @return An AmadeusException with a message indicating the error while parsing the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException errorParsingTask(String line) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Markneoneo"},"content":"                String.format(\"‚ö†Ô∏è \\033[31;1mError parsing task\\033[0m from line: \u0027%s\u0027. Skipping.\", line));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Markneoneo"},"content":"     * Creates an exception for errors while loading the logo.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Markneoneo"},"content":"     * This is thrown when an IOException occurs during the logo load operation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Markneoneo"},"content":"     * @param file The file path of the logo that failed to load.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Markneoneo"},"content":"     * @return An {@code AmadeusException} with a message indicating the error while loading the logo.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Markneoneo"},"content":"    public static AmadeusException errorLoadingLogo(String file) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Markneoneo"},"content":"        return new AmadeusException(String.format(\"\"\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Markneoneo"},"content":"            ‚ö†Ô∏è \\033[31;1mError Loading Logo!\\033[0m","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Markneoneo"},"content":"            I was unable to load the logo from: %s","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Markneoneo"},"content":"            Perhaps it\u0027s lost in time? Check the file path and try again.\"\"\", file));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":248}},{"path":"src/main/java/amadeus/brain/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.brain;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.ToDo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * Manages the storage and retrieval of tasks in the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * This class handles saving tasks to a file and loading tasks from a file,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" * ensuring data persistence across application sessions. It supports three types of tasks:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * {@link ToDo}, {@link Deadline}, and {@link Event}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"public class Database {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * The file path where tasks are saved and loaded from.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * The default file path is {@code \"Memory.txt\"}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    public static final String FILE_PATH \u003d \"Memory.txt\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * Saves the current list of tasks to a file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * Each task is converted to a file-friendly format using the {@link Task#toFileFormat()} method","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * and written to the file specified by {@link #FILE_PATH}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     * @param tasks the list of tasks to save; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while saving tasks to the file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"            // Open the file for writing","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"            // Write each task to the file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"                writer.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"            // Close the file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"            writer.close();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"            // Error Saving Task List to Memory.txt","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.errorSavingTask(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     * Parses a line from the file into a {@link Task} object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * The line is expected to be in a specific format, depending on the task type:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003e\u003cb\u003eToDo\u003c/b\u003e: {@code T | \u003cisDone\u003e | \u003cdescription\u003e}\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003e\u003cb\u003eDeadline\u003c/b\u003e: {@code D | \u003cisDone\u003e | \u003cdescription\u003e | \u003cby\u003e}\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003e\u003cb\u003eEvent\u003c/b\u003e: {@code E | \u003cisDone\u003e | \u003cdescription\u003e | \u003cfrom\u003e | \u003cto\u003e}\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"     * @param line the line from the file to parse; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     * @return the {@link Task} object corresponding to the line.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the line is invalid or cannot be parsed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"    public static Task parseSave(String line) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"            // Split the line into parts using the delimiter \" | \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"            String type \u003d parts[0]; // Task type (T, D, or E)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"            boolean isDone \u003d parts[1].equals(\"1\"); // Completion status","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"            String description \u003d parts[2]; // Task description","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"            // Create the appropriate Task object based on the type","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"            switch (type) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"            case \"D\": // Deadline","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"                // Parse the due date into a LocalDateTime object","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"                Object by \u003d DateConverter.parseDate(parts[3].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"                return new Deadline(description, isDone, by);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"            case \"E\": // Event","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"                // Parse the start and end times into LocalDateTime objects","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"                Object from \u003d DateConverter.parseDate(parts[3].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"                Object to \u003d DateConverter.parseDate(parts[4].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"                return new Event(description, isDone, from, to);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"            case \"T\": // ToDo","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"                return new ToDo(description, isDone);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"            default: // Invalid Saved Task Type Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.invalidTaskType(type);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"            // Error parsing a Saved Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.errorParsingTask(line);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"     * Loads tasks from the file and returns them as a list of {@link Task} objects.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"     * If the file does not exist, an empty list is returned. If the file exists,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"     * each line is parsed into a {@link Task} object using the {@link #parseSave(String)} method.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"     * @return a list of tasks loaded from the file; never {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while loading tasks from the file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"    public static ArrayList\u003cTask\u003e load() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"            // Open the file for reading","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"                String line \u003d scanner.nextLine(); // Read each line","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"                Task task \u003d parseSave(line); // parse into Task object","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"                tasks.add(task); // Add to Task List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"            // Close the file","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"            scanner.close();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"        } catch (FileNotFoundException e) { // If the file is not found, start with an empty task list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"            System.out.println(\"‚ö†Ô∏è No existing task file found. Starting with an empty task list.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"            // Error Loading Task List from Memory.txt","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.errorLoadingTask(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"        return tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Markneoneo":150}},{"path":"src/main/java/amadeus/brain/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Provides core functionality for managing data and handling errors in the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * This package includes classes responsible for:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e\u003cb\u003eData Persistence\u003c/b\u003e: The {@link amadeus.brain.Database}","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" *   class handles saving and loading tasks to/from a file,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" *       ensuring data persistence across application sessions.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e\u003cb\u003eError Handling\u003c/b\u003e: The {@link amadeus.brain.AmadeusException}","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" *   class defines custom exceptions for domain-specific errors,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" *       such as invalid commands, missing arguments, and file I/O issues.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * The classes in this package are designed to work together to ensure robust data management and error handling,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * enabling the application to maintain consistency and provide meaningful feedback to users.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eKey Classes\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.brain.Database}:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" *   Manages the storage and retrieval of tasks, ensuring data persistence.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.brain.AmadeusException}:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" *   Handles domain-specific errors and provides user-friendly error messages.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eUsage Example\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":" * try {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":" *     // Load tasks from the database","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":" *     ArrayList\u0026lt;Task\u0026gt; tasks \u003d Database.load();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":" *     // Perform operations on tasks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":" *     tasks.add(new ToDo(\"Complete JavaDoc\"));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":" *     // Save tasks back to the database","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":" *     Database.save(tasks);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":" * } catch (AmadeusException e) {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":" *     System.out.println(e.getMessage()); // Handle errors gracefully","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":" * }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.brain.Database","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.brain.AmadeusException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"package amadeus.brain;","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":45}},{"path":"src/main/java/amadeus/cognition/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * Command to exit the Amadeus application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * This command displays a farewell message and terminates the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * Displays a farewell message and terminates the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * The farewell message is provided by the {@link Speech#sayGoodbye()} method.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayGoodbye();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * Indicates that this command is a termination command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * @return {@code true} to indicate that this command should terminate the application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        return true;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":32}},{"path":"src/main/java/amadeus/cognition/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * Command to filter tasks based on a date or date range.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to identify a date or date range (e.g., \"before\", \"after\", or exact date)","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" * and filters tasks that match the specified condition.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e(); // List of filtered Tasks based on date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    String preposition \u003d \"on\"; // on, before or after","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    String formattedDate; // String of date inquiry","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new {@code CheckCommand} by parsing the user input for the date or date range.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a valid date or date range (e.g., \"before 31/12/2025\").","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * If the input is empty or invalid, an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * @param argument the user input containing the date or date range; must not be {@code null} or empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input is empty or invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    public CheckCommand(String argument) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidCheck();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d argument.trim().split(\" \", 2); // Trim to remove extra spaces","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"        if (parts.length \u003d\u003d 0 || parts[0].isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"            // Invalid: Empty argument after \"check\"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidCheck();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"        // Assume full input is a date unless proven otherwise","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"        String dateString \u003d argument.trim();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"        boolean isBefore \u003d dateString.startsWith(\"before\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"        boolean isAfter \u003d dateString.startsWith(\"after\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"        // Special case: If it starts with \"before\" or \"after\", extract date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"        if (isBefore || isAfter) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"            String[] splitParts \u003d dateString.split(\" \", 2); // Split at first space","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"            if (splitParts.length \u003c 2) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"                // Invalid: \"check before\" (no date provided)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.invalidCheck();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"            dateString \u003d splitParts[1]; // Extract only the date portion","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"        // Parse the date of inquiry","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"        Object date \u003d DateConverter.parseDate(dateString);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"        // Convert into LocalDateTime","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"        LocalDateTime checkDateTime \u003d (date instanceof LocalDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"                ? (LocalDateTime) date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"                : ((LocalDate) date).atStartOfDay(); // Midnight 00:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"        // Filter tasks based on the type of check","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"        for (Task task : TaskList.getTaskList()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"            LocalDateTime taskDateTime \u003d getTaskDateTime(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"            if (taskDateTime !\u003d null) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                if (isBefore \u0026\u0026 taskDateTime.isBefore(checkDateTime)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"                } else if (isAfter \u0026\u0026 taskDateTime.isAfter(checkDateTime)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"                } else if (isExactMatch(taskDateTime, checkDateTime)) { // Exact date or date-time","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"        // Determine the appropriate preposition for the message","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"        if (isBefore) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"            preposition \u003d \"before\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"        } else if (isAfter) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"            preposition \u003d \"after\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"        // Format the date for display","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"        formattedDate \u003d DateConverter.formatDate(date);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by displaying the filtered tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"     * If no tasks match the specified date or date range, a message is displayed to inform the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"     * Otherwise, the matching tasks are displayed using","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"     * {@link amadeus.personality.Speech#sayList(java.util.ArrayList)}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"        // Display the filtered tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"‚ö†Ô∏è No tasks found occurring \\033[1m%s\\033[0m \\033[4m%s\\033[0m!\\n\",","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"                    preposition, formattedDate);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"‚úçÔ∏è These are the Tasks occurring \\033[1m%s\\033[0m \\033[4m%s\\033[0m:\\n\",","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"                    preposition, formattedDate);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayList(filteredTasks);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"     * Checks if a task\u0027s date/time matches the check date/time based on the rules.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"     * @param taskDateTime  the task\u0027s date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"     * @param checkDateTime the check date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"     * @return {@code true} if the task should be included based on the check conditions.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"    private boolean isExactMatch(LocalDateTime taskDateTime, LocalDateTime checkDateTime) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"        // Extract date parts","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"        LocalDate taskDate \u003d taskDateTime.toLocalDate();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"        LocalDate checkDate \u003d checkDateTime.toLocalDate();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"        // Always check if the dates match","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"        if (!taskDate.equals(checkDate)) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"            return false;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"        // Extract time parts","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"        LocalTime taskTime \u003d taskDateTime.toLocalTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"        LocalTime checkTime \u003d checkDateTime.toLocalTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"        // Determine if the checkDateTime has a time component (i.e., user provided time)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"        boolean checkHasTime \u003d !checkTime.equals(LocalTime.MIDNIGHT); // Only true if check isn\u0027t 00:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"        // If checking with a specific time, match exact tasks and date-only tasks","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"        if (checkHasTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"            return taskTime.equals(checkTime) || taskTime.equals(LocalTime.MIDNIGHT);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"        // If checking a date only, match all tasks on that date (regardless of time)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"        return true;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"     * Extracts the date and time from a task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"     * @param task the task to extract the date and time from.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"     * @return the date and time of the task, or {@code null} if the task has no date.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"    private LocalDateTime getTaskDateTime(Task task) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"            Object by \u003d ((Deadline) task).getBy();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"            return (by instanceof LocalDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"                    ? (LocalDateTime) by","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"                    : ((LocalDate) by).atStartOfDay();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"            Object from \u003d ((Event) task).getFrom();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"            return (from instanceof LocalDateTime)","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"                    ? (LocalDateTime) from","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"                    : ((LocalDate) from).atStartOfDay();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"        return null; // ToDo tasks have no date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Markneoneo":178}},{"path":"src/main/java/amadeus/cognition/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * Abstract base class for all commands in the Amadeus application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * This class defines the structure for commands, including the {@link #execute()} method","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * that must be implemented by subclasses and the {@link #isBye()} method to check if the command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * is a termination command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * This method must be implemented by subclasses to perform the specific action","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * associated with the command.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs during execution.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    public abstract void execute() throws AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * Checks if the command is a termination command (e.g., {@code bye}).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * This method can be overridden by subclasses to indicate that the command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * should terminate the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * @return {@code true} if the command is a termination command, {@code false} otherwise.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        return false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":37}},{"path":"src/main/java/amadeus/cognition/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * Command to display the list of available commands.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * This command prints the list of commands to the console, providing usage examples.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public class CommandList extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * Displays the list of available commands to the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * The commands are formatted with usage examples for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * The output is generated by the {@link Speech#sayCommands()} method.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayCommands();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":23}},{"path":"src/main/java/amadeus/cognition/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * Command to add a new {@link amadeus.workspace.Deadline} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to create a {@link amadeus.workspace.Deadline} task and adds it to the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * The input is expected to contain a description and a due date, separated by {@code /by}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    Deadline d;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new {@code DeadlineCommand} by parsing the user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a description and a due date, separated by {@code /by}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * If the input is empty or in an invalid format, an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * @param input the user input containing the task description and due date; must not be {@code null} or empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input is empty or in an invalid format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    public DeadlineCommand(String input) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"DEADLINE\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        // Check if \"/by\" exist before splitting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        if (!input.contains(\" /by \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Deadline Format Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidDeadline();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        // Split the input into description and due date","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        // Parse the due date into a LocalDateTime object","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        Object by \u003d DateConverter.parseDate(parts[1].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        // Create a new Deadline task","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"        d \u003d new Deadline(name, by);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by adding the {@link amadeus.workspace.Deadline} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while adding the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"        TaskList.addDeadline(d);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":61}},{"path":"src/main/java/amadeus/cognition/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.NumberConverter;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to identify the task index and removes the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * The input is expected to contain a valid task index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    private final int index;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new {@code DeleteCommand} by parsing the user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a valid task index. If the input is empty or the index is invalid,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * @param input the user input containing the task index; must not be {@code null} or empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input is empty or the index is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    public DeleteCommand(String input) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"            // Missing Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        // Extract the task index from the input","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        this.index \u003d NumberConverter.extractIndex(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        // Check if the index is valid","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by deleting the task at the specified index from the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while deleting the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        TaskList.deleteTask(index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":53}},{"path":"src/main/java/amadeus/cognition/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * Command to add a new {@link amadeus.workspace.Event} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to create an {@link amadeus.workspace.Event} task and adds it to the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * The input is expected to contain a description, a start time, and an end time,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" * separated by {@code /from} and {@code /to}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    private final Event e;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new {@code EventCommand} by parsing the user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a description, a start time, and an end time,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * separated by {@code /from} and {@code /to}. If the input is empty, missing required parts,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     * or contains an invalid time range, an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * @param input the user input containing the task description, start time, and end time;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     *              must not be {@code null} or empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input is empty, in an invalid format, or contains an invalid time range.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    public EventCommand(String input) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"EVENT\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        // Check if \"/from\" and \"/to\" exist before splitting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Event Format Exception","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidEvent();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"        // Split the input into description and from/to","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        String[] parts \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        // Split the from/to part into start and end times","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"        String[] fromToParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"        // Parse the start and end times into LocalDateTime objects","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"        Object from \u003d DateConverter.parseDate(fromToParts[0].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"        Object to \u003d DateConverter.parseDate(fromToParts[1].trim());","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"        // Ensure that from is strictly before to","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"        if (from instanceof LocalDateTime \u0026\u0026 to instanceof LocalDateTime) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"            if (!((LocalDateTime) from).isBefore((LocalDateTime) to)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.invalidEventTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        } else if (from instanceof LocalDate \u0026\u0026 to instanceof LocalDate) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"            if (!((LocalDate) from).isBefore((LocalDate) to)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.invalidEventTime();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"            // Handle case where types don\u0027t match","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidEvent();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"        // Create a new Event task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"        e \u003d new Event(name, from, to);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by adding the {@link amadeus.workspace.Event} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while adding the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"        TaskList.addEvent(e);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":85}},{"path":"src/main/java/amadeus/cognition/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Task;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * Command to search for tasks in the task list that match a keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to identify the keyword and filters tasks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * whose descriptions contain the keyword (case-insensitive).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    private final String keyword; // The keyword to search for","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    private final ArrayList\u003cTask\u003e matchingTasks; // List of tasks matching the keyword","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new {@code FindCommand} by parsing the user input for the keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a non-empty keyword. If the input is empty,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * @param argument the user input containing the keyword to search for; must not be {@code null} or empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input is empty or invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    public FindCommand(String argument) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"FIND\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        this.keyword \u003d argument.trim().toLowerCase(); // Normalize keyword to lowercase for case-insensitive search","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        this.matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"        // Filter tasks that contain the keyword in their description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        for (Task task : TaskList.getTaskList()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"            if (task.getName().toLowerCase().contains(keyword)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by displaying the tasks that match the keyword.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * If no tasks match the keyword, a message is displayed to inform the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * Otherwise, the matching tasks are displayed using","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * {@link amadeus.personality.Speech#sayList(java.util.ArrayList)}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"‚ö†Ô∏è No tasks found containing the keyword \u0027\\033[4;1m%s\\033[0m\u0027!\\n\", keyword);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"üîç Here are the tasks containing the keyword \u0027\\033[4;1m%s\\033[0m\u0027:\\n\", keyword);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayList(matchingTasks);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Markneoneo":65}},{"path":"src/main/java/amadeus/cognition/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import static amadeus.workspace.TaskList.taskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * Command to display the current list of tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * This command prints the list of tasks to the console, organized by type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * Displays the current list of tasks to the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * The tasks are organized by type (Deadlines, Events, ToDos).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * The output is generated by the {@link Speech#sayList(java.util.ArrayList)} method.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayList(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":25}},{"path":"src/main/java/amadeus/cognition/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.NumberConverter;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * Command to mark a task as complete or incomplete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to identify the task index and updates its status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * The input is expected to contain a valid task index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    private final int index;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    private final boolean isDone;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new {@code MarkCommand} by parsing the user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a valid task index. If the input is empty or the index is invalid,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * @param input the user input containing the task index; must not be {@code null} or empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * @param mark  indicates whether the task should be marked as complete","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     *              ({@code true}) or incomplete ({@code false}).","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input is empty or the index is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    public MarkCommand(String input, boolean mark) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d mark;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"            // Missing Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"        // Extract the task index from the input","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"        this.index \u003d NumberConverter.extractIndex(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        // Check if the index is valid","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"            // Invalid Number in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidNumber();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by marking the task at the specified index as complete or incomplete.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while updating the task status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"        TaskList.markDone(index, isDone);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":58}},{"path":"src/main/java/amadeus/cognition/ResetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * Command to reset the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * This command clears all tasks from the task list and updates the database.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"public class ResetCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     * Resets the task list by clearing all tasks and updating the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     * This method calls the {@link TaskList#resetList()} method to perform the reset operation.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while resetting the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"        TaskList.resetList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":25}},{"path":"src/main/java/amadeus/cognition/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.ToDo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * Command to add a new {@link amadeus.workspace.ToDo} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * This command parses the user input to create a {@link amadeus.workspace.ToDo} task and adds it to the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * The input is expected to contain a task description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    ToDo td;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a new {@code ToDoCommand} by parsing the user input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     * The input is expected to contain a task description. If the input is empty,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * @param input the user input containing the task description; must not be {@code null} or empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input is empty or invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    public ToDoCommand(String input) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"        // Check if the input is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"            // Missing Argument in the Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.missingArgument(\"TODO\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"        // Create a new ToDo Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        td \u003d new ToDo(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     * Executes the command by adding the {@link amadeus.workspace.ToDo} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while adding the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    public void execute() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        TaskList.addToDo(td);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":47}},{"path":"src/main/java/amadeus/cognition/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Provides the core command implementations for the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * This package includes classes that represent various commands supported by the application,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * such as adding tasks, marking tasks as complete, searching for tasks, and more. Each command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * is implemented as a subclass of the {@link amadeus.cognition.Command} abstract class.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * The classes in this package are responsible for parsing user input, performing the necessary","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * actions, and handling errors gracefully using custom exceptions from the","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * {@link amadeus.brain.AmadeusException} class.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eKey Classes\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.Command}: Abstract base class for all commands.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.ByeCommand}: Command to exit the application.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.CheckCommand}: Command to filter tasks based on a date or date range.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.CommandList}: Command to display the list of available commands.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.DeadlineCommand}: Command to add a new {@link amadeus.workspace.Deadline} task.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.EventCommand}: Command to add a new {@link amadeus.workspace.Event} task.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.FindCommand}: Command to search for tasks matching a keyword.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.ListCommand}: Command to display the current list of tasks.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.MarkCommand}: Command to mark a task as complete or incomplete.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.ResetCommand}: Command to reset the task list.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition.ToDoCommand}: Command to add a new {@link amadeus.workspace.ToDo} task.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eUsage Example\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":" * // Create and execute a command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":" * Command command \u003d new ToDoCommand(\"Buy groceries\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":" * command.execute();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.cognition.Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.brain.AmadeusException","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.workspace.Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"package amadeus.cognition;","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":40}},{"path":"src/main/java/amadeus/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * The root package for the Amadeus chatbot application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * This package contains the main entry point for the application ({@link amadeus.Amadeus}) and","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * several sub-packages that handle different aspects of the chatbot\u0027s functionality:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.brain}: Handles error management and data persistence.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.cognition}: Manages command parsing and execution.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.perception}: Provides utilities for parsing user input, such as dates and numbers.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.personality}: Manages user interaction and speech output.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.workspace}: Manages tasks and the task list.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * The {@link amadeus.Amadeus} class serves as the main entry point, initializing the chatbot","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * and managing the interaction loop. It coordinates the functionality of the sub-packages to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" * provide a seamless user experience.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eUsage Example\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * // Start the Amadeus chatbot","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" * Amadeus.awaken();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.Amadeus","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.brain","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.cognition","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.perception","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.personality","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.workspace","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"package amadeus;","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":32}},{"path":"src/main/java/amadeus/perception/DateConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.perception;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import java.util.List;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import java.util.Locale;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * A utility class for parsing and formatting dates and date-times.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" * This class supports multiple date and time formats, allowing flexible input from users.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * It can parse strings into {@link java.time.LocalDate} or {@link java.time.LocalDateTime} objects","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * and format these objects into user-friendly strings.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"public class DateConverter {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    // Supported date formats","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\", Locale.US), // e.g., 2/12/2019","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\", Locale.US), // e.g., 2-12-2019","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy\", Locale.US)  // e.g., 2 12 2019","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    // Supported date-time formats","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_TIME_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy ha\", Locale.US),    // e.g., 2/12/2019 6PM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy h:mma\", Locale.US), // e.g., 2/12/2019 6:00PM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy h.mma\", Locale.US), // e.g., 2/12/2019 6.30AM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\", Locale.US),  // e.g., 2/12/2019 1800","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\", Locale.US), // e.g., 2/12/2019 18:00","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HH.mm\", Locale.US), // e.g., 2/12/2019 18.00","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy ha\", Locale.US),    // e.g., 2-12-2019 6PM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy h:mma\", Locale.US), // e.g., 2-12-2019 6:00PM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy h.mma\", Locale.US), // e.g., 2-12-2019 6.30AM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\", Locale.US),  // e.g., 2-12-2019 1800","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HH:mm\", Locale.US), // e.g., 2-12-2019 18:00","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HH.mm\", Locale.US), // e.g., 2-12-2019 18.00","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy ha\", Locale.US),    // e.g., 2 12 2019 6PM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy h:mma\", Locale.US), // e.g., 2 12 2019 6:00PM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy h.mma\", Locale.US), // e.g., 2 12 2019 6.30AM","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy HHmm\", Locale.US),  // e.g., 2 12 2019 1800","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy HH:mm\", Locale.US), // e.g., 2 12 2019 18:00","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy HH.mm\", Locale.US)  // e.g., 2 12 2019 18.00","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"    // Output format for dates","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy\", Locale.US);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    // Output format for date-times","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\", Locale.US);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     * Parses a date string into a {@link java.time.LocalDate} or {@link java.time.LocalDateTime} object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"     * Supports multiple date and time formats. If the input string does not match any supported format,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"     * an {@link amadeus.brain.AmadeusException} is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * @param dateString the date string to parse; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     * @return a {@link java.time.LocalDate} or {@link java.time.LocalDateTime} object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the input string cannot be parsed into a valid date or date-time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"    public static Object parseDate(String dateString) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"        // Normalize AM/PM to be case-insensitive","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"        dateString \u003d dateString.replaceAll(\"(?i)am\", \"AM\").replaceAll(\"(?i)pm\", \"PM\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"        // Try parsing as a date-time first","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"        for (DateTimeFormatter format : DATE_TIME_FORMATS) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"                return LocalDateTime.parse(dateString, format);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"                // Ignore and try the next format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        // Try parsing as a date if date-time parsing fails","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"        for (DateTimeFormatter format : DATE_FORMATS) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                return LocalDate.parse(dateString, format);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"                // Ignore and try the next format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        // If no format matches, throw an exception","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"        throw AmadeusException.invalidDate();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"     * Formats a date or date-time object into a user-friendly string.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"     * @param date the date or date-time object to format; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"     * @return the formatted date string (e.g., \"Oct 15 2019\" or \"Oct 15 2019, 6:00PM\").","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"    public static String formatDate(Object date) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDateTime) date).format(OUTPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"        } else if (date instanceof LocalDate) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDate) date).format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"            return \"‚ö†Ô∏è Invalid Date\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"     * Main method for testing the {@link DateConverter} class.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"     * @param args command-line arguments (not used).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"        //create dates from strings","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d1 \u003d LocalDate.parse(\"2019-12-01\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d2 \u003d LocalDate.parse(\"2019-12-02\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d3 \u003d LocalDate.parse(\"2019-12-02\");","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"        //compare dates","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.isBefore(d2)); // -\u003e true","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.isAfter(d2)); // -\u003e false","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d2.equals(d3)); // -\u003e true","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"        //work with dates","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.getDayOfWeek()); // -\u003e SUNDAY","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.getMonth()); // -\u003e DECEMBER","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d1.plusYears(1));  // -\u003e 2020-12-01","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"        // get today\u0027s date and print it in a specific format","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"        LocalDate d4 \u003d LocalDate.now();","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d4); // -\u003e 2019-10-15","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(d4.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))); // -\u003e Oct 15 2019","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"Markneoneo":145}},{"path":"src/main/java/amadeus/perception/NumberConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.perception;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * A utility class for converting written number words into their numeric equivalents.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * This implementation follows a rule-based approach without relying on a hash map","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * to allow flexibility and expansion. It supports numbers up to the thousands and","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * handles compound numbers like \"twenty-one\" or \"three hundred and five.\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"public class NumberConverter {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of unit numbers (one to nineteen) to their integer values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e UNITS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"one\", 1), Map.entry(\"two\", 2), Map.entry(\"three\", 3),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"four\", 4), Map.entry(\"five\", 5), Map.entry(\"six\", 6),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"seven\", 7), Map.entry(\"eight\", 8), Map.entry(\"nine\", 9),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"ten\", 10), Map.entry(\"eleven\", 11), Map.entry(\"twelve\", 12),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"thirteen\", 13), Map.entry(\"fourteen\", 14), Map.entry(\"fifteen\", 15),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"sixteen\", 16), Map.entry(\"seventeen\", 17), Map.entry(\"eighteen\", 18),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"nineteen\", 19)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of tens multiples (twenty to ninety) to their integer values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e TENS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"twenty\", 20), Map.entry(\"thirty\", 30), Map.entry(\"forty\", 40),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"fifty\", 50), Map.entry(\"sixty\", 60), Map.entry(\"seventy\", 70),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"eighty\", 80), Map.entry(\"ninety\", 90)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * Mapping of large number multipliers (hundred, thousand) to their values.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    private static final Map\u003cString, Integer\u003e MULTIPLIERS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"            Map.entry(\"hundred\", 100), Map.entry(\"thousand\", 1000)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"     * Converts a number written in words into its integer representation.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     * Supports numbers from \"one\" to \"nine thousand nine hundred ninety-nine.\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     * Handles compound numbers like \"twenty-one\" or \"three hundred and five.\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     * Ignores the word \"and\" for natural language compatibility.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * Returns -1 if input is invalid or contains unrecognized words.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * @param input the number written in words (e.g., \"two hundred forty-five\"); must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * @return the integer representation of the input word, or -1 for invalid input.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    public static int wordToNumber(String input) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"            return -1;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"        } // Invalid Input","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        // Splits the input into an array of words using spaces/tabs/newlines as delimiters","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        String[] words \u003d input.toLowerCase().replaceAll(\"-\", \" \").split(\"\\\\s+\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        int result \u003d 0; // Final number","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        int current \u003d 0; // Value of the current segment","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"        for (String word : words) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"            if (UNITS.containsKey(word)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"                current +\u003d UNITS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"            } else if (TENS.containsKey(word)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"                current +\u003d TENS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"            } else if (MULTIPLIERS.containsKey(word)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"                int multiplier \u003d MULTIPLIERS.get(word);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"                if (multiplier \u003d\u003d 100) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"                    current *\u003d multiplier; // Handle \"hundred\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"                } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"                    current *\u003d multiplier; // Handle \"thousand\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"                    result +\u003d current; // Add to the final result","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"                    current \u003d 0; // Reset for the next part","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"            } else if (!word.equals(\"and\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"                return -1; // Invalid word","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"        return result + current;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"     * Extracts a task index from the provided argument.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"     * The argument can be either a numeric string (e.g., \"1\") or a word representing a number (e.g., \"one\").","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     * If the argument is invalid or cannot be converted to a number, -1 is returned.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"     * @param argument the string containing the task index (numeric or word format); must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"     * @return the task index as an integer, or -1 if the argument is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"    public static int extractIndex(String argument) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"            // Try parsing the argument as a number directly","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"            return Integer.parseInt(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"            // If parsing fails, try converting words to a number","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"            return NumberConverter.wordToNumber(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"     * Main method for testing the {@link NumberConverter} class.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"     * @param args command-line arguments (not used).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"        // Test Cases","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"two hundred and forty-five\")); // 245","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"three thousand one hundred\")); // 3100","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(wordToNumber(\"nine hundred ninety-nine\")); // 999","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":119}},{"path":"src/main/java/amadeus/perception/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.perception;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.ByeCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.CheckCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.Command;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.CommandList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.DeadlineCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.DeleteCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.EventCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.FindCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.ListCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.MarkCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.ResetCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"import amadeus.cognition.ToDoCommand;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * Handles the parsing of user input into executable commands.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" * This class interprets the user\u0027s input and maps it to the appropriate {@link amadeus.cognition.Command} object,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * which can then be executed to perform the desired action. It supports a variety of commands, including","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" * adding tasks, marking tasks as complete, searching for tasks, and more.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"public class Parser {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    // region Constants representing valid user commands.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"bye\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"    public static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"commands\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    public static final String COMMAND_LIST \u003d \"commands\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"list\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"find\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"check\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    public static final String CHECK_COMMAND \u003d \"check\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"mark\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"unmark\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"delete\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"reset\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"    public static final String RESET_COMMAND \u003d \"reset\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"deadline\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"event\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     * Constant representing the \"todo\" command.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"    // endregion","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     * Parses the user\u0027s input and returns the corresponding {@link amadeus.cognition.Command} object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     * The input is split into a command and an optional argument. The command is then","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"     * matched against predefined constants to determine the appropriate action.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"     * @param input the full command input provided by the user; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"     * @return the corresponding {@link amadeus.cognition.Command} object.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the command is invalid or the input cannot be parsed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"    public static Command parse(String input) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"        String[] words \u003d input.split(\" \", 2); // Split into command + optional argument","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"        String command \u003d words[0].toLowerCase(); // Start with command","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"        String argument \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        // Match the command to the appropriate Command object","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"        return switch (command) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"        // Exits the command loop and terminates the interaction","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"        case BYE_COMMAND -\u003e new ByeCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"        // Shows the user all possible Amadeus commands","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"        case COMMAND_LIST -\u003e new CommandList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        // Displays the current list of tasks to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"        case LIST_COMMAND -\u003e new ListCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"        // Print tasks occurring on / before / after a specific date.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"        case CHECK_COMMAND -\u003e new CheckCommand(argument);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"        // Resets and Clears the saved Task List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"        case RESET_COMMAND -\u003e new ResetCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"        // Finds a task by searching for a keyword in the task description","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"        case FIND_COMMAND -\u003e new FindCommand(argument);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"        // Deletes a given task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"        case DELETE_COMMAND -\u003e new DeleteCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"        // Marks or unmarks a given task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"        case MARK_COMMAND, UNMARK_COMMAND -\u003e new MarkCommand(argument, command.equals(MARK_COMMAND));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"        // Adds a new task of the specified type","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"        case DEADLINE_COMMAND -\u003e new DeadlineCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"        case EVENT_COMMAND -\u003e new EventCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"        case TODO_COMMAND -\u003e new ToDoCommand(argument);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"        // Invalid Command Input Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"        default -\u003e throw AmadeusException.invalidCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"        };","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":129}},{"path":"src/main/java/amadeus/perception/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Provides utilities for parsing and converting user input into executable commands and structured data.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * This package includes classes that handle the interpretation of user input, such as commands, dates, and numbers.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * These utilities are essential for translating natural language input into actionable tasks and structured data","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * that the application can process.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eKey Classes\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.perception.Parser}: Parses user input into executable","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" *   {@link amadeus.cognition.Command} objects.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.perception.DateConverter}: Converts date and time strings into","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" *   {@link java.time.LocalDate} or {@link java.time.LocalDateTime} objects.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.perception.NumberConverter}: Converts number words","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" *   (e.g., \"twenty-one\") into their numeric equivalents.\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eUsage Example\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * // Parse user input into a command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" * Command command \u003d Parser.parse(\"todo Buy groceries\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" * command.execute();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":" * // Convert a date string into a LocalDate object","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":" * Object date \u003d DateConverter.parseDate(\"2/12/2019\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":" * // Convert a number word into an integer","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":" * int number \u003d NumberConverter.wordToNumber(\"twenty-one\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.cognition.Command","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":" * @see java.time.LocalDate","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":" * @see java.time.LocalDateTime","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"package amadeus.perception;","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":36}},{"path":"src/main/java/amadeus/personality/Speech.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.personality;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Deadline;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Event;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.Task;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import amadeus.workspace.ToDo;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" * Handles the user interface (UI) and speech interactions for the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * This class provides methods to display messages, commands, and task lists to the user,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * with features like typing effects and formatted text for better readability. It also","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" * includes visual elements such as dividers and ASCII art for an enhanced user experience.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"public class Speech {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * A string of \"\u003d\" characters used as a visual divider in the console output.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    private static final String DIVIDER \u003d \"\u003d\".repeat(100);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * Variable to hold the Amadeus logo content.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     * This is used to display a visually appealing welcome message.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * The logo is loaded from an external file during class initialization.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    private static String AMADEUS;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    // Static block to initialize the Amadeus logo from a file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"    static {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"        try (InputStream inputStream \u003d Speech.class.getResourceAsStream(\"amadeus_logo.txt\")) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"            if (inputStream \u003d\u003d null) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"                throw AmadeusException.errorLoadingLogo(\"amadeus_logo.txt\");","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"            try (Scanner scanner \u003d new Scanner(inputStream, StandardCharsets.UTF_8)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"                AMADEUS \u003d scanner.useDelimiter(\"\\\\A\").next(); // Read the entire file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"        } catch (IOException | AmadeusException e) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"            AMADEUS \u003d \"Amadeus Logo\"; // Fallback in case of error","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"            System.err.println(AmadeusException.errorLoadingLogo(\"amadeus_logo.txt\").getMessage());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * A formatted string listing all available commands and their usage.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * Includes examples and styling  for better readability.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"    // region Amadeus Command List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    private static final String COMMANDS \u003d","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"            \"\"\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"              ‚ú® \\033[1;38;2;255;165;0mWelcome to Amadeus Task Manager!\\033[0m ‚ú®","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"              Here are the commands you can use to manage your tasks:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"             \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"              ‚û§ ‚úçÔ∏è \\033[4;1mAdding a Task\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mtodo „Äêdescription„Äë\\033[0m: Adds a new ToDo task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mtodo Buy groceries\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mdeadline „Äêdescription„Äë /by „Äêdue date„Äë\\033[0m: Adds a new Deadline task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mdeadline Submit report /by 31/12/2025\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mevent „Äêdescription„Äë /from „Äêstart„Äë /to „Äêend„Äë\\033[0m: Adds a new Event task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mevent Team meeting /from 1/1/2025 11:59pm /to 2/1/2025 12pm\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"             \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"              ‚û§ üëÄ \\033[4;1mViewing Tasks\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mlist\\033[0m: Displays all your saved tasks, organized by type.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mfind „Äêdescription„Äë\\033[0m: Lists tasks with given keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mfind meeting\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mcheck „Äêdate/time„Äë\\033[0m: Lists tasks on a specified date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mcheck 2/10/2025\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mcheck before „Äêdate/time„Äë\\033[0m: Lists tasks before a specified date/time (inclusive).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mcheck before 2/10/2025 6am\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mcheck after „Äêdate/time„Äë\\033[0m: Lists tasks after a specified date/time (inclusive).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mcheck after 2/10/2025 2359\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"             \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"              ‚û§ ‚úîÔ∏è \\033[4;1mMarking Tasks\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mmark „Äêindex„Äë\\033[0m: Marks a task as complete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mmark 1\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1munmark „Äêindex„Äë\\033[0m: Marks a task as incomplete.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3munmark 1\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"             \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"              ‚û§ üóëÔ∏è \\033[4;1mDeleting Tasks\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mdelete „Äêindex„Äë\\033[0m: Deletes a task from the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mdelete 2\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mreset\\033[0m: Resets and deletes the entire saved list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"             \\s","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"              ‚û§ üì¥ \\033[4;1mLogging Off\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mbye\\033[0m: Exits the application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"             \\s","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"              ‚û§ ‚ÑπÔ∏è \\033[4;1mFormating Notice\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mIndex Numbers\\033[0m: I am able to parse both words and integers.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3mmark one, delete thirteen\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mDate Format\\033[0m: I am strictly only allowing dd/mm/yyyy format. Sorry Americans!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3m31/12/2025, 31-12-2025, 31 12 2025\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"                 ‚ï∞‚îà‚û§ \\033[35;1mTime Format\\033[0m: I am able to parse both 12 (AM/PM) \u0026 24 Hour formats.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"                      Eg: \"\\033[32;3m12am, 11:59pm, 11.59pm, 2359, 23:59, 23.59\\033[0m\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"            \"\"\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"     * Prints a visual divider line to the console.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"     * This is used to separate sections of the output for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"    public static void sayLine() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"     * Prints text to the console with a typing effect, simulating a character-by-character display.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"     * This method is useful for creating a more interactive and engaging user experience.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"     * @param text     the text to be printed to the console; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"     * @param duration the delay (in milliseconds) between printing each character.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"     *                 A smaller value results in faster typing, while a larger value slows it down.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"    public static void saySlowly(String text, int duration) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"        // Print each character with a delay to simulate a typing effect","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"        for (int i \u003d 0; i \u003c text.length(); i++) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"            System.out.print(text.charAt(i));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"            try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"                Thread.sleep(duration);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"                Thread.currentThread().interrupt(); // Restore the interrupted status","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"     * Displays the welcome message when the Amadeus application starts.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"     * This includes:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003eA simulated login sequence\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003eThe Amadeus ASCII logo\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"     *   \u003cli\u003eAn introduction by the AI assistant\u003c/li\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"    public static void sayWelcome() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(\"\"\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"                User ID: \\033[31;1mSalieri\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"                \\033[32;3mAuthenticating...\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"                \\033[32;3mInitializing system...\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"                \"\"\", 50);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(AMADEUS); // Amadeus Logo loaded from file","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"            \\033[34;1mGreetings.\\033[0m I\u0027m \\033[31;1mKurisu Makise\\033[0m, a.k.a. \\033[1;38;2;255;165;0mAmadeus\\033[0m.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"            I\u0027m here to assist you with your tasks. Let\u0027s make this timeline a productive one!","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"            Type \"\\033[32;1mcommands\\033[0m\" to see what I can do.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"            \"\"\", 20);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"     * Displays the farewell message when the Amadeus application is exiting.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"     * This includes a thematic goodbye message and the Amadeus catchphrase.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"                \\033[34;1mFarewell.\\033[0m May our timelines converge once more.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"                \\033[91;1mEl Psy Kongroo.\\033[0m","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"                \"\"\", 30);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"     * Displays the list of available commands to the user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"     * The commands are formatted with styling for better readability.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"    public static void sayCommands() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"        saySlowly(COMMANDS, 1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"     * Displays the current list of tasks to the user, organized by type (Deadlines, Events, ToDos).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Markneoneo"},"content":"     * If the list is empty, a message indicating no pending tasks is shown.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"     * @param taskList the list of tasks to display; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"    public static void sayList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"        // Check if the task list is empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"            System.out.println(\"‚ö†Ô∏è There are currently no pending tasks! Lucky you.\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"                    \"‚úçÔ∏è \\033[1;38;2;255;165;0mYou currently have „Äê%s„Äë pending tasks! Time to get to work!\\033[0m\\n\\n\",","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Markneoneo"},"content":"                    taskList.size());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Markneoneo"},"content":"        // Track which section titles have been printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Markneoneo"},"content":"        // Index 0: Deadlines, Index 1: Events, Index 2: ToDos, Index 3: Misc Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"        boolean[] titlePrinted \u003d new boolean[4];","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Markneoneo"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Markneoneo"},"content":"            if (task instanceof Deadline \u0026\u0026 !titlePrinted[0]) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"‚ö†Ô∏è\\033[1;4;93mDEADLINES\\033[0m‚ö†Ô∏è\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[0] \u003d true; // Mark Deadlines title as printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Markneoneo"},"content":"            } else if (task instanceof Event \u0026\u0026 !titlePrinted[1]) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Markneoneo"},"content":"                if (index \u003e 0) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Markneoneo"},"content":"                    System.out.println();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Markneoneo"},"content":"                } // Add a newline before the section","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"\\uD83C\\uDF38\\033[1;4;38;2;255;183;197mEVENTS\\033[0m\\uD83C\\uDF38\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[1] \u003d true; // Mark Events title as printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Markneoneo"},"content":"            } else if (task instanceof ToDo \u0026\u0026 !titlePrinted[2]) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Markneoneo"},"content":"                if (index \u003e 0) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Markneoneo"},"content":"                    System.out.println();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Markneoneo"},"content":"                } // Add a newline before the section","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Markneoneo"},"content":"                System.out.println(\"\\uD83D\\uDCCB\\033[1;4mTODO LIST\\033[0m\\uD83D\\uDCCB\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Markneoneo"},"content":"                titlePrinted[2] \u003d true; // Mark ToDos title as printed","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Markneoneo"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Markneoneo"},"content":"            // Print the task with aligned columns","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Markneoneo"},"content":"            String taskDescription \u003d task.getName();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Markneoneo"},"content":"            String taskDetails \u003d task.getDetails() + (task.getDone() ? \" ‚úîÔ∏è\" : \"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Markneoneo"},"content":"            // Use fixed-width columns for alignment","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Markneoneo"},"content":"            // %-10s ensures left alignment with a width of 10 characters.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Markneoneo"},"content":"            System.out.printf(\"%d. %-10s %-30s%n\", index, taskDescription, taskDetails);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that a task has been successfully added to the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Markneoneo"},"content":"     * The task type and details are displayed with formatting for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Markneoneo"},"content":"     * @param task     the task that was added; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Markneoneo"},"content":"     * @param taskType the type of the task (e.g., \"DEADLINE\", \"EVENT\", \"TODO\"); must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskAdded(Task task, String taskType) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Markneoneo"},"content":"        System.out.printf(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Markneoneo"},"content":"                ‚úçÔ∏è Understood! The following \\033[1m%s\\033[0m has been \\033[92;1mSaved\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Markneoneo"},"content":"                ‚ï∞‚îà‚û§ %s","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Markneoneo"},"content":"                \"\"\", taskType, task);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that a task has been marked as complete or incomplete.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Markneoneo"},"content":"     * The task index and new status are displayed with formatting for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Markneoneo"},"content":"     * @param index  the index of the task that was marked.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Markneoneo"},"content":"     * @param status the new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskMarked(int index, boolean status) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Markneoneo"},"content":"        System.out.printf(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Markneoneo"},"content":"                ‚úçÔ∏è Understood! the following task has been set to %s","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Markneoneo"},"content":"                ‚ï∞‚îà‚û§ %d.\\s\"\"\", status ? \"\\033[92;1mComplete\\033[0m ‚úîÔ∏è. Excellent work!\" :","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Markneoneo"},"content":"                \"\\033[91;1mIncomplete\\033[0m ‚ùå. Don\u0027t give up!\", index);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that a task has been successfully deleted from the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Markneoneo"},"content":"     * The task index is displayed with formatting for better readability.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Markneoneo"},"content":"     * @param index The index of the task that was deleted.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskDeleted(int index) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Markneoneo"},"content":"        System.out.printf(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Markneoneo"},"content":"                üóëÔ∏è Understood! the following task has been \\033[1;91mDeleted\\033[0m:","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Markneoneo"},"content":"                ‚ï∞‚îà‚û§ %s.\\s\"\"\", index);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Markneoneo"},"content":"     * Notifies the user that all tasks have been reset and the task list is now empty.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Markneoneo"},"content":"    public static void sayTaskReset() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Markneoneo"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Markneoneo"},"content":"                üóëÔ∏è All tasks have been \\033[1;91mDeleted\\033[0m. The task list is now empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Markneoneo"},"content":"                Did you just send a D-mail to the past?\"\"\");","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":286}},{"path":"src/main/java/amadeus/personality/amadeus_logo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                                \u001b[38;2;224;143;20;49m‚ñÑ\u001b[38;2;201;111;20;48;2;184;82;10m‚ñÑ\u001b[38;2;186;115;22;48;2;154;101;19m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                             \u001b[38;2;120;45;0;49m‚ñÑ\u001b[38;2;171;109;28;49m‚ñÑ\u001b[38;2;216;170;53;48;2;162;93;11m‚ñÑ\u001b[38;2;222;179;55;48;2;220;140;17m‚ñÑ\u001b[38;2;167;116;26;48;2;210;138;26m‚ñÑ\u001b[38;2;219;165;46;48;2;218;133;20m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                          \u001b[38;2;73;18;0;49m‚ñÑ\u001b[38;2;169;65;4;49m‚ñÑ\u001b[38;2;210;108;7;48;2;200;109;0m‚ñÑ\u001b[38;2;223;115;6;48;2;153;55;3m‚ñÑ\u001b[38;2;245;146;25;48;2;212;123;10m‚ñÑ\u001b[38;2;232;172;48;48;2;224;156;21m‚ñÑ\u001b[38;2;204;158;41;48;2;225;163;26m‚ñÑ\u001b[38;2;222;173;49;48;2;222;157;24m‚ñÑ\u001b[38;2;224;168;44;48;2;221;142;16m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                         \u001b[38;2;185;69;4;48;2;57;9;0m‚ñÑ\u001b[38;2;192;74;3;48;2;119;40;2m‚ñÑ\u001b[38;2;170;55;3;48;2;212;89;3m‚ñÑ\u001b[38;2;182;66;4;48;2;217;95;4m‚ñÑ\u001b[38;2;154;89;18;48;2;232;111;5m‚ñÑ\u001b[38;2;54;32;8;48;2;209;111;16m‚ñÑ\u001b[38;2;173;97;12;48;2;205;134;26m‚ñÑ\u001b[38;2;245;145;17;48;2;226;169;36m‚ñÑ\u001b[38;2;169;110;24;48;2;228;165;32m‚ñÑ\u001b[38;2;190;124;21;48;2;222;160;34m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                     \u001b[38;2;215;148;27;49m‚ñÑ\u001b[38;2;198;119;18;49m‚ñÑ\u001b[38;2;214;153;33;48;2;98;55;4m‚ñÑ\u001b[38;2;221;138;19;48;2;207;110;19m‚ñÑ\u001b[38;2;214;107;14;48;2;222;113;6m‚ñÑ\u001b[38;2;134;52;9;48;2;194;85;6m‚ñÑ\u001b[38;2;45;26;19;48;2;95;19;2m‚ñÑ\u001b[38;2;11;3;2;48;2;123;100;49m‚ñÑ\u001b[38;2;17;1;0;48;2;3;0;0m‚ñÑ\u001b[38;2;49;19;7;48;2;34;16;7m‚ñÑ\u001b[38;2;145;61;9;48;2;173;95;11m‚ñÑ\u001b[38;2;239;121;7;48;2;253;136;8m‚ñÑ\u001b[38;2;227;156;26;48;2;231;161;33m‚ñÑ\u001b[38;2;220;149;26;48;2;221;148;28m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                   \u001b[38;2;191;99;13;49m‚ñÑ\u001b[38;2;216;152;25;48;2;155;85;15m‚ñÑ\u001b[38;2;222;164;32;48;2;222;162;39m‚ñÑ\u001b[38;2;224;166;32;48;2;222;164;38m‚ñÑ\u001b[38;2;210;124;19;48;2;229;164;35m‚ñÑ\u001b[38;2;97;57;12;48;2;200;107;11m‚ñÑ\u001b[38;2;39;30;15;48;2;143;81;31m‚ñÑ\u001b[38;2;11;0;0;48;2;43;26;11m‚ñÑ\u001b[38;2;22;2;0;48;2;11;1;0m‚ñÑ\u001b[38;2;72;26;2;48;2;34;7;0m‚ñÑ\u001b[38;2;66;16;1;48;2;53;16;1m‚ñÑ\u001b[38;2;55;17;6;48;2;60;23;7m‚ñÑ\u001b[38;2;106;26;8;48;2;130;44;8m‚ñÑ\u001b[38;2;225;90;2;48;2;237;113;5m‚ñÑ\u001b[38;2;228;140;21;48;2;193;123;17m‚ñÑ\u001b[38;2;227;158;28;48;2;221;151;28m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                \u001b[38;2;72;24;0;49m‚ñÑ\u001b[38;2;188;92;9;49m‚ñÑ\u001b[38;2;220;131;18;48;2;198;102;5m‚ñÑ\u001b[38;2;228;156;25;48;2;218;163;40m‚ñÑ\u001b[38;2;229;147;16;48;2;229;171;48m‚ñÑ\u001b[38;2;157;82;19;48;2;236;166;39m‚ñÑ\u001b[38;2;74;53;15;48;2;219;144;26m‚ñÑ\u001b[38;2;9;0;0;48;2;55;36;7m‚ñÑ\u001b[38;2;19;1;0;48;2;22;3;1m‚ñÑ\u001b[38;2;16;1;0;48;2;16;0;0m‚ñÑ\u001b[38;2;51;14;6;48;2;20;2;0m‚ñÑ\u001b[38;2;48;14;5;48;2;39;5;0m‚ñÑ\u001b[38;2;48;7;0;48;2;82;28;3m‚ñÑ\u001b[38;2;69;19;1;48;2;21;1;0m‚ñÑ\u001b[38;2;79;26;5;48;2;53;20;9m‚ñÑ\u001b[38;2;181;92;12;48;2;139;43;11m‚ñÑ\u001b[38;2;223;159;28;48;2;240;132;22m‚ñÑ\u001b[38;2;221;161;29;48;2;231;146;28m‚ñÑ\u001b[38;2;171;117;29;48;2;222;167;40m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                              \u001b[38;2;103;19;2;49m‚ñÑ\u001b[38;2;125;48;13;48;2;49;3;0m‚ñÑ\u001b[38;2;211;113;18;48;2;137;50;4m‚ñÑ\u001b[38;2;196;108;12;48;2;204;103;10m‚ñÑ\u001b[38;2;184;114;39;48;2;232;138;21m‚ñÑ\u001b[38;2;90;48;15;48;2;219;132;28m‚ñÑ\u001b[38;2;9;4;1;48;2;141;97;12m‚ñÑ\u001b[38;2;28;8;0;48;2;41;33;25m‚ñÑ\u001b[38;2;12;1;0;48;2;6;0;0m‚ñÑ\u001b[38;2;20;2;0;48;2;13;0;0m‚ñÑ\u001b[38;2;105;81;50;48;2;17;0;0m‚ñÑ\u001b[38;2;187;124;22;48;2;53;21;5m‚ñÑ\u001b[38;2;205;128;25;48;2;107;53;22m‚ñÑ\u001b[38;2;81;38;5;48;2;83;34;15m‚ñÑ\u001b[38;2;48;12;0;48;2;63;19;2m‚ñÑ\u001b[38;2;96;38;2;48;2;116;46;3m‚ñÑ\u001b[38;2;134;68;12;48;2;118;55;7m‚ñÑ\u001b[38;2;180;134;41;48;2;176;119;26m‚ñÑ\u001b[38;2;213;173;56;48;2;212;164;46m‚ñÑ\u001b[38;2;221;177;52;48;2;220;170;46m‚ñÑ\u001b[38;2;209;159;47;48;2;193;135;31m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                           \u001b[38;2;214;115;8;49m‚ñÑ\u001b[38;2;191;121;24;48;2;78;22;0m‚ñÑ\u001b[38;2;222;153;37;48;2;144;32;2m‚ñÑ\u001b[38;2;181;83;9;48;2;184;56;3m‚ñÑ\u001b[38;2;193;119;10;48;2;198;71;4m‚ñÑ\u001b[38;2;72;32;17;48;2;195;83;6m‚ñÑ\u001b[38;2;19;16;13;48;2;101;43;6m‚ñÑ\u001b[38;2;5;0;0;48;2;59;40;10m‚ñÑ\u001b[38;2;39;7;1;48;2;35;4;2m‚ñÑ\u001b[38;2;48;12;0;48;2;28;0;0m‚ñÑ\u001b[38;2;24;14;4;48;2;18;1;0m‚ñÑ\u001b[38;2;130;84;27;48;2;12;0;0m‚ñÑ\u001b[38;2;225;143;25;48;2;134;79;5m‚ñÑ\u001b[38;2;233;144;22;48;2;190;98;17m‚ñÑ\u001b[38;2;224;187;64;48;2;238;141;11m‚ñÑ\u001b[38;2;235;180;53;48;2;247;140;11m‚ñÑ\u001b[38;2;79;52;12;48;2;88;44;3m‚ñÑ\u001b[38;2;10;0;0;48;2;20;2;0m‚ñÑ\u001b[38;2;16;2;0;48;2;27;7;0m‚ñÑ\u001b[38;2;26;16;10;48;2;43;19;4m‚ñÑ\u001b[38;2;168;122;40;48;2;163;107;14m‚ñÑ\u001b[38;2;226;182;60;48;2;223;156;18m‚ñÑ\u001b[38;2;181;142;51;48;2;223;156;17m‚ñÑ\u001b[38;2;178;150;57;48;2;222;148;13m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                        \u001b[38;2;156;50;0;49m‚ñÑ\u001b[38;2;183;91;7;48;2;128;55;0m‚ñÑ\u001b[38;2;216;147;28;48;2;207;168;61m‚ñÑ\u001b[38;2;222;167;34;48;2;219;142;31m‚ñÑ\u001b[38;2;228;163;33;48;2;224;163;32m‚ñÑ\u001b[38;2;188;120;21;48;2;237;147;20m‚ñÑ\u001b[38;2;89;65;35;48;2;213;124;33m‚ñÑ\u001b[38;2;19;4;3;48;2;101;63;13m‚ñÑ\u001b[38;2;11;2;0;48;2;12;1;0m‚ñÑ\u001b[38;2;11;3;0;48;2;13;2;0m‚ñÑ\u001b[38;2;6;1;0;48;2;10;0;0m‚ñÑ\u001b[38;2;129;63;3;48;2;27;1;0m‚ñÑ\u001b[38;2;198;113;44;48;2;99;60;34m‚ñÑ\u001b[38;2;231;139;13;48;2;186;109;17m‚ñÑ\u001b[38;2;226;142;18;48;2;229;124;16m‚ñÑ\u001b[38;2;211;112;24;48;2;234;144;23m‚ñÑ\u001b[38;2;220;178;58;48;2;224;159;25m‚ñÑ\u001b[38;2;182;99;25;48;2;223;156;24m‚ñÑ\u001b[38;2;202;109;19;48;2;230;150;20m‚ñÑ\u001b[38;2;56;27;4;48;2;68;41;5m‚ñÑ\u001b[38;2;12;1;0;48;2;11;1;0m‚ñÑ\u001b[38;2;33;5;0;48;2;13;1;0m‚ñÑ\u001b[38;2;28;14;6;48;2;26;13;6m‚ñÑ\u001b[38;2;167;90;12;48;2;167;92;12m‚ñÑ\u001b[38;2;251;133;13;48;2;242;141;17m‚ñÑ\u001b[38;2;232;145;21;48;2;218;142;29m‚ñÑ\u001b[38;2;211;89;2;49m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                      \u001b[38;2;65;22;0;49m‚ñÑ\u001b[38;2;176;41;2;48;2;170;85;0m‚ñÑ\u001b[38;2;220;111;5;48;2;182;108;22m‚ñÑ\u001b[38;2;223;146;7;48;2;214;163;54m‚ñÑ\u001b[38;2;220;137;7;48;2;221;181;63m‚ñÑ\u001b[38;2;176;121;13;48;2;232;179;54m‚ñÑ\u001b[38;2;58;5;0;48;2;205;147;50m‚ñÑ\u001b[38;2;55;5;1;48;2;44;16;1m‚ñÑ\u001b[38;2;54;11;1;48;2;16;2;0m‚ñÑ\u001b[38;2;10;1;0;48;2;29;7;0m‚ñÑ\u001b[38;2;8;5;1;48;2;1;0;0m‚ñÑ\u001b[38;2;64;25;8;48;2;5;3;1m‚ñÑ\u001b[38;2;110;31;3;48;2;60;19;2m‚ñÑ\u001b[38;2;218;109;5;48;2;208;118;16m‚ñÑ\u001b[38;2;159;83;8;48;2;207;148;45m‚ñÑ\u001b[38;2;177;65;3;48;2;219;161;48m‚ñÑ\u001b[38;2;52;9;0;48;2;201;133;31m‚ñÑ\u001b[49;38;2;193;91;9m‚ñÄ\u001b[49m \u001b[38;2;122;23;1;48;2;165;80;9m‚ñÑ\u001b[38;2;144;31;3;48;2;183;101;12m‚ñÑ\u001b[38;2;46;10;1;48;2;48;21;4m‚ñÑ\u001b[38;2;9;0;0;48;2;3;0;0m‚ñÑ\u001b[38;2;27;0;0;48;2;21;3;0m‚ñÑ\u001b[38;2;25;13;1;48;2;27;16;11m‚ñÑ\u001b[38;2;173;84;4;48;2;174;110;28m‚ñÑ\u001b[38;2;216;128;9;48;2;246;159;35m‚ñÑ\u001b[38;2;222;147;10;48;2;233;171;49m‚ñÑ\u001b[38;2;222;145;9;48;2;222;152;37m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                   \u001b[38;2;99;28;7;49m‚ñÑ\u001b[38;2;120;23;3;48;2;128;27;0m‚ñÑ\u001b[38;2;164;47;3;48;2;109;24;2m‚ñÑ\u001b[38;2;204;84;5;48;2;192;79;4m‚ñÑ\u001b[38;2;192;71;9;48;2;209;83;5m‚ñÑ\u001b[38;2;175;98;41;48;2;233;135;24m‚ñÑ\u001b[38;2;56;24;1;48;2;202;142;39m‚ñÑ\u001b[38;2;24;3;0;48;2;88;69;38m‚ñÑ\u001b[38;2;86;27;2;48;2;67;17;1m‚ñÑ\u001b[38;2;70;15;1;48;2;102;33;2m‚ñÑ\u001b[38;2;23;5;1;48;2;53;16;1m‚ñÑ\u001b[38;2;113;77;16;48;2;25;8;0m‚ñÑ\u001b[38;2;201;116;17;48;2;69;31;1m‚ñÑ\u001b[38;2;165;68;12;48;2;158;53;6m‚ñÑ\u001b[38;2;174;106;25;48;2;82;22;3m‚ñÑ\u001b[38;2;106;53;10;48;2;99;32;5m‚ñÑ\u001b[49;38;2;214;152;48m‚ñÄ\u001b[49;38;2;150;71;14m‚ñÄ\u001b[49m    \u001b[38;2;162;77;13;48;2;110;35;2m‚ñÑ\u001b[38;2;201;108;20;48;2;163;71;10m‚ñÑ\u001b[38;2;61;30;5;48;2;51;19;5m‚ñÑ\u001b[38;2;4;0;0;48;2;6;0;0m‚ñÑ\u001b[38;2;11;0;0;48;2;15;1;0m‚ñÑ\u001b[38;2;28;15;7;48;2;33;16;9m‚ñÑ\u001b[38;2;169;108;28;48;2;175;106;24m‚ñÑ\u001b[38;2;226;171;41;48;2;233;174;43m‚ñÑ\u001b[38;2;223;170;42;48;2;222;181;57m‚ñÑ\u001b[38;2;222;165;37;48;2;222;175;51m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                 \u001b[38;2;50;8;0;49m‚ñÑ\u001b[38;2;130;43;4;48;2;84;24;3m‚ñÑ\u001b[38;2;153;53;5;48;2;120;18;2m‚ñÑ\u001b[38;2;124;42;3;48;2;114;18;1m‚ñÑ\u001b[38;2;58;31;21;48;2;87;20;1m‚ñÑ\u001b[38;2;28;18;12;48;2;76;20;2m‚ñÑ\u001b[38;2;35;8;0;48;2;106;67;13m‚ñÑ\u001b[38;2;24;4;0;48;2;40;24;18m‚ñÑ\u001b[38;2;20;3;0;48;2;19;0;0m‚ñÑ\u001b[38;2;48;19;1;48;2;10;1;0m‚ñÑ\u001b[38;2;31;16;5;48;2;76;9;1m‚ñÑ\u001b[38;2;231;159;42;48;2;34;5;0m‚ñÑ\u001b[38;2;227;184;61;48;2;162;83;5m‚ñÑ\u001b[38;2;222;198;83;48;2;221;138;11m‚ñÑ\u001b[38;2;222;194;77;48;2;218;145;9m‚ñÑ\u001b[38;2;177;139;48;48;2;202;110;10m‚ñÑ\u001b[49;38;2;152;77;15m‚ñÄ\u001b[49;38;2;80;35;10m‚ñÄ\u001b[49m      \u001b[38;2;123;54;5;48;2;158;64;8m‚ñÑ\u001b[38;2;170;88;15;48;2;202;94;11m‚ñÑ\u001b[38;2;47;22;5;48;2;63;23;3m‚ñÑ\u001b[38;2;1;0;0;48;2;3;0;0m‚ñÑ\u001b[38;2;9;0;0;48;2;12;0;0m‚ñÑ\u001b[38;2;26;16;13;48;2;23;14;3m‚ñÑ\u001b[38;2;155;141;65;48;2;162;107;16m‚ñÑ\u001b[38;2;222;202;85;48;2;224;159;22m‚ñÑ\u001b[38;2;222;200;83;48;2;222;156;23m‚ñÑ\u001b[38;2;222;194;76;48;2;222;151;17m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                              \u001b[38;2;97;15;3;49m‚ñÑ\u001b[38;2;119;31;4;48;2;54;15;0m‚ñÑ\u001b[38;2;125;27;2;48;2;88;13;2m‚ñÑ\u001b[38;2;119;27;3;48;2;137;25;2m‚ñÑ\u001b[38;2;126;33;3;48;2;159;32;2m‚ñÑ\u001b[38;2;77;28;13;48;2;91;14;4m‚ñÑ\u001b[38;2;63;41;27;48;2;112;52;15m‚ñÑ\u001b[38;2;35;8;0;48;2;74;33;2m‚ñÑ\u001b[38;2;26;6;0;48;2;48;12;0m‚ñÑ\u001b[38;2;29;3;0;48;2;28;2;0m‚ñÑ\u001b[38;2;37;14;4;48;2;21;2;0m‚ñÑ\u001b[38;2;154;96;39;48;2;34;19;13m‚ñÑ\u001b[38;2;222;138;30;48;2;108;67;11m‚ñÑ\u001b[38;2;220;144;31;48;2;200;132;34m‚ñÑ\u001b[38;2;223;163;38;48;2;235;125;15m‚ñÑ\u001b[38;2;220;181;57;48;2;223;159;22m‚ñÑ\u001b[38;2;193;160;52;48;2;218;148;15m‚ñÑ\u001b[49;38;2;176;90;5m‚ñÄ\u001b[49m         \u001b[38;2;206;115;15;48;2;203;98;8m‚ñÑ\u001b[38;2;187;83;12;48;2;186;82;7m‚ñÑ\u001b[38;2;46;14;3;48;2;44;14;2m‚ñÑ\u001b[38;2;0;0;0;48;2;3;0;0m‚ñÑ\u001b[38;2;8;0;0;48;2;17;0;0m‚ñÑ\u001b[38;2;25;15;8;48;2;34;14;4m‚ñÑ\u001b[38;2;173;111;26;48;2;165;106;16m‚ñÑ\u001b[38;2;226;175;48;48;2;224;161;22m‚ñÑ\u001b[38;2;222;178;51;48;2;222;161;23m‚ñÑ\u001b[38;2;222;170;44;48;2;222;155;21m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                           \u001b[38;2;23;0;0;49m‚ñÑ\u001b[38;2;153;70;6;49m‚ñÑ\u001b[38;2;178;74;7;48;2;164;75;5m‚ñÑ\u001b[38;2;185;87;6;48;2;153;66;7m‚ñÑ\u001b[38;2;186;92;8;48;2;170;80;9m‚ñÑ\u001b[38;2;153;83;26;48;2;164;64;6m‚ñÑ\u001b[38;2;56;43;18;48;2;142;77;36m‚ñÑ\u001b[38;2;23;0;0;48;2;39;11;4m‚ñÑ\u001b[38;2;45;9;0;48;2;27;8;3m‚ñÑ\u001b[38;2;68;23;2;48;2;30;6;0m‚ñÑ\u001b[38;2;23;0;0;48;2;14;1;0m‚ñÑ\u001b[38;2;110;80;18;48;2;11;0;0m‚ñÑ\u001b[38;2;97;12;3;48;2;50;32;23m‚ñÑ\u001b[38;2;140;35;3;48;2;110;47;8m‚ñÑ\u001b[38;2;144;36;2;48;2;156;68;9m‚ñÑ\u001b[38;2;148;36;3;48;2;177;93;8m‚ñÑ\u001b[38;2;118;48;6;48;2;214;121;15m‚ñÑ\u001b[49;38;2;209;135;18m‚ñÄ\u001b[49;38;2;219;152;18m‚ñÄ\u001b[49m           \u001b[38;2;165;71;6;48;2;184;85;8m‚ñÑ\u001b[38;2;218;126;12;48;2;215;117;17m‚ñÑ\u001b[38;2;65;34;2;48;2;64;34;4m‚ñÑ\u001b[48;2;0;0;0m \u001b[38;2;11;0;0;48;2;12;0;0m‚ñÑ\u001b[38;2;27;14;6;48;2;29;16;8m‚ñÑ\u001b[38;2;174;103;11;48;2;172;104;18m‚ñÑ\u001b[38;2;235;156;24;48;2;233;167;40m‚ñÑ\u001b[38;2;222;162;27;48;2;222;176;51m‚ñÑ\u001b[38;2;222;161;26;48;2;222;170;44m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                         \u001b[38;2;184;101;8;49m‚ñÑ\u001b[38;2;228;133;10;48;2;194;95;9m‚ñÑ\u001b[38;2;235;146;15;48;2;170;92;13m‚ñÑ\u001b[38;2;213;124;11;48;2;219;141;21m‚ñÑ\u001b[38;2;189;112;27;48;2;183;88;9m‚ñÑ\u001b[38;2;102;47;8;48;2;194;102;10m‚ñÑ\u001b[38;2;29;4;1;48;2;100;37;6m‚ñÑ\u001b[38;2;22;2;0;48;2;35;19;7m‚ñÑ\u001b[38;2;40;8;0;48;2;23;4;0m‚ñÑ\u001b[38;2;39;7;1;48;2;64;26;2m‚ñÑ\u001b[38;2;85;49;21;48;2;28;5;0m‚ñÑ\u001b[38;2;158;88;11;48;2;44;17;3m‚ñÑ\u001b[38;2;236;147;24;48;2;151;101;29m‚ñÑ\u001b[38;2;206;139;28;48;2;230;141;20m‚ñÑ\u001b[38;2;231;156;34;48;2;240;130;12m‚ñÑ\u001b[38;2;232;139;24;48;2;234;132;16m‚ñÑ\u001b[38;2;225;105;8;48;2;195;80;2m‚ñÑ\u001b[38;2;216;123;17;48;2;160;70;2m‚ñÑ\u001b[38;2;226;166;35;48;2;231;160;30m‚ñÑ\u001b[38;2;223;164;32;48;2;225;160;24m‚ñÑ\u001b[38;2;206;136;26;48;2;197;116;12m‚ñÑ\u001b[38;2;196;109;19;48;2;181;74;6m‚ñÑ\u001b[38;2;181;110;22;48;2;140;66;8m‚ñÑ\u001b[38;2;200;120;22;48;2;191;93;12m‚ñÑ\u001b[38;2;206;118;20;48;2;190;83;6m‚ñÑ\u001b[38;2;200;119;20;48;2;184;89;6m‚ñÑ\u001b[38;2;188;107;19;48;2;168;70;6m‚ñÑ\u001b[38;2;190;112;23;48;2;170;73;6m‚ñÑ\u001b[38;2;209;135;22;48;2;197;116;12m‚ñÑ\u001b[38;2;203;120;20;48;2;193;96;6m‚ñÑ\u001b[38;2;200;112;22;48;2;185;75;6m‚ñÑ\u001b[38;2;205;112;15;48;2;191;93;6m‚ñÑ\u001b[38;2;213;92;5;48;2;212;107;9m‚ñÑ\u001b[38;2;138;51;4;48;2;184;92;11m‚ñÑ\u001b[38;2;20;6;2;48;2;37;13;3m‚ñÑ\u001b[38;2;7;0;0;48;2;2;0;0m‚ñÑ\u001b[38;2;21;4;0;48;2;9;1;0m‚ñÑ\u001b[38;2;29;14;6;48;2;25;15;7m‚ñÑ\u001b[38;2;149;75;10;48;2;134;76;11m‚ñÑ\u001b[38;2;240;137;17;48;2;232;153;29m‚ñÑ\u001b[38;2;222;166;35;48;2;222;176;47m‚ñÑ\u001b[38;2;222;162;30;48;2;222;171;41m‚ñÑ\u001b[49m                                 \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                      \u001b[38;2;114;40;0;49m‚ñÑ\u001b[38;2;138;56;4;48;2;56;12;0m‚ñÑ\u001b[38;2;192;104;8;48;2;137;61;5m‚ñÑ\u001b[38;2;240;150;12;48;2;202;113;8m‚ñÑ\u001b[38;2;223;140;13;48;2;242;162;16m‚ñÑ\u001b[38;2;159;93;18;48;2;219;135;12m‚ñÑ\u001b[38;2;50;16;4;48;2;157;94;26m‚ñÑ\u001b[38;2;33;8;1;48;2;84;59;27m‚ñÑ\u001b[38;2;63;14;1;48;2;22;2;0m‚ñÑ\u001b[38;2;71;15;1;48;2;62;9;1m‚ñÑ\u001b[38;2;28;3;0;48;2;37;7;0m‚ñÑ\u001b[38;2;139;80;9;48;2;32;4;0m‚ñÑ\u001b[38;2;224;125;17;48;2;125;89;41m‚ñÑ\u001b[38;2;219;143;20;48;2;187;104;23m‚ñÑ\u001b[38;2;231;153;23;48;2;233;143;19m‚ñÑ\u001b[38;2;231;147;17;48;2;233;160;31m‚ñÑ\u001b[38;2;233;148;20;48;2;224;160;39m‚ñÑ\u001b[38;2;225;138;22;48;2;227;164;39m‚ñÑ\u001b[38;2;233;112;8;48;2;228;143;27m‚ñÑ\u001b[38;2;241;139;11;48;2;238;149;26m‚ñÑ\u001b[38;2;224;165;32;48;2;212;152;36m‚ñÑ\u001b[38;2;218;157;30;48;2;222;173;45m‚ñÑ\u001b[38;2;229;164;32;48;2;222;173;45m‚ñÑ\u001b[38;2;240;149;19;48;2;208;157;41m‚ñÑ\u001b[38;2;238;144;17;48;2;216;157;39m‚ñÑ\u001b[38;2;245;142;14;48;2;228;161;37m‚ñÑ\u001b[38;2;241;151;21;48;2;220;167;40m‚ñÑ\u001b[38;2;235;152;24;48;2;223;164;39m‚ñÑ\u001b[38;2;245;148;18;48;2;232;160;33m‚ñÑ\u001b[38;2;247;148;19;48;2;228;161;35m‚ñÑ\u001b[38;2;248;145;16;48;2;225;164;41m‚ñÑ\u001b[38;2;241;141;18;48;2;228;158;34m‚ñÑ\u001b[38;2;244;150;22;48;2;231;155;32m‚ñÑ\u001b[38;2;248;149;15;48;2;223;169;39m‚ñÑ\u001b[38;2;235;120;6;48;2;229;130;18m‚ñÑ\u001b[38;2;182;65;5;48;2;183;60;4m‚ñÑ\u001b[38;2;173;63;8;48;2;135;35;5m‚ñÑ\u001b[38;2;46;15;3;48;2;38;10;2m‚ñÑ\u001b[38;2;10;0;0;48;2;2;0;0m‚ñÑ\u001b[38;2;6;0;0;48;2;14;2;0m‚ñÑ\u001b[38;2;29;15;6;48;2;46;20;7m‚ñÑ\u001b[38;2;82;32;8;48;2;140;68;11m‚ñÑ\u001b[38;2;128;60;4;48;2;207;101;11m‚ñÑ\u001b[38;2;171;78;7;48;2;237;155;30m‚ñÑ\u001b[38;2;231;140;13;48;2;224;168;37m‚ñÑ\u001b[38;2;170;122;27;49m‚ñÑ\u001b[38;2;159;117;27;49m‚ñÑ\u001b[38;2;97;49;6;49m‚ñÑ\u001b[38;2;46;17;0;49m‚ñÑ\u001b[38;2;85;42;6;49m‚ñÑ\u001b[38;2;91;42;6;49m‚ñÑ\u001b[38;2;116;78;17;49m‚ñÑ\u001b[38;2;40;11;0;49m‚ñÑ\u001b[38;2;122;75;12;49m‚ñÑ\u001b[38;2;165;117;27;49m‚ñÑ\u001b[49m     \u001b[38;2;35;12;0;49m‚ñÑ\u001b[38;2;152;103;24;49m‚ñÑ\u001b[49m                \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                   \u001b[38;2;107;40;7;49m‚ñÑ\u001b[38;2;159;79;8;49m‚ñÑ\u001b[38;2;200;104;7;48;2;154;77;6m‚ñÑ\u001b[38;2;246;147;9;48;2;225;135;11m‚ñÑ\u001b[38;2;251;159;14;48;2;213;131;16m‚ñÑ\u001b[38;2;196;109;10;48;2;233;151;16m‚ñÑ\u001b[38;2;88;57;9;48;2;204;122;10m‚ñÑ\u001b[38;2;47;11;1;48;2;163;110;54m‚ñÑ\u001b[38;2;37;4;0;48;2;27;3;0m‚ñÑ\u001b[38;2;47;12;1;48;2;42;8;0m‚ñÑ\u001b[38;2;76;23;2;48;2;99;39;4m‚ñÑ\u001b[38;2;48;23;16;48;2;72;27;2m‚ñÑ\u001b[38;2;146;99;38;48;2;65;30;10m‚ñÑ\u001b[38;2;160;84;20;48;2;145;85;18m‚ñÑ\u001b[38;2;160;83;18;48;2;218;120;10m‚ñÑ\u001b[38;2;173;97;19;48;2;225;143;21m‚ñÑ\u001b[38;2;171;92;18;48;2;231;157;28m‚ñÑ\u001b[38;2;158;82;19;48;2;229;139;19m‚ñÑ\u001b[38;2;123;50;11;48;2;232;129;13m‚ñÑ\u001b[38;2;87;52;12;48;2;234;140;19m‚ñÑ\u001b[38;2;37;10;1;48;2;181;145;64m‚ñÑ\u001b[38;2;30;4;0;48;2;157;131;67m‚ñÑ\u001b[38;2;15;1;0;48;2;155;131;67m‚ñÑ\u001b[38;2;14;0;0;48;2;154;131;71m‚ñÑ\u001b[38;2;23;4;0;48;2;156;133;69m‚ñÑ\u001b[38;2;46;3;0;48;2;159;131;66m‚ñÑ\u001b[38;2;31;3;0;48;2;153;128;65m‚ñÑ\u001b[38;2;14;0;0;48;2;147;121;65m‚ñÑ\u001b[38;2;18;1;0;48;2;148;122;62m‚ñÑ\u001b[38;2;21;1;0;48;2;150;124;63m‚ñÑ\u001b[38;2;39;4;0;48;2;156;130;69m‚ñÑ\u001b[38;2;37;4;0;48;2;157;131;69m‚ñÑ\u001b[38;2;43;9;1;48;2;157;131;68m‚ñÑ\u001b[38;2;29;7;0;48;2;151;124;66m‚ñÑ\u001b[38;2;33;3;0;48;2;156;130;65m‚ñÑ\u001b[38;2;12;1;0;48;2;145;121;62m‚ñÑ\u001b[38;2;8;1;0;48;2;139;115;63m‚ñÑ\u001b[38;2;18;9;5;48;2;130;110;65m‚ñÑ\u001b[38;2;54;25;5;48;2;141;118;66m‚ñÑ\u001b[38;2;72;26;5;48;2;110;73;40m‚ñÑ\u001b[38;2;13;5;2;48;2;22;6;3m‚ñÑ\u001b[38;2;2;0;0;48;2;3;0;0m‚ñÑ\u001b[38;2;13;1;0;48;2;12;0;0m‚ñÑ\u001b[38;2;26;15;7;48;2;27;15;8m‚ñÑ\u001b[38;2;66;22;8;48;2;85;46;11m‚ñÑ\u001b[38;2;85;19;1;48;2;100;35;2m‚ñÑ\u001b[38;2;104;18;1;48;2;155;73;6m‚ñÑ\u001b[38;2;171;84;7;48;2;178;103;18m‚ñÑ\u001b[38;2;223;150;25;48;2;225;176;49m‚ñÑ\u001b[38;2;223;170;38;48;2;223;169;45m‚ñÑ\u001b[38;2;222;169;39;48;2;221;159;38m‚ñÑ\u001b[38;2;225;165;33;48;2;220;167;47m‚ñÑ\u001b[38;2;227;162;32;48;2;218;164;49m‚ñÑ\u001b[38;2;229;159;27;48;2;217;161;45m‚ñÑ\u001b[38;2;224;167;37;48;2;222;170;50m‚ñÑ\u001b[38;2;224;167;35;48;2;221;169;50m‚ñÑ\u001b[38;2;228;165;33;48;2;220;171;47m‚ñÑ\u001b[38;2;229;159;27;48;2;222;176;49m‚ñÑ\u001b[38;2;163;94;13;48;2;193;145;40m‚ñÑ\u001b[38;2;244;163;36;49m‚ñÑ\u001b[38;2;195;153;49;49m‚ñÑ\u001b[38;2;213;165;42;48;2;159;110;21m‚ñÑ\u001b[38;2;213;152;28;48;2;196;131;20m‚ñÑ\u001b[38;2;222;166;36;48;2;221;167;44m‚ñÑ\u001b[38;2;181;135;42;48;2;212;160;39m‚ñÑ\u001b[38;2;171;100;21;48;2;167;98;20m‚ñÑ\u001b[49m               \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                 \u001b[38;2;146;73;7;49m‚ñÑ\u001b[38;2;234;161;36;48;2;218;100;6m‚ñÑ\u001b[38;2;239;147;28;48;2;188;81;5m‚ñÑ\u001b[38;2;249;166;22;48;2;214;111;7m‚ñÑ\u001b[38;2;254;188;19;48;2;226;123;7m‚ñÑ\u001b[38;2;151;123;73;48;2;249;157;15m‚ñÑ\u001b[38;2;59;34;6;48;2;198;140;25m‚ñÑ\u001b[38;2;115;68;16;48;2;113;61;9m‚ñÑ\u001b[38;2;102;53;6;48;2;41;8;1m‚ñÑ\u001b[38;2;89;42;4;48;2;83;35;3m‚ñÑ\u001b[38;2;77;32;2;48;2;83;30;2m‚ñÑ\u001b[38;2;49;10;0;48;2;61;17;1m‚ñÑ\u001b[38;2;82;42;4;48;2;59;21;2m‚ñÑ\u001b[38;2;49;15;1;48;2;51;22;18m‚ñÑ\u001b[38;2;55;13;1;48;2;74;31;20m‚ñÑ\u001b[38;2;17;2;0;48;2;35;22;19m‚ñÑ\u001b[38;2;38;7;0;48;2;34;21;18m‚ñÑ\u001b[38;2;70;26;1;48;2;54;26;18m‚ñÑ\u001b[38;2;26;7;1;48;2;39;23;18m‚ñÑ\u001b[38;2;26;6;0;48;2;37;23;19m‚ñÑ\u001b[38;2;22;2;0;48;2;27;10;9m‚ñÑ\u001b[38;2;21;3;0;48;2;31;5;0m‚ñÑ\u001b[38;2;98;58;4;48;2;80;28;3m‚ñÑ\u001b[38;2;44;20;1;48;2;46;14;1m‚ñÑ\u001b[38;2;22;4;0;48;2;13;1;0m‚ñÑ\u001b[38;2;42;12;1;48;2;11;0;0m‚ñÑ\u001b[38;2;81;33;2;48;2;25;2;0m‚ñÑ\u001b[38;2;56;11;1;48;2;45;3;0m‚ñÑ\u001b[38;2;45;10;1;48;2;33;3;0m‚ñÑ\u001b[38;2;20;3;0;48;2;13;0;0m‚ñÑ\u001b[38;2;40;12;1;48;2;21;1;0m‚ñÑ\u001b[38;2;77;26;2;48;2;55;13;1m‚ñÑ\u001b[38;2;110;62;18;48;2;73;15;1m‚ñÑ\u001b[38;2;167;121;52;48;2;47;7;0m‚ñÑ\u001b[38;2;172;117;59;48;2;68;18;1m‚ñÑ\u001b[38;2;163;111;61;48;2;58;10;0m‚ñÑ\u001b[38;2;121;81;59;48;2;26;3;0m‚ñÑ\u001b[38;2;144;104;63;48;2;18;1;0m‚ñÑ\u001b[38;2;99;45;19;48;2;53;32;9m‚ñÑ\u001b[38;2;121;30;3;48;2;85;20;7m‚ñÑ\u001b[38;2;93;35;15;48;2;105;27;4m‚ñÑ\u001b[38;2;92;59;36;48;2;67;15;3m‚ñÑ\u001b[38;2;33;10;3;48;2;16;6;2m‚ñÑ\u001b[38;2;1;0;0;48;2;2;0;0m‚ñÑ\u001b[38;2;6;0;0;48;2;9;1;0m‚ñÑ\u001b[38;2;16;5;0;48;2;28;14;5m‚ñÑ\u001b[38;2;13;3;0;48;2;47;21;6m‚ñÑ\u001b[38;2;7;1;0;48;2;42;7;0m‚ñÑ\u001b[38;2;5;1;0;48;2;31;3;0m‚ñÑ\u001b[38;2;11;3;0;48;2;80;30;2m‚ñÑ\u001b[38;2;34;14;1;48;2;199;103;15m‚ñÑ\u001b[38;2;44;22;1;48;2;235;149;29m‚ñÑ\u001b[38;2;44;24;2;48;2;239;158;36m‚ñÑ\u001b[38;2;44;25;2;48;2;239;158;30m‚ñÑ\u001b[38;2;50;20;1;48;2;237;142;25m‚ñÑ\u001b[38;2;46;13;0;48;2;215;110;17m‚ñÑ\u001b[38;2;49;20;0;48;2;233;143;28m‚ñÑ\u001b[38;2;42;21;1;48;2;235;148;27m‚ñÑ\u001b[38;2;46;22;1;48;2;245;145;23m‚ñÑ\u001b[38;2;41;18;1;48;2;230;129;18m‚ñÑ\u001b[38;2;40;17;1;48;2;220;102;7m‚ñÑ\u001b[38;2;44;21;0;48;2;249;136;16m‚ñÑ\u001b[38;2;40;21;1;48;2;232;148;30m‚ñÑ\u001b[38;2;132;105;32;48;2;217;165;37m‚ñÑ\u001b[38;2;221;185;63;48;2;199;143;27m‚ñÑ\u001b[38;2;222;184;59;48;2;222;169;32m‚ñÑ\u001b[38;2;222;185;60;48;2;220;164;31m‚ñÑ\u001b[38;2;222;185;64;48;2;206;134;25m‚ñÑ\u001b[38;2;223;184;64;48;2;231;146;12m‚ñÑ\u001b[38;2;223;188;65;48;2;231;160;18m‚ñÑ\u001b[38;2;223;183;63;48;2;225;148;18m‚ñÑ\u001b[38;2;216;171;56;48;2;174;81;6m‚ñÑ\u001b[38;2;208;168;54;48;2;139;70;6m‚ñÑ\u001b[38;2;199;156;49;48;2;80;32;0m‚ñÑ\u001b[38;2;221;181;63;48;2;213;125;12m‚ñÑ\u001b[38;2;217;174;59;48;2;189;90;0m‚ñÑ\u001b[38;2;224;181;62;48;2;206;97;0m‚ñÑ\u001b[38;2;215;174;61;48;2;225;142;12m‚ñÑ\u001b[38;2;226;189;68;48;2;231;160;18m‚ñÑ\u001b[38;2;209;167;57;48;2;170;106;11m‚ñÑ\u001b[38;2;206;163;53;48;2;202;96;0m‚ñÑ\u001b[38;2;201;140;37;48;2;139;70;0m‚ñÑ\u001b[38;2;147;85;15;48;2;41;7;0m‚ñÑ\u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m              \u001b[38;2;201;107;7;49m‚ñÑ\u001b[38;2;239;139;12;49m‚ñÑ\u001b[38;2;245;147;23;48;2;224;126;9m‚ñÑ\u001b[38;2;236;148;24;48;2;234;128;14m‚ñÑ\u001b[38;2;243;165;21;48;2;245;125;5m‚ñÑ\u001b[38;2;211;166;35;48;2;250;137;8m‚ñÑ\u001b[38;2;75;46;14;48;2;242;142;9m‚ñÑ\u001b[38;2;91;46;5;48;2;78;37;3m‚ñÑ\u001b[38;2;118;74;8;48;2;79;27;2m‚ñÑ\u001b[38;2;99;52;4;48;2;75;14;1m‚ñÑ\u001b[38;2;139;91;24;48;2;138;65;6m‚ñÑ\u001b[38;2;121;67;9;48;2;118;47;4m‚ñÑ\u001b[38;2;217;151;37;48;2;142;58;7m‚ñÑ\u001b[38;2;218;135;9;48;2;79;29;3m‚ñÑ\u001b[38;2;211;126;9;48;2;31;10;1m‚ñÑ\u001b[38;2;204;118;10;48;2;64;10;1m‚ñÑ\u001b[38;2;176;95;8;48;2;88;24;2m‚ñÑ\u001b[38;2;192;109;10;48;2;54;9;1m‚ñÑ\u001b[38;2;211;123;10;48;2;29;8;1m‚ñÑ\u001b[38;2;227;139;9;48;2;39;9;1m‚ñÑ\u001b[38;2;243;138;11;48;2;50;10;1m‚ñÑ\u001b[38;2;244;151;25;48;2;72;16;3m‚ñÑ\u001b[38;2;247;156;21;48;2;33;12;2m‚ñÑ\u001b[38;2;244;155;12;48;2;23;10;1m‚ñÑ\u001b[38;2;247;161;15;48;2;19;10;1m‚ñÑ\u001b[38;2;254;174;19;48;2;51;14;1m‚ñÑ\u001b[38;2;236;150;22;48;2;28;9;2m‚ñÑ\u001b[38;2;212;134;10;48;2;27;8;1m‚ñÑ\u001b[38;2;220;147;9;48;2;40;9;1m‚ñÑ\u001b[38;2;184;97;7;48;2;55;7;0m‚ñÑ\u001b[38;2;243;153;14;48;2;28;10;1m‚ñÑ\u001b[38;2;248;159;15;48;2;23;10;1m‚ñÑ\u001b[38;2;247;153;18;48;2;37;10;1m‚ñÑ\u001b[38;2;244;147;20;48;2;41;9;2m‚ñÑ\u001b[38;2;248;156;27;48;2;71;28;5m‚ñÑ\u001b[38;2;242;146;28;48;2;213;129;17m‚ñÑ\u001b[38;2;214;127;25;48;2;250;129;7m‚ñÑ\u001b[38;2;213;129;31;48;2;251;127;6m‚ñÑ\u001b[38;2;186;98;10;48;2;228;101;3m‚ñÑ\u001b[38;2;191;114;12;48;2;229;109;6m‚ñÑ\u001b[38;2;143;66;6;48;2;218;101;5m‚ñÑ\u001b[38;2;75;17;1;48;2;126;30;2m‚ñÑ\u001b[38;2;148;114;63;48;2;142;35;7m‚ñÑ\u001b[38;2;25;3;0;48;2;34;24;4m‚ñÑ\u001b[38;2;22;1;0;48;2;48;8;1m‚ñÑ\u001b[38;2;28;2;0;48;2;33;6;1m‚ñÑ\u001b[38;2;18;0;0;48;2;8;0;0m‚ñÑ\u001b[38;2;11;4;1;48;2;9;0;0m‚ñÑ\u001b[38;2;12;4;1;48;2;7;0;0m‚ñÑ\u001b[38;2;19;3;0;48;2;7;0;0m‚ñÑ\u001b[38;2;12;4;2;48;2;1;0;0m‚ñÑ\u001b[38;2;66;14;1;48;2;3;1;0m‚ñÑ\u001b[38;2;93;29;2;48;2;5;2;0m‚ñÑ\u001b[38;2;154;68;5;48;2;8;4;0m‚ñÑ\u001b[38;2;190;115;11;48;2;10;7;1m‚ñÑ\u001b[38;2;242;172;40;48;2;14;11;3m‚ñÑ\u001b[38;2;231;179;48;48;2;20;11;4m‚ñÑ\u001b[38;2;242;170;40;48;2;37;10;3m‚ñÑ\u001b[38;2;245;170;37;48;2;30;11;3m‚ñÑ\u001b[38;2;236;159;21;48;2;18;10;2m‚ñÑ\u001b[38;2;234;150;17;48;2;20;9;1m‚ñÑ\u001b[38;2;242;168;25;48;2;33;10;2m‚ñÑ\u001b[38;2;220;153;24;48;2;23;7;1m‚ñÑ\u001b[38;2;227;142;9;48;2;14;8;1m‚ñÑ\u001b[38;2;59;45;26;48;2;3;3;2m‚ñÑ\u001b[38;2;2;0;0;48;2;1;0;0m‚ñÑ\u001b[38;2;125;80;16;48;2;130;67;4m‚ñÑ\u001b[38;2;237;167;45;48;2;234;147;14m‚ñÑ\u001b[38;2;234;172;53;48;2;186;120;16m‚ñÑ\u001b[38;2;223;171;55;48;2;218;150;14m‚ñÑ\u001b[38;2;219;159;47;48;2;192;123;17m‚ñÑ\u001b[38;2;204;127;27;48;2;210;143;15m‚ñÑ\u001b[38;2;224;167;50;48;2;221;153;14m‚ñÑ\u001b[38;2;222;177;60;48;2;222;154;16m‚ñÑ\u001b[38;2;210;156;44;48;2;221;151;14m‚ñÑ\u001b[38;2;220;164;50;48;2;222;152;15m‚ñÑ\u001b[38;2;215;165;48;48;2;221;153;15m‚ñÑ\u001b[38;2;213;183;69;48;2;220;152;16m‚ñÑ\u001b[38;2;216;172;57;48;2;206;137;14m‚ñÑ\u001b[38;2;225;183;57;48;2;206;145;19m‚ñÑ\u001b[38;2;221;186;68;48;2;203;138;17m‚ñÑ\u001b[38;2;215;177;60;48;2;221;151;16m‚ñÑ\u001b[38;2;212;167;57;48;2;223;151;14m‚ñÑ\u001b[38;2;182;134;36;48;2;222;142;9m‚ñÑ\u001b[49;38;2;215;136;10m‚ñÄ\u001b[49m \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m            \u001b[38;2;220;120;8;49m‚ñÑ\u001b[38;2;230;132;8;48;2;201;143;23m‚ñÑ\u001b[38;2;234;128;12;48;2;219;145;32m‚ñÑ\u001b[38;2;243;132;12;48;2;239;137;20m‚ñÑ\u001b[38;2;246;152;15;48;2;252;147;17m‚ñÑ\u001b[38;2;58;24;2;48;2;219;114;8m‚ñÑ\u001b[38;2;47;13;9;48;2;136;87;25m‚ñÑ\u001b[38;2;54;10;1;48;2;79;46;6m‚ñÑ\u001b[38;2;93;26;3;48;2;68;32;3m‚ñÑ\u001b[38;2;77;14;1;48;2;106;38;3m‚ñÑ\u001b[38;2;113;48;5;48;2;119;67;7m‚ñÑ\u001b[38;2;193;108;21;48;2;132;86;33m‚ñÑ\u001b[38;2;120;45;13;48;2;128;81;30m‚ñÑ\u001b[38;2;102;39;4;48;2;139;78;8m‚ñÑ\u001b[38;2;116;53;5;48;2;145;82;7m‚ñÑ\u001b[38;2;110;44;4;48;2;151;83;6m‚ñÑ\u001b[38;2;101;41;3;48;2;137;70;6m‚ñÑ\u001b[38;2;74;25;2;48;2;122;57;4m‚ñÑ\u001b[38;2;43;3;0;48;2;97;38;3m‚ñÑ\u001b[38;2;54;11;1;48;2;121;51;2m‚ñÑ\u001b[38;2;17;1;0;48;2;118;53;2m‚ñÑ\u001b[38;2;31;3;0;48;2;117;56;3m‚ñÑ\u001b[38;2;52;5;0;48;2;138;59;1m‚ñÑ\u001b[38;2;16;7;4;48;2;134;70;10m‚ñÑ\u001b[38;2;124;73;19;48;2;240;154;42m‚ñÑ\u001b[38;2;124;72;11;48;2;190;108;21m‚ñÑ\u001b[38;2;20;6;2;48;2;125;66;6m‚ñÑ\u001b[38;2;50;5;0;48;2;139;65;2m‚ñÑ\u001b[38;2;23;1;0;48;2;128;67;3m‚ñÑ\u001b[38;2;19;1;0;48;2;124;67;3m‚ñÑ\u001b[38;2;33;2;0;48;2;128;70;4m‚ñÑ\u001b[38;2;75;23;2;48;2;136;68;3m‚ñÑ\u001b[38;2;69;13;1;48;2;150;72;3m‚ñÑ\u001b[38;2;39;9;0;48;2;145;72;3m‚ñÑ\u001b[38;2;21;10;8;48;2;145;80;19m‚ñÑ\u001b[38;2;184;122;10;48;2;230;130;10m‚ñÑ\u001b[38;2;177;89;12;48;2;234;148;21m‚ñÑ\u001b[38;2;34;20;15;48;2;158;90;35m‚ñÑ\u001b[38;2;13;0;0;48;2;61;15;1m‚ñÑ\u001b[38;2;15;0;0;48;2;71;18;1m‚ñÑ\u001b[38;2;16;0;0;48;2;53;9;1m‚ñÑ\u001b[38;2;21;0;0;48;2;56;9;1m‚ñÑ\u001b[38;2;15;0;0;48;2;52;10;1m‚ñÑ\u001b[38;2;40;4;0;48;2;78;19;2m‚ñÑ\u001b[38;2;58;10;1;48;2;94;50;6m‚ñÑ\u001b[38;2;38;8;0;48;2;40;9;0m‚ñÑ\u001b[38;2;57;6;0;48;2;42;9;0m‚ñÑ\u001b[38;2;71;31;7;48;2;59;21;10m‚ñÑ\u001b[38;2;8;4;1;48;2;14;3;1m‚ñÑ\u001b[38;2;10;0;0;48;2;12;6;2m‚ñÑ\u001b[38;2;5;0;0;48;2;13;5;2m‚ñÑ\u001b[38;2;5;0;0;48;2;24;4;1m‚ñÑ\u001b[38;2;0;0;0;48;2;15;6;2m‚ñÑ\u001b[38;2;0;0;0;48;2;48;8;1m‚ñÑ\u001b[38;2;0;0;0;48;2;50;11;1m‚ñÑ\u001b[38;2;0;0;0;48;2;83;32;3m‚ñÑ\u001b[38;2;8;8;6;48;2;123;74;18m‚ñÑ\u001b[38;2;212;144;8;48;2;232;155;13m‚ñÑ\u001b[38;2;89;69;21;48;2;153;115;39m‚ñÑ\u001b[38;2;7;3;1;48;2;111;72;6m‚ñÑ\u001b[38;2;169;96;14;48;2;193;139;30m‚ñÑ\u001b[38;2;237;145;21;48;2;231;170;37m‚ñÑ\u001b[38;2;222;162;23;48;2;232;168;46m‚ñÑ\u001b[38;2;222;161;24;48;2;225;176;50m‚ñÑ\u001b[38;2;224;161;22;48;2;224;177;49m‚ñÑ\u001b[38;2;234;143;19;48;2;239;162;38m‚ñÑ\u001b[38;2;47;33;15;48;2;48;34;15m‚ñÑ\u001b[48;2;0;0;0m \u001b[38;2;61;34;2;48;2;72;28;2m‚ñÑ\u001b[38;2;44;22;5;48;2;138;70;11m‚ñÑ\u001b[38;2;25;0;0;48;2;117;55;2m‚ñÑ\u001b[38;2;14;0;0;48;2;103;51;2m‚ñÑ\u001b[38;2;14;0;0;48;2;119;59;2m‚ñÑ\u001b[38;2;34;4;0;48;2;128;63;4m‚ñÑ\u001b[38;2;48;6;0;48;2;140;73;4m‚ñÑ\u001b[38;2;34;2;0;48;2;114;67;6m‚ñÑ\u001b[38;2;27;6;1;48;2;141;82;6m‚ñÑ\u001b[38;2;25;4;0;48;2;133;72;7m‚ñÑ\u001b[38;2;131;93;13;48;2;117;69;6m‚ñÑ\u001b[38;2;171;115;44;48;2;194;161;90m‚ñÑ\u001b[38;2;206;143;16;48;2;202;146;32m‚ñÑ\u001b[38;2;207;145;31;48;2;218;167;39m‚ñÑ\u001b[38;2;220;134;14;48;2;191;144;38m‚ñÑ\u001b[38;2;196;123;20;48;2;193;120;17m‚ñÑ\u001b[49;38;2;185;93;5m‚ñÄ\u001b[49m   \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m         \u001b[38;2;211;158;47;49m‚ñÑ\u001b[38;2;215;149;26;48;2;137;98;20m‚ñÑ\u001b[38;2;219;148;18;48;2;219;177;59m‚ñÑ\u001b[38;2;232;145;15;48;2;231;191;68m‚ñÑ\u001b[38;2;244;139;16;48;2;236;188;61m‚ñÑ\u001b[38;2;150;81;5;48;2;251;181;40m‚ñÑ\u001b[38;2;33;22;2;48;2;232;192;89m‚ñÑ\u001b[38;2;18;3;0;48;2;66;45;26m‚ñÑ\u001b[38;2;24;5;0;48;2;24;2;0m‚ñÑ\u001b[38;2;94;31;2;48;2;74;42;4m‚ñÑ\u001b[38;2;93;37;13;48;2;55;27;2m‚ñÑ\u001b[38;2;162;111;16;48;2;84;50;5m‚ñÑ\u001b[38;2;238;142;14;48;2;78;51;29m‚ñÑ\u001b[38;2;206;93;9;48;2;221;161;16m‚ñÑ\u001b[38;2;222;104;6;48;2;233;165;13m‚ñÑ\u001b[38;2;122;41;3;48;2;132;76;5m‚ñÑ\u001b[38;2;50;9;1;48;2;63;31;3m‚ñÑ\u001b[38;2;160;110;26;48;2;157;141;103m‚ñÑ\u001b[38;2;239;142;12;48;2;236;170;16m‚ñÑ\u001b[38;2;238;139;14;48;2;215;152;12m‚ñÑ\u001b[38;2;116;52;6;48;2;115;76;14m‚ñÑ\u001b[38;2;45;13;2;48;2;71;47;6m‚ñÑ\u001b[38;2;110;43;6;48;2;113;64;7m‚ñÑ\u001b[38;2;234;147;21;48;2;237;161;24m‚ñÑ\u001b[38;2;238;143;20;48;2;247;170;23m‚ñÑ\u001b[38;2;251;172;36;48;2;144;111;58m‚ñÑ\u001b[38;2;17;0;0;48;2;9;0;0m‚ñÑ\u001b[38;2;60;19;4;48;2;105;80;18m‚ñÑ\u001b[38;2;195;110;25;48;2;250;181;26m‚ñÑ\u001b[38;2;167;91;9;48;2;254;167;32m‚ñÑ\u001b[38;2;164;93;7;48;2;249;190;18m‚ñÑ\u001b[38;2;150;81;6;48;2;220;162;13m‚ñÑ\u001b[38;2;144;79;7;48;2;211;154;12m‚ñÑ\u001b[38;2;165;94;6;48;2;228;171;14m‚ñÑ\u001b[38;2;138;87;5;48;2;255;206;18m‚ñÑ\u001b[38;2;111;58;4;48;2;175;123;20m‚ñÑ\u001b[38;2;59;29;2;48;2;92;60;27m‚ñÑ\u001b[38;2;16;1;0;48;2;12;1;0m‚ñÑ\u001b[38;2;84;56;16;48;2;92;84;69m‚ñÑ\u001b[38;2;116;81;22;48;2;118;103;77m‚ñÑ\u001b[38;2;8;0;0;48;2;20;4;0m‚ñÑ\u001b[38;2;129;65;9;48;2;106;88;65m‚ñÑ\u001b[38;2;237;125;16;48;2;161;104;26m‚ñÑ\u001b[38;2;245;139;20;48;2;151;83;3m‚ñÑ\u001b[38;2;238;147;21;48;2;192;117;12m‚ñÑ\u001b[38;2;230;153;21;48;2;212;138;13m‚ñÑ\u001b[38;2;225;123;16;48;2;188;108;9m‚ñÑ\u001b[38;2;169;111;27;48;2;173;150;94m‚ñÑ\u001b[38;2;19;2;0;48;2;28;6;0m‚ñÑ\u001b[38;2;24;0;0;48;2;17;2;0m‚ñÑ\u001b[38;2;5;0;0;48;2;7;0;0m‚ñÑ\u001b[38;2;9;0;0;48;2;8;0;0m‚ñÑ\u001b[38;2;101;65;5;48;2;65;58;45m‚ñÑ\u001b[38;2;77;19;2;48;2;49;14;1m‚ñÑ\u001b[38;2;126;40;5;48;2;125;56;10m‚ñÑ\u001b[38;2;143;55;5;48;2;177;122;26m‚ñÑ\u001b[38;2;161;77;7;48;2;100;26;2m‚ñÑ\u001b[38;2;121;50;5;48;2;133;78;29m‚ñÑ\u001b[38;2;37;7;1;48;2;69;51;39m‚ñÑ\u001b[38;2;1;0;0;48;2;0;0;0m‚ñÑ\u001b[38;2;121;90;28;48;2;135;124;100m‚ñÑ\u001b[38;2;93;75;25;48;2;92;84;71m‚ñÑ\u001b[38;2;15;4;1;48;2;12;3;3m‚ñÑ\u001b[38;2;158;109;11;48;2;164;130;47m‚ñÑ\u001b[38;2;222;159;18;48;2;228;200;81m‚ñÑ\u001b[38;2;225;158;18;48;2;223;202;85m‚ñÑ\u001b[38;2;233;151;22;48;2;224;201;84m‚ñÑ\u001b[38;2;229;154;20;48;2;221;197;80m‚ñÑ\u001b[38;2;247;132;14;48;2;243;173;40m‚ñÑ\u001b[38;2;50;38;18;48;2;47;37;23m‚ñÑ\u001b[38;2;5;1;0;48;2;0;0;0m‚ñÑ\u001b[38;2;75;50;11;48;2;66;60;49m‚ñÑ\u001b[38;2;72;36;6;48;2;59;36;24m‚ñÑ\u001b[38;2;26;3;0;48;2;11;1;0m‚ñÑ\u001b[38;2;15;1;0;48;2;80;20;1m‚ñÑ\u001b[38;2;51;10;1;48;2;115;44;3m‚ñÑ\u001b[38;2;88;17;1;48;2;152;90;7m‚ñÑ\u001b[38;2;145;45;2;48;2;134;87;7m‚ñÑ\u001b[38;2;161;70;4;48;2;237;169;18m‚ñÑ\u001b[38;2;186;87;2;48;2;249;164;27m‚ñÑ\u001b[38;2;170;81;2;48;2;225;161;42m‚ñÑ\u001b[38;2;202;135;24;48;2;203;179;74m‚ñÑ\u001b[38;2;214;149;28;48;2;189;158;61m‚ñÑ\u001b[38;2;188;128;15;48;2;202;172;67m‚ñÑ\u001b[38;2;218;141;4;48;2;215;189;77m‚ñÑ\u001b[38;2;215;136;4;48;2;225;198;80m‚ñÑ\u001b[49m     \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m      \u001b[38;2;149;64;0;49m‚ñÑ\u001b[38;2;186;146;50;49m‚ñÑ\u001b[38;2;220;172;57;48;2;219;114;7m‚ñÑ\u001b[38;2;226;174;54;48;2;223;154;32m‚ñÑ\u001b[38;2;217;155;37;48;2;226;166;43m‚ñÑ\u001b[38;2;183;136;56;48;2;229;161;40m‚ñÑ\u001b[38;2;87;55;11;48;2;235;169;32m‚ñÑ\u001b[38;2;21;4;0;48;2;129;86;26m‚ñÑ\u001b[38;2;18;5;0;48;2;9;2;2m‚ñÑ\u001b[38;2;6;0;0;48;2;2;0;0m‚ñÑ\u001b[38;2;27;5;0;48;2;34;7;0m‚ñÑ\u001b[38;2;84;69;56;48;2;47;11;1m‚ñÑ\u001b[38;2;145;95;24;48;2;73;35;3m‚ñÑ\u001b[38;2;244;172;44;48;2;183;122;32m‚ñÑ\u001b[38;2;238;166;42;48;2;227;163;33m‚ñÑ\u001b[38;2;222;142;22;48;2;246;168;25m‚ñÑ\u001b[38;2;247;182;42;48;2;227;145;19m‚ñÑ\u001b[38;2;239;171;26;48;2;222;141;16m‚ñÑ\u001b[38;2;150;90;8;48;2;146;75;5m‚ñÑ\u001b[38;2;150;96;6;48;2;79;26;2m‚ñÑ\u001b[38;2;176;138;63;48;2;156;116;55m‚ñÑ\u001b[38;2;240;175;35;48;2;240;160;23m‚ñÑ\u001b[38;2;237;177;46;48;2;241;169;27m‚ñÑ\u001b[38;2;144;93;18;48;2;148;87;13m‚ñÑ\u001b[38;2;166;124;39;48;2;114;63;6m‚ñÑ\u001b[38;2;160;109;21;48;2;90;53;10m‚ñÑ\u001b[38;2;219;172;51;48;2;231;172;42m‚ñÑ\u001b[38;2;220;176;53;48;2;229;172;41m‚ñÑ\u001b[38;2;235;179;73;48;2;252;188;67m‚ñÑ\u001b[38;2;19;3;0;48;2;17;1;0m‚ñÑ\u001b[38;2;89;52;13;48;2;63;34;9m‚ñÑ\u001b[38;2;86;57;19;48;2;126;95;48m‚ñÑ\u001b[38;2;11;3;2;48;2;21;14;9m‚ñÑ\u001b[38;2;123;98;72;48;2;34;6;0m‚ñÑ\u001b[38;2;146;91;8;48;2;65;39;3m‚ñÑ\u001b[38;2;170;110;10;48;2;60;38;3m‚ñÑ\u001b[38;2;146;83;7;48;2;60;37;2m‚ñÑ\u001b[38;2;122;56;5;48;2;56;37;3m‚ñÑ\u001b[38;2;75;39;3;48;2;50;34;2m‚ñÑ\u001b[38;2;35;22;9;48;2;36;20;2m‚ñÑ\u001b[38;2;17;7;6;48;2;19;2;0m‚ñÑ\u001b[38;2;78;66;42;48;2;81;61;30m‚ñÑ\u001b[38;2;116;97;59;48;2;112;89;44m‚ñÑ\u001b[38;2;3;0;0;48;2;4;0;0m‚ñÑ\u001b[38;2;104;56;17;48;2;133;76;16m‚ñÑ\u001b[38;2;233;141;19;48;2;237;150;32m‚ñÑ\u001b[38;2;238;171;43;48;2;230;172;43m‚ñÑ\u001b[38;2;235;172;42;48;2;226;172;43m‚ñÑ\u001b[38;2;238;161;34;48;2;226;171;45m‚ñÑ\u001b[38;2;239;142;13;48;2;240;155;35m‚ñÑ\u001b[38;2;173;145;72;48;2;200;155;59m‚ñÑ\u001b[38;2;15;1;0;48;2;25;4;0m‚ñÑ\u001b[38;2;39;9;0;48;2;21;2;0m‚ñÑ\u001b[38;2;22;5;0;48;2;10;1;0m‚ñÑ\u001b[38;2;8;0;0;48;2;14;0;0m‚ñÑ\u001b[38;2;95;83;62;48;2;15;6;4m‚ñÑ\u001b[38;2;71;37;2;48;2;18;7;3m‚ñÑ\u001b[38;2;91;52;3;48;2;10;6;3m‚ñÑ\u001b[38;2;115;70;6;48;2;9;6;4m‚ñÑ\u001b[38;2;92;48;4;48;2;6;5;4m‚ñÑ\u001b[38;2;88;48;4;48;2;9;6;4m‚ñÑ\u001b[38;2;57;21;2;48;2;5;3;2m‚ñÑ\u001b[38;2;63;24;2;48;2;0;0;0m‚ñÑ\u001b[38;2;108;56;5;48;2;124;102;55m‚ñÑ\u001b[38;2;90;80;54;48;2;93;79;44m‚ñÑ\u001b[38;2;8;3;2;48;2;14;5;2m‚ñÑ\u001b[38;2;166;118;30;48;2;162;115;25m‚ñÑ\u001b[38;2;226;183;61;48;2;227;170;45m‚ñÑ\u001b[38;2;222;186;62;48;2;225;174;43m‚ñÑ‚ñÑ\u001b[38;2;222;186;62;48;2;226;172;41m‚ñÑ\u001b[38;2;244;170;35;48;2;244;156;30m‚ñÑ\u001b[38;2;48;35;18;48;2;57;41;21m‚ñÑ\u001b[38;2;2;0;0;48;2;1;0;0m‚ñÑ\u001b[38;2;103;60;5;48;2;79;48;21m‚ñÑ\u001b[38;2;189;132;15;48;2;88;48;13m‚ñÑ\u001b[38;2;146;87;9;48;2;31;3;0m‚ñÑ\u001b[38;2;142;89;10;48;2;12;0;0m‚ñÑ\u001b[38;2;94;47;7;48;2;12;1;0m‚ñÑ\u001b[38;2;62;23;3;48;2;32;8;0m‚ñÑ\u001b[38;2;163;109;14;48;2;30;4;0m‚ñÑ\u001b[38;2;164;120;14;48;2;18;0;0m‚ñÑ\u001b[38;2;102;78;33;48;2;4;0;0m‚ñÑ\u001b[38;2;77;50;21;48;2;13;0;0m‚ñÑ\u001b[38;2;6;0;0;48;2;73;62;50m‚ñÑ\u001b[38;2;216;171;51;48;2;222;170;44m‚ñÑ\u001b[38;2;219;184;65;48;2;194;134;23m‚ñÑ\u001b[38;2;206;174;66;48;2;146;96;16m‚ñÑ\u001b[38;2;96;48;0;48;2;114;70;18m‚ñÑ\u001b[49m     \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m    \u001b[38;2;202;135;10;49m‚ñÑ\u001b[38;2;176;125;24;48;2;217;113;5m‚ñÑ\u001b[38;2;164;120;30;48;2;218;130;7m‚ñÑ\u001b[38;2;214;176;56;48;2;220;145;10m‚ñÑ\u001b[38;2;211;180;63;48;2;224;151;11m‚ñÑ\u001b[38;2;156;133;80;48;2;222;144;11m‚ñÑ\u001b[38;2;2;0;0;48;2;121;72;11m‚ñÑ\u001b[38;2;23;5;0;48;2;30;14;8m‚ñÑ\u001b[38;2;62;22;1;48;2;26;3;1m‚ñÑ\u001b[38;2;66;17;1;48;2;60;5;0m‚ñÑ\u001b[38;2;51;22;2;48;2;33;1;0m‚ñÑ\u001b[38;2;7;1;0;48;2;26;1;0m‚ñÑ\u001b[38;2;13;1;0;48;2;137;87;16m‚ñÑ\u001b[38;2;24;4;0;48;2;126;78;26m‚ñÑ\u001b[38;2;37;12;2;48;2;249;157;10m‚ñÑ\u001b[38;2;47;22;5;48;2;245;147;13m‚ñÑ\u001b[38;2;50;21;2;48;2;249;151;13m‚ñÑ\u001b[38;2;29;5;0;48;2;228;110;5m‚ñÑ\u001b[38;2;26;3;0;48;2;228;107;6m‚ñÑ\u001b[38;2;5;0;0;48;2;225;99;4m‚ñÑ\u001b[38;2;24;6;1;48;2;139;46;2m‚ñÑ\u001b[38;2;102;62;5;48;2;138;45;4m‚ñÑ\u001b[38;2;180;144;73;48;2;167;99;12m‚ñÑ\u001b[38;2;239;175;47;48;2;242;142;9m‚ñÑ\u001b[38;2;232;182;59;48;2;233;149;9m‚ñÑ\u001b[38;2;140;97;23;48;2;153;65;5m‚ñÑ\u001b[38;2;158;111;7;48;2;176;97;12m‚ñÑ\u001b[38;2;131;88;15;48;2;183;95;8m‚ñÑ\u001b[38;2;215;181;62;48;2;222;153;10m‚ñÑ\u001b[38;2;207;175;67;48;2;224;151;12m‚ñÑ\u001b[38;2;239;191;95;48;2;248;158;15m‚ñÑ\u001b[38;2;17;3;0;48;2;10;0;0m‚ñÑ\u001b[38;2;92;53;15;48;2;84;32;4m‚ñÑ\u001b[38;2;107;74;26;48;2;79;39;6m‚ñÑ\u001b[38;2;29;9;3;48;2;14;2;0m‚ñÑ\u001b[38;2;31;7;0;48;2;129;89;28m‚ñÑ\u001b[38;2;9;2;0;48;2;113;36;3m‚ñÑ\u001b[38;2;0;0;0;48;2;180;78;6m‚ñÑ\u001b[38;2;0;0;0;48;2;134;34;3m‚ñÑ\u001b[38;2;9;0;0;48;2;84;9;1m‚ñÑ\u001b[38;2;7;2;1;48;2;66;10;1m‚ñÑ\u001b[38;2;25;14;8;48;2;44;13;2m‚ñÑ\u001b[38;2;18;7;4;48;2;14;7;1m‚ñÑ\u001b[38;2;77;68;49;48;2;70;56;15m‚ñÑ\u001b[38;2;80;58;42;48;2;120;77;14m‚ñÑ\u001b[38;2;17;8;0;48;2;8;0;0m‚ñÑ\u001b[38;2;17;2;0;48;2;111;61;8m‚ñÑ\u001b[38;2;18;1;0;48;2;155;43;5m‚ñÑ\u001b[38;2;22;0;0;48;2;231;101;6m‚ñÑ\u001b[38;2;7;0;0;48;2;235;99;5m‚ñÑ\u001b[38;2;6;0;0;48;2;181;63;5m‚ñÑ\u001b[38;2;8;0;0;48;2;157;40;4m‚ñÑ\u001b[38;2;20;1;0;48;2;152;102;18m‚ñÑ\u001b[38;2;18;1;0;48;2;21;0;0m‚ñÑ\u001b[38;2;80;31;2;48;2;53;3;0m‚ñÑ\u001b[38;2;105;63;28;48;2;25;2;0m‚ñÑ\u001b[38;2;15;7;4;48;2;3;0;0m‚ñÑ\u001b[38;2;35;8;0;48;2;109;61;14m‚ñÑ\u001b[38;2;12;0;0;48;2;136;31;3m‚ñÑ\u001b[38;2;7;0;0;48;2;188;88;6m‚ñÑ\u001b[38;2;0;0;0;48;2;178;79;6m‚ñÑ\u001b[38;2;0;0;0;48;2;198;105;5m‚ñÑ\u001b[38;2;0;0;0;48;2;117;30;3m‚ñÑ\u001b[38;2;0;0;0;48;2;84;16;1m‚ñÑ\u001b[38;2;113;98;66;48;2;154;59;5m‚ñÑ\u001b[38;2;77;27;6;48;2;154;52;5m‚ñÑ\u001b[38;2;116;106;87;48;2;90;73;15m‚ñÑ\u001b[38;2;17;5;0;48;2;1;1;0m‚ñÑ\u001b[38;2;11;3;0;48;2;157;100;9m‚ñÑ\u001b[38;2;6;0;0;48;2;207;97;9m‚ñÑ\u001b[38;2;2;0;0;48;2;241;136;12m‚ñÑ\u001b[38;2;14;2;0;48;2;249;135;11m‚ñÑ\u001b[38;2;11;0;0;48;2;218;117;12m‚ñÑ\u001b[38;2;5;0;0;48;2;122;35;5m‚ñÑ\u001b[38;2;9;0;0;48;2;14;7;2m‚ñÑ\u001b[38;2;14;6;1;48;2;4;0;0m‚ñÑ\u001b[38;2;102;65;7;48;2;98;37;2m‚ñÑ\u001b[38;2;78;56;19;48;2;209;95;5m‚ñÑ\u001b[38;2;20;4;0;48;2;166;52;4m‚ñÑ\u001b[38;2;7;0;0;48;2;106;19;2m‚ñÑ\u001b[38;2;15;2;0;48;2;153;68;5m‚ñÑ\u001b[38;2;17;2;0;48;2;193;99;7m‚ñÑ\u001b[38;2;15;2;0;48;2;226;131;9m‚ñÑ\u001b[38;2;10;0;0;48;2;214;116;7m‚ñÑ\u001b[38;2;23;4;0;48;2;189;91;7m‚ñÑ\u001b[38;2;22;3;0;48;2;26;13;4m‚ñÑ\u001b[38;2;31;16;2;48;2;12;0;0m‚ñÑ\u001b[38;2;169;132;46;48;2;220;151;10m‚ñÑ\u001b[38;2;212;178;68;48;2;195;134;15m‚ñÑ\u001b[38;2;201;168;59;48;2;202;137;11m‚ñÑ\u001b[38;2;174;131;39;48;2;145;75;5m‚ñÑ\u001b[49m     \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m \u001b[38;2;176;106;9;49m‚ñÑ\u001b[38;2;212;152;21;48;2;210;170;57m‚ñÑ\u001b[38;2;216;159;25;48;2;184;139;41m‚ñÑ\u001b[38;2;160;113;35;48;2;214;153;25m‚ñÑ\u001b[38;2;202;146;34;48;2;214;155;27m‚ñÑ\u001b[38;2;200;155;44;48;2;217;161;37m‚ñÑ\u001b[38;2;222;169;37;48;2;224;170;38m‚ñÑ\u001b[38;2;226;173;42;48;2;188;152;50m‚ñÑ\u001b[38;2;208;145;17;48;2;18;13;4m‚ñÑ\u001b[38;2;219;155;25;48;2;50;36;15m‚ñÑ\u001b[38;2;218;151;25;48;2;77;45;17m‚ñÑ\u001b[38;2;218;144;14;48;2;58;12;3m‚ñÑ\u001b[38;2;220;154;26;48;2;112;58;20m‚ñÑ\u001b[38;2;235;172;53;48;2;120;82;32m‚ñÑ\u001b[38;2;218;152;37;48;2;94;69;27m‚ñÑ\u001b[38;2;207;158;56;48;2;124;81;33m‚ñÑ\u001b[38;2;222;147;21;48;2;75;44;18m‚ñÑ\u001b[38;2;236;156;27;48;2;124;76;26m‚ñÑ\u001b[38;2;240;152;22;48;2;133;81;21m‚ñÑ\u001b[38;2;237;152;26;48;2;109;69;23m‚ñÑ\u001b[38;2;219;142;24;48;2;122;72;20m‚ñÑ\u001b[38;2;238;158;31;48;2;115;75;25m‚ñÑ\u001b[38;2;225;147;27;48;2;108;70;24m‚ñÑ\u001b[38;2;229;156;31;48;2;125;77;26m‚ñÑ\u001b[38;2;228;160;33;48;2;175;111;36m‚ñÑ\u001b[38;2;234;168;42;48;2;209;149;44m‚ñÑ\u001b[38;2;231;166;30;48;2;228;160;33m‚ñÑ\u001b[38;2;237;149;18;48;2;227;145;22m‚ñÑ\u001b[38;2;246;140;26;48;2;175;110;31m‚ñÑ\u001b[38;2;234;169;41;48;2;169;123;39m‚ñÑ\u001b[38;2;223;169;41;48;2;194;129;40m‚ñÑ\u001b[38;2;223;171;35;48;2;221;173;45m‚ñÑ\u001b[38;2;230;166;33;48;2;210;173;62m‚ñÑ\u001b[38;2;249;177;52;48;2;252;182;55m‚ñÑ\u001b[38;2;17;1;0;48;2;27;1;0m‚ñÑ\u001b[38;2;58;25;7;48;2;85;36;7m‚ñÑ\u001b[38;2;139;66;13;48;2;175;107;19m‚ñÑ\u001b[38;2;150;59;5;48;2;75;41;4m‚ñÑ\u001b[38;2;135;57;17;48;2;78;43;17m‚ñÑ\u001b[38;2;57;35;17;48;2;62;39;19m‚ñÑ\u001b[38;2;67;38;20;48;2;51;34;20m‚ñÑ\u001b[38;2;96;42;19;48;2;59;38;20m‚ñÑ\u001b[38;2;68;31;17;48;2;49;32;20m‚ñÑ\u001b[38;2;84;17;3;48;2;42;13;4m‚ñÑ\u001b[38;2;111;45;11;48;2;82;39;12m‚ñÑ\u001b[38;2;104;50;20;48;2;77;52;21m‚ñÑ\u001b[38;2;105;40;16;48;2;96;68;22m‚ñÑ\u001b[38;2;121;44;4;48;2;122;55;4m‚ñÑ\u001b[38;2;136;60;8;48;2;109;69;7m‚ñÑ\u001b[38;2;103;39;12;48;2;54;29;12m‚ñÑ\u001b[38;2;105;43;18;48;2;57;34;19m‚ñÑ\u001b[38;2;174;87;22;48;2;89;49;21m‚ñÑ\u001b[38;2;125;51;19;48;2;59;33;20m‚ñÑ\u001b[38;2;128;65;20;48;2;72;40;20m‚ñÑ\u001b[38;2;100;51;18;48;2;82;50;20m‚ñÑ\u001b[38;2;104;45;18;48;2;79;42;20m‚ñÑ\u001b[38;2;68;35;17;48;2;62;36;20m‚ñÑ\u001b[38;2;166;74;14;48;2;125;60;14m‚ñÑ\u001b[38;2;205;104;12;48;2;191;97;13m‚ñÑ\u001b[38;2;191;89;7;48;2;112;71;8m‚ñÑ\u001b[38;2;107;50;11;48;2;101;48;12m‚ñÑ\u001b[38;2;149;72;19;48;2;83;49;19m‚ñÑ\u001b[38;2;109;42;17;48;2;67;41;19m‚ñÑ\u001b[38;2;64;33;17;48;2;59;37;19m‚ñÑ\u001b[38;2;54;27;17;48;2;37;32;20m‚ñÑ\u001b[38;2;41;27;17;48;2;37;31;19m‚ñÑ\u001b[38;2;53;28;16;48;2;46;31;19m‚ñÑ\u001b[38;2;45;28;17;48;2;43;32;20m‚ñÑ\u001b[38;2;132;55;18;48;2;129;93;35m‚ñÑ\u001b[38;2;226;130;16;48;2;97;58;15m‚ñÑ\u001b[38;2;192;85;12;48;2;75;41;12m‚ñÑ\u001b[38;2;101;38;16;48;2;53;34;18m‚ñÑ\u001b[38;2;109;35;17;48;2;43;33;20m‚ñÑ\u001b[38;2;114;35;17;48;2;52;34;19m‚ñÑ\u001b[38;2;87;31;17;48;2;58;34;20m‚ñÑ\u001b[38;2;96;40;20;48;2;49;32;20m‚ñÑ\u001b[38;2;145;55;19;48;2;57;37;20m‚ñÑ\u001b[38;2;192;105;18;48;2;54;35;17m‚ñÑ\u001b[38;2;201;106;12;48;2;108;69;14m‚ñÑ\u001b[38;2;143;46;14;48;2;129;78;25m‚ñÑ\u001b[38;2;169;79;15;48;2;67;36;16m‚ñÑ\u001b[38;2;222;115;7;48;2;18;12;3m‚ñÑ\u001b[38;2;215;139;26;48;2;87;61;21m‚ñÑ\u001b[38;2;213;125;22;48;2;89;57;20m‚ñÑ\u001b[38;2;188;115;33;48;2;94;55;21m‚ñÑ\u001b[38;2;184;130;40;48;2;128;75;24m‚ñÑ\u001b[38;2;246;153;24;48;2;108;78;22m‚ñÑ\u001b[38;2;219;146;25;48;2;98;62;22m‚ñÑ\u001b[38;2;219;157;33;48;2;95;71;28m‚ñÑ\u001b[38;2;170;125;37;48;2;119;90;23m‚ñÑ\u001b[38;2;202;152;51;48;2;208;166;56m‚ñÑ\u001b[38;2;120;77;19;48;2;170;111;15m‚ñÑ\u001b[49;38;2;201;130;8m‚ñÄ\u001b[49m      \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"\u001b[49;38;2;154;113;30m‚ñÄ\u001b[49;38;2;216;175;59m‚ñÄ\u001b[49;38;2;210;168;51m‚ñÄ\u001b[49;38;2;221;182;56m‚ñÄ\u001b[49;38;2;219;184;61m‚ñÄ\u001b[49;38;2;220;182;60m‚ñÄ\u001b[49;38;2;208;165;49m‚ñÄ\u001b[49;38;2;189;137;30m‚ñÄ\u001b[49;38;2;187;131;12m‚ñÄ\u001b[49;38;2;213;158;39m‚ñÄ\u001b[49;38;2;218;170;51m‚ñÄ\u001b[49;38;2;200;159;49m‚ñÄ\u001b[49;38;2;219;174;50m‚ñÄ\u001b[49;38;2;226;176;51m‚ñÄ\u001b[49;38;2;195;146;45m‚ñÄ\u001b[49;38;2;222;165;46m‚ñÄ\u001b[49;38;2;166;116;31m‚ñÄ\u001b[49;38;2;231;167;42m‚ñÄ\u001b[49;38;2;232;167;40m‚ñÄ\u001b[49;38;2;230;155;32m‚ñÄ\u001b[49;38;2;213;137;23m‚ñÄ\u001b[49;38;2;227;163;41m‚ñÄ\u001b[49;38;2;226;163;35m‚ñÄ\u001b[49;38;2;237;177;45m‚ñÄ\u001b[49;38;2;222;168;44m‚ñÄ\u001b[49;38;2;183;123;22m‚ñÄ\u001b[49;38;2;178;132;36m‚ñÄ\u001b[49;38;2;212;149;26m‚ñÄ\u001b[49;38;2;238;149;18m‚ñÄ\u001b[49;38;2;223;132;18m‚ñÄ\u001b[49;38;2;210;149;37m‚ñÄ\u001b[49;38;2;216;159;41m‚ñÄ\u001b[38;2;217;143;20;48;2;196;149;44m‚ñÑ\u001b[38;2;191;120;19;48;2;224;175;52m‚ñÑ\u001b[38;2;239;173;43;48;2;227;170;60m‚ñÑ\u001b[38;2;101;43;9;48;2;50;20;1m‚ñÑ\u001b[38;2;60;25;6;48;2;43;16;1m‚ñÑ\u001b[38;2;36;19;5;48;2;19;7;1m‚ñÑ\u001b[38;2;31;20;4;48;2;18;6;0m‚ñÑ\u001b[38;2;37;9;2;48;2;19;3;0m‚ñÑ\u001b[38;2;23;9;3;48;2;5;0;0m‚ñÑ\u001b[38;2;27;12;3;48;2;6;0;0m‚ñÑ\u001b[38;2;21;9;2;48;2;12;1;0m‚ñÑ\u001b[38;2;40;11;4;48;2;15;1;0m‚ñÑ\u001b[38;2;30;8;3;48;2;18;2;0m‚ñÑ\u001b[38;2;24;10;3;48;2;12;3;0m‚ñÑ\u001b[38;2;46;17;3;48;2;8;1;0m‚ñÑ\u001b[38;2;53;22;3;48;2;21;2;0m‚ñÑ\u001b[38;2;44;13;4;48;2;23;3;0m‚ñÑ\u001b[38;2;49;19;4;48;2;23;5;0m‚ñÑ\u001b[38;2;49;21;5;48;2;27;5;0m‚ñÑ\u001b[38;2;90;40;6;48;2;30;5;0m‚ñÑ\u001b[38;2;132;77;8;48;2;79;37;2m‚ñÑ\u001b[38;2;81;32;5;48;2;67;26;2m‚ñÑ\u001b[38;2;30;10;4;48;2;31;9;0m‚ñÑ\u001b[38;2;18;8;4;48;2;8;1;0m‚ñÑ\u001b[38;2;48;11;3;48;2;17;3;0m‚ñÑ\u001b[38;2;38;7;3;48;2;12;2;0m‚ñÑ\u001b[38;2;23;8;3;48;2;21;6;0m‚ñÑ\u001b[38;2;16;8;3;48;2;24;9;1m‚ñÑ\u001b[38;2;15;9;5;48;2;25;7;0m‚ñÑ\u001b[38;2;11;1;0;48;2;11;2;0m‚ñÑ\u001b[38;2;13;0;0;48;2;21;6;0m‚ñÑ\u001b[38;2;21;2;0;48;2;12;1;0m‚ñÑ\u001b[38;2;9;1;0;48;2;3;0;0m‚ñÑ\u001b[38;2;0;0;0;48;2;6;0;0m‚ñÑ\u001b[38;2;0;0;0;48;2;2;0;0m‚ñÑ‚ñÑ\u001b[38;2;15;10;4;48;2;1;0;0m‚ñÑ\u001b[38;2;181;96;33;48;2;16;4;0m‚ñÑ\u001b[38;2;168;42;5;48;2;205;132;55m‚ñÑ\u001b[38;2;187;55;5;48;2;188;89;19m‚ñÑ\u001b[38;2;154;38;9;48;2;170;72;21m‚ñÑ\u001b[38;2;75;9;2;48;2;177;84;8m‚ñÑ\u001b[49;38;2;119;39;2m‚ñÄ\u001b[49;38;2;97;25;5m‚ñÄ\u001b[49;38;2;148;54;9m‚ñÄ\u001b[49;38;2;170;87;18m‚ñÄ\u001b[49;38;2;218;153;39m‚ñÄ\u001b[49;38;2;198;114;19m‚ñÄ\u001b[49;38;2;157;70;19m‚ñÄ\u001b[49;38;2;126;52;12m‚ñÄ\u001b[49;38;2;199;116;17m‚ñÄ\u001b[49;38;2;213;136;22m‚ñÄ\u001b[49;38;2;198;138;33m‚ñÄ\u001b[49;38;2;207;133;26m‚ñÄ\u001b[49;38;2;215;124;19m‚ñÄ\u001b[49;38;2;209;134;27m‚ñÄ\u001b[49;38;2;217;169;53m‚ñÄ\u001b[49;38;2;217;171;52m‚ñÄ\u001b[49;38;2;183;143;44m‚ñÄ\u001b[49;38;2;220;169;48m‚ñÄ\u001b[49;38;2;124;62;8m‚ñÄ\u001b[49m       \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                \u001b[38;2;226;153;29;48;2;223;153;34m‚ñÑ\u001b[38;2;214;145;28;48;2;215;158;44m‚ñÑ\u001b[38;2;210;144;32;48;2;185;130;32m‚ñÑ\u001b[38;2;229;162;35;48;2;239;175;49m‚ñÑ\u001b[38;2;234;155;29;48;2;246;162;33m‚ñÑ\u001b[38;2;231;163;36;48;2;244;164;39m‚ñÑ\u001b[38;2;212;151;30;48;2;231;160;33m‚ñÑ\u001b[38;2;208;114;11;48;2;173;108;22m‚ñÑ\u001b[38;2;215;123;17;48;2;185;106;21m‚ñÑ\u001b[38;2;206;108;9;48;2;183;108;23m‚ñÑ\u001b[38;2;216;102;6;48;2;182;93;14m‚ñÑ\u001b[38;2;166;74;3;48;2;154;85;26m‚ñÑ\u001b[38;2;199;91;8;48;2;161;88;20m‚ñÑ\u001b[38;2;215;109;8;48;2;169;97;20m‚ñÑ\u001b[38;2;220;113;7;48;2;222;131;18m‚ñÑ\u001b[38;2;208;107;8;48;2;229;143;20m‚ñÑ\u001b[38;2;218;124;14;48;2;189;116;25m‚ñÑ\u001b[38;2;226;147;23;48;2;220;152;28m‚ñÑ\u001b[38;2;225;154;30;48;2;244;169;38m‚ñÑ\u001b[38;2;230;160;31;48;2;247;169;33m‚ñÑ\u001b[38;2;225;136;23;48;2;235;155;25m‚ñÑ\u001b[38;2;208;120;13;48;2;183;120;27m‚ñÑ\u001b[38;2;136;59;7;48;2;123;71;23m‚ñÑ\u001b[38;2;65;12;1;48;2;87;54;24m‚ñÑ\u001b[38;2;72;7;1;48;2;91;51;21m‚ñÑ\u001b[38;2;37;1;0;48;2;74;47;20m‚ñÑ\u001b[38;2;36;4;1;48;2;69;44;19m‚ñÑ\u001b[38;2;23;7;2;48;2;88;49;21m‚ñÑ\u001b[38;2;6;2;0;48;2;67;54;27m‚ñÑ\u001b[38;2;26;3;0;48;2;22;4;0m‚ñÑ\u001b[38;2;26;5;0;48;2;23;4;0m‚ñÑ\u001b[38;2;24;3;0;48;2;29;5;0m‚ñÑ\u001b[38;2;5;1;0;48;2;6;1;0m‚ñÑ\u001b[38;2;2;0;0;48;2;0;0;0m‚ñÑ\u001b[38;2;41;29;8;48;2;1;0;0m‚ñÑ\u001b[38;2;172;109;28;48;2;33;17;7m‚ñÑ\u001b[38;2;194;96;16;48;2;137;71;25m‚ñÑ\u001b[38;2;203;101;16;48;2;163;65;16m‚ñÑ\u001b[38;2;188;100;18;48;2;188;94;23m‚ñÑ\u001b[38;2;93;19;2;48;2;166;74;18m‚ñÑ\u001b[38;2;67;0;0;48;2;93;21;5m‚ñÑ\u001b[49m                           \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                \u001b[49;38;2;219;158;36m‚ñÄ\u001b[49;38;2;221;159;34m‚ñÄ\u001b[49;38;2;227;164;45m‚ñÄ‚ñÄ\u001b[49;38;2;227;164;40m‚ñÄ\u001b[49;38;2;227;170;40m‚ñÄ\u001b[49;38;2;226;168;35m‚ñÄ\u001b[49;38;2;221;119;11m‚ñÄ\u001b[49;38;2;215;134;27m‚ñÄ\u001b[49;38;2;204;117;15m‚ñÄ\u001b[49;38;2;210;108;6m‚ñÄ\u001b[49;38;2;177;78;0m‚ñÄ\u001b[49;38;2;176;74;11m‚ñÄ\u001b[49;38;2;210;108;11m‚ñÄ\u001b[49;38;2;202;107;12m‚ñÄ\u001b[49;38;2;181;96;11m‚ñÄ\u001b[49;38;2;219;134;18m‚ñÄ\u001b[49;38;2;214;151;29m‚ñÄ\u001b[49;38;2;220;156;35m‚ñÄ\u001b[49;38;2;221;170;40m‚ñÄ\u001b[49;38;2;220;151;35m‚ñÄ\u001b[49;38;2;219;130;18m‚ñÄ\u001b[49;38;2;152;83;7m‚ñÄ\u001b[49;38;2;79;18;0m‚ñÄ\u001b[49;38;2;85;11;0m‚ñÄ\u001b[38;2;72;23;3;48;2;57;7;1m‚ñÑ\u001b[38;2;108;42;8;48;2;92;15;3m‚ñÑ\u001b[38;2;26;6;3;48;2;34;7;2m‚ñÑ\u001b[38;2;14;0;0;48;2;10;0;0m‚ñÑ\u001b[38;2;13;0;0;48;2;21;1;0m‚ñÑ\u001b[38;2;21;2;0;48;2;28;2;0m‚ñÑ\u001b[38;2;30;4;0;48;2;36;3;0m‚ñÑ\u001b[38;2;18;8;2;48;2;11;0;0m‚ñÑ\u001b[38;2;249;179;42;48;2;17;9;3m‚ñÑ\u001b[38;2;231;166;42;48;2;221;146;34m‚ñÑ\u001b[38;2;221;169;48;48;2;239;147;24m‚ñÑ\u001b[38;2;168;82;27;48;2;164;64;10m‚ñÑ\u001b[38;2;36;5;0;48;2;175;64;9m‚ñÑ\u001b[49;38;2;71;29;5m‚ñÄ\u001b[49;38;2;32;0;0m‚ñÄ\u001b[49m                            \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                         \u001b[38;2;188;105;12;48;2;112;50;4m‚ñÑ\u001b[38;2;221;135;13;48;2;186;91;7m‚ñÑ\u001b[38;2;84;47;4;48;2;64;24;3m‚ñÑ\u001b[38;2;11;0;0;48;2;18;2;0m‚ñÑ\u001b[38;2;19;0;0;48;2;20;0;0m‚ñÑ\u001b[38;2;55;24;9;48;2;15;0;0m‚ñÑ\u001b[38;2;181;103;19;48;2;65;32;5m‚ñÑ\u001b[38;2;233;149;24;48;2;207;130;31m‚ñÑ\u001b[38;2;222;166;41;48;2;231;161;30m‚ñÑ\u001b[38;2;214;155;34;48;2;220;160;37m‚ñÑ\u001b[38;2;167;98;15;48;2;202;127;28m‚ñÑ\u001b[38;2;107;27;0;48;2;111;43;9m‚ñÑ\u001b[49m                               \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                         \u001b[38;2;169;88;8;48;2;166;79;8m‚ñÑ\u001b[38;2;219;127;16;48;2;218;135;16m‚ñÑ\u001b[38;2;88;48;7;48;2;84;46;4m‚ñÑ\u001b[38;2;27;6;0;48;2;19;0;0m‚ñÑ\u001b[38;2;242;175;53;48;2;29;11;2m‚ñÑ\u001b[38;2;230;126;10;48;2;172;89;14m‚ñÑ\u001b[38;2;226;143;28;48;2;225;130;19m‚ñÑ\u001b[38;2;210;128;29;48;2;224;162;31m‚ñÑ\u001b[38;2;147;71;5;48;2;215;147;32m‚ñÑ\u001b[49;38;2;175;97;15m‚ñÄ\u001b[49;38;2;170;99;0m‚ñÄ\u001b[49m                                \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                         \u001b[38;2;127;60;8;48;2;101;42;5m‚ñÑ\u001b[38;2;229;145;24;48;2;240;131;13m‚ñÑ\u001b[38;2;236;165;45;48;2;117;73;19m‚ñÑ\u001b[38;2;237;159;31;48;2;236;154;25m‚ñÑ\u001b[38;2;235;140;21;48;2;246;144;15m‚ñÑ\u001b[38;2;204;117;23;48;2;228;151;23m‚ñÑ\u001b[38;2;164;101;24;48;2;211;120;16m‚ñÑ\u001b[38;2;137;78;0;48;2;121;47;4m‚ñÑ\u001b[49m                                   \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                         \u001b[38;2;172;74;5;48;2;161;86;17m‚ñÑ\u001b[38;2;215;136;9;48;2;216;168;53m‚ñÑ\u001b[38;2;222;149;10;48;2;223;182;57m‚ñÑ\u001b[38;2;219;135;13;48;2;223;181;58m‚ñÑ\u001b[38;2;149;61;8;48;2;212;148;40m‚ñÑ\u001b[49;38;2;131;52;2m‚ñÄ\u001b[49;38;2;90;15;0m‚ñÄ\u001b[49m                                    \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                         \u001b[38;2;198;117;19;48;2;209;151;43m‚ñÑ\u001b[38;2;208;139;20;48;2;220;175;57m‚ñÑ\u001b[38;2;155;77;4;48;2;213;171;61m‚ñÑ\u001b[49;38;2;144;87;16m‚ñÄ\u001b[49m                                       \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"\u001b[49m                                                         \u001b[38;2;44;9;0;48;2;150;74;17m‚ñÑ\u001b[49;38;2;175;112;30m‚ñÄ\u001b[49;38;2;119;51;0m‚ñÄ\u001b[49m                                        \u001b[m","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Markneoneo":34}},{"path":"src/main/java/amadeus/personality/backup.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;188;103;9m*\u001b[38;2;205;117;20m+\u001b[38;2;179;101;18m*\u001b[38;2;127;42;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;185;105;20m*\u001b[38;2;210;133;23m+\u001b[38;2;220;157;30m\u003d\u001b[38;2;215;148;34m+\u001b[38;2;186;109;20m*\u001b[38;2;56;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;137;58;0m#\u001b[38;2;181;87;8m*\u001b[38;2;207;99;6m*\u001b[38;2;231;140;21m+\u001b[38;2;222;164;36m\u003d\u001b[38;2;217;172;45m\u003d\u001b[38;2;222;167;39m\u003d\u001b[38;2;198;123;22m+\u001b[38;2;42;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;120;40;0m%\u001b[38;2;159;63;3m#\u001b[38;2;210;87;3m*\u001b[38;2;221;100;4m*\u001b[38;2;237;119;12m+\u001b[38;2;202;119;26m+\u001b[38;2;225;150;31m+\u001b[38;2;230;168;37m\u003d\u001b[38;2;226;171;41m\u003d\u001b[38;2;207;131;25m+\u001b[38;2;85;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;127;0;0m%\u001b[38;2;193;125;21m+\u001b[38;2;200;107;19m*\u001b[38;2;211;100;9m*\u001b[38;2;196;73;4m*\u001b[38;2;130;46;13m#\u001b[38;2;100;51;15m%\u001b[38;2;56;31;9m%\u001b[38;2;29;15;11m@\u001b[38;2;201;109;19m*\u001b[38;2;251;142;17m\u003d\u001b[38;2;230;153;28m\u003d\u001b[38;2;207;118;19m+\u001b[38;2;109;0;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;196;107;9m*\u001b[38;2;218;165;43m\u003d\u001b[38;2;220;157;37m\u003d\u001b[38;2;233;166;34m\u003d\u001b[38;2;226;134;20m+\u001b[38;2;161;75;19m#\u001b[38;2;78;37;10m%\u001b[38;2;25;16;8m@\u001b[38;2;20;5;3m@\u001b[38;2;39;6;0m@\u001b[38;2;41;15;5m@\u001b[38;2;158;69;16m#\u001b[38;2;237;111;6m+\u001b[38;2;222;147;22m+\u001b[38;2;218;141;25m+\u001b[38;2;145;36;0m#\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;191;95;4m*\u001b[38;2;213;149;30m+\u001b[38;2;225;163;37m\u003d\u001b[38;2;245;174;37m\u003d\u001b[38;2;234;167;31m\u003d\u001b[38;2;166;113;30m*\u001b[38;2;71;37;9m%\u001b[38;2;13;8;5m@\u001b[38;2;6;0;0m@\u001b[38;2;28;0;0m@\u001b[38;2;71;18;1m%\u001b[38;2;55;12;0m@\u001b[38;2;41;15;6m@\u001b[38;2;134;49;14m#\u001b[38;2;228;99;8m*\u001b[38;2;234;153;28m\u003d\u001b[38;2;218;145;27m+\u001b[38;2;159;63;0m#\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;15;0;0m@\u001b[38;2;109;30;2m%\u001b[38;2;187;91;8m*\u001b[38;2;234;143;23m+\u001b[38;2;245;170;35m\u003d\u001b[38;2;214;147;24m+\u001b[38;2;131;83;24m#\u001b[38;2;50;31;6m%\u001b[38;2;4;0;2m@\u001b[38;2;6;0;0m@\u001b[38;2;30;6;1m@\u001b[38;2;79;36;14m%\u001b[38;2;65;30;15m%\u001b[38;2;56;9;0m@\u001b[38;2;86;28;2m%\u001b[38;2;77;27;4m%\u001b[38;2;206;124;25m+\u001b[38;2;229;170;39m\u003d\u001b[38;2;220;166;39m\u003d\u001b[38;2;193;121;22m+\u001b[38;2;145;36;0m#\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;115;24;6m%\u001b[38;2;129;32;1m%\u001b[38;2;161;57;9m#\u001b[38;2;201;93;11m*\u001b[38;2;185;93;11m*\u001b[38;2;163;100;17m*\u001b[38;2;101;63;21m#\u001b[38;2;35;15;3m@\u001b[38;2;6;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;35;14;3m@\u001b[38;2;118;68;19m#\u001b[38;2;202;134;27m+\u001b[38;2;225;140;22m+\u001b[38;2;92;57;18m%\u001b[38;2;42;8;0m@\u001b[38;2;91;37;2m%\u001b[38;2;110;53;8m#\u001b[38;2;211;152;42m+\u001b[38;2;224;176;46m\u003d\u001b[38;2;219;167;40m\u003d\u001b[38;2;214;145;26m+\u001b[38;2;191;63;0m#\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;159;95;31m*\u001b[38;2;197;117;20m+\u001b[38;2;201;132;23m+\u001b[38;2;217;126;20m+\u001b[38;2;210;91;10m*\u001b[38;2;175;85;10m*\u001b[38;2;105;57;17m#\u001b[38;2;39;23;13m@\u001b[38;2;7;1;1m@\u001b[38;2;10;0;0m@\u001b[38;2;28;4;3m@\u001b[38;2;56;28;5m%\u001b[38;2;124;68;22m#\u001b[38;2;209;125;18m+\u001b[38;2;239;151;24m\u003d\u001b[38;2;235;176;40m\u003d\u001b[38;2;247;171;35m\u003d\u001b[38;2;79;56;18m%\u001b[38;2;1;0;0m@\u001b[38;2;18;1;0m@\u001b[38;2;24;9;5m@\u001b[38;2;202;130;28m+\u001b[38;2;236;167;35m\u003d\u001b[38;2;213;154;33m+\u001b[38;2;202;138;24m+\u001b[38;2;109;36;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;136;68;17m#\u001b[38;2;200;112;19m+\u001b[38;2;217;153;34m+\u001b[38;2;232;174;40m\u003d\u001b[38;2;241;178;42m\u003d\u001b[38;2;208;133;22m+\u001b[38;2;113;68;20m#\u001b[38;2;35;15;8m@\u001b[38;2;4;0;0m@\u001b[38;2;2;0;0m@\u001b[38;2;15;4;1m@\u001b[38;2;95;48;7m%\u001b[38;2;163;96;26m*\u001b[38;2;231;139;21m+\u001b[38;2;244;147;23m\u003d\u001b[38;2;221;129;22m+\u001b[38;2;205;142;34m+\u001b[38;2;211;133;28m+\u001b[38;2;220;128;21m+\u001b[38;2;64;44;17m%\u001b[38;2;3;0;0m@\u001b[38;2;21;2;0m@\u001b[38;2;25;10;5m@\u001b[38;2;199;118;23m+\u001b[38;2;250;141;14m+\u001b[38;2;238;153;25m\u003d\u001b[38;2;204;112;14m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;110;25;0m%\u001b[38;2;171;47;1m#\u001b[38;2;210;116;18m+\u001b[38;2;238;172;38m\u003d\u001b[38;2;228;166;39m\u003d\u001b[38;2;176;119;26m*\u001b[38;2;119;62;21m#\u001b[38;2;41;12;3m@\u001b[38;2;11;0;0m@\u001b[38;2;14;0;0m@\u001b[38;2;0;0;2m@\u001b[38;2;24;7;1m@\u001b[38;2;78;20;3m%\u001b[38;2;213;110;13m+\u001b[38;2;211;135;25m+\u001b[38;2;189;106;22m*\u001b[38;2;178;106;22m*\u001b[38;2;162;61;0m#\u001b[38;2;0;0;0m@\u001b[38;2;163;64;6m#\u001b[38;2;176;74;10m*\u001b[38;2;59;37;16m%\u001b[38;2;4;0;0m@\u001b[38;2;19;1;0m@\u001b[38;2;26;10;5m@\u001b[38;2;218;135;24m+\u001b[38;2;241;151;26m\u003d\u001b[38;2;235;167;34m\u003d\u001b[38;2;215;138;21m+\u001b[38;2;109;36;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;26;0;0m@\u001b[38;2;106;18;2m%\u001b[38;2;167;49;2m#\u001b[38;2;191;70;3m*\u001b[38;2;207;72;6m*\u001b[38;2;202;106;22m*\u001b[38;2;138;93;21m*\u001b[38;2;67;38;16m%\u001b[38;2;65;11;0m@\u001b[38;2;59;4;0m@\u001b[38;2;29;0;0m@\u001b[38;2;53;32;8m%\u001b[38;2;136;78;16m#\u001b[38;2;168;78;14m*\u001b[38;2;137;51;8m#\u001b[38;2;91;25;3m%\u001b[38;2;183;97;20m*\u001b[38;2;144;73;14m#\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;166;74;11m#\u001b[38;2;206;106;15m*\u001b[38;2;69;46;18m%\u001b[38;2;1;0;0m@\u001b[38;2;13;0;0m@\u001b[38;2;19;8;5m@\u001b[38;2;211;137;28m+\u001b[38;2;231;172;37m\u003d\u001b[38;2;228;176;41m\u003d\u001b[38;2;215;145;27m+\u001b[38;2;109;0;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;83;11;0m@\u001b[38;2;93;14;1m%\u001b[38;2;120;21;0m%\u001b[38;2;141;30;1m%\u001b[38;2;108;35;9m%\u001b[38;2;99;45;14m%\u001b[38;2;72;33;9m%\u001b[38;2;31;13;9m@\u001b[38;2;4;0;0m@\u001b[38;2;21;0;0m@\u001b[38;2;65;20;8m%\u001b[38;2;96;51;13m%\u001b[38;2;167;112;23m*\u001b[38;2;227;168;37m\u003d\u001b[38;2;223;164;34m\u003d\u001b[38;2;207;121;18m+\u001b[38;2;151;65;10m#\u001b[38;2;68;27;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;180;90;15m*\u001b[38;2;214;112;17m+\u001b[38;2;67;42;17m%\u001b[38;2;0;0;0m@\u001b[38;2;8;0;0m@\u001b[38;2;16;7;4m@\u001b[38;2;206;143;37m+\u001b[38;2;227;177;43m\u003d\u001b[38;2;227;175;43m\u003d\u001b[38;2;214;149;30m+\u001b[38;2;145;36;0m#\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;82;22;3m%\u001b[38;2;86;14;2m%\u001b[38;2;130;24;1m%\u001b[38;2;151;37;3m#\u001b[38;2;121;37;15m%\u001b[38;2;86;37;12m%\u001b[38;2;59;29;9m%\u001b[38;2;30;9;5m@\u001b[38;2;18;0;0m@\u001b[38;2;17;1;0m@\u001b[38;2;59;32;15m%\u001b[38;2;128;74;13m#\u001b[38;2;206;121;24m+\u001b[38;2;243;155;32m\u003d\u001b[38;2;228;176;44m\u003d\u001b[38;2;222;168;38m\u003d\u001b[38;2;200;143;36m+\u001b[38;2;148;127;42m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;63;0;0m@\u001b[38;2;207;118;18m+\u001b[38;2;203;97;14m*\u001b[38;2;58;36;17m%\u001b[38;2;0;0;0m@\u001b[38;2;9;0;0m@\u001b[38;2;22;8;5m@\u001b[38;2;208;144;36m+\u001b[38;2;228;178;44m\u003d\u001b[38;2;227;178;46m\u003d\u001b[38;2;219;162;36m\u003d\u001b[38;2;182;109;0m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;154;69;7m#\u001b[38;2;161;82;10m*\u001b[38;2;167;80;11m*\u001b[38;2;168;69;7m#\u001b[38;2;155;51;6m#\u001b[38;2;103;42;18m%\u001b[38;2;59;30;8m%\u001b[38;2;37;19;9m@\u001b[38;2;28;5;2m@\u001b[38;2;10;0;0m@\u001b[38;2;20;5;3m@\u001b[38;2;54;26;17m%\u001b[38;2;89;34;9m%\u001b[38;2;176;79;14m*\u001b[38;2;213;106;9m*\u001b[38;2;206;117;16m+\u001b[38;2;213;145;26m+\u001b[38;2;211;167;47m\u003d\u001b[38;2;0;0;1m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;199;107;15m*\u001b[38;2;223;117;16m+\u001b[38;2;69;45;17m%\u001b[38;2;0;0;0m@\u001b[38;2;7;0;0m@\u001b[38;2;17;8;5m@\u001b[38;2;207;126;23m+\u001b[38;2;241;163;31m\u003d\u001b[38;2;227;176;43m\u003d\u001b[38;2;220;160;34m\u003d\u001b[38;2;182;109;0m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;179;91;7m*\u001b[38;2;203;125;17m+\u001b[38;2;212;124;14m+\u001b[38;2;206;107;10m*\u001b[38;2;186;97;13m*\u001b[38;2;132;70;21m#\u001b[38;2;62;32;7m%\u001b[38;2;31;16;7m@\u001b[38;2;36;11;1m@\u001b[38;2;28;6;0m@\u001b[38;2;54;26;6m%\u001b[38;2;118;78;23m#\u001b[38;2;166;99;17m*\u001b[38;2;198;109;21m*\u001b[38;2;206;106;14m*\u001b[38;2;200;75;2m*\u001b[38;2;153;51;3m#\u001b[38;2;182;105;9m*\u001b[38;2;217;149;12m+\u001b[38;2;189;94;0m*\u001b[38;2;177;72;0m#\u001b[38;2;170;85;0m*\u001b[38;2;171;83;5m*\u001b[38;2;180;79;5m*\u001b[38;2;180;90;5m*\u001b[38;2;166;78;5m*\u001b[38;2;173;86;5m*\u001b[38;2;191;111;5m*\u001b[38;2;182;83;5m*\u001b[38;2;182;72;0m*\u001b[38;2;190;105;5m*\u001b[38;2;217;114;12m+\u001b[38;2;200;102;12m*\u001b[38;2;52;37;16m%\u001b[38;2;2;0;0m@\u001b[38;2;13;1;0m@\u001b[38;2;19;9;5m@\u001b[38;2;159;88;17m*\u001b[38;2;246;152;23m\u003d\u001b[38;2;227;176;41m\u003d\u001b[38;2;220;158;33m\u003d\u001b[38;2;182;109;0m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;57;0;0m@\u001b[38;2;126;42;2m%\u001b[38;2;188;103;8m*\u001b[38;2;237;148;15m+\u001b[38;2;241;151;15m\u003d\u001b[38;2;185;110;19m*\u001b[38;2;117;63;21m#\u001b[38;2;59;25;5m%\u001b[38;2;56;15;4m@\u001b[38;2;25;2;0m@\u001b[38;2;31;7;1m@\u001b[38;2;81;39;13m%\u001b[38;2;157;94;21m*\u001b[38;2;221;139;22m+\u001b[38;2;244;163;30m\u003d\u001b[38;2;233;161;31m\u003d\u001b[38;2;232;165;37m\u003d\u001b[38;2;242;143;22m+\u001b[38;2;241;140;22m+\u001b[38;2;226;155;28m\u003d\u001b[38;2;228;173;38m\u003d\u001b[38;2;230;175;39m\u003d\u001b[38;2;220;160;38m\u003d\u001b[38;2;221;148;33m+\u001b[38;2;228;155;32m\u003d\u001b[38;2;223;153;34m\u003d\u001b[38;2;223;154;34m\u003d\u001b[38;2;231;149;26m+\u001b[38;2;228;148;29m+\u001b[38;2;225;153;33m\u003d\u001b[38;2;229;153;30m\u003d\u001b[38;2;228;151;31m\u003d\u001b[38;2;227;155;34m\u003d\u001b[38;2;229;136;21m+\u001b[38;2;201;75;4m*\u001b[38;2;143;45;6m#\u001b[38;2;53;36;16m%\u001b[38;2;4;0;0m@\u001b[38;2;17;1;0m@\u001b[38;2;27;12;5m@\u001b[38;2;136;74;17m#\u001b[38;2;222;125;17m+\u001b[38;2;236;166;37m\u003d\u001b[38;2;220;151;28m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;145;52;5m#\u001b[38;2;196;108;10m*\u001b[38;2;192;101;10m*\u001b[38;2;218;123;11m+\u001b[38;2;229;142;12m+\u001b[38;2;171;108;22m*\u001b[38;2;87;49;16m%\u001b[38;2;45;15;4m@\u001b[38;2;51;13;2m@\u001b[38;2;71;25;3m%\u001b[38;2;87;35;4m%\u001b[38;2;109;62;20m#\u001b[38;2;181;108;19m*\u001b[38;2;231;137;19m+\u001b[38;2;243;157;29m\u003d\u001b[38;2;239;152;25m\u003d\u001b[38;2;238;139;18m+\u001b[38;2;234;143;22m+\u001b[38;2;187;123;28m+\u001b[38;2;180;108;22m*\u001b[38;2;187;122;24m+\u001b[38;2;173;129;35m+\u001b[38;2;167;124;35m*\u001b[38;2;181;127;31m+\u001b[38;2;180;122;28m+\u001b[38;2;177;116;26m*\u001b[38;2;180;117;26m*\u001b[38;2;180;122;28m+\u001b[38;2;180;125;31m+\u001b[38;2;187;124;28m+\u001b[38;2;188;123;27m+\u001b[38;2;185;122;24m+\u001b[38;2;188;122;26m+\u001b[38;2;179;124;27m+\u001b[38;2;174;117;23m*\u001b[38;2;151;83;18m*\u001b[38;2;146;73;20m#\u001b[38;2;158;79;21m*\u001b[38;2;54;35;17m%\u001b[38;2;1;0;0m@\u001b[38;2;12;0;0m@\u001b[38;2;29;13;6m@\u001b[38;2;99;53;17m%\u001b[38;2;120;43;2m%\u001b[38;2;185;92;7m*\u001b[38;2;231;143;21m+\u001b[38;2;227;176;43m\u003d\u001b[38;2;218;159;33m\u003d\u001b[38;2;208;139;26m+\u001b[38;2;202;138;29m+\u001b[38;2;207;141;29m+\u001b[38;2;207;142;30m+\u001b[38;2;212;159;40m\u003d\u001b[38;2;204;147;33m+\u001b[38;2;206;153;34m+\u001b[38;2;218;169;42m\u003d\u001b[38;2;172;133;31m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;1m@\u001b[38;2;175;111;15m*\u001b[38;2;192;121;16m+\u001b[38;2;192;130;27m+\u001b[38;2;196;137;29m+\u001b[38;2;166;107;9m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;170;85;21m*\u001b[38;2;171;72;6m#\u001b[38;2;190;101;8m*\u001b[38;2;218;123;9m+\u001b[38;2;255;158;15m\u003d\u001b[38;2;233;156;20m\u003d\u001b[38;2;172;109;26m*\u001b[38;2;76;36;9m%\u001b[38;2;59;20;3m@\u001b[38;2;33;5;0m@\u001b[38;2;58;15;1m@\u001b[38;2;64;20;1m@\u001b[38;2;72;35;18m%\u001b[38;2;125;77;31m#\u001b[38;2;128;78;26m#\u001b[38;2;131;77;23m#\u001b[38;2;130;83;25m#\u001b[38;2;130;80;24m#\u001b[38;2;113;64;23m#\u001b[38;2;103;56;23m#\u001b[38;2;66;31;8m%\u001b[38;2;45;15;3m@\u001b[38;2;30;8;2m@\u001b[38;2;8;0;2m@\u001b[38;2;15;1;2m@\u001b[38;2;24;1;1m@\u001b[38;2;42;5;2m@\u001b[38;2;20;1;2m@\u001b[38;2;7;0;2m@\u001b[38;2;18;1;1m@\u001b[38;2;38;8;2m@\u001b[38;2;38;5;2m@\u001b[38;2;28;3;3m@\u001b[38;2;40;9;4m@\u001b[38;2;38;8;4m@\u001b[38;2;18;1;3m@\u001b[38;2;7;0;3m@\u001b[38;2;14;7;5m@\u001b[38;2;44;26;14m@\u001b[38;2;86;43;20m%\u001b[38;2;72;27;10m%\u001b[38;2;40;33;17m%\u001b[38;2;0;0;0m@\u001b[38;2;8;0;0m@\u001b[38;2;28;12;5m@\u001b[38;2;73;42;17m%\u001b[38;2;93;28;4m%\u001b[38;2;81;21;4m%\u001b[38;2;143;69;8m#\u001b[38;2;230;152;32m\u003d\u001b[38;2;239;178;44m\u003d\u001b[38;2;238;177;42m\u003d\u001b[38;2;243;173;41m\u003d\u001b[38;2;245;163;36m\u003d\u001b[38;2;242;158;33m\u003d\u001b[38;2;238;164;39m\u003d\u001b[38;2;237;171;43m\u003d\u001b[38;2;241;171;40m\u003d\u001b[38;2;232;155;31m\u003d\u001b[38;2;214;113;18m+\u001b[38;2;244;151;33m\u003d\u001b[38;2;227;165;49m\u003d\u001b[38;2;216;168;44m\u003d\u001b[38;2;210;157;36m+\u001b[38;2;211;158;35m\u003d\u001b[38;2;214;155;35m+\u001b[38;2;206;136;26m+\u001b[38;2;231;185;69m\u003d\u001b[38;2;229;178;51m\u003d\u001b[38;2;204;153;51m+\u001b[38;2;127;42;0m%\u001b[38;2;170;85;28m*\u001b[38;2;63;0;0m@\u001b[38;2;226;113;28m+\u001b[38;2;153;51;51m#\u001b[38;2;218;145;36m+\u001b[38;2;235;176;39m\u003d\u001b[38;2;218;145;72m+\u001b[38;2;127;63;63m#\u001b[38;2;127;63;63m#\u001b[38;2;185;115;46m+\u001b[38;2;98;39;0m%\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;212;134;21m+\u001b[38;2;224;126;12m+\u001b[38;2;237;145;21m+\u001b[38;2;251;146;18m\u003d\u001b[38;2;255;160;21m\u003d\u001b[38;2;216;150;19m+\u001b[38;2;130;87;24m#\u001b[38;2;70;31;6m%\u001b[38;2;118;60;9m#\u001b[38;2;101;45;6m%\u001b[38;2;112;56;8m#\u001b[38;2;86;38;7m%\u001b[38;2;62;20;5m@\u001b[38;2;81;35;7m%\u001b[38;2;78;35;7m%\u001b[38;2;62;22;5m%\u001b[38;2;14;4;4m@\u001b[38;2;40;12;5m@\u001b[38;2;39;13;5m@\u001b[38;2;48;19;6m@\u001b[38;2;18;7;5m@\u001b[38;2;15;5;4m@\u001b[38;2;20;6;4m@\u001b[38;2;74;35;7m%\u001b[38;2;49;22;6m@\u001b[38;2;22;8;4m@\u001b[38;2;41;12;5m@\u001b[38;2;58;19;5m@\u001b[38;2;57;16;5m@\u001b[38;2;33;11;5m@\u001b[38;2;25;8;4m@\u001b[38;2;35;10;5m@\u001b[38;2;80;29;7m%\u001b[38;2;136;70;9m#\u001b[38;2;165;92;23m*\u001b[38;2;162;85;22m*\u001b[38;2;152;78;21m#\u001b[38;2;126;62;20m#\u001b[38;2;137;71;22m#\u001b[38;2;117;45;15m%\u001b[38;2;127;43;7m#\u001b[38;2;89;38;11m%\u001b[38;2;96;60;32m#\u001b[38;2;65;44;20m%\u001b[38;2;7;6;4m@\u001b[38;2;14;6;5m@\u001b[38;2;25;10;5m@\u001b[38;2;37;26;15m@\u001b[38;2;31;23;16m@\u001b[38;2;25;21;16m@\u001b[38;2;29;22;16m@\u001b[38;2;57;34;16m%\u001b[38;2;71;48;17m%\u001b[38;2;71;51;19m%\u001b[38;2;75;51;19m%\u001b[38;2;82;46;17m%\u001b[38;2;80;42;16m%\u001b[38;2;73;42;16m%\u001b[38;2;68;42;17m%\u001b[38;2;74;44;16m%\u001b[38;2;72;43;16m%\u001b[38;2;74;44;17m%\u001b[38;2;80;47;14m%\u001b[38;2;62;39;13m%\u001b[38;2;174;121;28m*\u001b[38;2;230;175;43m\u003d\u001b[38;2;221;173;44m\u003d\u001b[38;2;227;175;42m\u003d\u001b[38;2;219;173;51m\u003d\u001b[38;2;221;171;43m\u003d\u001b[38;2;224;174;43m\u003d\u001b[38;2;226;172;42m\u003d\u001b[38;2;211;151;32m+\u001b[38;2;216;159;35m\u003d\u001b[38;2;214;156;32m+\u001b[38;2;222;164;38m\u003d\u001b[38;2;211;152;32m+\u001b[38;2;213;162;42m\u003d\u001b[38;2;209;160;45m\u003d\u001b[38;2;217;162;37m\u003d\u001b[38;2;214;157;35m\u003d\u001b[38;2;212;151;29m+\u001b[38;2;198;135;33m+\u001b[38;2;118;62;12m#\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;153;102;0m*\u001b[38;2;213;123;18m+\u001b[38;2;231;123;10m+\u001b[38;2;246;142;16m+\u001b[38;2;255;154;20m\u003d\u001b[38;2;240;154;20m\u003d\u001b[38;2;174;121;16m*\u001b[38;2;93;59;20m#\u001b[38;2;103;53;5m%\u001b[38;2;106;55;4m#\u001b[38;2;89;35;5m%\u001b[38;2;135;78;18m#\u001b[38;2;154;97;21m*\u001b[38;2;189;124;28m+\u001b[38;2;175;109;22m*\u001b[38;2;157;91;22m*\u001b[38;2;163;90;22m*\u001b[38;2;154;86;22m*\u001b[38;2;157;89;21m*\u001b[38;2;163;97;21m*\u001b[38;2;172;102;21m*\u001b[38;2;189;110;22m*\u001b[38;2;208;126;30m+\u001b[38;2;212;132;27m+\u001b[38;2;196;122;25m+\u001b[38;2;181;115;23m*\u001b[38;2;189;120;25m+\u001b[38;2;180;116;25m*\u001b[38;2;169;109;22m*\u001b[38;2;164;103;21m*\u001b[38;2;170;100;21m*\u001b[38;2;190;117;22m+\u001b[38;2;189;119;24m+\u001b[38;2;205;126;29m+\u001b[38;2;213;131;27m+\u001b[38;2;221;141;28m+\u001b[38;2;244;147;25m\u003d\u001b[38;2;214;121;20m+\u001b[38;2;190;100;19m*\u001b[38;2;184;93;14m*\u001b[38;2;183;98;13m*\u001b[38;2;170;79;10m*\u001b[38;2;119;37;6m%\u001b[38;2;98;52;20m%\u001b[38;2;27;7;1m@\u001b[38;2;70;44;19m%\u001b[38;2;48;25;14m@\u001b[38;2;40;30;21m%\u001b[38;2;42;30;18m%\u001b[38;2;39;29;18m@\u001b[38;2;38;26;17m@\u001b[38;2;39;26;17m@\u001b[38;2;69;31;17m%\u001b[38;2;84;40;18m%\u001b[38;2;116;60;20m#\u001b[38;2;163;104;27m*\u001b[38;2;198;141;35m+\u001b[38;2;172;135;41m+\u001b[38;2;172;127;36m+\u001b[38;2;190;138;39m+\u001b[38;2;187;134;33m+\u001b[38;2;191;128;30m+\u001b[38;2;192;137;34m+\u001b[38;2;185;136;34m+\u001b[38;2;195;134;30m+\u001b[38;2;68;50;18m%\u001b[38;2;0;0;0m@\u001b[38;2;149;93;20m*\u001b[38;2;235;153;33m\u003d\u001b[38;2;217;152;37m+\u001b[38;2;214;145;33m+\u001b[38;2;206;143;36m+\u001b[38;2;200;136;29m+\u001b[38;2;203;141;30m+\u001b[38;2;208;157;38m+\u001b[38;2;201;148;36m+\u001b[38;2;204;148;34m+\u001b[38;2;199;148;34m+\u001b[38;2;206;161;45m\u003d\u001b[38;2;210;159;38m\u003d\u001b[38;2;219;170;41m\u003d\u001b[38;2;207;162;46m\u003d\u001b[38;2;208;153;36m+\u001b[38;2;218;158;36m\u003d\u001b[38;2;204;139;19m+\u001b[38;2;191;95;0m*\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;205;147;39m+\u001b[38;2;205;136;28m+\u001b[38;2;226;144;22m+\u001b[38;2;241;147;20m\u003d\u001b[38;2;255;154;22m\u003d\u001b[38;2;221;135;18m+\u001b[38;2;133;79;14m#\u001b[38;2;64;32;13m%\u001b[38;2;47;13;0m@\u001b[38;2;75;26;0m%\u001b[38;2;92;40;7m%\u001b[38;2;127;77;12m#\u001b[38;2;177;111;19m*\u001b[38;2;132;81;28m#\u001b[38;2;80;37;5m%\u001b[38;2;132;81;17m#\u001b[38;2;124;73;17m#\u001b[38;2;128;74;16m#\u001b[38;2;103;55;14m#\u001b[38;2;64;24;4m%\u001b[38;2;88;42;12m%\u001b[38;2;82;47;13m%\u001b[38;2;86;47;13m%\u001b[38;2;74;35;10m%\u001b[38;2;54;33;13m%\u001b[38;2;175;111;22m*\u001b[38;2;207;130;25m+\u001b[38;2;84;51;16m%\u001b[38;2;98;58;15m#\u001b[38;2;86;53;14m%\u001b[38;2;77;48;14m%\u001b[38;2;90;55;15m%\u001b[38;2;113;68;16m#\u001b[38;2;124;64;15m#\u001b[38;2;64;34;12m%\u001b[38;2;53;34;13m%\u001b[38;2;168;103;21m*\u001b[38;2;184;114;20m*\u001b[38;2;59;37;16m%\u001b[38;2;29;14;10m@\u001b[38;2;43;22;14m@\u001b[38;2;52;27;13m%\u001b[38;2;55;29;13m%\u001b[38;2;56;33;13m%\u001b[38;2;75;39;14m%\u001b[38;2;73;33;12m%\u001b[38;2;43;6;0m@\u001b[38;2;83;45;19m%\u001b[38;2;73;36;15m%\u001b[38;2;22;18;12m@\u001b[38;2;24;17;10m@\u001b[38;2;35;23;12m@\u001b[38;2;43;28;12m@\u001b[38;2;45;33;13m%\u001b[38;2;44;27;12m@\u001b[38;2;44;28;13m@\u001b[38;2;29;18;9m@\u001b[38;2;47;33;13m%\u001b[38;2;168;112;28m*\u001b[38;2;86;62;21m#\u001b[38;2;30;20;6m@\u001b[38;2;209;145;38m+\u001b[38;2;240;174;40m\u003d\u001b[38;2;231;175;43m\u003d\u001b[38;2;226;178;45m\u003d\u001b[38;2;227;177;43m\u003d\u001b[38;2;251;171;34m\u003d\u001b[38;2;97;68;18m#\u001b[38;2;0;0;0m@\u001b[38;2;91;61;26m#\u001b[38;2;77;45;18m%\u001b[38;2;43;22;9m@\u001b[38;2;49;28;12m%\u001b[38;2;61;34;12m%\u001b[38;2;77;42;13m%\u001b[38;2;84;41;11m%\u001b[38;2;88;51;13m%\u001b[38;2;94;55;15m%\u001b[38;2;76;44;14m%\u001b[38;2;106;77;21m#\u001b[38;2;184;138;42m+\u001b[38;2;213;161;38m\u003d\u001b[38;2;209;159;43m\u003d\u001b[38;2;194;131;25m+\u001b[38;2;178;107;13m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;209;159;45m\u003d\u001b[38;2;222;158;34m\u003d\u001b[38;2;223;159;33m\u003d\u001b[38;2;237;164;34m\u003d\u001b[38;2;241;158;32m\u003d\u001b[38;2;180;111;20m*\u001b[38;2;88;63;17m#\u001b[38;2;36;15;7m@\u001b[38;2;42;5;0m@\u001b[38;2;74;23;0m%\u001b[38;2;72;28;9m%\u001b[38;2;120;75;13m#\u001b[38;2;196;123;22m+\u001b[38;2;215;126;17m+\u001b[38;2;232;133;9m+\u001b[38;2;133;73;19m#\u001b[38;2;35;4;0m@\u001b[38;2;153;99;28m*\u001b[38;2;242;163;22m\u003d\u001b[38;2;238;155;22m\u003d\u001b[38;2;159;101;26m*\u001b[38;2;56;20;0m@\u001b[38;2;155;96;27m*\u001b[38;2;234;157;29m\u003d\u001b[38;2;236;156;29m\u003d\u001b[38;2;163;103;26m*\u001b[38;2;4;0;0m@\u001b[38;2;58;37;14m%\u001b[38;2;218;141;21m+\u001b[38;2;186;116;22m*\u001b[38;2;147;98;14m*\u001b[38;2;126;79;12m#\u001b[38;2;115;71;12m#\u001b[38;2;144;99;14m*\u001b[38;2;141;99;14m*\u001b[38;2;102;61;12m#\u001b[38;2;55;34;12m%\u001b[38;2;3;0;0m@\u001b[38;2;61;38;18m%\u001b[38;2;69;47;22m%\u001b[38;2;0;0;0m@\u001b[38;2;86;53;18m%\u001b[38;2;203;118;23m+\u001b[38;2;216;136;26m+\u001b[38;2;222;146;30m+\u001b[38;2;220;151;30m+\u001b[38;2;226;138;23m+\u001b[38;2;130;76;24m#\u001b[38;2;20;1;0m@\u001b[38;2;72;45;22m%\u001b[38;2;61;44;22m%\u001b[38;2;5;0;0m@\u001b[38;2;56;39;19m%\u001b[38;2;78;34;17m%\u001b[38;2;136;70;20m#\u001b[38;2;148;84;22m*\u001b[38;2;145;82;20m#\u001b[38;2;127;70;22m#\u001b[38;2;48;32;14m%\u001b[38;2;0;0;0m@\u001b[38;2;60;47;24m%\u001b[38;2;45;34;16m%\u001b[38;2;12;2;2m@\u001b[38;2;198;143;36m+\u001b[38;2;228;177;41m\u003d\u001b[38;2;225;173;41m\u003d\u001b[38;2;227;170;42m\u003d\u001b[38;2;227;169;39m\u003d\u001b[38;2;248;160;27m\u003d\u001b[38;2;90;63;18m#\u001b[38;2;2;0;0m@\u001b[38;2;85;64;31m#\u001b[38;2;57;27;11m%\u001b[38;2;46;23;9m@\u001b[38;2;55;36;18m%\u001b[38;2;84;39;14m%\u001b[38;2;133;70;15m#\u001b[38;2;129;64;14m#\u001b[38;2;158;96;19m*\u001b[38;2;176;106;20m*\u001b[38;2;151;98;26m*\u001b[38;2;191;143;41m+\u001b[38;2;204;154;39m+\u001b[38;2;193;144;35m+\u001b[38;2;215;161;36m\u003d\u001b[38;2;196;134;26m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;196;78;0m*\u001b[38;2;206;143;31m+\u001b[38;2;225;154;33m\u003d\u001b[38;2;229;164;35m\u003d\u001b[38;2;232;170;39m\u003d\u001b[38;2;217;150;37m+\u001b[38;2;144;95;18m*\u001b[38;2;69;41;14m%\u001b[38;2;9;1;2m@\u001b[38;2;0;0;0m@\u001b[38;2;29;5;0m@\u001b[38;2;70;33;12m%\u001b[38;2;144;96;17m*\u001b[38;2;228;154;31m\u003d\u001b[38;2;253;172;28m\u003d\u001b[38;2;252;168;21m\u003d\u001b[38;2;245;161;21m\u003d\u001b[38;2;249;161;18m\u003d\u001b[38;2;160;95;22m*\u001b[38;2;84;33;2m%\u001b[38;2;166;107;24m*\u001b[38;2;244;168;26m\u003d\u001b[38;2;237;171;34m\u003d\u001b[38;2;183;125;31m+\u001b[38;2;131;77;12m#\u001b[38;2;179;125;36m+\u001b[38;2;233;176;41m\u003d\u001b[38;2;233;175;40m\u003d\u001b[38;2;180;120;30m+\u001b[38;2;8;0;0m@\u001b[38;2;68;41;14m%\u001b[38;2;138;94;27m*\u001b[38;2;10;4;3m@\u001b[38;2;62;30;12m%\u001b[38;2;100;50;4m%\u001b[38;2;109;58;3m#\u001b[38;2;95;45;3m%\u001b[38;2;78;32;2m%\u001b[38;2;43;19;0m@\u001b[38;2;42;28;9m@\u001b[38;2;14;1;1m@\u001b[38;2;56;38;18m%\u001b[38;2;63;48;22m%\u001b[38;2;0;0;0m@\u001b[38;2;111;71;20m#\u001b[38;2;253;146;19m\u003d\u001b[38;2;246;171;35m\u003d\u001b[38;2;241;174;38m\u003d\u001b[38;2;242;166;34m\u003d\u001b[38;2;250;148;20m\u003d\u001b[38;2;148;96;24m*\u001b[38;2;10;0;0m@\u001b[38;2;73;47;22m%\u001b[38;2;64;44;22m%\u001b[38;2;6;0;0m@\u001b[38;2;48;31;18m%\u001b[38;2;69;39;15m%\u001b[38;2;79;51;16m%\u001b[38;2;77;51;17m%\u001b[38;2;83;58;18m%\u001b[38;2;64;41;16m%\u001b[38;2;48;28;12m%\u001b[38;2;51;29;11m%\u001b[38;2;103;68;24m#\u001b[38;2;51;37;16m%\u001b[38;2;9;3;3m@\u001b[38;2;207;148;37m+\u001b[38;2;242;176;41m\u003d\u001b[38;2;232;179;45m\u003d\u001b[38;2;233;179;44m\u003d\u001b[38;2;233;178;44m\u003d\u001b[38;2;250;169;31m\u003d\u001b[38;2;92;67;19m#\u001b[38;2;0;0;0m@\u001b[38;2;115;73;24m#\u001b[38;2;159;97;14m*\u001b[38;2;92;55;11m%\u001b[38;2;70;42;13m%\u001b[38;2;62;33;10m%\u001b[38;2;65;34;10m%\u001b[38;2;95;54;14m%\u001b[38;2;75;44;9m%\u001b[38;2;30;22;9m@\u001b[38;2;37;18;9m@\u001b[38;2;52;30;14m%\u001b[38;2;212;164;44m\u003d\u001b[38;2;215;163;41m\u003d\u001b[38;2;201;150;38m+\u001b[38;2;143;91;19m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;206;144;20m+\u001b[38;2;201;142;29m+\u001b[38;2;216;151;28m+\u001b[38;2;218;162;36m\u003d\u001b[38;2;224;173;45m\u003d\u001b[38;2;171;126;36m+\u001b[38;2;74;54;13m%\u001b[38;2;35;18;9m@\u001b[38;2;33;1;0m@\u001b[38;2;57;7;0m@\u001b[38;2;38;4;0m@\u001b[38;2;7;0;0m@\u001b[38;2;59;35;10m%\u001b[38;2;105;65;20m#\u001b[38;2;170;111;16m*\u001b[38;2;173;114;20m*\u001b[38;2;168;107;20m*\u001b[38;2;153;93;15m*\u001b[38;2;147;90;14m*\u001b[38;2;139;82;14m#\u001b[38;2;96;52;11m%\u001b[38;2;111;48;2m%\u001b[38;2;185;119;28m+\u001b[38;2;240;165;30m\u003d\u001b[38;2;234;171;38m\u003d\u001b[38;2;181;122;32m+\u001b[38;2;151;93;12m*\u001b[38;2;193;136;32m+\u001b[38;2;222;174;42m\u003d\u001b[38;2;224;163;38m\u003d\u001b[38;2;177;113;26m*\u001b[38;2;11;1;0m@\u001b[38;2;78;45;15m%\u001b[38;2;121;80;28m#\u001b[38;2;12;0;0m@\u001b[38;2;66;35;11m%\u001b[38;2;97;48;9m%\u001b[38;2;120;62;10m#\u001b[38;2;100;44;9m%\u001b[38;2;77;32;8m%\u001b[38;2;63;29;10m%\u001b[38;2;82;61;32m#\u001b[38;2;6;0;0m@\u001b[38;2;58;39;18m%\u001b[38;2;75;52;25m%\u001b[38;2;2;1;1m@\u001b[38;2;37;21;8m@\u001b[38;2;111;51;9m#\u001b[38;2;148;75;13m#\u001b[38;2;151;84;15m*\u001b[38;2;140;72;12m#\u001b[38;2;119;57;11m#\u001b[38;2;68;40;14m%\u001b[38;2;13;0;0m@\u001b[38;2;89;48;20m%\u001b[38;2;91;51;21m%\u001b[38;2;4;1;1m@\u001b[38;2;58;28;11m%\u001b[38;2;91;37;10m%\u001b[38;2;122;67;12m#\u001b[38;2;125;73;12m#\u001b[38;2;129;82;14m#\u001b[38;2;84;39;10m%\u001b[38;2;63;31;10m%\u001b[38;2;112;54;19m#\u001b[38;2;124;53;13m#\u001b[38;2;48;33;16m%\u001b[38;2;0;0;1m@\u001b[38;2;103;71;15m#\u001b[38;2;140;90;20m*\u001b[38;2;148;104;24m*\u001b[38;2;152;102;24m*\u001b[38;2;146;94;23m*\u001b[38;2;117;75;17m#\u001b[38;2;24;19;6m@\u001b[38;2;0;0;1m@\u001b[38;2;127;81;24m#\u001b[38;2;172;103;18m*\u001b[38;2;128;74;12m#\u001b[38;2;84;42;11m%\u001b[38;2;95;49;10m%\u001b[38;2;108;57;10m#\u001b[38;2;129;73;13m#\u001b[38;2;137;85;12m#\u001b[38;2;108;63;11m#\u001b[38;2;32;11;3m@\u001b[38;2;42;28;12m@\u001b[38;2;212;162;42m\u003d\u001b[38;2;213;168;47m\u003d\u001b[38;2;205;157;42m+\u001b[38;2;184;131;28m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;178;102;0m*\u001b[38;2;206;157;41m+\u001b[38;2;210;156;37m+\u001b[38;2;209;154;35m+\u001b[38;2;210;159;37m\u003d\u001b[38;2;206;162;49m\u003d\u001b[38;2;221;171;45m\u003d\u001b[38;2;177;140;45m+\u001b[38;2;99;77;27m#\u001b[38;2;87;62;17m#\u001b[38;2;110;75;21m#\u001b[38;2;108;65;15m#\u001b[38;2;126;73;21m#\u001b[38;2;130;91;31m*\u001b[38;2;120;89;30m#\u001b[38;2;122;87;31m#\u001b[38;2;125;85;26m#\u001b[38;2;124;78;20m#\u001b[38;2;128;79;17m#\u001b[38;2;128;79;21m#\u001b[38;2;114;71;20m#\u001b[38;2;127;80;22m#\u001b[38;2;98;64;18m#\u001b[38;2;108;68;19m#\u001b[38;2;159;100;29m*\u001b[38;2;221;154;42m\u003d\u001b[38;2;236;167;36m\u003d\u001b[38;2;239;159;29m\u003d\u001b[38;2;207;132;31m+\u001b[38;2;172;119;33m*\u001b[38;2;204;153;41m+\u001b[38;2;220;175;46m\u003d\u001b[38;2;228;169;44m\u003d\u001b[38;2;181;116;28m*\u001b[38;2;14;0;0m@\u001b[38;2;69;40;15m%\u001b[38;2;173;99;18m*\u001b[38;2;112;62;9m#\u001b[38;2;67;37;13m%\u001b[38;2;45;28;15m%\u001b[38;2;37;25;15m@\u001b[38;2;52;30;15m%\u001b[38;2;50;30;15m%\u001b[38;2;76;35;8m%\u001b[38;2;121;65;19m#\u001b[38;2;66;41;16m%\u001b[38;2;96;53;17m%\u001b[38;2;151;76;11m#\u001b[38;2;126;71;9m#\u001b[38;2;71;37;12m%\u001b[38;2;63;30;14m%\u001b[38;2;88;49;16m%\u001b[38;2;59;29;14m%\u001b[38;2;72;40;15m%\u001b[38;2;64;39;15m%\u001b[38;2;56;29;14m%\u001b[38;2;64;34;14m%\u001b[38;2;137;75;18m#\u001b[38;2;217;125;18m+\u001b[38;2;167;105;13m*\u001b[38;2;106;61;14m#\u001b[38;2;85;48;16m%\u001b[38;2;67;36;15m%\u001b[38;2;47;30;15m%\u001b[38;2;31;22;14m@\u001b[38;2;30;24;15m@\u001b[38;2;36;26;14m@\u001b[38;2;42;30;19m%\u001b[38;2;96;56;22m#\u001b[38;2;152;95;22m*\u001b[38;2;115;64;15m#\u001b[38;2;56;23;12m%\u001b[38;2;50;21;13m@\u001b[38;2;46;21;12m@\u001b[38;2;51;19;12m@\u001b[38;2;49;21;13m@\u001b[38;2;61;28;14m%\u001b[38;2;89;52;15m%\u001b[38;2;138;82;14m#\u001b[38;2;133;74;20m#\u001b[38;2;102;57;19m#\u001b[38;2;88;52;9m%\u001b[38;2;97;62;15m#\u001b[38;2;104;66;16m#\u001b[38;2;85;53;17m%\u001b[38;2;80;45;16m%\u001b[38;2;107;68;18m#\u001b[38;2;127;83;22m#\u001b[38;2;128;98;33m*\u001b[38;2;138;108;34m*\u001b[38;2;195;145;43m+\u001b[38;2;195;140;32m+\u001b[38;2;193;140;32m+\u001b[38;2;170;119;34m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;154;100;18m*\u001b[38;2;197;136;31m+\u001b[38;2;208;156;37m+\u001b[38;2;220;170;39m\u003d\u001b[38;2;217;170;46m\u003d\u001b[38;2;208;163;46m\u003d\u001b[38;2;207;157;38m+\u001b[38;2;218;157;24m\u003d\u001b[38;2;218;154;23m+\u001b[38;2;223;155;28m\u003d\u001b[38;2;237;170;36m\u003d\u001b[38;2;232;165;34m\u003d\u001b[38;2;225;161;32m\u003d\u001b[38;2;223;163;34m\u003d\u001b[38;2;215;154;35m+\u001b[38;2;235;163;34m\u003d\u001b[38;2;218;153;34m+\u001b[38;2;231;158;30m\u003d\u001b[38;2;240;158;25m\u003d\u001b[38;2;239;147;20m\u003d\u001b[38;2;228;141;20m+\u001b[38;2;229;150;25m+\u001b[38;2;234;153;26m\u003d\u001b[38;2;232;153;27m\u003d\u001b[38;2;225;153;31m\u003d\u001b[38;2;218;149;27m+\u001b[38;2;222;154;30m\u003d\u001b[38;2;220;146;25m+\u001b[38;2;232;141;17m+\u001b[38;2;239;130;12m+\u001b[38;2;224;153;28m\u003d\u001b[38;2;211;152;35m+\u001b[38;2;210;151;30m+\u001b[38;2;222;164;38m\u003d\u001b[38;2;188;126;31m+\u001b[38;2;49;17;2m@\u001b[38;2;39;14;5m@\u001b[38;2;63;33;6m%\u001b[38;2;67;35;5m%\u001b[38;2;52;24;6m@\u001b[38;2;36;20;6m@\u001b[38;2;38;21;6m@\u001b[38;2;46;23;6m@\u001b[38;2;51;24;6m@\u001b[38;2;52;21;5m@\u001b[38;2;49;27;5m@\u001b[38;2;49;26;6m@\u001b[38;2;56;23;5m@\u001b[38;2;65;27;5m%\u001b[38;2;69;32;6m%\u001b[38;2;64;27;5m%\u001b[38;2;83;37;6m%\u001b[38;2;125;69;9m#\u001b[38;2;91;41;7m%\u001b[38;2;71;37;7m%\u001b[38;2;50;29;6m%\u001b[38;2;47;24;6m@\u001b[38;2;60;29;6m%\u001b[38;2;80;41;7m%\u001b[38;2;92;54;8m%\u001b[38;2;81;43;6m%\u001b[38;2;59;34;6m%\u001b[38;2;70;33;5m%\u001b[38;2;61;26;5m%\u001b[38;2;38;22;5m@\u001b[38;2;33;20;4m@\u001b[38;2;29;20;4m@\u001b[38;2;25;17;4m@\u001b[38;2;31;20;4m@\u001b[38;2;108;59;19m#\u001b[38;2;202;106;24m*\u001b[38;2;191;76;15m*\u001b[38;2;150;39;9m#\u001b[38;2;144;44;5m#\u001b[38;2;110;28;2m%\u001b[38;2;97;22;4m%\u001b[38;2;129;41;5m%\u001b[38;2;154;59;7m#\u001b[38;2;200;111;15m*\u001b[38;2;181;89;11m*\u001b[38;2;156;67;9m#\u001b[38;2;166;76;8m#\u001b[38;2;182;96;10m*\u001b[38;2;205;124;16m+\u001b[38;2;213;128;19m+\u001b[38;2;208;122;19m+\u001b[38;2;213;115;15m+\u001b[38;2;220;143;25m+\u001b[38;2;225;160;31m\u003d\u001b[38;2;230;172;40m\u003d\u001b[38;2;208;153;40m+\u001b[38;2;199;140;30m+\u001b[38;2;182;109;13m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;204;102;51m*\u001b[38;2;255;170;85m\u003d\u001b[38;2;255;255;85m:\u001b[38;2;0;0;1m@\u001b[38;2;255;255;127m:\u001b[38;2;0;1;1m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;1m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;255;255;255m:\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;127;0;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;255;170;85m\u003d\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;210;125;16m+\u001b[38;2;205;143;31m+\u001b[38;2;210;151;36m+\u001b[38;2;188;129;34m+\u001b[38;2;187;119;25m+\u001b[38;2;179;121;26m+\u001b[38;2;168;112;21m*\u001b[38;2;148;89;14m*\u001b[38;2;131;73;11m#\u001b[38;2;138;78;11m#\u001b[38;2;143;72;9m#\u001b[38;2;118;56;10m#\u001b[38;2;123;64;11m#\u001b[38;2;143;77;11m#\u001b[38;2;160;88;11m*\u001b[38;2;157;89;12m*\u001b[38;2;161;92;14m*\u001b[38;2;178;115;19m*\u001b[38;2;177;119;26m*\u001b[38;2;195;124;22m+\u001b[38;2;194;116;16m+\u001b[38;2;132;72;11m#\u001b[38;2;90;46;10m%\u001b[38;2;57;25;8m%\u001b[38;2;50;21;8m@\u001b[38;2;41;20;8m@\u001b[38;2;43;18;8m@\u001b[38;2;53;27;10m%\u001b[38;2;51;43;25m%\u001b[38;2;23;8;5m@\u001b[38;2;21;1;0m@\u001b[38;2;32;5;0m@\u001b[38;2;3;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;33;21;9m@\u001b[38;2;107;54;19m#\u001b[38;2;164;64;14m#\u001b[38;2;193;81;20m*\u001b[38;2;168;67;17m#\u001b[38;2;131;41;8m#\u001b[38;2;102;21;0m%\u001b[38;2;0;255;0m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;127m@\u001b[38;2;127;85;42m#\u001b[38;2;127;85;42m#\u001b[38;2;191;127;63m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;191;127;63m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;197;123;20m+\u001b[38;2;213;145;25m+\u001b[38;2;215;146;26m+\u001b[38;2;224;152;24m+\u001b[38;2;233;153;25m\u003d\u001b[38;2;226;149;25m+\u001b[38;2;211;135;18m+\u001b[38;2;211;117;11m+\u001b[38;2;212;119;13m+\u001b[38;2;202;101;6m*\u001b[38;2;200;92;5m*\u001b[38;2;189;85;3m*\u001b[38;2;181;79;5m*\u001b[38;2;198;91;5m*\u001b[38;2;190;87;3m*\u001b[38;2;187;88;3m*\u001b[38;2;216;120;13m+\u001b[38;2;217;132;16m+\u001b[38;2;231;150;23m\u003d\u001b[38;2;223;144;20m+\u001b[38;2;221;127;15m+\u001b[38;2;223;134;17m+\u001b[38;2;138;61;4m#\u001b[38;2;49;4;0m@\u001b[38;2;51;5;0m@\u001b[38;2;57;4;0m@\u001b[38;2;67;11;4m@\u001b[38;2;58;37;16m%\u001b[38;2;12;4;1m@\u001b[38;2;22;2;0m@\u001b[38;2;24;3;0m@\u001b[38;2;35;4;0m@\u001b[38;2;0;0;1m@\u001b[38;2;32;22;7m@\u001b[38;2;142;99;27m*\u001b[38;2;219;142;26m+\u001b[38;2;200;93;18m*\u001b[38;2;179;81;17m*\u001b[38;2;157;70;13m#\u001b[38;2;79;10;5m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;122;44;3m%\u001b[38;2;175;82;9m*\u001b[38;2;68;41;17m%\u001b[38;2;9;0;0m@\u001b[38;2;18;0;0m@\u001b[38;2;14;0;0m@\u001b[38;2;45;17;5m@\u001b[38;2;123;74;20m#\u001b[38;2;220;154;34m\u003d\u001b[38;2;243;176;40m\u003d\u001b[38;2;218;147;36m+\u001b[38;2;156;74;19m#\u001b[38;2;85;8;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;85;42;0m%\u001b[38;2;183;107;20m*\u001b[38;2;237;145;22m+\u001b[38;2;86;55;16m%\u001b[38;2;0;0;0m@\u001b[38;2;22;9;6m@\u001b[38;2;95;47;11m%\u001b[38;2;202;118;24m+\u001b[38;2;244;165;31m\u003d\u001b[38;2;228;164;37m\u003d\u001b[38;2;210;144;33m+\u001b[38;2;171;90;16m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;157;78;8m#\u001b[38;2;245;142;20m+\u001b[38;2;92;65;25m#\u001b[38;2;89;56;13m%\u001b[38;2;196;123;27m+\u001b[38;2;237;142;19m+\u001b[38;2;239;147;24m\u003d\u001b[38;2;202;119;24m+\u001b[38;2;184;110;23m*\u001b[38;2;72;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;172;84;12m*\u001b[38;2;233;151;30m\u003d\u001b[38;2;209;156;47m+\u001b[38;2;240;169;37m\u003d\u001b[38;2;243;153;26m\u003d\u001b[38;2;201;115;21m+\u001b[38;2;177;99;19m*\u001b[38;2;102;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;51;0;0m@\u001b[38;2;199;124;25m+\u001b[38;2;219;165;41m\u003d\u001b[38;2;234;180;42m\u003d\u001b[38;2;217;154;34m+\u001b[38;2;184;112;24m*\u001b[38;2;102;20;0m%\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;63;0;0m@\u001b[38;2;205;129;27m+\u001b[38;2;218;153;32m+\u001b[38;2;200;124;23m+\u001b[38;2;155;85;14m*\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;36;0;0m@\u001b[38;2;155;74;14m#\u001b[38;2;189;118;26m+\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[38;2;0;0;0m@\u001b[0m","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"Markneoneo":38}},{"path":"src/main/java/amadeus/personality/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Provides user interface (UI) and interaction features for the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * This package includes the {@link amadeus.personality.Speech} class, which handles all","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * user-facing interactions, such as displaying messages, commands, and task lists.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * It also includes features like typing effects, formatted text, and visual elements","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * to enhance the user experience.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eKey Class\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.personality.Speech}: Manages all UI interactions, including welcome messages,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" *       command lists, task displays, and notifications.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eUsage Example\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * // Display a welcome message","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" * Speech.sayWelcome();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * // Display the list of tasks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" * Speech.sayList(taskList);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" * // Display a farewell message","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":" * Speech.sayGoodbye();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.personality.Speech","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"package amadeus.personality;","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":30}},{"path":"src/main/java/amadeus/workspace/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * This class extends the {@link Task} class and provides functionality specific to deadline tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * The due date/time of the deadline task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    protected Object by;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a {@code Deadline} task with a name and due date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     * @param name the name or description of the task; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * @param by   the deadline by which the task must be completed; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    public Deadline(String name, Object by) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a {@code Deadline} task with a name, completion status, and due date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * @param name the name or description of the task; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * @param done a boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     * @param by   the deadline by which the task must be completed; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    public Deadline(String name, boolean done, Object by) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        super(name, done);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     * Returns the due date/time of the deadline task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * @return The due date/time of the deadline task.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"    public Object getBy() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"        return by;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"     * Returns the details of the {@code Deadline} task, including the due date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     * @return the details of the deadline as a formatted string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"    public String getDetails() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"        return \" ‚è∞ \\033[31;1mDue by:\\033[0m„Äê\" + DateConverter.formatDate(by) + \"„Äë\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the {@code Deadline}, including its name and due date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     * @return a formatted string representing the deadline details.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"    public String toString() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"        return name + \" ‚è∞ \\033[31;1mDue by:\\033[0m„Äê\" + DateConverter.formatDate(by) + \"„Äë\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * Converts the {@code Deadline} task to a file-friendly format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"     * The format is: {@code D | \u003cisDone\u003e | \u003cdescription\u003e | \u003cby\u003e}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"     * @return a string representation of the {@code Deadline} task in a format suitable for saving to a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"        String byFormatted \u003d dateFileFormat(by);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + name + \" | \" + byFormatted;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"     * Formats a date or date-time object into a string for saving to a file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"     * @param date the date or date-time object to format; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"     * @return the formatted date string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"    private String dateFileFormat(Object date) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDateTime) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"        } else if (date instanceof LocalDate) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDate) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":111}},{"path":"src/main/java/amadeus/workspace/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.perception.DateConverter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * Represents a scheduled event task with a start and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * This class extends the {@link Task} class and provides functionality specific to event tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"public class Event extends Task {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * The start date/time of the event.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    protected Object from;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     * The end date/time of the event.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    protected Object to;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an {@code Event} task with a name, start time, and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"     * @param name the name or description of the event; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"     * @param from the start date/time of the event; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * @param to   the end date/time of the event; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    public Event(String name, Object from, Object to) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"     * Constructs an {@code Event} task with a name, completion status, start time, and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"     * @param name the name or description of the event; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"     * @param done a boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     * @param from the start date/time of the event; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     * @param to   the end date/time of the event; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"    public Event(String name, boolean done, Object from, Object to) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"        super(name, done);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     * Returns the start date/time of the event.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     * @return The start date/time of the event.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"    public Object getFrom() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        return from;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * Returns the details of the {@code Event} task, including the start and end times.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     * @return the details of the event as a formatted string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"    public String getDetails() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"        return \"\\uD83D\\uDE80 \\033[31;1mFrom:\\033[0m„Äê\" + DateConverter.formatDate(from) +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"                \"„Äë \\uD83D\\uDEA9 \\033[31;1mTo:\\033[0m„Äê\" + DateConverter.formatDate(to) + \"„Äë\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the {@code Event}, including its name, start time, and end time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     * @return a formatted string representing the event details.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    public String toString() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        return name + \" \\uD83D\\uDE80 \\033[31;1mFrom:\\033[0m„Äê\" + DateConverter.formatDate(from) +","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"                \"„Äë \\uD83D\\uDEA9 \\033[31;1mTo:\\033[0m„Äê\" + DateConverter.formatDate(to) + \"„Äë\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     * Converts the {@code Event} task to a file-friendly format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"     * The format is: {@code E | \u003cisDone\u003e | \u003cdescription\u003e | \u003cfrom\u003e | \u003cto\u003e}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"     * @return a string representation of the {@code Event} task in a format suitable for saving to a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"        String fromFormatted \u003d dateFileFormat(from);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"        String toFormatted \u003d dateFileFormat(to);","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + name + \" | \" + fromFormatted + \" | \" + toFormatted;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"     * Formats a date or date-time object into a string for saving to a file.","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"     * @param date the date or date-time object to format; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"     * @return the formatted date string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"    private String dateFileFormat(Object date) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDateTime) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"        } else if (date instanceof LocalDate) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"            return ((LocalDate) date).format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"        } else {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":123}},{"path":"src/main/java/amadeus/workspace/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * Abstract base class representing a generic task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * This class provides the foundational properties and methods for tasks, including","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * a name, completion status, and methods to update and display task details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * Subclasses can extend this class to create specific task types (e.g., {@link Deadline}, {@link Event}, {@link ToDo}).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"public abstract class Task {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * The name or description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    protected String name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"     * The completion status of the task (true if complete, false if incomplete).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * Initializes a new {@code Task} with the given name.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * The task is marked as incomplete by default.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"     * @param input the name or description of the task; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    public Task(String input) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"        this.name \u003d input;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * Initializes a new {@code Task} with the given name and completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * @param input the name or description of the task; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     * @param done  a boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    public Task(String input, boolean done) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        this.name \u003d input;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     * Returns the name or description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * @return the name or description of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"    public String getName() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"        return name;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"     * @return {@code true} if the task is complete, {@code false} otherwise.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"    public boolean getDone() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"        return isDone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"     * Returns the details of the task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"     * Subclasses must implement this method to provide task-specific details.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"     * @return the details of the task as a formatted string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"    public abstract String getDetails(); // To be implemented by subclasses","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     * Updates the completion status of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     * @param status the new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"    public void updateDone(boolean status) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"     * Returns a string representation of the task, which is its name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"     * @return The name or description of the task as a String.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"    public String toString() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"        return this.name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"     * Prints the task\u0027s name and completion status to the console.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"     * If the task is complete, a checkmark (‚úîÔ∏è) is displayed next to the name.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"    public void printTask() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"        System.out.print(this + (isDone ? \" ‚úîÔ∏è\" : \"\") + \"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"     * Converts the task to a file-friendly format.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"     * Subclasses must implement this method to provide a format suitable for saving to a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"     * @return a string representation of the task in a format suitable for saving to a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":115}},{"path":"src/main/java/amadeus/workspace/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.AmadeusException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"import amadeus.brain.Database;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"import amadeus.personality.Speech;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * Manages the list of tasks in the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" * This class provides methods to add, mark, delete, and reset tasks, ensuring","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" * that changes are saved to the database and communicated to the user via speech.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"public class TaskList {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"     * ArrayList to store all tasks, categorized by type (Deadline, Event, ToDo, etc.).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"     * The list is initialized by loading tasks from the database when the program starts.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"    public static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"    // Loads tasks from the database when the program starts.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"    // If an error occurs during loading, a runtime exception is thrown.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    static {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"            taskList \u003d Database.load();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"        } catch (AmadeusException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * Returns the current saved Task List","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"     * @return The current saved Task List","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"        return taskList;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"    //region Add Tasks to List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new {@link Deadline} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted at the end of the Deadline section, and the updated list is saved to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     * The user is notified via speech that the task has been added.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"     * @param d the {@link Deadline} task to add; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while saving the updated list to the database.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"    public static void addDeadline(Deadline d) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"        // Insert the Deadline task at the end of the Deadline section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 taskList.get(index) instanceof Deadline) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, d);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskAdded(d, \"DEADLINE\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new {@link Event} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted at the end of the Event section, and the updated list is saved to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"     * The user is notified via speech that the task has been added.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"     * @param e the {@link Event} task to add; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while saving the updated list to the database.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Markneoneo"},"content":"    public static void addEvent(Event e) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Markneoneo"},"content":"        // Insert the Event task at the end of the Event section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 (taskList.get(index) instanceof Deadline ||","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Markneoneo"},"content":"                taskList.get(index) instanceof Event)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, e);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskAdded(e, \"EVENT\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Markneoneo"},"content":"     * Adds a new {@link ToDo} task to the task list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Markneoneo"},"content":"     * The task is inserted at the end of the ToDo section, and the updated list is saved to the database.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Markneoneo"},"content":"     * The user is notified via speech that the task has been added.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Markneoneo"},"content":"     * @param td the {@link ToDo} task to add; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while saving the updated list to the database.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Markneoneo"},"content":"    public static void addToDo(ToDo td) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Markneoneo"},"content":"        // Insert the ToDo task at the end of the ToDo section","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Markneoneo"},"content":"        int index \u003d 0;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Markneoneo"},"content":"        while (index \u003c taskList.size() \u0026\u0026 (taskList.get(index) instanceof Deadline ||","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Markneoneo"},"content":"                taskList.get(index) instanceof Event || taskList.get(index) instanceof ToDo)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Markneoneo"},"content":"            index++;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Markneoneo"},"content":"        taskList.add(index, td);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskAdded(td, \"TODO\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Markneoneo"},"content":"    //endregion","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Markneoneo"},"content":"     * Marks a task as complete or incomplete based on the provided index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Markneoneo"},"content":"     * The updated task status is saved to the database, and the user is notified via speech.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Markneoneo"},"content":"     * @param index  the index of the task to update (1-based).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Markneoneo"},"content":"     * @param status the new completion status (true for complete, false for incomplete).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the index is invalid or an error occurs while saving the updated list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Markneoneo"},"content":"    public static void markDone(int index, boolean status) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Markneoneo"},"content":"            // Update the task\u0027s completion status","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Markneoneo"},"content":"            taskList.get(index - 1).updateDone(status);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Markneoneo"},"content":"            // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Markneoneo"},"content":"            Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Markneoneo"},"content":"            // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayTaskMarked(index, status);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Markneoneo"},"content":"            // Print the updated task details","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Markneoneo"},"content":"            taskList.get(index - 1).printTask();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Markneoneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Markneoneo"},"content":"            // Out of Bounds Index Number Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidIndex();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Markneoneo"},"content":"     * Deletes a task from the task list based on the provided index.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Markneoneo"},"content":"     * The updated list is saved to the database, and the user is notified via speech.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Markneoneo"},"content":"     * @param index the index of the task to delete (1-based).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if the index is invalid or an error occurs while saving the updated list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Markneoneo"},"content":"    public static void deleteTask(int index) throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Markneoneo"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Markneoneo"},"content":"            // Remove the task at the specified index","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Markneoneo"},"content":"            Task removedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Markneoneo"},"content":"            // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Markneoneo"},"content":"            Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Markneoneo"},"content":"            // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Markneoneo"},"content":"            Speech.sayTaskDeleted(index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Markneoneo"},"content":"            // Print the deleted task details","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Markneoneo"},"content":"            removedTask.printTask();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Markneoneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Markneoneo"},"content":"            // Out of Bounds Index Number Exception","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Markneoneo"},"content":"            throw AmadeusException.invalidIndex();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Markneoneo"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Markneoneo"},"content":"     * Resets the task list by clearing all tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Markneoneo"},"content":"     * This method removes all tasks from the task list, saves the updated (empty) list to the database,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Markneoneo"},"content":"     * and notifies the user via speech that the task list has been reset.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Markneoneo"},"content":"     * @throws AmadeusException if an error occurs while saving the updated list to the database.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Markneoneo"},"content":"    public static void resetList() throws AmadeusException {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Markneoneo"},"content":"        // Clear all tasks from the list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Markneoneo"},"content":"        taskList.clear();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Markneoneo"},"content":"        // Save the updated list to the database","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Markneoneo"},"content":"        Database.save(taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Markneoneo"},"content":"        // Notify the user via speech","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Markneoneo"},"content":"        Speech.sayTaskReset();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Markneoneo":209}},{"path":"src/main/java/amadeus/workspace/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * Represents a simple task with no specific date or time constraints.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * This class extends the {@link Task} class and provides functionality specific to ToDo tasks.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a {@code ToDo} task with a given name or description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"     * @param name the name or description of the task; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"        super(name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"     * Constructs a {@code ToDo} task with a given name and completion status.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"     * @param name the name or description of the task; must not be {@code null}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"     * @param done a boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"    public ToDo(String name, boolean done) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"        super(name, done);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"     * Converts the {@code ToDo} task to a file-friendly format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"     * The format is: {@code T | \u003cisDone\u003e | \u003cdescription\u003e}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"     * @return a string representation of the {@code ToDo} task in a format suitable for saving to a file.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + name;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"     * Returns the details of the {@code ToDo} task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"     * Since {@code ToDo} tasks have no additional details, this method returns an empty string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"     * @return an empty string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"    @Override","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"    public String getDetails() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"        return \"\"; // No details for ToDo tasks","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"    }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Markneoneo":57}},{"path":"src/main/java/amadeus/workspace/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"/**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":" * Provides the core task management functionality for the Amadeus application.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":" * This package includes classes that represent tasks and manage the task list. It supports","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":" * different types of tasks, such as {@link ToDo}, {@link Deadline}, and {@link Event}, and","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":" * provides methods to add, mark, delete, and reset tasks. The {@link TaskList} class ensures","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":" * that changes to the task list are saved to the database and communicated to the user.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eKey Classes\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.workspace.Task}: Abstract base class representing a generic task.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.workspace.TaskList}: Manages the list of tasks and provides methods to","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":" *       add, mark, delete, and reset tasks.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.workspace.ToDo}: Represents a simple task with no specific date or time constraints.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.workspace.Deadline}: Represents a task with a specific deadline.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":" *   \u003cli\u003e{@link amadeus.workspace.Event}: Represents a scheduled event task with a start and end time.\u003c/li\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":" * \u003ch2\u003eUsage Example\u003c/h2\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":" * // Create and add tasks to the task list","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":" * TaskList.addToDo(new ToDo(\"Buy groceries\"));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":" * TaskList.addDeadline(new Deadline(\"Submit report\", LocalDate.of(2025, 12, 31)));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":" * TaskList.addEvent(new Event(\"Team meeting\", LocalDateTime.of(2025, 1, 1, 11, 59),","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":" * LocalDateTime.of(2025, 1, 2, 12, 0)));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":" * // Mark a task as complete","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":" * TaskList.markDone(1, true);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":" * // Delete a task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":" * TaskList.deleteTask(2);","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":" * // Reset the task list","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":" * TaskList.resetList();","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":" *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.workspace.Task","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.workspace.TaskList","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.workspace.ToDo","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.workspace.Deadline","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":" * @see amadeus.workspace.Event","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":" */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"package amadeus.workspace;","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":44}},{"path":"text-ui-test/Memory.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"D | 0 | Submit report | 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"D | 0 | leap year | 29/2/2024","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"D | 0 | non-leap year | 28/2/2023","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"D | 0 | midnight | 31/12/2025 0000","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"D | 0 | noon | 31/12/2025 1200","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 30/12/2025 | 31/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 31/12/2025 1400 | 31/12/2025 1600","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 31/12/2025 1400 | 31/12/2025 1600","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"E | 0 | Team meeting | 31/12/2025 1400 | 31/12/2025 1600","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"T | 1 | Buy groceries","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Markneoneo":13}},{"path":"text-ui-test/TEST_CASES.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"# **Unit Test Documentation**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"This document outlines unit tests for the Amadeus chatbot, ensuring robustness by verifying valid and invalid inputs.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"## **1. Task List Management**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"- **`list`** ‚Äì Verify if database successfully loads the saved task list from previous run.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"- **`reset`** ‚Äì Ensure all tasks are cleared from the list.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"- **`list` (after reset)** ‚Äì Confirm the list is empty.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"## **2. Adding Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"### **ToDo Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"- **`todo Buy groceries`** ‚Äì Add a valid ToDo task.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"- **`todo`** ‚Äì Handle missing descriptions.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"- **`todo Read a book`** ‚Äì Add another task to delete later.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"### **Deadline Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"- **`deadline Submit report /by 31/12/2025`** ‚Äì Add a Deadline task with a valid date (slashes).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"- **`deadline Submit report /by 31/12/2025 0900`** ‚Äì Add a Deadline task with a valid date (slashes) and 24-hour time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"- **`deadline Submit report /by 31-12-2025 9.00AM`** ‚Äì Add a Deadline task with a valid date (dashes) and 12-hour format (dots).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"- **`deadline Submit report /by 31 12 2025 9am`** ‚Äì Add a Deadline task with a valid date (spaces) and 12-hour format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"- **`deadline`** ‚Äì Handle missing descriptions.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"- **`deadline Submit report`** ‚Äì Handle missing `/by` clause.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"- **`deadline Submit report /by 31/12/2025 12:60`** ‚Äì Reject invalid time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"- **`deadline leap year /by 29/2/2024`** ‚Äì Accept valid leap year dates.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"- **`deadline non-leap year /by 29/2/2023`** ‚Äì Reject invalid leap year dates.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"- **`deadline midnight /by 31/12/2025 12:00AM`** ‚Äì Handle midnight time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"- **`deadline noon /by 31/12/2025 12:00PM`** ‚Äì Handle noon time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"### **Event Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"- **`event Team meeting /from 30/12/2025 /to 31-12-2025`** ‚Äì Add an event with valid dates (slashes and dashes).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"- **`event Team meeting /from 31/12/2025 1400 /to 31 12 2025 16:00`** ‚Äì Add an event with valid dates (slashes and spaces) and 24-hour time (colons).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"- **`event Team meeting /from 31-12-2025 14.00 /to 31/12/2025 4pm`** ‚Äì Add an event with valid dates (dashes and slashes) and time (24-hour dots and 12-hour).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"- **`event`** ‚Äì Handle missing descriptions.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"- **`event Team meeting`** ‚Äì Handle missing `/from` or `/to` clause.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"- **`event Team meeting /from 31/12/2025 /to 30/12/2025`** ‚Äì Reject invalid time order.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"- **`event Team meeting /from 12/30/2025 /to 12/31/2025`** ‚Äì Reject incorrect date format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"- **`event Team meeting /from 30/12/2025 /to 31/12/2025 12pm`** ‚Äì Handle mismatched `/from` and `/to` formats.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"## **3. Marking \u0026 Unmarking Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"- **`mark 1` / `unmark 1`** ‚Äì Mark/unmark task using valid index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"- **`mark nine` / `unmark nine`** ‚Äì Mark/unmark task using non-numeric index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"- **`mark thirteen`** ‚Äì Reject out-of-range indices.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"- **`mark` / `unmark`** ‚Äì Handle missing indices.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"- **`mark 10 twenty` / `unmark three 100`** ‚Äì Reject invalid indices.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"## **4. Deleting Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Markneoneo"},"content":"- **`delete 14`** ‚Äì Delete a task with a valid index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Markneoneo"},"content":"- **`delete`** ‚Äì Handle missing index.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Markneoneo"},"content":"- **`delete hundred`** ‚Äì Reject out-of-range indices.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Markneoneo"},"content":"## **5. Checking Tasks**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Markneoneo"},"content":"- `check` ‚Äì Handle missing description.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Markneoneo"},"content":"- `check before` ‚Äì Handle missing date/time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Markneoneo"},"content":"- `check this out` ‚Äì Reject invalid format.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Markneoneo"},"content":"- `check 31 12 2025` ‚Äì List tasks occurring on valid date (spaces).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Markneoneo"},"content":"- `check 31/12/2025 9:00AM` ‚Äì List tasks occurring on valid date (slashes) and 12-hour time (colons).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Markneoneo"},"content":"- `check before 31-12-2025` ‚Äì List tasks occurring before valid date (dashes).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Markneoneo"},"content":"- `check before 31/12/2025 12pm` ‚Äì List tasks occurring before valid date (slashes) and 12-hour time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Markneoneo"},"content":"- `check after 31 12 2025` ‚Äì List tasks occurring after valid date (spaces).","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Markneoneo"},"content":"- `check after 31-12-2025 1200` ‚Äì List tasks occurring after valid date (dashes) and 24-hour time.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Markneoneo"},"content":"## **6. Miscellaneous Tests**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Markneoneo"},"content":"- **`Read a book`** ‚Äì Reject invalid commands.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Markneoneo"},"content":"- **`find meeting`** ‚Äì Find tasks containing a keyword.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Markneoneo"},"content":"- **`find`** ‚Äì Handle missing keywords.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Markneoneo"},"content":"- **`bye`** ‚Äì Ensure chatbot displays a farewell message and exits.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Markneoneo"},"content":"---","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Markneoneo"},"content":"This documentation provides a structured and concise overview of chatbot test cases.","lastModifiedDate":"2025-03-02","isFullCredit":false}],"authorContributionMap":{"Markneoneo":82}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Markneoneo"},"content":"reset","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Markneoneo"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Markneoneo"},"content":"todo","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Markneoneo"},"content":"todo Read a book","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31/12/2025 0900","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31-12-2025 9.00AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31 12 2025 9am","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"deadline","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Markneoneo"},"content":"deadline Submit report /by 31/12/2025 12:60","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Markneoneo"},"content":"deadline leap year /by 29/2/2024","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Markneoneo"},"content":"deadline non-leap year /by 29/2/2023","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Markneoneo"},"content":"deadline midnight /by 31/12/2025 12:00AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Markneoneo"},"content":"deadline noon /by 31/12/2025 12:00PM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 30/12/2025 /to 31-12-2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31/12/2025 1400 /to 31 12 2025 16:00","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31-12-2025 14.00 /to 31/12/2025 4pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31 12 2025 2:00PM /to 31-12-2025 4.00pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"event","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Markneoneo"},"content":"event Team meeting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 31/12/2025 /to 30/12/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 12/30/2025 /to 12/31/2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"event Team meeting /from 30/12/2025 /to 31/12/2025 12pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"mark 1","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"mark nine","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":"mark thirteen","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"unmark 1","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"unmark nine","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":"mark","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Markneoneo"},"content":"unmark","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Markneoneo"},"content":"mark 10 twenty","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Markneoneo"},"content":"unmark three 100","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Markneoneo"},"content":"delete 14","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Markneoneo"},"content":"delete","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Markneoneo"},"content":"delete hundred","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Markneoneo"},"content":"Read a book","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Markneoneo"},"content":"list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Markneoneo"},"content":"find meeting","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Markneoneo"},"content":"find","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Markneoneo"},"content":"check","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Markneoneo"},"content":"check before","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Markneoneo"},"content":"check this out","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Markneoneo"},"content":"check 31 12 2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Markneoneo"},"content":"check 31/12/2025 9:00AM","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Markneoneo"},"content":"check before 31-12-2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Markneoneo"},"content":"check before 31/12/2025 12pm","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Markneoneo"},"content":"check after 31 12 2025","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Markneoneo"},"content":"check after 31-12-2025 1200","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Markneoneo"},"content":"bye","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Markneoneo":54}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Markneoneo"},"content":"if exist FULL_OUTPUT.TXT del FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Markneoneo"},"content":"if exist SKIP_INTRO.TXT del SKIP_INTRO.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Markneoneo"},"content":"javac -encoding UTF-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\amadeus\\*.java","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Markneoneo"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Markneoneo"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin amadeus.Amadeus \u003c input.txt \u003e FULL_OUTPUT.TXT","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Markneoneo"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Markneoneo"},"content":"REM Skips the Amadeus Introduction for comparison","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Markneoneo"},"content":"REM powershell -Command \"Get-Content FULL_OUTPUT.TXT | Select-Object -Skip 46 | Set-Content SKIP_INTRO.TXT\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Markneoneo"},"content":"FC FULL_OUTPUT.TXT EXPECTED.TXT","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Markneoneo"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Markneoneo"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Markneoneo"},"content":"    echo The contents of FULL_OUTPUT.TXT and EXPECTED.TXT do not match.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Markneoneo"},"content":"    exit /b 1","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Markneoneo"},"content":") ELSE (","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Markneoneo"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Markneoneo"},"content":"    echo The contents of FULL_OUTPUT.TXT and EXPECTED.TXT match.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Markneoneo"},"content":"    exit /b 0","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Markneoneo"},"content":")","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Markneoneo":18,"-":16}}]
